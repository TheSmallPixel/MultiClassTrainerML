using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Test.Models
{
    public partial class WiseContext : DbContext
    {
        
        public WiseContext()
        {

            Database.SetCommandTimeout(150000);
        }
        
        public WiseContext(DbContextOptions<WiseContext> options)
            : base(options)
        {
        }
        #region DbSet
        public virtual DbSet<AaLogModifiche> AaLogModifiche { get; set; }
        public virtual DbSet<AeSpesesanContr> AeSpesesanContr { get; set; }
        public virtual DbSet<AeSpesesanDett> AeSpesesanDett { get; set; }
        public virtual DbSet<AeSpesesanLett> AeSpesesanLett { get; set; }
        public virtual DbSet<AeSpesesanRimb> AeSpesesanRimb { get; set; }
        public virtual DbSet<AiaFlussiSospesi> AiaFlussiSospesi { get; set; }
        public virtual DbSet<AiaNotificheAnomalia> AiaNotificheAnomalia { get; set; }
        public virtual DbSet<AiaNotificheComp> AiaNotificheComp { get; set; }
        public virtual DbSet<AiaNotificheScarti> AiaNotificheScarti { get; set; }
        public virtual DbSet<AiaNotificheSin> AiaNotificheSin { get; set; }
        public virtual DbSet<AiaNotificheSoggetto> AiaNotificheSoggetto { get; set; }
        public virtual DbSet<AiaNotificheVeic> AiaNotificheVeic { get; set; }
        public virtual DbSet<AnaAggiuntiviFis> AnaAggiuntiviFis { get; set; }
        public virtual DbSet<AnaAggiuntiviGiu> AnaAggiuntiviGiu { get; set; }
        public virtual DbSet<AnaAllegati> AnaAllegati { get; set; }
        public virtual DbSet<AnaAnagrafiche> AnaAnagrafiche { get; set; }
        public virtual DbSet<AnaAppartenenze> AnaAppartenenze { get; set; }
        public virtual DbSet<AnaCommissioniCc> AnaCommissioniCc { get; set; }
        public virtual DbSet<AnaContiCorrenti> AnaContiCorrenti { get; set; }
        public virtual DbSet<AnaContiCorrentiTglAss> AnaContiCorrentiTglAss { get; set; }
        public virtual DbSet<AnaDatiObbligatori> AnaDatiObbligatori { get; set; }
        public virtual DbSet<AnaDocumenti> AnaDocumenti { get; set; }
        public virtual DbSet<AnaEventi> AnaEventi { get; set; }
        public virtual DbSet<AnaIndirizzi> AnaIndirizzi { get; set; }
        public virtual DbSet<AnaLegami> AnaLegami { get; set; }
        public virtual DbSet<AnaParametriStampa> AnaParametriStampa { get; set; }
        public virtual DbSet<AnaPrivacy> AnaPrivacy { get; set; }
        public virtual DbSet<AnaProcConcorsuale> AnaProcConcorsuale { get; set; }
        public virtual DbSet<AnaRecapiti> AnaRecapiti { get; set; }
        public virtual DbSet<AnaRuoli> AnaRuoli { get; set; }
        public virtual DbSet<AnaSoci> AnaSoci { get; set; }
        public virtual DbSet<AniaAtrcDatiGen> AniaAtrcDatiGen { get; set; }
        public virtual DbSet<AniaAtrcMensile> AniaAtrcMensile { get; set; }
        public virtual DbSet<AniaAtrcMensileErr> AniaAtrcMensileErr { get; set; }
        public virtual DbSet<AniaAtrcPagellino> AniaAtrcPagellino { get; set; }
        public virtual DbSet<AniaAtrcParitari> AniaAtrcParitari { get; set; }
        public virtual DbSet<AniaAtrcRichieste> AniaAtrcRichieste { get; set; }
        public virtual DbSet<AniaAtrcScartiGiorni> AniaAtrcScartiGiorni { get; set; }
        public virtual DbSet<AniaAtrcSinistrosita> AniaAtrcSinistrosita { get; set; }
        public virtual DbSet<AniaAtrcSinparitari> AniaAtrcSinparitari { get; set; }
        public virtual DbSet<AniaAtrdEsitiRispTardivi> AniaAtrdEsitiRispTardivi { get; set; }
        public virtual DbSet<AniaAtrdEsitiTardivi> AniaAtrdEsitiTardivi { get; set; }
        public virtual DbSet<AniaAtrdInvioTardivi> AniaAtrdInvioTardivi { get; set; }
        public virtual DbSet<AniaAtrdNotifTardivi> AniaAtrdNotifTardivi { get; set; }
        public virtual DbSet<AniaAtrdRispTardivi> AniaAtrdRispTardivi { get; set; }
        public virtual DbSet<AniaCciInput> AniaCciInput { get; set; }
        public virtual DbSet<AniaCciInputDett> AniaCciInputDett { get; set; }
        public virtual DbSet<AniaCciOutput> AniaCciOutput { get; set; }
        public virtual DbSet<AniaCciOutputDett> AniaCciOutputDett { get; set; }
        public virtual DbSet<AniaErroriCard> AniaErroriCard { get; set; }
        public virtual DbSet<AniaErroriRischiBda> AniaErroriRischiBda { get; set; }
        public virtual DbSet<AniaEstensioniAmmesse> AniaEstensioniAmmesse { get; set; }
        public virtual DbSet<AniaFlussiCard> AniaFlussiCard { get; set; }
        public virtual DbSet<AniaIbdRichieste> AniaIbdRichieste { get; set; }
        public virtual DbSet<AniaIncAntifrodeDett> AniaIncAntifrodeDett { get; set; }
        public virtual DbSet<AniaInterrogazioniSita> AniaInterrogazioniSita { get; set; }
        public virtual DbSet<AniaIvdirOffline> AniaIvdirOffline { get; set; }
        public virtual DbSet<AniaIvdirRispOffline> AniaIvdirRispOffline { get; set; }
        public virtual DbSet<AniaModelliCid07> AniaModelliCid07 { get; set; }
        public virtual DbSet<AniaModelliCid07Esiti> AniaModelliCid07Esiti { get; set; }
        public virtual DbSet<AniaPartitaCard> AniaPartitaCard { get; set; }
        public virtual DbSet<AniaPartitaCardDett> AniaPartitaCardDett { get; set; }
        public virtual DbSet<AniaRaccRivalseCtt> AniaRaccRivalseCtt { get; set; }
        public virtual DbSet<AniaRaccordiErroriFunzioni> AniaRaccordiErroriFunzioni { get; set; }
        public virtual DbSet<AniaRaccordoDocEstensioni> AniaRaccordoDocEstensioni { get; set; }
        public virtual DbSet<AniaRaccordoErroriCard> AniaRaccordoErroriCard { get; set; }
        public virtual DbSet<AniaRespCard> AniaRespCard { get; set; }
        public virtual DbSet<AniaRiepilogoRivalseCtt> AniaRiepilogoRivalseCtt { get; set; }
        public virtual DbSet<AniaRivalseCtt> AniaRivalseCtt { get; set; }
        public virtual DbSet<AniaSaldiConvenzioni> AniaSaldiConvenzioni { get; set; }
        public virtual DbSet<AniaScaA> AniaScaA { get; set; }
        public virtual DbSet<AniaScaC> AniaScaC { get; set; }
        public virtual DbSet<AniaScaC1> AniaScaC1 { get; set; }
        public virtual DbSet<AniaScaC2> AniaScaC2 { get; set; }
        public virtual DbSet<AniaScaC3> AniaScaC3 { get; set; }
        public virtual DbSet<AniaScaC4> AniaScaC4 { get; set; }
        public virtual DbSet<AniaScaC5> AniaScaC5 { get; set; }
        public virtual DbSet<AniaScaC6> AniaScaC6 { get; set; }
        public virtual DbSet<AniaScaD> AniaScaD { get; set; }
        public virtual DbSet<AniaScaF> AniaScaF { get; set; }
        public virtual DbSet<AniaScaP> AniaScaP { get; set; }
        public virtual DbSet<AniaScaR> AniaScaR { get; set; }
        public virtual DbSet<AniaSegnalazioniMctc> AniaSegnalazioniMctc { get; set; }
        public virtual DbSet<AniaServiziWeb> AniaServiziWeb { get; set; }
        public virtual DbSet<AniaSicLightPosAss> AniaSicLightPosAss { get; set; }
        public virtual DbSet<AniaSicOffline> AniaSicOffline { get; set; }
        public virtual DbSet<AniaSicRichieste> AniaSicRichieste { get; set; }
        public virtual DbSet<AniaSicRichiesteLight> AniaSicRichiesteLight { get; set; }
        public virtual DbSet<AniaSicRisposte> AniaSicRisposte { get; set; }
        public virtual DbSet<AniaSicRisposteLight> AniaSicRisposteLight { get; set; }
        public virtual DbSet<AniaSicRisposteOffline> AniaSicRisposteOffline { get; set; }
        public virtual DbSet<AniaSinistriCardRichieste> AniaSinistriCardRichieste { get; set; }
        public virtual DbSet<AniaSinistroCard> AniaSinistroCard { get; set; }
        public virtual DbSet<AniaSinistroCardDett> AniaSinistroCardDett { get; set; }
        public virtual DbSet<AniaSitaCopertMensile> AniaSitaCopertMensile { get; set; }
        public virtual DbSet<AniaSitaCopertMensileErr> AniaSitaCopertMensileErr { get; set; }
        public virtual DbSet<AniaSitaCopertureErr> AniaSitaCopertureErr { get; set; }
        public virtual DbSet<AniaSitaCopertureInvii> AniaSitaCopertureInvii { get; set; }
        public virtual DbSet<AniaSitaRichieste> AniaSitaRichieste { get; set; }
        public virtual DbSet<AniaSitaSovrapCoperture> AniaSitaSovrapCoperture { get; set; }
        public virtual DbSet<AniaSituazioniResp> AniaSituazioniResp { get; set; }
        public virtual DbSet<AniaSituazioniRespDett> AniaSituazioniRespDett { get; set; }
        public virtual DbSet<AniaSiviRichieste> AniaSiviRichieste { get; set; }
        public virtual DbSet<AniaSospesiCard> AniaSospesiCard { get; set; }
        public virtual DbSet<AniaSsrcRichieste> AniaSsrcRichieste { get; set; }
        public virtual DbSet<AniaSurrogheInps> AniaSurrogheInps { get; set; }
        public virtual DbSet<AniaSurrogheInpsErr> AniaSurrogheInpsErr { get; set; }
        public virtual DbSet<AniaSurrogheInpsTrans> AniaSurrogheInpsTrans { get; set; }
        public virtual DbSet<AniaTipoDannoCard> AniaTipoDannoCard { get; set; }
        public virtual DbSet<AniaTipoDannoCardDettAgg> AniaTipoDannoCardDettAgg { get; set; }
        public virtual DbSet<AniaTipoDannoCardDettChiu> AniaTipoDannoCardDettChiu { get; set; }
        public virtual DbSet<AniaTipoDannoCardDettDen> AniaTipoDannoCardDettDen { get; set; }
        public virtual DbSet<AniaTipoDannoCardDettPag> AniaTipoDannoCardDettPag { get; set; }
        public virtual DbSet<AniaTipoDocumentazione> AniaTipoDocumentazione { get; set; }
        public virtual DbSet<AntifrodeNoSinistro> AntifrodeNoSinistro { get; set; }
        public virtual DbSet<AppoAnag> AppoAnag { get; set; }
        public virtual DbSet<AppoEsito> AppoEsito { get; set; }
        public virtual DbSet<AppoFixRvProvv> AppoFixRvProvv { get; set; }
        public virtual DbSet<AppoPol> AppoPol { get; set; }
        public virtual DbSet<AppoPol2> AppoPol2 { get; set; }
        public virtual DbSet<AppoPol3> AppoPol3 { get; set; }
        public virtual DbSet<AppoPol4> AppoPol4 { get; set; }
        public virtual DbSet<AppoPolFix> AppoPolFix { get; set; }
        public virtual DbSet<AppoPolcoass> AppoPolcoass { get; set; }
        public virtual DbSet<AppoQPolFix> AppoQPolFix { get; set; }
        public virtual DbSet<AppoTit> AppoTit { get; set; }
        public virtual DbSet<ArRaccordoRami> ArRaccordoRami { get; set; }
        public virtual DbSet<ArSegnalazioni> ArSegnalazioni { get; set; }
        public virtual DbSet<ArSottogruppi> ArSottogruppi { get; set; }
        public virtual DbSet<ArcAgeCoass> ArcAgeCoass { get; set; }
        public virtual DbSet<ArcAllegati> ArcAllegati { get; set; }
        public virtual DbSet<ArcAllegatiAppartenenze> ArcAllegatiAppartenenze { get; set; }
        public virtual DbSet<ArcAllegatiErrori> ArcAllegatiErrori { get; set; }
        public virtual DbSet<ArcAllegatiIdm> ArcAllegatiIdm { get; set; }
        public virtual DbSet<ArcAllegatiMotivoAss> ArcAllegatiMotivoAss { get; set; }
        public virtual DbSet<ArcAllegatiOperazioni> ArcAllegatiOperazioni { get; set; }
        public virtual DbSet<ArcAllegatiParametri> ArcAllegatiParametri { get; set; }
        public virtual DbSet<ArcAllegatiPortalePeriti> ArcAllegatiPortalePeriti { get; set; }
        public virtual DbSet<ArcAllegatiVisionati> ArcAllegatiVisionati { get; set; }
        public virtual DbSet<ArcAssegni> ArcAssegni { get; set; }
        public virtual DbSet<ArcAssegniIndennizzi> ArcAssegniIndennizzi { get; set; }
        public virtual DbSet<ArcCarnetAss> ArcCarnetAss { get; set; }
        public virtual DbSet<ArcCompCoass> ArcCompCoass { get; set; }
        public virtual DbSet<ArcComunicazioni35> ArcComunicazioni35 { get; set; }
        public virtual DbSet<ArcDatiAggDocumentale> ArcDatiAggDocumentale { get; set; }
        public virtual DbSet<ArcDeroghe> ArcDeroghe { get; set; }
        public virtual DbSet<ArcDerogheEscalation> ArcDerogheEscalation { get; set; }
        public virtual DbSet<ArcDerogheRandom> ArcDerogheRandom { get; set; }
        public virtual DbSet<ArcDestDossierRete> ArcDestDossierRete { get; set; }
        public virtual DbSet<ArcDocumentale> ArcDocumentale { get; set; }
        public virtual DbSet<ArcDocumentaleApp> ArcDocumentaleApp { get; set; }
        public virtual DbSet<ArcDossierRete> ArcDossierRete { get; set; }
        public virtual DbSet<ArcElencoDerogheRandom> ArcElencoDerogheRandom { get; set; }
        public virtual DbSet<ArcEstrattiConto> ArcEstrattiConto { get; set; }
        public virtual DbSet<ArcEstrazAlboAgenti> ArcEstrazAlboAgenti { get; set; }
        public virtual DbSet<ArcLogVarSedeOrg> ArcLogVarSedeOrg { get; set; }
        public virtual DbSet<ArcMail> ArcMail { get; set; }
        public virtual DbSet<ArcMailDest> ArcMailDest { get; set; }
        public virtual DbSet<ArcMandatiAlboAgenti> ArcMandatiAlboAgenti { get; set; }
        public virtual DbSet<ArcMandatiAlboAgentiAltri> ArcMandatiAlboAgentiAltri { get; set; }
        public virtual DbSet<ArcMandatiAlboAgentiR> ArcMandatiAlboAgentiR { get; set; }
        public virtual DbSet<ArcMandatiEventi> ArcMandatiEventi { get; set; }
        public virtual DbSet<ArcNomineAlboAgenti> ArcNomineAlboAgenti { get; set; }
        public virtual DbSet<ArcNomineEventi> ArcNomineEventi { get; set; }
        public virtual DbSet<ArcNoteDocumentale> ArcNoteDocumentale { get; set; }
        public virtual DbSet<ArcNotifiche> ArcNotifiche { get; set; }
        public virtual DbSet<ArcNotificheAzioni> ArcNotificheAzioni { get; set; }
        public virtual DbSet<ArcParametriDestinatari> ArcParametriDestinatari { get; set; }
        public virtual DbSet<ArcParametriStampa> ArcParametriStampa { get; set; }
        public virtual DbSet<ArcParametriStampaErrori> ArcParametriStampaErrori { get; set; }
        public virtual DbSet<ArcPolizzeAntiFrode> ArcPolizzeAntiFrode { get; set; }
        public virtual DbSet<ArcPosizioneDanno> ArcPosizioneDanno { get; set; }
        public virtual DbSet<ArcPresaVisioneUtenti> ArcPresaVisioneUtenti { get; set; }
        public virtual DbSet<ArcProdottiMicrodata> ArcProdottiMicrodata { get; set; }
        public virtual DbSet<ArcRegFinBroker> ArcRegFinBroker { get; set; }
        public virtual DbSet<ArcRegFinBrokerDett> ArcRegFinBrokerDett { get; set; }
        public virtual DbSet<ArcRegoleAllegati> ArcRegoleAllegati { get; set; }
        public virtual DbSet<ArcRelazioniFlussi> ArcRelazioniFlussi { get; set; }
        public virtual DbSet<ArcRelazioniFlussiPtf> ArcRelazioniFlussiPtf { get; set; }
        public virtual DbSet<ArcRichiesteAllegati> ArcRichiesteAllegati { get; set; }
        public virtual DbSet<ArcRispQuestionariIdd> ArcRispQuestionariIdd { get; set; }
        public virtual DbSet<ArcSinistriAntiFrode> ArcSinistriAntiFrode { get; set; }
        public virtual DbSet<ArcSoggettiAntiFrode> ArcSoggettiAntiFrode { get; set; }
        public virtual DbSet<ArcTargetMarketCliente> ArcTargetMarketCliente { get; set; }
        public virtual DbSet<ArcTargheAntiFrode> ArcTargheAntiFrode { get; set; }
        public virtual DbSet<ArcTrascodificaSinistro> ArcTrascodificaSinistro { get; set; }
        public virtual DbSet<AutosoftParcelle> AutosoftParcelle { get; set; }
        public virtual DbSet<BdiConsultazioneEsclusi> BdiConsultazioneEsclusi { get; set; }
        public virtual DbSet<BdiConsultazioneInvii> BdiConsultazioneInvii { get; set; }
        public virtual DbSet<BdiConsultazioneInviiDett> BdiConsultazioneInviiDett { get; set; }
        public virtual DbSet<BdiConsultazioneInviiErr> BdiConsultazioneInviiErr { get; set; }
        public virtual DbSet<BdiConsultazioneInviiRisp> BdiConsultazioneInviiRisp { get; set; }
        public virtual DbSet<BdiRichiesteDati> BdiRichiesteDati { get; set; }
        public virtual DbSet<BdiRilievi> BdiRilievi { get; set; }
        public virtual DbSet<BdiRilieviIgnorati> BdiRilieviIgnorati { get; set; }
        public virtual DbSet<BpFlussi> BpFlussi { get; set; }
        public virtual DbSet<BpFlussiDett> BpFlussiDett { get; set; }
        public virtual DbSet<BpScartiEurop> BpScartiEurop { get; set; }
        public virtual DbSet<CardAllegatiTransizioni> CardAllegatiTransizioni { get; set; }
        public virtual DbSet<CardContrasti1f> CardContrasti1f { get; set; }
        public virtual DbSet<CardContrastiDoc1f> CardContrastiDoc1f { get; set; }
        public virtual DbSet<CardContrastiInc1f> CardContrastiInc1f { get; set; }
        public virtual DbSet<CardContrastiLiq1f> CardContrastiLiq1f { get; set; }
        public virtual DbSet<CardContrastiLod1f> CardContrastiLod1f { get; set; }
        public virtual DbSet<CardFunzioniSinistro> CardFunzioniSinistro { get; set; }
        public virtual DbSet<CardMovimentiConsap> CardMovimentiConsap { get; set; }
        public virtual DbSet<CardMovimentiContabili> CardMovimentiContabili { get; set; }
        public virtual DbSet<CardMovimentiTecnici> CardMovimentiTecnici { get; set; }
        public virtual DbSet<CardRichiesteTransizioni> CardRichiesteTransizioni { get; set; }
        public virtual DbSet<CardServiziWeb> CardServiziWeb { get; set; }
        public virtual DbSet<CardStati> CardStati { get; set; }
        public virtual DbSet<CauAtp> CauAtp { get; set; }
        public virtual DbSet<CauAttori> CauAttori { get; set; }
        public virtual DbSet<CauCause> CauCause { get; set; }
        public virtual DbSet<CauCitazioni> CauCitazioni { get; set; }
        public virtual DbSet<CauLegali> CauLegali { get; set; }
        public virtual DbSet<CauMediazioneRinvii> CauMediazioneRinvii { get; set; }
        public virtual DbSet<CauMediazioni> CauMediazioni { get; set; }
        public virtual DbSet<CauUdienze> CauUdienze { get; set; }
        public virtual DbSet<CbiAllineamentiRid> CbiAllineamentiRid { get; set; }
        public virtual DbSet<CbiAllineamentiRidDett> CbiAllineamentiRidDett { get; set; }
        public virtual DbSet<CbiDettLogEsiti> CbiDettLogEsiti { get; set; }
        public virtual DbSet<CbiDisposizioni> CbiDisposizioni { get; set; }
        public virtual DbSet<CbiDistinte> CbiDistinte { get; set; }
        public virtual DbSet<CbiIncassiRid> CbiIncassiRid { get; set; }
        public virtual DbSet<CbiLogEsiti> CbiLogEsiti { get; set; }
        public virtual DbSet<CklChecklist> CklChecklist { get; set; }
        public virtual DbSet<CklOperazioni> CklOperazioni { get; set; }
        public virtual DbSet<CklPratiche> CklPratiche { get; set; }
        public virtual DbSet<CntFoglicassa> CntFoglicassa { get; set; }
        public virtual DbSet<CntRendiconti> CntRendiconti { get; set; }
        public virtual DbSet<CommaCheckinRichieste> CommaCheckinRichieste { get; set; }
        public virtual DbSet<CommaCheckinRisposte> CommaCheckinRisposte { get; set; }
        public virtual DbSet<CorreggiDataDenunciaPervenimento> CorreggiDataDenunciaPervenimento { get; set; }
        public virtual DbSet<CtbBeneficiari> CtbBeneficiari { get; set; }
        public virtual DbSet<CtbClausole> CtbClausole { get; set; }
        public virtual DbSet<CtbCoassEc> CtbCoassEc { get; set; }
        public virtual DbSet<CtbCostControlSottoprest> CtbCostControlSottoprest { get; set; }
        public virtual DbSet<CtbDatiAggiuntiviPagamenti> CtbDatiAggiuntiviPagamenti { get; set; }
        public virtual DbSet<CtbDebitori> CtbDebitori { get; set; }
        public virtual DbSet<CtbFatture> CtbFatture { get; set; }
        public virtual DbSet<CtbFattureEstere> CtbFattureEstere { get; set; }
        public virtual DbSet<CtbFattureEstereDett> CtbFattureEstereDett { get; set; }
        public virtual DbSet<CtbFattureEsterePag> CtbFattureEsterePag { get; set; }
        public virtual DbSet<CtbForfaitContabile> CtbForfaitContabile { get; set; }
        public virtual DbSet<CtbGaranzie> CtbGaranzie { get; set; }
        public virtual DbSet<CtbIndennizzi> CtbIndennizzi { get; set; }
        public virtual DbSet<CtbIndennizziPrestazioni> CtbIndennizziPrestazioni { get; set; }
        public virtual DbSet<CtbMandati> CtbMandati { get; set; }
        public virtual DbSet<CtbNuoveRiservePrestazioni> CtbNuoveRiservePrestazioni { get; set; }
        public virtual DbSet<CtbQuietanze> CtbQuietanze { get; set; }
        public virtual DbSet<CtbRecuperi> CtbRecuperi { get; set; }
        public virtual DbSet<CtbRiserve> CtbRiserve { get; set; }
        public virtual DbSet<CtbRiserveMigrazione> CtbRiserveMigrazione { get; set; }
        public virtual DbSet<CtbRiservePrestazioni> CtbRiservePrestazioni { get; set; }
        public virtual DbSet<CtbRiserveTrattamenti> CtbRiserveTrattamenti { get; set; }
        public virtual DbSet<CtbSpese> CtbSpese { get; set; }
        public virtual DbSet<CtbSpeseOutsourcing> CtbSpeseOutsourcing { get; set; }
        public virtual DbSet<CtbSpeseOutsourcingDett> CtbSpeseOutsourcingDett { get; set; }
        public virtual DbSet<D005CambiHost> D005CambiHost { get; set; }
        public virtual DbSet<DocCampiManuali> DocCampiManuali { get; set; }
        public virtual DbSet<DocCampiModuli> DocCampiModuli { get; set; }
        public virtual DbSet<DocDocumenti> DocDocumenti { get; set; }
        public virtual DbSet<DocDocumentoVenditori> DocDocumentoVenditori { get; set; }
        public virtual DbSet<DocMacroProcessi> DocMacroProcessi { get; set; }
        public virtual DbSet<DocMaster> DocMaster { get; set; }
        public virtual DbSet<DocModuli> DocModuli { get; set; }
        public virtual DbSet<DocParagrafi> DocParagrafi { get; set; }
        public virtual DbSet<DocProcessi> DocProcessi { get; set; }
        public virtual DbSet<Dp2DatiGenerali> Dp2DatiGenerali { get; set; }
        public virtual DbSet<Dp2Dossier> Dp2Dossier { get; set; }
        public virtual DbSet<Dp2Note> Dp2Note { get; set; }
        public virtual DbSet<Dp2PianoContr> Dp2PianoContr { get; set; }
        public virtual DbSet<Dp2PianoContrMese> Dp2PianoContrMese { get; set; }
        public virtual DbSet<Dp2PianoFormativo> Dp2PianoFormativo { get; set; }
        public virtual DbSet<Dp2PianoTrimestrale> Dp2PianoTrimestrale { get; set; }
        public virtual DbSet<Dp2PremiAggiuntivi> Dp2PremiAggiuntivi { get; set; }
        public virtual DbSet<EcCoassNd> EcCoassNd { get; set; }
        public virtual DbSet<EstSinistri> EstSinistri { get; set; }
        public virtual DbSet<EstSinistriDett> EstSinistriDett { get; set; }
        public virtual DbSet<EstSinistriErrElab> EstSinistriErrElab { get; set; }
        public virtual DbSet<EstSinistriErrRitorni> EstSinistriErrRitorni { get; set; }
        public virtual DbSet<EtaAssSegnalazioni> EtaAssSegnalazioni { get; set; }
        public virtual DbSet<FidSapWiseAutosoft> FidSapWiseAutosoft { get; set; }
        public virtual DbSet<FidiCreditoAcquirenti> FidiCreditoAcquirenti { get; set; }
        public virtual DbSet<FidiCreditoContraenti> FidiCreditoContraenti { get; set; }
        public virtual DbSet<Fix1> Fix1 { get; set; }
        public virtual DbSet<FrmEleValVariabili> FrmEleValVariabili { get; set; }
        public virtual DbSet<FrmGruppiVariabili> FrmGruppiVariabili { get; set; }
        public virtual DbSet<FrmOggettiCondizionali> FrmOggettiCondizionali { get; set; }
        public virtual DbSet<FrmVarDinamiche> FrmVarDinamiche { get; set; }
        public virtual DbSet<FrmVariabili> FrmVariabili { get; set; }
        public virtual DbSet<FrmVariabiliCondizionali> FrmVariabiliCondizionali { get; set; }
        public virtual DbSet<FrmVariabiliEntita> FrmVariabiliEntita { get; set; }
        public virtual DbSet<IncDanniCorporali> IncDanniCorporali { get; set; }
        public virtual DbSet<IncDanniVeicoli> IncDanniVeicoli { get; set; }
        public virtual DbSet<IncInabilitaTemporanee> IncInabilitaTemporanee { get; set; }
        public virtual DbSet<IncIncarichi> IncIncarichi { get; set; }
        public virtual DbSet<IncIncarichiAutosoft> IncIncarichiAutosoft { get; set; }
        public virtual DbSet<IncIncarichiParcelle> IncIncarichiParcelle { get; set; }
        public virtual DbSet<IncParcelle> IncParcelle { get; set; }
        public virtual DbSet<IncParcelleIndennizzi> IncParcelleIndennizzi { get; set; }
        public virtual DbSet<IncParcelleNoteCredito> IncParcelleNoteCredito { get; set; }
        public virtual DbSet<IncSedeLesioni> IncSedeLesioni { get; set; }
        public virtual DbSet<Ip00Host> Ip00Host { get; set; }
        public virtual DbSet<IperFlussoDett> IperFlussoDett { get; set; }
        public virtual DbSet<IperFlussoErr> IperFlussoErr { get; set; }
        public virtual DbSet<IperFlussoInput> IperFlussoInput { get; set; }
        public virtual DbSet<Is00Host> Is00Host { get; set; }
        public virtual DbSet<LivelliScadenzeStati> LivelliScadenzeStati { get; set; }
        public virtual DbSet<MfCausali> MfCausali { get; set; }
        public virtual DbSet<MfDati> MfDati { get; set; }
        public virtual DbSet<MfEsiti> MfEsiti { get; set; }
        public virtual DbSet<MfPvAbbinamenti> MfPvAbbinamenti { get; set; }
        public virtual DbSet<MsaEstrazAllegatiSin> MsaEstrazAllegatiSin { get; set; }
        public virtual DbSet<MsaEstrazioneNoteDiario> MsaEstrazioneNoteDiario { get; set; }
        public virtual DbSet<MsaGaranzieDett> MsaGaranzieDett { get; set; }
        public virtual DbSet<MsaGaranzieRiep> MsaGaranzieRiep { get; set; }
        public virtual DbSet<NotifichePortale> NotifichePortale { get; set; }
        public virtual DbSet<OperazioniStati> OperazioniStati { get; set; }
        public virtual DbSet<P3AgeProduzione> P3AgeProduzione { get; set; }
        public virtual DbSet<P3CodiciProd> P3CodiciProd { get; set; }
        public virtual DbSet<P3DatiGenerali> P3DatiGenerali { get; set; }
        public virtual DbSet<PolAgenzie> PolAgenzie { get; set; }
        public virtual DbSet<PolAllegati> PolAllegati { get; set; }
        public virtual DbSet<PolAppendici> PolAppendici { get; set; }
        public virtual DbSet<PolApplicazioniEmi> PolApplicazioniEmi { get; set; }
        public virtual DbSet<PolAssicurati> PolAssicurati { get; set; }
        public virtual DbSet<PolAttestati> PolAttestati { get; set; }
        public virtual DbSet<PolAutorizzazioni> PolAutorizzazioni { get; set; }
        public virtual DbSet<PolBeneficiari> PolBeneficiari { get; set; }
        public virtual DbSet<PolBeni> PolBeni { get; set; }
        public virtual DbSet<PolCoass> PolCoass { get; set; }
        public virtual DbSet<PolColl> PolColl { get; set; }
        public virtual DbSet<PolConducenti> PolConducenti { get; set; }
        public virtual DbSet<PolContraenti> PolContraenti { get; set; }
        public virtual DbSet<PolContratto> PolContratto { get; set; }
        public virtual DbSet<PolCoobbligati> PolCoobbligati { get; set; }
        public virtual DbSet<PolDatiTecniciUbicazioni> PolDatiTecniciUbicazioni { get; set; }
        public virtual DbSet<PolDatiTecniciVeicoli> PolDatiTecniciVeicoli { get; set; }
        public virtual DbSet<PolDestinatariRichieste> PolDestinatariRichieste { get; set; }
        public virtual DbSet<PolEsitoFranchigie> PolEsitoFranchigie { get; set; }
        public virtual DbSet<PolEventi> PolEventi { get; set; }
        public virtual DbSet<PolFranchigie> PolFranchigie { get; set; }
        public virtual DbSet<PolGarDettagli> PolGarDettagli { get; set; }
        public virtual DbSet<PolGaranzie> PolGaranzie { get; set; }
        public virtual DbSet<PolGaranzieFirma> PolGaranzieFirma { get; set; }
        public virtual DbSet<PolGaranzieRegolate> PolGaranzieRegolate { get; set; }
        public virtual DbSet<PolOperazioniFondi> PolOperazioniFondi { get; set; }
        public virtual DbSet<PolOptional> PolOptional { get; set; }
        public virtual DbSet<PolParametri> PolParametri { get; set; }
        public virtual DbSet<PolPolizze> PolPolizze { get; set; }
        public virtual DbSet<PolPremiFirma> PolPremiFirma { get; set; }
        public virtual DbSet<PolProprietari> PolProprietari { get; set; }
        public virtual DbSet<PolProvvigioni> PolProvvigioni { get; set; }
        public virtual DbSet<PolProvvigioniFirma> PolProvvigioniFirma { get; set; }
        public virtual DbSet<PolRca> PolRca { get; set; }
        public virtual DbSet<PolRegPremio> PolRegPremio { get; set; }
        public virtual DbSet<PolRichiesteRegolazione> PolRichiesteRegolazione { get; set; }
        public virtual DbSet<PolRischioImpiego> PolRischioImpiego { get; set; }
        public virtual DbSet<PolRismat> PolRismat { get; set; }
        public virtual DbSet<PolSegnalazioni> PolSegnalazioni { get; set; }
        public virtual DbSet<PolSinistri> PolSinistri { get; set; }
        public virtual DbSet<PolSinistriMalus> PolSinistriMalus { get; set; }
        public virtual DbSet<PolSinistriMovimenti> PolSinistriMovimenti { get; set; }
        public virtual DbSet<PolSinistriPagatore> PolSinistriPagatore { get; set; }
        public virtual DbSet<PolSinistriParitari> PolSinistriParitari { get; set; }
        public virtual DbSet<PolSinistriSconti> PolSinistriSconti { get; set; }
        public virtual DbSet<PolSinistriTardivi> PolSinistriTardivi { get; set; }
        public virtual DbSet<PolSostituite> PolSostituite { get; set; }
        public virtual DbSet<PolStati> PolStati { get; set; }
        public virtual DbSet<PolTestataAttestati> PolTestataAttestati { get; set; }
        public virtual DbSet<PolUbicazioni> PolUbicazioni { get; set; }
        public virtual DbSet<PolVariabili> PolVariabili { get; set; }
        public virtual DbSet<PolVariapremi> PolVariapremi { get; set; }
        public virtual DbSet<PolVeicoli> PolVeicoli { get; set; }
        public virtual DbSet<PolVincoli> PolVincoli { get; set; }
        public virtual DbSet<PolVincoliTesti> PolVincoliTesti { get; set; }
        public virtual DbSet<PrAbbattimentiSconti> PrAbbattimentiSconti { get; set; }
        public virtual DbSet<PrBeni> PrBeni { get; set; }
        public virtual DbSet<PrCaricamenti> PrCaricamenti { get; set; }
        public virtual DbSet<PrClassiRischio> PrClassiRischio { get; set; }
        public virtual DbSet<PrClassiRischioDett> PrClassiRischioDett { get; set; }
        public virtual DbSet<PrCoefRisMatematica> PrCoefRisMatematica { get; set; }
        public virtual DbSet<PrCoeffIstat> PrCoeffIstat { get; set; }
        public virtual DbSet<PrCombinazioni> PrCombinazioni { get; set; }
        public virtual DbSet<PrCompagnie> PrCompagnie { get; set; }
        public virtual DbSet<PrCompatibili> PrCompatibili { get; set; }
        public virtual DbSet<PrComposizioneCapitale> PrComposizioneCapitale { get; set; }
        public virtual DbSet<PrControlliIcontrol> PrControlliIcontrol { get; set; }
        public virtual DbSet<PrDatiPreventivi> PrDatiPreventivi { get; set; }
        public virtual DbSet<PrDatiPreventiviMascdin> PrDatiPreventiviMascdin { get; set; }
        public virtual DbSet<PrDatiTecniciUbicazioni> PrDatiTecniciUbicazioni { get; set; }
        public virtual DbSet<PrDatiTecniciVeicoli> PrDatiTecniciVeicoli { get; set; }
        public virtual DbSet<PrDatiUbicazioni> PrDatiUbicazioni { get; set; }
        public virtual DbSet<PrDatiVeicoli> PrDatiVeicoli { get; set; }
        public virtual DbSet<PrDettEvoluzioneBm> PrDettEvoluzioneBm { get; set; }
        public virtual DbSet<PrDurate> PrDurate { get; set; }
        public virtual DbSet<PrEleValVariabili> PrEleValVariabili { get; set; }
        public virtual DbSet<PrEntiErogatori> PrEntiErogatori { get; set; }
        public virtual DbSet<PrEvoluzioneBm> PrEvoluzioneBm { get; set; }
        public virtual DbSet<PrFascicoliInformativi> PrFascicoliInformativi { get; set; }
        public virtual DbSet<PrFormuleSconti> PrFormuleSconti { get; set; }
        public virtual DbSet<PrFrazAmmessi> PrFrazAmmessi { get; set; }
        public virtual DbSet<PrFrazCombinazioni> PrFrazCombinazioni { get; set; }
        public virtual DbSet<PrFrazionamenti> PrFrazionamenti { get; set; }
        public virtual DbSet<PrGarCombinazioni> PrGarCombinazioni { get; set; }
        public virtual DbSet<PrGarConvenzioni> PrGarConvenzioni { get; set; }
        public virtual DbSet<PrGarPacchetti> PrGarPacchetti { get; set; }
        public virtual DbSet<PrGarPrestazioni> PrGarPrestazioni { get; set; }
        public virtual DbSet<PrGarRetiVendita> PrGarRetiVendita { get; set; }
        public virtual DbSet<PrGarScomposizione> PrGarScomposizione { get; set; }
        public virtual DbSet<PrGarSottoprestazioni> PrGarSottoprestazioni { get; set; }
        public virtual DbSet<PrGarTargetMarket> PrGarTargetMarket { get; set; }
        public virtual DbSet<PrGarTariffe> PrGarTariffe { get; set; }
        public virtual DbSet<PrGarTipoFabbricato> PrGarTipoFabbricato { get; set; }
        public virtual DbSet<PrGarTipoRetiVendita> PrGarTipoRetiVendita { get; set; }
        public virtual DbSet<PrGarTpRetiRegAlleg> PrGarTpRetiRegAlleg { get; set; }
        public virtual DbSet<PrGaranzie> PrGaranzie { get; set; }
        public virtual DbSet<PrGruppiClassiRischio> PrGruppiClassiRischio { get; set; }
        public virtual DbSet<PrGruppiTerritoriali> PrGruppiTerritoriali { get; set; }
        public virtual DbSet<PrGruppiVariabili> PrGruppiVariabili { get; set; }
        public virtual DbSet<PrIstat> PrIstat { get; set; }
        public virtual DbSet<PrLineeProdotto> PrLineeProdotto { get; set; }
        public virtual DbSet<PrMezziPagamento> PrMezziPagamento { get; set; }
        public virtual DbSet<PrMezziSpedizione> PrMezziSpedizione { get; set; }
        public virtual DbSet<PrModelliAppendici> PrModelliAppendici { get; set; }
        public virtual DbSet<PrModelliOperazioni> PrModelliOperazioni { get; set; }
        public virtual DbSet<PrModelliProdAppendici> PrModelliProdAppendici { get; set; }
        public virtual DbSet<PrModelliProdOperazioni> PrModelliProdOperazioni { get; set; }
        public virtual DbSet<PrModelliProdotti> PrModelliProdotti { get; set; }
        public virtual DbSet<PrModelliVincolatarie> PrModelliVincolatarie { get; set; }
        public virtual DbSet<PrPacchetti> PrPacchetti { get; set; }
        public virtual DbSet<PrParCombinazioni> PrParCombinazioni { get; set; }
        public virtual DbSet<PrParametri> PrParametri { get; set; }
        public virtual DbSet<PrPctCaricamenti> PrPctCaricamenti { get; set; }
        public virtual DbSet<PrPerfezionamenti> PrPerfezionamenti { get; set; }
        public virtual DbSet<PrPremiParametri> PrPremiParametri { get; set; }
        public virtual DbSet<PrPreventivi> PrPreventivi { get; set; }
        public virtual DbSet<PrProdAppendici> PrProdAppendici { get; set; }
        public virtual DbSet<PrProdModVincolatarie> PrProdModVincolatarie { get; set; }
        public virtual DbSet<PrProdOperazioni> PrProdOperazioni { get; set; }
        public virtual DbSet<PrProdTpRetiRegAlleg> PrProdTpRetiRegAlleg { get; set; }
        public virtual DbSet<PrProdotti> PrProdotti { get; set; }
        public virtual DbSet<PrProdottiColl> PrProdottiColl { get; set; }
        public virtual DbSet<PrProdottiConvenzioni> PrProdottiConvenzioni { get; set; }
        public virtual DbSet<PrPunteggi> PrPunteggi { get; set; }
        public virtual DbSet<PrRami> PrRami { get; set; }
        public virtual DbSet<PrRecessiRiscatti> PrRecessiRiscatti { get; set; }
        public virtual DbSet<PrRegAllegatiGar> PrRegAllegatiGar { get; set; }
        public virtual DbSet<PrRegAllegatiPrestaz> PrRegAllegatiPrestaz { get; set; }
        public virtual DbSet<PrRegoleAllegati> PrRegoleAllegati { get; set; }
        public virtual DbSet<PrRegoleVendibilitaGar> PrRegoleVendibilitaGar { get; set; }
        public virtual DbSet<PrRegoleVendibilitaTar> PrRegoleVendibilitaTar { get; set; }
        public virtual DbSet<PrRetiVendita> PrRetiVendita { get; set; }
        public virtual DbSet<PrRischioRiass> PrRischioRiass { get; set; }
        public virtual DbSet<PrSerieRiass> PrSerieRiass { get; set; }
        public virtual DbSet<PrSessoEta> PrSessoEta { get; set; }
        public virtual DbSet<PrSettoriTariffari> PrSettoriTariffari { get; set; }
        public virtual DbSet<PrSezioni> PrSezioni { get; set; }
        public virtual DbSet<PrTabImposte> PrTabImposte { get; set; }
        public virtual DbSet<PrTargetMarket> PrTargetMarket { get; set; }
        public virtual DbSet<PrTassi> PrTassi { get; set; }
        public virtual DbSet<PrTipiAnaAssicurati> PrTipiAnaAssicurati { get; set; }
        public virtual DbSet<PrTipoRetiVendita> PrTipoRetiVendita { get; set; }
        public virtual DbSet<PrTipoVeicMotAss> PrTipoVeicMotAss { get; set; }
        public virtual DbSet<PrTipoVeicoli> PrTipoVeicoli { get; set; }
        public virtual DbSet<PrTipoVeicoliFrazionamenti> PrTipoVeicoliFrazionamenti { get; set; }
        public virtual DbSet<PrValParametri> PrValParametri { get; set; }
        public virtual DbSet<PrValute> PrValute { get; set; }
        public virtual DbSet<PrVarDinamiche> PrVarDinamiche { get; set; }
        public virtual DbSet<PrVariaPercBm> PrVariaPercBm { get; set; }
        public virtual DbSet<PrVariabili> PrVariabili { get; set; }
        public virtual DbSet<PrVariabiliEntita> PrVariabiliEntita { get; set; }
        public virtual DbSet<PrVariapremi> PrVariapremi { get; set; }
        public virtual DbSet<PrVincolatarie> PrVincolatarie { get; set; }
        public virtual DbSet<PrZoneTerritoriali> PrZoneTerritoriali { get; set; }
        public virtual DbSet<PregressoScopertoGaranzie> PregressoScopertoGaranzie { get; set; }
        public virtual DbSet<PregressoTfr> PregressoTfr { get; set; }
        public virtual DbSet<PrevAnagrafiche> PrevAnagrafiche { get; set; }
        public virtual DbSet<PrevIvass> PrevIvass { get; set; }
        public virtual DbSet<Provv18Temp> Provv18Temp { get; set; }
        public virtual DbSet<PrvCapitolati> PrvCapitolati { get; set; }
        public virtual DbSet<PrvCapitolatiBase> PrvCapitolatiBase { get; set; }
        public virtual DbSet<PrvCapitolatiSpecifici> PrvCapitolatiSpecifici { get; set; }
        public virtual DbSet<PrvDatiCapitolati> PrvDatiCapitolati { get; set; }
        public virtual DbSet<PrvRetrocessione> PrvRetrocessione { get; set; }
        public virtual DbSet<PtfAgenzie> PtfAgenzie { get; set; }
        public virtual DbSet<PtfAssicurati> PtfAssicurati { get; set; }
        public virtual DbSet<PtfBeneficiari> PtfBeneficiari { get; set; }
        public virtual DbSet<PtfBeni> PtfBeni { get; set; }
        public virtual DbSet<PtfCoass> PtfCoass { get; set; }
        public virtual DbSet<PtfCondizioniPart> PtfCondizioniPart { get; set; }
        public virtual DbSet<PtfContraenti> PtfContraenti { get; set; }
        public virtual DbSet<PtfContrattiEmessi> PtfContrattiEmessi { get; set; }
        public virtual DbSet<PtfContrattiEmessi12Sez> PtfContrattiEmessi12Sez { get; set; }
        public virtual DbSet<PtfContrattiScaduti> PtfContrattiScaduti { get; set; }
        public virtual DbSet<PtfContrattiStornati> PtfContrattiStornati { get; set; }
        public virtual DbSet<PtfDebitori> PtfDebitori { get; set; }
        public virtual DbSet<PtfEntiVincolanti> PtfEntiVincolanti { get; set; }
        public virtual DbSet<PtfGaranzie> PtfGaranzie { get; set; }
        public virtual DbSet<PtfPolizze> PtfPolizze { get; set; }
        public virtual DbSet<PtfPolizzeAltriDati> PtfPolizzeAltriDati { get; set; }
        public virtual DbSet<PtfPremiEmessi> PtfPremiEmessi { get; set; }
        public virtual DbSet<PtfPremiEmessiGaranzie> PtfPremiEmessiGaranzie { get; set; }
        public virtual DbSet<PtfPremiIncassati> PtfPremiIncassati { get; set; }
        public virtual DbSet<PtfPremiIncassatiGaranzie> PtfPremiIncassatiGaranzie { get; set; }
        public virtual DbSet<PtfPrestazioni> PtfPrestazioni { get; set; }
        public virtual DbSet<PtfProprietari> PtfProprietari { get; set; }
        public virtual DbSet<PtfRiservePremi> PtfRiservePremi { get; set; }
        public virtual DbSet<PtfSostituenti> PtfSostituenti { get; set; }
        public virtual DbSet<PtfSostituite> PtfSostituite { get; set; }
        public virtual DbSet<PtfStatoPolizze> PtfStatoPolizze { get; set; }
        public virtual DbSet<PtfTariffeBeni> PtfTariffeBeni { get; set; }
        public virtual DbSet<PtfUbicazioni> PtfUbicazioni { get; set; }
        public virtual DbSet<PtfVariapremi> PtfVariapremi { get; set; }
        public virtual DbSet<PtfVeicoli> PtfVeicoli { get; set; }
        public virtual DbSet<PvCausali> PvCausali { get; set; }
        public virtual DbSet<PvCausaliAutomatiche> PvCausaliAutomatiche { get; set; }
        public virtual DbSet<PvDati> PvDati { get; set; }
        public virtual DbSet<PvEsiti> PvEsiti { get; set; }
        public virtual DbSet<QueFasi> QueFasi { get; set; }
        public virtual DbSet<QueQuerele> QueQuerele { get; set; }
        public virtual DbSet<QueSinistriCoinvolti> QueSinistriCoinvolti { get; set; }
        public virtual DbSet<QuiArretrate> QuiArretrate { get; set; }
        public virtual DbSet<QuiLinee> QuiLinee { get; set; }
        public virtual DbSet<QuiLogQuietanze> QuiLogQuietanze { get; set; }
        public virtual DbSet<QuiProdotti> QuiProdotti { get; set; }
        public virtual DbSet<QuiRami> QuiRami { get; set; }
        public virtual DbSet<QuiReteVendita> QuiReteVendita { get; set; }
        public virtual DbSet<RaccCatastrofaliProvince> RaccCatastrofaliProvince { get; set; }
        public virtual DbSet<RegAgenzie> RegAgenzie { get; set; }
        public virtual DbSet<RegGaranzie> RegGaranzie { get; set; }
        public virtual DbSet<RegProvvigioni> RegProvvigioni { get; set; }
        public virtual DbSet<RegStatoBollati> RegStatoBollati { get; set; }
        public virtual DbSet<RegStatoScaCoge> RegStatoScaCoge { get; set; }
        public virtual DbSet<RegTitoli> RegTitoli { get; set; }
        public virtual DbSet<RepArchivioReports> RepArchivioReports { get; set; }
        public virtual DbSet<RepAreeDati> RepAreeDati { get; set; }
        public virtual DbSet<RepAttivazioneReport> RepAttivazioneReport { get; set; }
        public virtual DbSet<RepAttivazioneReportCc> RepAttivazioneReportCc { get; set; }
        public virtual DbSet<RepAttivazioneReportDest> RepAttivazioneReportDest { get; set; }
        public virtual DbSet<RepCarteIntestate> RepCarteIntestate { get; set; }
        public virtual DbSet<RepDistribuzioneReports> RepDistribuzioneReports { get; set; }
        public virtual DbSet<RepFormatiReport> RepFormatiReport { get; set; }
        public virtual DbSet<RepLetterePostel> RepLetterePostel { get; set; }
        public virtual DbSet<RepModelli> RepModelli { get; set; }
        public virtual DbSet<RepModelliAttivita> RepModelliAttivita { get; set; }
        public virtual DbSet<RepModelliFormati> RepModelliFormati { get; set; }
        public virtual DbSet<RepModelliLingue> RepModelliLingue { get; set; }
        public virtual DbSet<RepModelliPostalizzatori> RepModelliPostalizzatori { get; set; }
        public virtual DbSet<RepModelliProcessi> RepModelliProcessi { get; set; }
        public virtual DbSet<RepWorkprocessidPostel> RepWorkprocessidPostel { get; set; }
        public virtual DbSet<RicercaAnagrafica> RicercaAnagrafica { get; set; }
        public virtual DbSet<RiepSinImportiSpese> RiepSinImportiSpese { get; set; }
        public virtual DbSet<RiepSinListaMovimenti> RiepSinListaMovimenti { get; set; }
        public virtual DbSet<RiepSinStatiDettImp> RiepSinStatiDettImp { get; set; }
        public virtual DbSet<RiepSinStatiFinali> RiepSinStatiFinali { get; set; }
        public virtual DbSet<RiepSinStatiIniziali> RiepSinStatiIniziali { get; set; }
        public virtual DbSet<RiepSinStatoBollati> RiepSinStatoBollati { get; set; }
        public virtual DbSet<RispostaSic> RispostaSic { get; set; }
        public virtual DbSet<RispostaSicDatiVeicolo> RispostaSicDatiVeicolo { get; set; }
        public virtual DbSet<RispostaSicPosAss> RispostaSicPosAss { get; set; }
        public virtual DbSet<RispostaSicSinistri> RispostaSicSinistri { get; set; }
        public virtual DbSet<RuoliRete> RuoliRete { get; set; }
        public virtual DbSet<RuoliReteAgePag> RuoliReteAgePag { get; set; }
        public virtual DbSet<RuoliReteCarriera> RuoliReteCarriera { get; set; }
        public virtual DbSet<RuoliReteCarrieraProp> RuoliReteCarrieraProp { get; set; }
        public virtual DbSet<RuoliReteFlussiCarrProp> RuoliReteFlussiCarrProp { get; set; }
        public virtual DbSet<RuoliReteStato> RuoliReteStato { get; set; }
        public virtual DbSet<Sagex3CorrIban> Sagex3CorrIban { get; set; }
        public virtual DbSet<Sagex3ScaMovfin> Sagex3ScaMovfin { get; set; }
        public virtual DbSet<Sagex3ScaPna> Sagex3ScaPna { get; set; }
        public virtual DbSet<Sagex3ScaPremi> Sagex3ScaPremi { get; set; }
        public virtual DbSet<Sagex3ScaSinistri> Sagex3ScaSinistri { get; set; }
        public virtual DbSet<ScaDatiAgenzie> ScaDatiAgenzie { get; set; }
        public virtual DbSet<ScaDettScarichi> ScaDettScarichi { get; set; }
        public virtual DbSet<ScaPeriodiScaricatiPtf> ScaPeriodiScaricatiPtf { get; set; }
        public virtual DbSet<ScaPeriodiScaricatiSin> ScaPeriodiScaricatiSin { get; set; }
        public virtual DbSet<ScaPeriodoPortafoglio> ScaPeriodoPortafoglio { get; set; }
        public virtual DbSet<ScaPeriodoSinistri> ScaPeriodoSinistri { get; set; }
        public virtual DbSet<ScaScarichi> ScaScarichi { get; set; }
        public virtual DbSet<ScadenzeStati> ScadenzeStati { get; set; }
        public virtual DbSet<ScadenzeVisionateUtenti> ScadenzeVisionateUtenti { get; set; }
        public virtual DbSet<SctCapitolati> SctCapitolati { get; set; }
        public virtual DbSet<SctCapitolatiAgenzie> SctCapitolatiAgenzie { get; set; }
        public virtual DbSet<SctDatiCapitolati> SctDatiCapitolati { get; set; }
        public virtual DbSet<SctMaturato> SctMaturato { get; set; }
        public virtual DbSet<SctPlafond> SctPlafond { get; set; }
        public virtual DbSet<SctRetrocessione> SctRetrocessione { get; set; }
        public virtual DbSet<SimRinnovoGaranzie> SimRinnovoGaranzie { get; set; }
        public virtual DbSet<SimRinnovoPolizze> SimRinnovoPolizze { get; set; }
        public virtual DbSet<SimRinnovoProvvigioni> SimRinnovoProvvigioni { get; set; }
        public virtual DbSet<Sin680Dettagli> Sin680Dettagli { get; set; }
        public virtual DbSet<Sin680Totali> Sin680Totali { get; set; }
        public virtual DbSet<SinAllegati> SinAllegati { get; set; }
        public virtual DbSet<SinAltriDati> SinAltriDati { get; set; }
        public virtual DbSet<SinAntifrodeErgo> SinAntifrodeErgo { get; set; }
        public virtual DbSet<SinArbitratiCard> SinArbitratiCard { get; set; }
        public virtual DbSet<SinAutoritaIntervenute> SinAutoritaIntervenute { get; set; }
        public virtual DbSet<SinCanalCarrozzeria> SinCanalCarrozzeria { get; set; }
        public virtual DbSet<SinCinquineCard> SinCinquineCard { get; set; }
        public virtual DbSet<SinCollegamentoSinistri> SinCollegamentoSinistri { get; set; }
        public virtual DbSet<SinCollegati> SinCollegati { get; set; }
        public virtual DbSet<SinCompletezzaDati> SinCompletezzaDati { get; set; }
        public virtual DbSet<SinConducenti> SinConducenti { get; set; }
        public virtual DbSet<SinContenziosoDettagli> SinContenziosoDettagli { get; set; }
        public virtual DbSet<SinContenziosoTotali> SinContenziosoTotali { get; set; }
        public virtual DbSet<SinContoEstintivo> SinContoEstintivo { get; set; }
        public virtual DbSet<SinContraenti> SinContraenti { get; set; }
        public virtual DbSet<SinDanni> SinDanni { get; set; }
        public virtual DbSet<SinDanniCause> SinDanniCause { get; set; }
        public virtual DbSet<SinDanniCorporali> SinDanniCorporali { get; set; }
        public virtual DbSet<SinDanniSpeseResistenza> SinDanniSpeseResistenza { get; set; }
        public virtual DbSet<SinDanniVeicolo> SinDanniVeicolo { get; set; }
        public virtual DbSet<SinDatiComuni> SinDatiComuni { get; set; }
        public virtual DbSet<SinDenuncianti> SinDenuncianti { get; set; }
        public virtual DbSet<SinDettSintesiGestioni> SinDettSintesiGestioni { get; set; }
        public virtual DbSet<SinDettSintesiPartite> SinDettSintesiPartite { get; set; }
        public virtual DbSet<SinEcAltridati> SinEcAltridati { get; set; }
        public virtual DbSet<SinEcRichiesteDanni> SinEcRichiesteDanni { get; set; }
        public virtual DbSet<SinEntiIntervenuti> SinEntiIntervenuti { get; set; }
        public virtual DbSet<SinEntitaCoinvolte> SinEntitaCoinvolte { get; set; }
        public virtual DbSet<SinEntitaCoinvolte148> SinEntitaCoinvolte148 { get; set; }
        public virtual DbSet<SinEntitaCoinvolteAnt> SinEntitaCoinvolteAnt { get; set; }
        public virtual DbSet<SinEntitaCoinvolteCci> SinEntitaCoinvolteCci { get; set; }
        public virtual DbSet<SinEntitaCoinvolteRca> SinEntitaCoinvolteRca { get; set; }
        public virtual DbSet<SinEntitaDiario> SinEntitaDiario { get; set; }
        public virtual DbSet<SinEntitaSchedaDannoMorte> SinEntitaSchedaDannoMorte { get; set; }
        public virtual DbSet<SinEntitaSchedaDannoTemp> SinEntitaSchedaDannoTemp { get; set; }
        public virtual DbSet<SinEntitaSchedaDannoVal> SinEntitaSchedaDannoVal { get; set; }
        public virtual DbSet<SinEntitaSchedaInfDati> SinEntitaSchedaInfDati { get; set; }
        public virtual DbSet<SinEntitaSchedaInfGar> SinEntitaSchedaInfGar { get; set; }
        public virtual DbSet<SinEntitaSchedaInfortuni> SinEntitaSchedaInfortuni { get; set; }
        public virtual DbSet<SinEntitaSchedaLesioni> SinEntitaSchedaLesioni { get; set; }
        public virtual DbSet<SinEventi> SinEventi { get; set; }
        public virtual DbSet<SinFlussiAdvancingTrade> SinFlussiAdvancingTrade { get; set; }
        public virtual DbSet<SinGarDettaglio> SinGarDettaglio { get; set; }
        public virtual DbSet<SinGarPrestazioniInf> SinGarPrestazioniInf { get; set; }
        public virtual DbSet<SinGaranzie> SinGaranzie { get; set; }
        public virtual DbSet<SinGruppi> SinGruppi { get; set; }
        public virtual DbSet<SinIncentivi> SinIncentivi { get; set; }
        public virtual DbSet<SinInterventiLegali> SinInterventiLegali { get; set; }
        public virtual DbSet<SinListaMovDanni> SinListaMovDanni { get; set; }
        public virtual DbSet<SinListaMovDanniEsclusi> SinListaMovDanniEsclusi { get; set; }
        public virtual DbSet<SinMalattiaDiagnosi> SinMalattiaDiagnosi { get; set; }
        public virtual DbSet<SinMalattiaFatture> SinMalattiaFatture { get; set; }
        public virtual DbSet<SinMalattiaTrattamenti> SinMalattiaTrattamenti { get; set; }
        public virtual DbSet<SinMedici> SinMedici { get; set; }
        public virtual DbSet<SinModDettagli> SinModDettagli { get; set; }
        public virtual DbSet<SinModTardivi> SinModTardivi { get; set; }
        public virtual DbSet<SinModTotali> SinModTotali { get; set; }
        public virtual DbSet<SinModUlae> SinModUlae { get; set; }
        public virtual DbSet<SinOspedali> SinOspedali { get; set; }
        public virtual DbSet<SinParametriSignComp> SinParametriSignComp { get; set; }
        public virtual DbSet<SinPatrocinatori> SinPatrocinatori { get; set; }
        public virtual DbSet<SinPeriodoScaricoDef> SinPeriodoScaricoDef { get; set; }
        public virtual DbSet<SinPeriti> SinPeriti { get; set; }
        public virtual DbSet<SinPianiRecupero> SinPianiRecupero { get; set; }
        public virtual DbSet<SinPrestMalattia> SinPrestMalattia { get; set; }
        public virtual DbSet<SinPrestMedicoChirurgiche> SinPrestMedicoChirurgiche { get; set; }
        public virtual DbSet<SinPrestazioniColpite> SinPrestazioniColpite { get; set; }
        public virtual DbSet<SinPrestazioniOpera> SinPrestazioniOpera { get; set; }
        public virtual DbSet<SinProprietari> SinProprietari { get; set; }
        public virtual DbSet<SinRecuperoCfConducenti> SinRecuperoCfConducenti { get; set; }
        public virtual DbSet<SinRegDettagli> SinRegDettagli { get; set; }
        public virtual DbSet<SinRegTotali> SinRegTotali { get; set; }
        public virtual DbSet<SinReiezione> SinReiezione { get; set; }
        public virtual DbSet<SinRilievi> SinRilievi { get; set; }
        public virtual DbSet<SinRimesse> SinRimesse { get; set; }
        public virtual DbSet<SinRimorchi> SinRimorchi { get; set; }
        public virtual DbSet<SinSchedaValutazioneTemp> SinSchedaValutazioneTemp { get; set; }
        public virtual DbSet<SinSinistri> SinSinistri { get; set; }
        public virtual DbSet<SinSinistriCoass> SinSinistriCoass { get; set; }
        public virtual DbSet<SinSinistriEsteri> SinSinistriEsteri { get; set; }
        public virtual DbSet<SinSinistriFantasma> SinSinistriFantasma { get; set; }
        public virtual DbSet<SinSinistriRca> SinSinistriRca { get; set; }
        public virtual DbSet<SinSinistriTrasporti> SinSinistriTrasporti { get; set; }
        public virtual DbSet<SinSinistriTurismo> SinSinistriTurismo { get; set; }
        public virtual DbSet<SinSintesiDanni> SinSintesiDanni { get; set; }
        public virtual DbSet<SinSintesiGestioni> SinSintesiGestioni { get; set; }
        public virtual DbSet<SinSintesiPartite> SinSintesiPartite { get; set; }
        public virtual DbSet<SinSottoprestMalattia> SinSottoprestMalattia { get; set; }
        public virtual DbSet<SinStatiGestionali> SinStatiGestionali { get; set; }
        public virtual DbSet<SinTabAgenzie> SinTabAgenzie { get; set; }
        public virtual DbSet<SinTestimoni> SinTestimoni { get; set; }
        public virtual DbSet<SinTrasferimenti> SinTrasferimenti { get; set; }
        public virtual DbSet<SinVeicoli> SinVeicoli { get; set; }
        public virtual DbSet<SinVerificaDati> SinVerificaDati { get; set; }
        public virtual DbSet<SiniQzV3> SiniQzV3 { get; set; }
        public virtual DbSet<StatGestDettaglio> StatGestDettaglio { get; set; }
        public virtual DbSet<StatGestDettaglioPrest> StatGestDettaglioPrest { get; set; }
        public virtual DbSet<StatGestRiepilogo> StatGestRiepilogo { get; set; }
        public virtual DbSet<Stati> Stati { get; set; }
        public virtual DbSet<StoAbilitazioniFunz> StoAbilitazioniFunz { get; set; }
        public virtual DbSet<StoDisposizioni> StoDisposizioni { get; set; }
        public virtual DbSet<StoDistinte> StoDistinte { get; set; }
        public virtual DbSet<StoEventi> StoEventi { get; set; }
        public virtual DbSet<StoLimitePagamenti> StoLimitePagamenti { get; set; }
        public virtual DbSet<StoProfili> StoProfili { get; set; }
        public virtual DbSet<StoUtenti> StoUtenti { get; set; }
        public virtual DbSet<StoUtentiGruppo> StoUtentiGruppo { get; set; }
        public virtual DbSet<StoUtentiGruppoColl> StoUtentiGruppoColl { get; set; }
        public virtual DbSet<StoUtentiIspettorati> StoUtentiIspettorati { get; set; }
        public virtual DbSet<StoUtentiProfili> StoUtentiProfili { get; set; }
        public virtual DbSet<SysAbilitazioniFlagvalue> SysAbilitazioniFlagvalue { get; set; }
        public virtual DbSet<SysAbilitazioniFunz> SysAbilitazioniFunz { get; set; }
        public virtual DbSet<SysAbilitazioniMenu> SysAbilitazioniMenu { get; set; }
        public virtual DbSet<SysAbilitazioniNavigatore> SysAbilitazioniNavigatore { get; set; }
        public virtual DbSet<SysAbilitazioniProcessi> SysAbilitazioniProcessi { get; set; }
        public virtual DbSet<SysAbilitazioniProd> SysAbilitazioniProd { get; set; }
        public virtual DbSet<SysDebug> SysDebug { get; set; }
        public virtual DbSet<SysDebugWebapi> SysDebugWebapi { get; set; }
        public virtual DbSet<SysDettagliJob> SysDettagliJob { get; set; }
        public virtual DbSet<SysDipendenzeProcessi> SysDipendenzeProcessi { get; set; }
        public virtual DbSet<SysDizionario> SysDizionario { get; set; }
        public virtual DbSet<SysFlagcode> SysFlagcode { get; set; }
        public virtual DbSet<SysFlagcodeCol> SysFlagcodeCol { get; set; }
        public virtual DbSet<SysFlagvalue> SysFlagvalue { get; set; }
        public virtual DbSet<SysFlagvalueCol> SysFlagvalueCol { get; set; }
        public virtual DbSet<SysFlagvalueComp> SysFlagvalueComp { get; set; }
        public virtual DbSet<SysFunzioni> SysFunzioni { get; set; }
        public virtual DbSet<SysJob> SysJob { get; set; }
        public virtual DbSet<SysJobAvvisi> SysJobAvvisi { get; set; }
        public virtual DbSet<SysJobMail> SysJobMail { get; set; }
        public virtual DbSet<SysLingue> SysLingue { get; set; }
        public virtual DbSet<SysListeDistribuzione> SysListeDistribuzione { get; set; }
        public virtual DbSet<SysLogJob> SysLogJob { get; set; }
        public virtual DbSet<SysLogModifiche> SysLogModifiche { get; set; }
        public virtual DbSet<SysManuale> SysManuale { get; set; }
        public virtual DbSet<SysMembriListaDistribuzione> SysMembriListaDistribuzione { get; set; }
        public virtual DbSet<SysMenu> SysMenu { get; set; }
        public virtual DbSet<SysMenuPreferiti> SysMenuPreferiti { get; set; }
        public virtual DbSet<SysMessaggiInfo> SysMessaggiInfo { get; set; }
        public virtual DbSet<SysNavigatore> SysNavigatore { get; set; }
        public virtual DbSet<SysNavigatoreMenu> SysNavigatoreMenu { get; set; }
        public virtual DbSet<SysNumerazione> SysNumerazione { get; set; }
        public virtual DbSet<SysParametri> SysParametri { get; set; }
        public virtual DbSet<SysParametriProcessi> SysParametriProcessi { get; set; }
        public virtual DbSet<SysPreferenzeDg> SysPreferenzeDg { get; set; }
        public virtual DbSet<SysProcessi> SysProcessi { get; set; }
        public virtual DbSet<SysProcessiCompagnie> SysProcessiCompagnie { get; set; }
        public virtual DbSet<SysProfili> SysProfili { get; set; }
        public virtual DbSet<SysProfiliComp> SysProfiliComp { get; set; }
        public virtual DbSet<SysRequisitiAccount> SysRequisitiAccount { get; set; }
        public virtual DbSet<SysSchedulazioniJob> SysSchedulazioniJob { get; set; }
        public virtual DbSet<SysSequenze> SysSequenze { get; set; }
        public virtual DbSet<SysUtenti> SysUtenti { get; set; }
        public virtual DbSet<SysUtentiCollegati> SysUtentiCollegati { get; set; }
        public virtual DbSet<SysUtentiComp> SysUtentiComp { get; set; }
        public virtual DbSet<SysUtentiGruppo> SysUtentiGruppo { get; set; }
        public virtual DbSet<SysUtentiGruppoColl> SysUtentiGruppoColl { get; set; }
        public virtual DbSet<SysUtentiGruppoComp> SysUtentiGruppoComp { get; set; }
        public virtual DbSet<SysUtentiIndisponibilita> SysUtentiIndisponibilita { get; set; }
        public virtual DbSet<SysUtentiIspettorati> SysUtentiIspettorati { get; set; }
        public virtual DbSet<SysUtentiLogLogin> SysUtentiLogLogin { get; set; }
        public virtual DbSet<SysUtentiPassword> SysUtentiPassword { get; set; }
        public virtual DbSet<SysUtentiProfili> SysUtentiProfili { get; set; }
        public virtual DbSet<SysUtentiSostituzioni> SysUtentiSostituzioni { get; set; }
        public virtual DbSet<TabAbi> TabAbi { get; set; }
        public virtual DbSet<TabAbilitazioniOperazioni> TabAbilitazioniOperazioni { get; set; }
        public virtual DbSet<TabAllestimenti> TabAllestimenti { get; set; }
        public virtual DbSet<TabAnaValoriTipi> TabAnaValoriTipi { get; set; }
        public virtual DbSet<TabAnagraficheSarc> TabAnagraficheSarc { get; set; }
        public virtual DbSet<TabAnnullamentoRami> TabAnnullamentoRami { get; set; }
        public virtual DbSet<TabAppendici> TabAppendici { get; set; }
        public virtual DbSet<TabAreeComm> TabAreeComm { get; set; }
        public virtual DbSet<TabAreeSinistri> TabAreeSinistri { get; set; }
        public virtual DbSet<TabAssegnazioneLiquidatori> TabAssegnazioneLiquidatori { get; set; }
        public virtual DbSet<TabAutorizzatori> TabAutorizzatori { get; set; }
        public virtual DbSet<TabBic> TabBic { get; set; }
        public virtual DbSet<TabCab> TabCab { get; set; }
        public virtual DbSet<TabCalcoliAutomatici> TabCalcoliAutomatici { get; set; }
        public virtual DbSet<TabCalendarioStanzaAnia> TabCalendarioStanzaAnia { get; set; }
        public virtual DbSet<TabCambi> TabCambi { get; set; }
        public virtual DbSet<TabCampiAnagrafica> TabCampiAnagrafica { get; set; }
        public virtual DbSet<TabCanaliDistribuzione> TabCanaliDistribuzione { get; set; }
        public virtual DbSet<TabCanalizzazioneIsp> TabCanalizzazioneIsp { get; set; }
        public virtual DbSet<TabCanalizzazioneLiq> TabCanalizzazioneLiq { get; set; }
        public virtual DbSet<TabCanalizzazionePeriti> TabCanalizzazionePeriti { get; set; }
        public virtual DbSet<TabCarrozzerieConvenzionate> TabCarrozzerieConvenzionate { get; set; }
        public virtual DbSet<TabCasiCid> TabCasiCid { get; set; }
        public virtual DbSet<TabCassaPrevidenzaAge> TabCassaPrevidenzaAge { get; set; }
        public virtual DbSet<TabCausaliRete> TabCausaliRete { get; set; }
        public virtual DbSet<TabClasse> TabClasse { get; set; }
        public virtual DbSet<TabClassificazioniStatiCard> TabClassificazioniStatiCard { get; set; }
        public virtual DbSet<TabClausole> TabClausole { get; set; }
        public virtual DbSet<TabCodFisFittizi> TabCodFisFittizi { get; set; }
        public virtual DbSet<TabCodGarBp> TabCodGarBp { get; set; }
        public virtual DbSet<TabCoeffAttuazione> TabCoeffAttuazione { get; set; }
        public virtual DbSet<TabCoeffRiserva> TabCoeffRiserva { get; set; }
        public virtual DbSet<TabCoeffTpabitazione> TabCoeffTpabitazione { get; set; }
        public virtual DbSet<TabCombinazioniCasiCid> TabCombinazioniCasiCid { get; set; }
        public virtual DbSet<TabCompagnie> TabCompagnie { get; set; }
        public virtual DbSet<TabCompagnieGruppo> TabCompagnieGruppo { get; set; }
        public virtual DbSet<TabCompagnieMand> TabCompagnieMand { get; set; }
        public virtual DbSet<TabCompagnieNazioni> TabCompagnieNazioni { get; set; }
        public virtual DbSet<TabComposizioneFondi> TabComposizioneFondi { get; set; }
        public virtual DbSet<TabComuni> TabComuni { get; set; }
        public virtual DbSet<TabComuniIstat> TabComuniIstat { get; set; }
        public virtual DbSet<TabComuniTemp> TabComuniTemp { get; set; }
        public virtual DbSet<TabContatoreCaricoLiq> TabContatoreCaricoLiq { get; set; }
        public virtual DbSet<TabContatoreCaricoPer> TabContatoreCaricoPer { get; set; }
        public virtual DbSet<TabConti> TabConti { get; set; }
        public virtual DbSet<TabContoSap> TabContoSap { get; set; }
        public virtual DbSet<TabContoSapUniqa> TabContoSapUniqa { get; set; }
        public virtual DbSet<TabContributiAgenti> TabContributiAgenti { get; set; }
        public virtual DbSet<TabConvenzioni> TabConvenzioni { get; set; }
        public virtual DbSet<TabConvenzioniAgenzie> TabConvenzioniAgenzie { get; set; }
        public virtual DbSet<TabCoordinatoreReteDedicata> TabCoordinatoreReteDedicata { get; set; }
        public virtual DbSet<TabCorporateBanking> TabCorporateBanking { get; set; }
        public virtual DbSet<TabCorrispondentiEsteri> TabCorrispondentiEsteri { get; set; }
        public virtual DbSet<TabCorrispondentiEsteriComp> TabCorrispondentiEsteriComp { get; set; }
        public virtual DbSet<TabCorrispondentiEsteriNaz> TabCorrispondentiEsteriNaz { get; set; }
        public virtual DbSet<TabDannoBiologico> TabDannoBiologico { get; set; }
        public virtual DbSet<TabDannoMorte> TabDannoMorte { get; set; }
        public virtual DbSet<TabDatiAggRicSin> TabDatiAggRicSin { get; set; }
        public virtual DbSet<TabDeducibilitaSsn> TabDeducibilitaSsn { get; set; }
        public virtual DbSet<TabDetraibilita> TabDetraibilita { get; set; }
        public virtual DbSet<TabDipComm> TabDipComm { get; set; }
        public virtual DbSet<TabDipCommComp> TabDipCommComp { get; set; }
        public virtual DbSet<TabDocumentazioniAmmesse> TabDocumentazioniAmmesse { get; set; }
        public virtual DbSet<TabDominiIvass> TabDominiIvass { get; set; }
        public virtual DbSet<TabEccezioniTarget> TabEccezioniTarget { get; set; }
        public virtual DbSet<TabEdizioniMalattia> TabEdizioniMalattia { get; set; }
        public virtual DbSet<TabEntiIntervenuti> TabEntiIntervenuti { get; set; }
        public virtual DbSet<TabErroriIsvap> TabErroriIsvap { get; set; }
        public virtual DbSet<TabEsitiComunicazioni> TabEsitiComunicazioni { get; set; }
        public virtual DbSet<TabEuropAssLink> TabEuropAssLink { get; set; }
        public virtual DbSet<TabEventoCatastrofale> TabEventoCatastrofale { get; set; }
        public virtual DbSet<TabExtraProvvigioni> TabExtraProvvigioni { get; set; }
        public virtual DbSet<TabFasceAumentoRca> TabFasceAumentoRca { get; set; }
        public virtual DbSet<TabFasceIncentivi> TabFasceIncentivi { get; set; }
        public virtual DbSet<TabFiduciari> TabFiduciari { get; set; }
        public virtual DbSet<TabFiduciariAutosoft> TabFiduciariAutosoft { get; set; }
        public virtual DbSet<TabFiduciariComp> TabFiduciariComp { get; set; }
        public virtual DbSet<TabFiduciariCorr> TabFiduciariCorr { get; set; }
        public virtual DbSet<TabFiduciariImporti> TabFiduciariImporti { get; set; }
        public virtual DbSet<TabFiduciariIsp> TabFiduciariIsp { get; set; }
        public virtual DbSet<TabFiduciariMacroaree> TabFiduciariMacroaree { get; set; }
        public virtual DbSet<TabFondi> TabFondi { get; set; }
        public virtual DbSet<TabForfaitCard> TabForfaitCard { get; set; }
        public virtual DbSet<TabFormatoTarga> TabFormatoTarga { get; set; }
        public virtual DbSet<TabFormule> TabFormule { get; set; }
        public virtual DbSet<TabFormuleParamFunzioni> TabFormuleParamFunzioni { get; set; }
        public virtual DbSet<TabGaranzie> TabGaranzie { get; set; }
        public virtual DbSet<TabGaranzieAniaCvt> TabGaranzieAniaCvt { get; set; }
        public virtual DbSet<TabGaranzieNetwork> TabGaranzieNetwork { get; set; }
        public virtual DbSet<TabGruppiIntervento> TabGruppiIntervento { get; set; }
        public virtual DbSet<TabGuidaAxa> TabGuidaAxa { get; set; }
        public virtual DbSet<TabImportiMediazione> TabImportiMediazione { get; set; }
        public virtual DbSet<TabImportiPrev> TabImportiPrev { get; set; }
        public virtual DbSet<TabImportiPrevPrest> TabImportiPrevPrest { get; set; }
        public virtual DbSet<TabIniziativeRete> TabIniziativeRete { get; set; }
        public virtual DbSet<TabInvaliditaCoeff> TabInvaliditaCoeff { get; set; }
        public virtual DbSet<TabInvaliditaPunti> TabInvaliditaPunti { get; set; }
        public virtual DbSet<TabInviiCrm> TabInviiCrm { get; set; }
        public virtual DbSet<TabInviiIsvap> TabInviiIsvap { get; set; }
        public virtual DbSet<TabIspTipoCanalizzazione> TabIspTipoCanalizzazione { get; set; }
        public virtual DbSet<TabIspettAmm> TabIspettAmm { get; set; }
        public virtual DbSet<TabIspettorati> TabIspettorati { get; set; }
        public virtual DbSet<TabIspettoratiCc> TabIspettoratiCc { get; set; }
        public virtual DbSet<TabIspettoratiComp> TabIspettoratiComp { get; set; }
        public virtual DbSet<TabIspettoratiLiquidatori> TabIspettoratiLiquidatori { get; set; }
        public virtual DbSet<TabLegameAnagrafe> TabLegameAnagrafe { get; set; }
        public virtual DbSet<TabLimiteCostoSin> TabLimiteCostoSin { get; set; }
        public virtual DbSet<TabLimitePagamenti> TabLimitePagamenti { get; set; }
        public virtual DbSet<TabLimitiLdaListini> TabLimitiLdaListini { get; set; }
        public virtual DbSet<TabLiquidatori> TabLiquidatori { get; set; }
        public virtual DbSet<TabLiquidatoriTipoSinistro> TabLiquidatoriTipoSinistro { get; set; }
        public virtual DbSet<TabListini> TabListini { get; set; }
        public virtual DbSet<TabLivelliCarriera> TabLivelliCarriera { get; set; }
        public virtual DbSet<TabMalattiaLa> TabMalattiaLa { get; set; }
        public virtual DbSet<TabManagerVf> TabManagerVf { get; set; }
        public virtual DbSet<TabMarche> TabMarche { get; set; }
        public virtual DbSet<TabMassimaliGarPrestaz> TabMassimaliGarPrestaz { get; set; }
        public virtual DbSet<TabMediatoriCreditizi> TabMediatoriCreditizi { get; set; }
        public virtual DbSet<TabMerci> TabMerci { get; set; }
        public virtual DbSet<TabMezziIncassoAbil> TabMezziIncassoAbil { get; set; }
        public virtual DbSet<TabMezziPagCc> TabMezziPagCc { get; set; }
        public virtual DbSet<TabModelli> TabModelli { get; set; }
        public virtual DbSet<TabModelliConsenso> TabModelliConsenso { get; set; }
        public virtual DbSet<TabMotiviAnnullamentoPtf> TabMotiviAnnullamentoPtf { get; set; }
        public virtual DbSet<TabMotiviStorno> TabMotiviStorno { get; set; }
        public virtual DbSet<TabNazioni> TabNazioni { get; set; }
        public virtual DbSet<TabNetwork> TabNetwork { get; set; }
        public virtual DbSet<TabNumerazione> TabNumerazione { get; set; }
        public virtual DbSet<TabOperazioni> TabOperazioni { get; set; }
        public virtual DbSet<TabOperazioniFeu> TabOperazioniFeu { get; set; }
        public virtual DbSet<TabOperazioniLinee> TabOperazioniLinee { get; set; }
        public virtual DbSet<TabOrganismiMediazione> TabOrganismiMediazione { get; set; }
        public virtual DbSet<TabParametriOperazioni> TabParametriOperazioni { get; set; }
        public virtual DbSet<TabParametriPrev> TabParametriPrev { get; set; }
        public virtual DbSet<TabParametriQuery> TabParametriQuery { get; set; }
        public virtual DbSet<TabPercFees> TabPercFees { get; set; }
        public virtual DbSet<TabPrValute> TabPrValute { get; set; }
        public virtual DbSet<TabPrestMedicoChirurgiche> TabPrestMedicoChirurgiche { get; set; }
        public virtual DbSet<TabPrestazioni> TabPrestazioni { get; set; }
        public virtual DbSet<TabProdotti> TabProdotti { get; set; }
        public virtual DbSet<TabProdottiAniaMipaaf> TabProdottiAniaMipaaf { get; set; }
        public virtual DbSet<TabPromotersVf> TabPromotersVf { get; set; }
        public virtual DbSet<TabProvince> TabProvince { get; set; }
        public virtual DbSet<TabPubblicaAnagrafiche> TabPubblicaAnagrafiche { get; set; }
        public virtual DbSet<TabPuntiVenditaProd> TabPuntiVenditaProd { get; set; }
        public virtual DbSet<TabQuery> TabQuery { get; set; }
        public virtual DbSet<TabQuestionariIdd> TabQuestionariIdd { get; set; }
        public virtual DbSet<TabQuestionariIddComp> TabQuestionariIddComp { get; set; }
        public virtual DbSet<TabQuotazioneFondi> TabQuotazioneFondi { get; set; }
        public virtual DbSet<TabRaccNatCau> TabRaccNatCau { get; set; }
        public virtual DbSet<TabRaccNatSed> TabRaccNatSed { get; set; }
        public virtual DbSet<TabRaccordiGarDanni> TabRaccordiGarDanni { get; set; }
        public virtual DbSet<TabRaccordoProdEdizioni> TabRaccordoProdEdizioni { get; set; }
        public virtual DbSet<TabRaccordoRvMigrate> TabRaccordoRvMigrate { get; set; }
        public virtual DbSet<TabRami> TabRami { get; set; }
        public virtual DbSet<TabRamiTecnici> TabRamiTecnici { get; set; }
        public virtual DbSet<TabRecapitiCarrozzerie> TabRecapitiCarrozzerie { get; set; }
        public virtual DbSet<TabRegioni> TabRegioni { get; set; }
        public virtual DbSet<TabRespGest> TabRespGest { get; set; }
        public virtual DbSet<TabRespTerr> TabRespTerr { get; set; }
        public virtual DbSet<TabReteVendita> TabReteVendita { get; set; }
        public virtual DbSet<TabReteVenditaAggDig> TabReteVenditaAggDig { get; set; }
        public virtual DbSet<TabReteVenditaAggDigApe> TabReteVenditaAggDigApe { get; set; }
        public virtual DbSet<TabReteVenditaAllegati> TabReteVenditaAllegati { get; set; }
        public virtual DbSet<TabReteVenditaAltreSedi> TabReteVenditaAltreSedi { get; set; }
        public virtual DbSet<TabReteVenditaAltri> TabReteVenditaAltri { get; set; }
        public virtual DbSet<TabReteVenditaAltriAgg> TabReteVenditaAltriAgg { get; set; }
        public virtual DbSet<TabReteVenditaAltriCol> TabReteVenditaAltriCol { get; set; }
        public virtual DbSet<TabReteVenditaAltriDp2> TabReteVenditaAltriDp2 { get; set; }
        public virtual DbSet<TabReteVenditaBQol> TabReteVenditaBQol { get; set; }
        public virtual DbSet<TabReteVenditaCapAuto> TabReteVenditaCapAuto { get; set; }
        public virtual DbSet<TabReteVenditaCapCauz> TabReteVenditaCapCauz { get; set; }
        public virtual DbSet<TabReteVenditaCapRe> TabReteVenditaCapRe { get; set; }
        public virtual DbSet<TabReteVenditaCapTrasp> TabReteVenditaCapTrasp { get; set; }
        public virtual DbSet<TabReteVenditaCauzioni> TabReteVenditaCauzioni { get; set; }
        public virtual DbSet<TabReteVenditaCodiciProd> TabReteVenditaCodiciProd { get; set; }
        public virtual DbSet<TabReteVenditaCom> TabReteVenditaCom { get; set; }
        public virtual DbSet<TabReteVenditaComPartner> TabReteVenditaComPartner { get; set; }
        public virtual DbSet<TabReteVenditaComm> TabReteVenditaComm { get; set; }
        public virtual DbSet<TabReteVenditaComp> TabReteVenditaComp { get; set; }
        public virtual DbSet<TabReteVenditaConticorrenti> TabReteVenditaConticorrenti { get; set; }
        public virtual DbSet<TabReteVenditaContz> TabReteVenditaContz { get; set; }
        public virtual DbSet<TabReteVenditaCosti> TabReteVenditaCosti { get; set; }
        public virtual DbSet<TabReteVenditaEventi> TabReteVenditaEventi { get; set; }
        public virtual DbSet<TabReteVenditaFidejIntegr> TabReteVenditaFidejIntegr { get; set; }
        public virtual DbSet<TabReteVenditaFidejussioni> TabReteVenditaFidejussioni { get; set; }
        public virtual DbSet<TabReteVenditaFiduciari> TabReteVenditaFiduciari { get; set; }
        public virtual DbSet<TabReteVenditaIniziative> TabReteVenditaIniziative { get; set; }
        public virtual DbSet<TabReteVenditaLeadMan> TabReteVenditaLeadMan { get; set; }
        public virtual DbSet<TabReteVenditaObiettivi> TabReteVenditaObiettivi { get; set; }
        public virtual DbSet<TabReteVenditaOmnia> TabReteVenditaOmnia { get; set; }
        public virtual DbSet<TabReteVenditaOrganico> TabReteVenditaOrganico { get; set; }
        public virtual DbSet<TabReteVenditaP3> TabReteVenditaP3 { get; set; }
        public virtual DbSet<TabReteVenditaPianiClr> TabReteVenditaPianiClr { get; set; }
        public virtual DbSet<TabReteVenditaPianiClrMul> TabReteVenditaPianiClrMul { get; set; }
        public virtual DbSet<TabReteVenditaPianiClrPer> TabReteVenditaPianiClrPer { get; set; }
        public virtual DbSet<TabReteVenditaPlurimand> TabReteVenditaPlurimand { get; set; }
        public virtual DbSet<TabReteVenditaProc> TabReteVenditaProc { get; set; }
        public virtual DbSet<TabReteVenditaPuntiRemoti> TabReteVenditaPuntiRemoti { get; set; }
        public virtual DbSet<TabReteVenditaQol> TabReteVenditaQol { get; set; }
        public virtual DbSet<TabReteVenditaRTrasfPtf> TabReteVenditaRTrasfPtf { get; set; }
        public virtual DbSet<TabReteVenditaRemunerazioni> TabReteVenditaRemunerazioni { get; set; }
        public virtual DbSet<TabReteVenditaSegStra> TabReteVenditaSegStra { get; set; }
        public virtual DbSet<TabReteVenditaSegTat> TabReteVenditaSegTat { get; set; }
        public virtual DbSet<TabReteVenditaStraoPtf> TabReteVenditaStraoPtf { get; set; }
        public virtual DbSet<TabReteVenditaTrasfPtf> TabReteVenditaTrasfPtf { get; set; }
        public virtual DbSet<TabReteVenditaUndoWizard> TabReteVenditaUndoWizard { get; set; }
        public virtual DbSet<TabRetiDistributive> TabRetiDistributive { get; set; }
        public virtual DbSet<TabRiepAnnualeIl> TabRiepAnnualeIl { get; set; }
        public virtual DbSet<TabRuoli> TabRuoli { get; set; }
        public virtual DbSet<TabScadenzeStatiOggetto> TabScadenzeStatiOggetto { get; set; }
        public virtual DbSet<TabSettore> TabSettore { get; set; }
        public virtual DbSet<TabSottoprestazioni> TabSottoprestazioni { get; set; }
        public virtual DbSet<TabSpeseOutsourcing> TabSpeseOutsourcing { get; set; }
        public virtual DbSet<TabStatiEquivalentiCard> TabStatiEquivalentiCard { get; set; }
        public virtual DbSet<TabStatiOggetto> TabStatiOggetto { get; set; }
        public virtual DbSet<TabStatiOggettoCard> TabStatiOggettoCard { get; set; }
        public virtual DbSet<TabStatiOperazioni> TabStatiOperazioni { get; set; }
        public virtual DbSet<TabTargetScadenze> TabTargetScadenze { get; set; }
        public virtual DbSet<TabTariffe> TabTariffe { get; set; }
        public virtual DbSet<TabTariffeMalattia> TabTariffeMalattia { get; set; }
        public virtual DbSet<TabTariffeProdotti> TabTariffeProdotti { get; set; }
        public virtual DbSet<TabTestiFissi> TabTestiFissi { get; set; }
        public virtual DbSet<TabTipiBollato> TabTipiBollato { get; set; }
        public virtual DbSet<TabTipiCodProdRete> TabTipiCodProdRete { get; set; }
        public virtual DbSet<TabTipiEventoCatastrofale> TabTipiEventoCatastrofale { get; set; }
        public virtual DbSet<TabTipiEventoDen> TabTipiEventoDen { get; set; }
        public virtual DbSet<TabTipiEventoDenGaranzie> TabTipiEventoDenGaranzie { get; set; }
        public virtual DbSet<TabTipiIncaricoAutosoft> TabTipiIncaricoAutosoft { get; set; }
        public virtual DbSet<TabTipiIncaricoFiduciari> TabTipiIncaricoFiduciari { get; set; }
        public virtual DbSet<TabTipiIncentivi> TabTipiIncentivi { get; set; }
        public virtual DbSet<TabTipiOggetto> TabTipiOggetto { get; set; }
        public virtual DbSet<TabTipiOggettoCard> TabTipiOggettoCard { get; set; }
        public virtual DbSet<TabTipiPortalePeriti> TabTipiPortalePeriti { get; set; }
        public virtual DbSet<TabTipiSinNetwork> TabTipiSinNetwork { get; set; }
        public virtual DbSet<TabTipiStatiRuoli> TabTipiStatiRuoli { get; set; }
        public virtual DbSet<TabTipoDocumentoDossier> TabTipoDocumentoDossier { get; set; }
        public virtual DbSet<TabTipoDocumentoDossierDes> TabTipoDocumentoDossierDes { get; set; }
        public virtual DbSet<TabTolleranze> TabTolleranze { get; set; }
        public virtual DbSet<TabTrackingAxa> TabTrackingAxa { get; set; }
        public virtual DbSet<TabTransizioniStati> TabTransizioniStati { get; set; }
        public virtual DbSet<TabTransizioniStatiCard> TabTransizioniStatiCard { get; set; }
        public virtual DbSet<TabUso> TabUso { get; set; }
        public virtual DbSet<TabUtentiMediatori> TabUtentiMediatori { get; set; }
        public virtual DbSet<TabUtenzePortalePeriti> TabUtenzePortalePeriti { get; set; }
        public virtual DbSet<TabValoreImmProv> TabValoreImmProv { get; set; }
        public virtual DbSet<TabValoriMediazione> TabValoriMediazione { get; set; }
        public virtual DbSet<TabValute> TabValute { get; set; }
        public virtual DbSet<TabVisibilitaAnagrafica> TabVisibilitaAnagrafica { get; set; }
        public virtual DbSet<TabZoneCoperturaPeriti> TabZoneCoperturaPeriti { get; set; }
        public virtual DbSet<Test1> Test1 { get; set; }
        public virtual DbSet<TitAgenzie> TitAgenzie { get; set; }
        public virtual DbSet<TitEsiti> TitEsiti { get; set; }
        public virtual DbSet<TitEventi> TitEventi { get; set; }
        public virtual DbSet<TitGaranzie> TitGaranzie { get; set; }
        public virtual DbSet<TitPagatore> TitPagatore { get; set; }
        public virtual DbSet<TitProvvigioni> TitProvvigioni { get; set; }
        public virtual DbSet<TitRateDati> TitRateDati { get; set; }
        public virtual DbSet<TitRatePremio> TitRatePremio { get; set; }
        public virtual DbSet<TitTipoTitolo> TitTipoTitolo { get; set; }
        public virtual DbSet<TitTitoli> TitTitoli { get; set; }
        public virtual DbSet<TmpCacheWebapi> TmpCacheWebapi { get; set; }
        public virtual DbSet<UciFlussiSospesi> UciFlussiSospesi { get; set; }
        public virtual DbSet<UtenzeIdm> UtenzeIdm { get; set; }
        public virtual DbSet<WfAttivita> WfAttivita { get; set; }
        public virtual DbSet<WfAttivitaAperte> WfAttivitaAperte { get; set; }
        public virtual DbSet<WfAttivitaOperazioni> WfAttivitaOperazioni { get; set; }
        public virtual DbSet<WfOggettiStati> WfOggettiStati { get; set; }
        public virtual DbSet<WfOperazioni> WfOperazioni { get; set; }
        public virtual DbSet<WfRaccordoAttivitaQuery> WfRaccordoAttivitaQuery { get; set; }
        public virtual DbSet<WfScadenzario> WfScadenzario { get; set; }
        public virtual DbSet<WfScadenze> WfScadenze { get; set; }
        public virtual DbSet<WfScadenzeAlert> WfScadenzeAlert { get; set; }
        public virtual DbSet<WfStati> WfStati { get; set; }
        public virtual DbSet<WkfAttivita> WkfAttivita { get; set; }
        public virtual DbSet<WkfAttivitaAperte> WkfAttivitaAperte { get; set; }
        public virtual DbSet<WkfAttivitaOperazioni> WkfAttivitaOperazioni { get; set; }
        public virtual DbSet<WkfOperazioni> WkfOperazioni { get; set; }
        public virtual DbSet<WkfScadenze> WkfScadenze { get; set; }
        public virtual DbSet<WkfScadenzeAlert> WkfScadenzeAlert { get; set; }
        public virtual DbSet<WsTraceChiamate> WsTraceChiamate { get; set; }
        public virtual DbSet<WsTraceOggetti> WsTraceOggetti { get; set; }
        public virtual DbSet<XmlInput> XmlInput { get; set; }
        public virtual DbSet<XmlInputDett> XmlInputDett { get; set; }
        public virtual DbSet<XmlInputDettErrWar> XmlInputDettErrWar { get; set; }
        public virtual DbSet<XmlInputDettErrWarP> XmlInputDettErrWarP { get; set; }
        public virtual DbSet<XmlInputDettP> XmlInputDettP { get; set; }
        public virtual DbSet<XmlInputErr> XmlInputErr { get; set; }
        public virtual DbSet<XmlInputErrP> XmlInputErrP { get; set; }
        public virtual DbSet<XmlInputErroriBypass> XmlInputErroriBypass { get; set; }
        public virtual DbSet<XmlInputP> XmlInputP { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AaLogModifiche>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AA_LOG_MODIFICHE", "ISUITE");

                entity.Property(e => e.Comando)
                    .HasColumnName("COMANDO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtModifica)
                    .HasColumnName("DT_MODIFICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.NomeOggetto)
                    .HasColumnName("NOME_OGGETTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NomeSchema)
                    .HasColumnName("NOME_SCHEMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SqlText)
                    .HasColumnName("SQL_TEXT")
                    .HasColumnType("text");

                entity.Property(e => e.TipoOggetto)
                    .HasColumnName("TIPO_OGGETTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AeSpesesanContr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AE_SPESESAN_CONTR", "IFLOW");

                entity.HasIndex(e => new { e.CodiceFiscaleIscritto, e.AnnoCompetenza })
                    .HasName("XX01_AE_SPESESAN_CONTR");

                entity.Property(e => e.AnnoCompetenza).HasColumnName("ANNO_COMPETENZA");

                entity.Property(e => e.CodiceFiscaleIscritto)
                    .IsRequired()
                    .HasColumnName("CODICE_FISCALE_ISCRITTO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAeSpesesanContr).HasColumnName("ID_AE_SPESESAN_CONTR");

                entity.Property(e => e.Rec1CodiceFiscaleSoggetto)
                    .IsRequired()
                    .HasColumnName("REC1_CODICE_FISCALE_SOGGETTO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Rec1ImpTotContribCorr).HasColumnName("REC1_IMP_TOT_CONTRIB_CORR");

                entity.Property(e => e.Rec1ImpTotContribPrec).HasColumnName("REC1_IMP_TOT_CONTRIB_PREC");

                entity.Property(e => e.Rec1TipoContributi).HasColumnName("REC1_TIPO_CONTRIBUTI");
            });

            modelBuilder.Entity<AeSpesesanDett>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AE_SPESESAN_DETT", "IFLOW");

                entity.HasIndex(e => new { e.AnnoCompetenza, e.Rec1CodiceFiscaleIscritto })
                    .HasName("XX01_AE_SPESESAN_DETT")
                    .IsUnique();

                entity.Property(e => e.AnnoCompetenza).HasColumnName("ANNO_COMPETENZA");

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAeSpesesanDett).HasColumnName("ID_AE_SPESESAN_DETT");

                entity.Property(e => e.Rec1CarattereControllo)
                    .IsRequired()
                    .HasColumnName("REC1_CARATTERE_CONTROLLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Rec1CodiceFiscaleIscritto)
                    .IsRequired()
                    .HasColumnName("REC1_CODICE_FISCALE_ISCRITTO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Rec1Filler)
                    .IsRequired()
                    .HasColumnName("REC1_FILLER")
                    .HasMaxLength(260)
                    .IsUnicode(false);

                entity.Property(e => e.Rec1TipoRecord).HasColumnName("REC1_TIPO_RECORD");
            });

            modelBuilder.Entity<AeSpesesanLett>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AE_SPESESAN_LETT", "IFLOW");

                entity.HasIndex(e => new { e.CodiceFiscaleIscritto, e.AnnoCompetenza })
                    .HasName("XX01_AE_SPESESAN_LETT");

                entity.Property(e => e.AnnoCompetenza).HasColumnName("ANNO_COMPETENZA");

                entity.Property(e => e.Cap)
                    .HasColumnName("CAP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CodModelloStampa)
                    .HasColumnName("COD_MODELLO_STAMPA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProvincia)
                    .HasColumnName("COD_PROVINCIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceFiscaleIscritto)
                    .IsRequired()
                    .HasColumnName("CODICE_FISCALE_ISCRITTO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Comune)
                    .HasColumnName("COMUNE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPraticaIntegrativaSino)
                    .HasColumnName("FLG_PRATICA_INTEGRATIVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAeSpesesanLett).HasColumnName("ID_AE_SPESESAN_LETT");

                entity.Property(e => e.Indirizzo)
                    .HasColumnName("INDIRIZZO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LettCodiceFiscaleSoggetto)
                    .IsRequired()
                    .HasColumnName("LETT_CODICE_FISCALE_SOGGETTO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.LettDtFattura)
                    .HasColumnName("LETT_DT_FATTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.LettImpLiquidato)
                    .HasColumnName("LETT_IMP_LIQUIDATO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.LettImpRichiesto)
                    .HasColumnName("LETT_IMP_RICHIESTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.LettNominativoSoggetto)
                    .IsRequired()
                    .HasColumnName("LETT_NOMINATIVO_SOGGETTO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.LettNumeroFattura)
                    .HasColumnName("LETT_NUMERO_FATTURA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LettNumeroPratica)
                    .HasColumnName("LETT_NUMERO_PRATICA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Presso)
                    .HasColumnName("PRESSO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AeSpesesanRimb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AE_SPESESAN_RIMB", "IFLOW");

                entity.HasIndex(e => new { e.CodiceFiscaleIscritto, e.AnnoCompetenza })
                    .HasName("XX01_AE_SPESESAN_RIMB");

                entity.Property(e => e.AnnoCompetenza).HasColumnName("ANNO_COMPETENZA");

                entity.Property(e => e.CodiceFiscaleIscritto)
                    .IsRequired()
                    .HasColumnName("CODICE_FISCALE_ISCRITTO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAeSpesesanRimb).HasColumnName("ID_AE_SPESESAN_RIMB");

                entity.Property(e => e.Rec1AnnoRiferimento).HasColumnName("REC1_ANNO_RIFERIMENTO");

                entity.Property(e => e.Rec1CodiceFiscaleSoggetto)
                    .IsRequired()
                    .HasColumnName("REC1_CODICE_FISCALE_SOGGETTO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Rec1ImpRimborso).HasColumnName("REC1_IMP_RIMBORSO");

                entity.Property(e => e.Rec1ImpSpesa).HasColumnName("REC1_IMP_SPESA");

                entity.Property(e => e.Rec1TipologiaSpesa)
                    .IsRequired()
                    .HasColumnName("REC1_TIPOLOGIA_SPESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AiaFlussiSospesi>(entity =>
            {
                entity.HasKey(e => e.IdAiaFlussoSospeso);

                entity.ToTable("AIA_FLUSSI_SOSPESI", "ICLAIMS");

                entity.HasIndex(e => e.FlgTipoRecord)
                    .HasName("XX01_AIA_FLUSSI_SOSPESI");

                entity.Property(e => e.IdAiaFlussoSospeso)
                    .HasColumnName("ID_AIA_FLUSSO_SOSPESO")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoRecord)
                    .HasColumnName("FLG_TIPO_RECORD")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RecordRic)
                    .HasColumnName("RECORD_RIC")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AiaNotificheAnomalia>(entity =>
            {
                entity.HasKey(e => e.KeyNotificheAnomalia)
                    .HasName("PK_KEY_NOTIFICHE_ANOMALIA");

                entity.ToTable("AIA_NOTIFICHE_ANOMALIA", "ICLAIMS");

                entity.Property(e => e.KeyNotificheAnomalia)
                    .HasColumnName("KEY_NOTIFICHE_ANOMALIA")
                    .ValueGeneratedNever();

                entity.Property(e => e.Causale)
                    .IsRequired()
                    .HasColumnName("CAUSALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodImpr)
                    .IsRequired()
                    .HasColumnName("COD_IMPR")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodNotif)
                    .IsRequired()
                    .HasColumnName("COD_NOTIF")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.CodRich)
                    .HasColumnName("COD_RICH")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdNotificheAnomalia).HasColumnName("ID_NOTIFICHE_ANOMALIA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NumSini)
                    .HasColumnName("NUM_SINI")
                    .HasColumnType("numeric(6, 0)");

                entity.Property(e => e.OraElab)
                    .HasColumnName("ORA_ELAB")
                    .HasColumnType("datetime");

                entity.Property(e => e.TipoCont)
                    .IsRequired()
                    .HasColumnName("TIPO_CONT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AiaNotificheComp>(entity =>
            {
                entity.HasKey(e => e.KeyNotificheComp)
                    .HasName("PK_NOTIFICHE_COMP");

                entity.ToTable("AIA_NOTIFICHE_COMP", "ICLAIMS");

                entity.Property(e => e.KeyNotificheComp)
                    .HasColumnName("KEY_NOTIFICHE_COMP")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodImpr)
                    .IsRequired()
                    .HasColumnName("COD_IMPR")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodNotif)
                    .IsRequired()
                    .HasColumnName("COD_NOTIF")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.CodUniSini)
                    .IsRequired()
                    .HasColumnName("COD_UNI_SINI")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdNotificheComp).HasColumnName("ID_NOTIFICHE_COMP");

                entity.Property(e => e.IdNotificheSin).HasColumnName("ID_NOTIFICHE_SIN");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<AiaNotificheScarti>(entity =>
            {
                entity.HasKey(e => e.KeyNotificheScarto);

                entity.ToTable("AIA_NOTIFICHE_SCARTI", "ICLAIMS");

                entity.HasIndex(e => e.CodSinistro)
                    .HasName("XX03_AIA_NOTIFICHE_SCARTI");

                entity.HasIndex(e => e.IdNotificheScarto)
                    .HasName("XX01_AIA_NOTIFICHE_SCARTI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02_AIA_NOTIFICHE_SCARTI");

                entity.Property(e => e.KeyNotificheScarto)
                    .HasColumnName("KEY_NOTIFICHE_SCARTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Causale)
                    .HasColumnName("CAUSALE")
                    .IsUnicode(false);

                entity.Property(e => e.CodNotif)
                    .IsRequired()
                    .HasColumnName("COD_NOTIF")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.CodSinistro)
                    .IsRequired()
                    .HasColumnName("COD_SINISTRO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DtSegnalazione)
                    .HasColumnName("DT_SEGNALAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdNotificheScarto).HasColumnName("ID_NOTIFICHE_SCARTO");

                entity.Property(e => e.IdNotificheSin).HasColumnName("ID_NOTIFICHE_SIN");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<AiaNotificheSin>(entity =>
            {
                entity.HasKey(e => e.KeyNotificheSin)
                    .HasName("PK_NOTIFICHE_SIN");

                entity.ToTable("AIA_NOTIFICHE_SIN", "ICLAIMS");

                entity.Property(e => e.KeyNotificheSin)
                    .HasColumnName("KEY_NOTIFICHE_SIN")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodNotif)
                    .IsRequired()
                    .HasColumnName("COD_NOTIF")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.CodSinistro)
                    .HasColumnName("COD_SINISTRO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CodUniSini)
                    .IsRequired()
                    .HasColumnName("COD_UNI_SINI")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.DataAccad)
                    .HasColumnName("DATA_ACCAD")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAutorita)
                    .HasColumnName("FLG_AUTORITA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgBlackBox)
                    .HasColumnName("FLG_BLACK_BOX")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdNotificheSin).HasColumnName("ID_NOTIFICHE_SIN");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Qscore)
                    .HasColumnName("QSCORE")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.Score)
                    .HasColumnName("SCORE")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.ScoreCoinv)
                    .HasColumnName("SCORE_COINV")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.ScoreContrat)
                    .HasColumnName("SCORE_CONTRAT")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.ScoreInteres)
                    .HasColumnName("SCORE_INTERES")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.ScoreVeic)
                    .HasColumnName("SCORE_VEIC")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.Vscore)
                    .HasColumnName("VSCORE")
                    .HasColumnType("numeric(4, 0)");
            });

            modelBuilder.Entity<AiaNotificheSoggetto>(entity =>
            {
                entity.HasKey(e => e.KeyNotificheSoggetto)
                    .HasName("PK_NOTIFICHE_SOGGETTO");

                entity.ToTable("AIA_NOTIFICHE_SOGGETTO", "ICLAIMS");

                entity.Property(e => e.KeyNotificheSoggetto)
                    .HasColumnName("KEY_NOTIFICHE_SOGGETTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodIdentificativo)
                    .IsRequired()
                    .HasColumnName("COD_IDENTIFICATIVO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodInd)
                    .IsRequired()
                    .HasColumnName("COD_IND")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodNotif)
                    .IsRequired()
                    .HasColumnName("COD_NOTIF")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.CodUniSini)
                    .IsRequired()
                    .HasColumnName("COD_UNI_SINI")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdNotificheSin).HasColumnName("ID_NOTIFICHE_SIN");

                entity.Property(e => e.IdNotificheSoggetto).HasColumnName("ID_NOTIFICHE_SOGGETTO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ValInd)
                    .HasColumnName("VAL_IND")
                    .HasColumnType("numeric(1, 0)");
            });

            modelBuilder.Entity<AiaNotificheVeic>(entity =>
            {
                entity.HasKey(e => e.KeyNotificheVeic)
                    .HasName("PK_NOTIFICHE_VEIC");

                entity.ToTable("AIA_NOTIFICHE_VEIC", "ICLAIMS");

                entity.Property(e => e.KeyNotificheVeic)
                    .HasColumnName("KEY_NOTIFICHE_VEIC")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodInd)
                    .IsRequired()
                    .HasColumnName("COD_IND")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodNotif)
                    .IsRequired()
                    .HasColumnName("COD_NOTIF")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.CodUniSini)
                    .IsRequired()
                    .HasColumnName("COD_UNI_SINI")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdNotificheSin).HasColumnName("ID_NOTIFICHE_SIN");

                entity.Property(e => e.IdNotificheVeic).HasColumnName("ID_NOTIFICHE_VEIC");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdVeicolo).HasColumnName("ID_VEICOLO");

                entity.Property(e => e.Targa)
                    .IsRequired()
                    .HasColumnName("TARGA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ValInd)
                    .HasColumnName("VAL_IND")
                    .HasColumnType("numeric(1, 0)");
            });

            modelBuilder.Entity<AnaAggiuntiviFis>(entity =>
            {
                entity.HasKey(e => e.KeyDatiaggpersfisica)
                    .HasName("PK__ANA_AGGI__BA8D91F157DEA27B");

                entity.ToTable("ANA_AGGIUNTIVI_FIS", "ISUITE");

                entity.HasIndex(e => e.IdAnagraficaMand)
                    .HasName("XX03ANA_AGGIUNTIVI_FIS");

                entity.HasIndex(e => e.IdDatiaggpersfisica)
                    .HasName("XX01ANA_AGGIUNTIVI_FIS");

                entity.HasIndex(e => e.IdNazione)
                    .HasName("XX02ANA_AGGIUNTIVI_FIS");

                entity.HasIndex(e => e.KeyDatiaggpersfisica)
                    .HasName("SYS_C0045636")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdDatiaggpersfisica, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_ANA_AGGIUNTIVI_FIS_STO")
                    .IsUnique();

                entity.Property(e => e.KeyDatiaggpersfisica)
                    .HasColumnName("KEY_DATIAGGPERSFISICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAssunzione)
                    .HasColumnName("DT_ASSUNZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAttivita)
                    .HasColumnName("FLG_ATTIVITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEsperienzaPrec)
                    .HasColumnName("FLG_ESPERIENZA_PREC")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgProfessione)
                    .HasColumnName("FLG_PROFESSIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoCivile)
                    .HasColumnName("FLG_STATO_CIVILE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTitoloStudio)
                    .HasColumnName("FLG_TITOLO_STUDIO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagraficaMand)
                    .HasColumnName("ID_ANAGRAFICA_MAND")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDatiaggpersfisica)
                    .HasColumnName("ID_DATIAGGPERSFISICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNazione)
                    .HasColumnName("ID_NAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpLordoMensile)
                    .HasColumnName("IMP_LORDO_MENSILE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTfr)
                    .HasColumnName("IMP_TFR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTfrFondo)
                    .HasColumnName("IMP_TFR_FONDO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<AnaAggiuntiviGiu>(entity =>
            {
                entity.HasKey(e => e.KeyDatiaggpersgiuri)
                    .HasName("PK__ANA_AGGI__0BFD86FA695CDC84");

                entity.ToTable("ANA_AGGIUNTIVI_GIU", "ISUITE");

                entity.HasIndex(e => e.IdDatiaggpersgiuri)
                    .HasName("XX01ANA_AGGIUNTIVI_GIU");

                entity.HasIndex(e => e.IdProvincia)
                    .HasName("XX02ANA_AGGIUNTIVI_GIU");

                entity.HasIndex(e => e.KeyDatiaggpersgiuri)
                    .HasName("PK_ANA_AGGIUNTIVI_GIO_STO")
                    .IsUnique();

                entity.Property(e => e.KeyDatiaggpersgiuri)
                    .HasColumnName("KEY_DATIAGGPERSGIURI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CapitaleSociale)
                    .HasColumnName("CAPITALE_SOCIALE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CodStrutturaIntOspedaliera)
                    .HasColumnName("COD_STRUTTURA_INT_OSPEDALIERA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodStrutturaOspedaliera)
                    .HasColumnName("COD_STRUTTURA_OSPEDALIERA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DtIscrizioneCciaa)
                    .HasColumnName("DT_ISCRIZIONE_CCIAA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAttivita)
                    .HasColumnName("FLG_ATTIVITA")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFormaSocieta)
                    .HasColumnName("FLG_FORMA_SOCIETA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoSocieta)
                    .HasColumnName("FLG_TIPO_SOCIETA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDatiaggpersgiuri)
                    .HasColumnName("ID_DATIAGGPERSGIURI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNazione).HasColumnName("ID_NAZIONE");

                entity.Property(e => e.IdProvincia)
                    .HasColumnName("ID_PROVINCIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroDipendenti)
                    .HasColumnName("NUMERO_DIPENDENTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroIscrizioneCciaa)
                    .HasColumnName("NUMERO_ISCRIZIONE_CCIAA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.OggettoSociale)
                    .HasColumnName("OGGETTO_SOCIALE")
                    .IsUnicode(false);

                entity.Property(e => e.SubcodStrutturaOspedaliera)
                    .HasColumnName("SUBCOD_STRUTTURA_OSPEDALIERA")
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AnaAllegati>(entity =>
            {
                entity.HasKey(e => e.KeyAnaAllegato)
                    .HasName("PK__ANA_ALLE__80F9C57DBB2A5DE3");

                entity.ToTable("ANA_ALLEGATI", "ISUITE");

                entity.HasIndex(e => e.IdAllegato)
                    .HasName("XX02ANA_ALLEGATI");

                entity.HasIndex(e => e.IdAnaAllegato)
                    .HasName("XX01ANA_ALLEGATI");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03ANA_ALLEGATI");

                entity.HasIndex(e => e.KeyAnaAllegato)
                    .HasName("PK_ANA_ALLEGATI")
                    .IsUnique();

                entity.Property(e => e.KeyAnaAllegato)
                    .HasColumnName("KEY_ANA_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAllegato)
                    .HasColumnName("ID_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnaAllegato)
                    .HasColumnName("ID_ANA_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<AnaAnagrafiche>(entity =>
            {
                entity.HasKey(e => e.KeyAnagrafica)
                    .HasName("PK__ANA_ANAG__1AB1A48919543949");

                entity.ToTable("ANA_ANAGRAFICHE", "ISUITE");

                entity.HasIndex(e => e.CodiceFiscale)
                    .HasName("ANA_ANAGRAFICHE_K01");

                entity.HasIndex(e => e.CognomeRagioneSociale)
                    .HasName("XX10ANA_ANAGRAFICHE");

                entity.HasIndex(e => e.FlgTipoAnagrafica)
                    .HasName("K01_ANA_ANAGRAFICHE_STO");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX01ANA_ANAGRAFICHE");

                entity.HasIndex(e => e.IdComune)
                    .HasName("XX08ANA_ANAGRAFICHE");

                entity.HasIndex(e => e.IdDatiaggpersfisica)
                    .HasName("XX02ANA_ANAGRAFICHE");

                entity.HasIndex(e => e.IdDatiaggpersgiuri)
                    .HasName("XX03ANA_ANAGRAFICHE");

                entity.HasIndex(e => e.IdDatiprivacy)
                    .HasName("XX04ANA_ANAGRAFICHE");

                entity.HasIndex(e => e.IdEsternoAnagrafica)
                    .HasName("XX05ANA_ANAGRAFICHE");

                entity.HasIndex(e => e.IdLingua)
                    .HasName("XX07ANA_ANAGRAFICHE");

                entity.HasIndex(e => e.IdSottogruppo)
                    .HasName("XX06ANA_ANAGRAFICHE");

                entity.HasIndex(e => e.KeyAnagrafica)
                    .HasName("SYS_C0048175")
                    .IsUnique();

                entity.HasIndex(e => e.PartitaIva)
                    .HasName("ANA_ANAGRAFICHE_K02");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX09ANA_ANAGRAFICHE");

                entity.HasIndex(e => new { e.IdAnagrafica, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_ANA_ANAGRAFICHE_STO")
                    .IsUnique();

                entity.Property(e => e.KeyAnagrafica)
                    .HasColumnName("KEY_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodiceFiscale)
                    .HasColumnName("CODICE_FISCALE")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cognome)
                    .HasColumnName("COGNOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagioneSociale)
                    .HasColumnName("COGNOME_RAGIONE_SOCIALE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DtCostituzione)
                    .HasColumnName("DT_COSTITUZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDecesso)
                    .HasColumnName("DT_DECESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIscrizioneRui)
                    .HasColumnName("DT_ISCRIZIONE_RUI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtNascita)
                    .HasColumnName("DT_NASCITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaIscrizioneRui)
                    .HasColumnName("DT_RICHIESTA_ISCRIZIONE_RUI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAdesioneContIntegrSino)
                    .HasColumnName("FLG_ADESIONE_CONT_INTEGR_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAdesioneFondoPensSino)
                    .HasColumnName("FLG_ADESIONE_FONDO_PENS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgBloccataSino)
                    .HasColumnName("FLG_BLOCCATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEntePubblicoSino)
                    .HasColumnName("FLG_ENTE_PUBBLICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPremessaOnorifica)
                    .HasColumnName("FLG_PREMESSA_ONORIFICA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPubblicaSino)
                    .HasColumnName("FLG_PUBBLICA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoAttivita)
                    .HasColumnName("FLG_RAMO_ATTIVITA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRichIscrizioneRuiSino)
                    .HasColumnName("FLG_RICH_ISCRIZIONE_RUI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSesso)
                    .HasColumnName("FLG_SESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSettorizzazioneSintetica)
                    .HasColumnName("FLG_SETTORIZZAZIONE_SINTETICA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAnagrafica)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ANAGRAFICA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTitoloOnorifico)
                    .HasColumnName("FLG_TITOLO_ONORIFICO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdComune)
                    .HasColumnName("ID_COMUNE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDatiaggpersfisica)
                    .HasColumnName("ID_DATIAGGPERSFISICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDatiaggpersgiuri)
                    .HasColumnName("ID_DATIAGGPERSGIURI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDatiprivacy)
                    .HasColumnName("ID_DATIPRIVACY")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEsternoAnagrafica)
                    .HasColumnName("ID_ESTERNO_ANAGRAFICA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdLingua)
                    .HasColumnName("ID_LINGUA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNazioneIdentFiscale)
                    .HasColumnName("ID_NAZIONE_IDENT_FISCALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSottogruppo)
                    .HasColumnName("ID_SOTTOGRUPPO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MatricolaAlboAgenti)
                    .HasColumnName("MATRICOLA_ALBO_AGENTI")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.MatricolaFondoPensione)
                    .HasColumnName("MATRICOLA_FONDO_PENSIONE")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.MatricolaRui)
                    .HasColumnName("MATRICOLA_RUI")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Nome)
                    .HasColumnName("NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.NoteBlocco)
                    .HasColumnName("NOTE_BLOCCO")
                    .IsUnicode(false);

                entity.Property(e => e.PartitaIva)
                    .HasColumnName("PARTITA_IVA")
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AnaAppartenenze>(entity =>
            {
                entity.HasKey(e => e.IdAnaAppartenenza);

                entity.ToTable("ANA_APPARTENENZE", "ISUITE");

                entity.HasIndex(e => e.IdAnaAppartenenza)
                    .HasName("SYS_C0045659")
                    .IsUnique();

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02ANA_APPARTENENZE");

                entity.HasIndex(e => e.IdAppartenenza)
                    .HasName("XX03ANA_APPARTENENZE");

                entity.HasIndex(e => new { e.IdAnagrafica, e.FlgTipoRuoloUtente, e.IdAppartenenza })
                    .HasName("K01_ANA_APPARTENENZE");

                entity.Property(e => e.IdAnaAppartenenza)
                    .HasColumnName("ID_ANA_APPARTENENZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgAbilitaModificaSino)
                    .HasColumnName("FLG_ABILITA_MODIFICA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRuoloUtente)
                    .HasColumnName("FLG_TIPO_RUOLO_UTENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAppartenenza)
                    .HasColumnName("ID_APPARTENENZA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<AnaCommissioniCc>(entity =>
            {
                entity.HasKey(e => e.KeyAnaCommissioniCc);

                entity.ToTable("ANA_COMMISSIONI_CC", "ISUITE");

                entity.HasIndex(e => new { e.IdAnaCommissioniCc, e.DtStoScadenzaFis, e.DtStoEffettoLog, e.DtStoScadenzaLog })
                    .HasName("XX01ANA_COMMISSIONI_CC");

                entity.Property(e => e.KeyAnaCommissioniCc)
                    .HasColumnName("KEY_ANA_COMMISSIONI_CC")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnaCommissioniCc).HasColumnName("ID_ANA_COMMISSIONI_CC");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpCommissioni)
                    .HasColumnName("IMP_COMMISSIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PctCommissioni)
                    .HasColumnName("PCT_COMMISSIONI")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<AnaContiCorrenti>(entity =>
            {
                entity.HasKey(e => e.KeyContocorrente)
                    .HasName("PK__ANA_CONT__3EA14F33AA5A9465");

                entity.ToTable("ANA_CONTI_CORRENTI", "ISUITE");

                entity.HasIndex(e => e.IdAbi)
                    .HasName("XX05ANA_CONTI_CORRENTI");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02ANA_CONTI_CORRENTI");

                entity.HasIndex(e => e.IdCab)
                    .HasName("XX03ANA_CONTI_CORRENTI");

                entity.HasIndex(e => e.IdContocorrente)
                    .HasName("XX01ANA_CONTI_CORRENTI");

                entity.HasIndex(e => e.IdNazione)
                    .HasName("XX04ANA_CONTI_CORRENTI");

                entity.HasIndex(e => e.KeyContocorrente)
                    .HasName("SYS_C0045668")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdContocorrente, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_ANA_CONTI_CORRENTI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyContocorrente)
                    .HasColumnName("KEY_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Cin)
                    .HasColumnName("CIN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CinIban)
                    .HasColumnName("CIN_IBAN")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.CodCid)
                    .HasColumnName("COD_CID")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodCuc)
                    .HasColumnName("COD_CUC")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodSia)
                    .HasColumnName("COD_SIA")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAbilitazioneCc)
                    .HasColumnName("FLG_ABILITAZIONE_CC")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Iban)
                    .HasColumnName("IBAN")
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.IdAbi)
                    .HasColumnName("ID_ABI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnaCommissioniCc).HasColumnName("ID_ANA_COMMISSIONI_CC");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdBic).HasColumnName("ID_BIC");

                entity.Property(e => e.IdCab)
                    .HasColumnName("ID_CAB")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContocorrente)
                    .HasColumnName("ID_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNazione)
                    .HasColumnName("ID_NAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Intestatario)
                    .HasColumnName("INTESTATARIO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NConto)
                    .IsRequired()
                    .HasColumnName("N_CONTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AnaContiCorrentiTglAss>(entity =>
            {
                entity.HasKey(e => e.KeyContocorrenteTglAss)
                    .HasName("PK__ANA_CONT__3E429774DEC1DDC6");

                entity.ToTable("ANA_CONTI_CORRENTI_TGL_ASS", "ISUITE");

                entity.HasIndex(e => e.IdContocorrente)
                    .HasName("X01_ANA_CONTI_CORRENTI_TGL_ASS");

                entity.HasIndex(e => e.KeyContocorrenteTglAss)
                    .HasName("PK_ANA_CONTI_CORRENTI_TGL_ASS")
                    .IsUnique();

                entity.Property(e => e.KeyContocorrenteTglAss)
                    .HasColumnName("KEY_CONTOCORRENTE_TGL_ASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTaglioAss)
                    .HasColumnName("FLG_TAGLIO_ASS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdContocorrente)
                    .HasColumnName("ID_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContocorrenteTglAss)
                    .HasColumnName("ID_CONTOCORRENTE_TGL_ASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<AnaDatiObbligatori>(entity =>
            {
                entity.HasKey(e => e.IdDatiObbligatori)
                    .HasName("PK__ANA_DATI__651E8B5DCDEB066B");

                entity.ToTable("ANA_DATI_OBBLIGATORI", "ISUITE");

                entity.HasIndex(e => e.IdCampoAnagrafica)
                    .HasName("XX02ANA_DATI_OBBLIGATORI");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04ANA_DATI_OBBLIGATORI");

                entity.HasIndex(e => e.IdDatiObbligatori)
                    .HasName("PK_ANA_DATI_OBBLIGATORI")
                    .IsUnique();

                entity.HasIndex(e => e.IdRuolo)
                    .HasName("XX03ANA_DATI_OBBLIGATORI");

                entity.Property(e => e.IdDatiObbligatori)
                    .HasColumnName("ID_DATI_OBBLIGATORI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgNonVisibileSino)
                    .HasColumnName("FLG_NON_VISIBILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligatorioSino)
                    .HasColumnName("FLG_OBBLIGATORIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAnagrafica)
                    .HasColumnName("FLG_TIPO_ANAGRAFICA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCampoAnagrafica)
                    .HasColumnName("ID_CAMPO_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRuolo)
                    .HasColumnName("ID_RUOLO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<AnaDocumenti>(entity =>
            {
                entity.HasKey(e => e.KeyDocumento)
                    .HasName("PK__ANA_DOCU__7B6778EA0688AFBC");

                entity.ToTable("ANA_DOCUMENTI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03ANA_DOCUMENTI");

                entity.HasIndex(e => e.IdAnagraficaRil)
                    .HasName("XX02ANA_DOCUMENTI");

                entity.HasIndex(e => e.IdDocumento)
                    .HasName("XX01ANA_DOCUMENTI");

                entity.HasIndex(e => e.KeyDocumento)
                    .HasName("SYS_C0045681")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdDocumento, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_ANA_DOCUMENTI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyDocumento)
                    .HasColumnName("KEY_DOCUMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtRilascio)
                    .HasColumnName("DT_RILASCIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoDocumento)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_DOCUMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagraficaRil)
                    .HasColumnName("ID_ANAGRAFICA_RIL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDocumento)
                    .HasColumnName("ID_DOCUMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.NumeroDocumento)
                    .HasColumnName("NUMERO_DOCUMENTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AnaEventi>(entity =>
            {
                entity.HasKey(e => e.KeyAnaEvento)
                    .HasName("PK__ANA_EVEN__7BE7673DACAE1D0A");

                entity.ToTable("ANA_EVENTI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX01ANA_EVENTI");

                entity.HasIndex(e => e.KeyAnaEvento)
                    .HasName("PK_ANA_EVENTI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdAnagrafica, e.DtEffettoEvento, e.DtSysEvento })
                    .HasName("XAK_ANA_EVENTI");

                entity.Property(e => e.KeyAnaEvento)
                    .HasColumnName("KEY_ANA_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodiceModifica)
                    .HasColumnName("CODICE_MODIFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEffettoEvento)
                    .HasColumnName("DT_EFFETTO_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysEvento)
                    .HasColumnName("DT_SYS_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<AnaIndirizzi>(entity =>
            {
                entity.HasKey(e => e.KeyIndirizzo)
                    .HasName("PK__ANA_INDI__5384148E29A9DA8A");

                entity.ToTable("ANA_INDIRIZZI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("K01_ANA_INDIRIZZI");

                entity.HasIndex(e => e.IdComune)
                    .HasName("XX05ANA_INDIRIZZI");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("XX01ANA_INDIRIZZI");

                entity.HasIndex(e => e.IdNazione)
                    .HasName("XX02ANA_INDIRIZZI");

                entity.HasIndex(e => e.IdProvincia)
                    .HasName("XX04ANA_INDIRIZZI");

                entity.HasIndex(e => e.KeyIndirizzo)
                    .HasName("SYS_C0045695")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX06ANA_INDIRIZZI");

                entity.HasIndex(e => new { e.IdIndirizzo, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_ANA_INDIRIZZI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyIndirizzo)
                    .HasColumnName("KEY_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Cap)
                    .HasColumnName("CAP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Civico)
                    .HasColumnName("CIVICO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPrefToponomastico)
                    .HasColumnName("FLG_PREF_TOPONOMASTICO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPrincipaleSino)
                    .HasColumnName("FLG_PRINCIPALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgTipoIndirizzo)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_INDIRIZZO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdComune)
                    .HasColumnName("ID_COMUNE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNazione)
                    .HasColumnName("ID_NAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProvincia)
                    .HasColumnName("ID_PROVINCIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Indirizzo)
                    .HasColumnName("INDIRIZZO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Latitudine)
                    .HasColumnName("LATITUDINE")
                    .HasColumnType("numeric(10, 7)");

                entity.Property(e => e.Localita)
                    .HasColumnName("LOCALITA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Longitudine)
                    .HasColumnName("LONGITUDINE")
                    .HasColumnType("numeric(10, 7)");

                entity.Property(e => e.Presso)
                    .HasColumnName("PRESSO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Toponimo)
                    .HasColumnName("TOPONIMO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AnaLegami>(entity =>
            {
                entity.HasKey(e => e.KeyLegame)
                    .HasName("PK__ANA_LEGA__C63959ED7A7A989E");

                entity.ToTable("ANA_LEGAMI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03ANA_LEGAMI");

                entity.HasIndex(e => e.IdAnagraficaLegame)
                    .HasName("XX04ANA_LEGAMI");

                entity.HasIndex(e => e.IdLegame)
                    .HasName("XX01ANA_LEGAMI");

                entity.HasIndex(e => e.IdTabLegame)
                    .HasName("XX02ANA_LEGAMI");

                entity.HasIndex(e => e.KeyLegame)
                    .HasName("PK_ANA_LEGAMI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyLegame)
                    .HasColumnName("KEY_LEGAME")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagraficaLegame)
                    .HasColumnName("ID_ANAGRAFICA_LEGAME")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLegame)
                    .HasColumnName("ID_LEGAME")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNucleoFamiliare).HasColumnName("ID_NUCLEO_FAMILIARE");

                entity.Property(e => e.IdTabLegame)
                    .HasColumnName("ID_TAB_LEGAME")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<AnaParametriStampa>(entity =>
            {
                entity.HasKey(e => e.IdAnaParametroStampa);

                entity.ToTable("ANA_PARAMETRI_STAMPA", "ISUITE");

                entity.HasIndex(e => e.IdParametroStampa)
                    .HasName("X01_ANA_PARAMETRI_STAMPA");

                entity.HasIndex(e => new { e.IdParametroStampa, e.IdAnagrafica })
                    .HasName("X02_ANA_PARAMETRI_STAMPA")
                    .IsUnique();

                entity.Property(e => e.IdAnaParametroStampa)
                    .HasColumnName("ID_ANA_PARAMETRO_STAMPA")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdParametroStampa).HasColumnName("ID_PARAMETRO_STAMPA");
            });

            modelBuilder.Entity<AnaPrivacy>(entity =>
            {
                entity.HasKey(e => e.KeyDatiprivacy)
                    .HasName("PK__ANA_PRIV__12635C18E1B1BB2C");

                entity.ToTable("ANA_PRIVACY", "ISUITE");

                entity.HasIndex(e => e.IdDatiprivacy)
                    .HasName("XX01ANA_PRIVACY");

                entity.HasIndex(e => e.KeyDatiprivacy)
                    .HasName("PK_ANA_PRIVACY_STO")
                    .IsUnique();

                entity.Property(e => e.KeyDatiprivacy)
                    .HasColumnName("KEY_DATIPRIVACY")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtConsenso)
                    .HasColumnName("DT_CONSENSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgConsensoDati)
                    .HasColumnName("FLG_CONSENSO_DATI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgConsensoDatiSensibili)
                    .HasColumnName("FLG_CONSENSO_DATI_SENSIBILI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgConsensoFiniCommerciali)
                    .HasColumnName("FLG_CONSENSO_FINI_COMMERCIALI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgConsensoFirmaGrafoSino)
                    .HasColumnName("FLG_CONSENSO_FIRMA_GRAFO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRevocaFirmaGrafoSino)
                    .HasColumnName("FLG_REVOCA_FIRMA_GRAFO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDatiprivacy)
                    .HasColumnName("ID_DATIPRIVACY")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<AnaProcConcorsuale>(entity =>
            {
                entity.HasKey(e => e.KeyAnaProcConcorsuale)
                    .HasName("PK__ANA_PROC__910FDC0E4E6B0B0E");

                entity.ToTable("ANA_PROC_CONCORSUALE", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("K01_ANA_PROC_CONCORSUALE");

                entity.HasIndex(e => new { e.IdAnaProcConcorsuale, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_ANA_PROC_CONCORSUALE")
                    .IsUnique();

                entity.Property(e => e.KeyAnaProcConcorsuale)
                    .HasColumnName("KEY_ANA_PROC_CONCORSUALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtApertura)
                    .HasColumnName("DT_APERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.EMailPec)
                    .HasColumnName("E_MAIL_PEC")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoProc)
                    .HasColumnName("FLG_TIPO_PROC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnaProcConcorsuale)
                    .HasColumnName("ID_ANA_PROC_CONCORSUALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagraficaCommissario)
                    .HasColumnName("ID_ANAGRAFICA_COMMISSARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagraficaCuratore)
                    .HasColumnName("ID_ANAGRAFICA_CURATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagraficaLiquidatore)
                    .HasColumnName("ID_ANAGRAFICA_LIQUIDATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdComuneProc)
                    .HasColumnName("ID_COMUNE_PROC")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<AnaRecapiti>(entity =>
            {
                entity.HasKey(e => e.KeyRecapito)
                    .HasName("PK__ANA_RECA__ACB342A830C0A012");

                entity.ToTable("ANA_RECAPITI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02ANA_RECAPITI");

                entity.HasIndex(e => e.IdRecapito)
                    .HasName("XX01ANA_RECAPITI");

                entity.HasIndex(e => e.KeyRecapito)
                    .HasName("SYS_C0045717")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRecapito, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_ANA_RECAPITI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyRecapito)
                    .HasColumnName("KEY_RECAPITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoRecapito)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_RECAPITO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRecapito)
                    .HasColumnName("ID_RECAPITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Recapito)
                    .IsRequired()
                    .HasColumnName("RECAPITO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AnaRuoli>(entity =>
            {
                entity.HasKey(e => new { e.IdAnagrafica, e.IdRuolo })
                    .HasName("PK__ANA_RUOL__0383A6163D92C112");

                entity.ToTable("ANA_RUOLI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX01ANA_RUOLI");

                entity.HasIndex(e => e.IdRuolo)
                    .HasName("XX02ANA_RUOLI");

                entity.HasIndex(e => new { e.IdAnagrafica, e.IdRuolo })
                    .HasName("PK_ANA_RUOLI")
                    .IsUnique();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRuolo)
                    .HasColumnName("ID_RUOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdRuoloNavigation)
                    .WithMany(p => p.AnaRuoli)
                    .HasForeignKey(d => d.IdRuolo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ANA_RUOLI__ID_RU__703483B9");
            });

            modelBuilder.Entity<AnaSoci>(entity =>
            {
                entity.HasKey(e => e.KeySocio)
                    .HasName("PK__ANA_SOCI__1CA12D5D202B8180");

                entity.ToTable("ANA_SOCI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("K01_ANA_SOCI");

                entity.HasIndex(e => e.IdAnagraficaSocio)
                    .HasName("XX02ANA_SOCI");

                entity.HasIndex(e => e.IdSocio)
                    .HasName("XX01ANA_SOCI");

                entity.HasIndex(e => e.KeySocio)
                    .HasName("SYS_C0045728")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdSocio, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_ANA_SOCI_STO")
                    .IsUnique();

                entity.Property(e => e.KeySocio)
                    .HasColumnName("KEY_SOCIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRespLegaleSino)
                    .HasColumnName("FLG_RESP_LEGALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoSocio)
                    .HasColumnName("FLG_TIPO_SOCIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagraficaSocio)
                    .HasColumnName("ID_ANAGRAFICA_SOCIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSocio)
                    .HasColumnName("ID_SOCIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PerQuotaCapitale)
                    .HasColumnName("PER_QUOTA_CAPITALE")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<AniaAtrcDatiGen>(entity =>
            {
                entity.HasKey(e => e.KeyAniaAtrcDatiGen);

                entity.ToTable("ANIA_ATRC_DATI_GEN", "IAGENCY");

                entity.HasIndex(e => new { e.IdAniaAtrcDatiGen, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_ATRC_DATI_GEN");

                entity.HasIndex(e => new { e.IdAniaAtrcDatiGen, e.CodImpresaMittente, e.FormatoIdentVeicolo, e.IdentVeicolo, e.TipoVeicolo, e.DtScadenzaContratto, e.IdentFiscaleContr, e.DtStoScadenzaFis })
                    .HasName("XX02ANIA_ATRC_DATI_GEN");

                entity.Property(e => e.KeyAniaAtrcDatiGen)
                    .HasColumnName("key_ania_atrc_dati_gen")
                    .ValueGeneratedNever();

                entity.Property(e => e.CampoLiberoImpresa)
                    .HasColumnName("campo_libero_impresa")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CausaleMovimento)
                    .HasColumnName("causale_movimento")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ClasseAssegnazione)
                    .HasColumnName("classe_assegnazione")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseAssegnazioneCu)
                    .HasColumnName("classe_assegnazione_cu")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseProvenienza)
                    .HasColumnName("classe_provenienza")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseProvenienzaCu)
                    .HasColumnName("classe_provenienza_cu")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("cod_impresa")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("cod_impresa_mittente")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceIur)
                    .HasColumnName("CODICE_IUR")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceLegge)
                    .HasColumnName("codice_legge")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CognomeRagSocAvDiritto)
                    .HasColumnName("cognome_rag_soc_av_diritto")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagSocContr)
                    .HasColumnName("cognome_rag_soc_contr")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("dt_elaborazione_ania")
                    .HasColumnType("date");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("dt_invio")
                    .HasColumnType("date");

                entity.Property(e => e.DtScadenzaContratto)
                    .HasColumnName("dt_scadenza_contratto")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("dt_sto_effetto_fis")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("dt_sto_scadenza_fis")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgControlloMovimenti)
                    .HasColumnName("flg_controllo_movimenti")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDaReinviareSino)
                    .HasColumnName("flg_da_reinviare_sino")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPolizzaGratuita)
                    .HasColumnName("flg_polizza_gratuita")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormaTariffaria)
                    .HasColumnName("forma_tariffaria")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FormatoIdentVeicolo)
                    .HasColumnName("formato_ident_veicolo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaAtrcDatiGen).HasColumnName("id_ania_atrc_dati_gen");

                entity.Property(e => e.IdUtente).HasColumnName("id_utente");

                entity.Property(e => e.IdentFiscaleAvDiritto)
                    .HasColumnName("ident_fiscale_av_diritto")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentFiscaleContr)
                    .HasColumnName("ident_fiscale_contr")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicolo)
                    .HasColumnName("ident_veicolo")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ImpFranNonCorrisposte)
                    .HasColumnName("imp_fran_non_corrisposte")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NFranNonCorrisposte).HasColumnName("n_fran_non_corrisposte");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("n_polizza")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NaturaAvDiritto)
                    .HasColumnName("natura_av_diritto")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NomeAvDiritto)
                    .HasColumnName("nome_av_diritto")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NomeContraente)
                    .HasColumnName("nome_contraente")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.StringaAnomalie)
                    .HasColumnName("stringa_anomalie")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoAvDiritto)
                    .HasColumnName("tipo_av_diritto")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoMovimento)
                    .HasColumnName("tipo_movimento")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoPolizza)
                    .HasColumnName("TIPO_POLIZZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoRecord)
                    .HasColumnName("tipo_record")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("tipo_veicolo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AniaAtrcMensile>(entity =>
            {
                entity.HasKey(e => e.KeyAniaAtrcMensile);

                entity.ToTable("ANIA_ATRC_MENSILE", "IAGENCY");

                entity.HasIndex(e => new { e.IdAniaAtrcMensile, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_ATRC_MENSILE");

                entity.HasIndex(e => new { e.CodImpresa, e.MeseRilevazione, e.TipoVeicolo })
                    .HasName("XX02ANIA_ATRC_MENSILE");

                entity.HasIndex(e => new { e.DtInizioElaborazione, e.MeseRilevazione, e.TipoVeicolo })
                    .HasName("XX03ANIA_ATRC_MENSILE");

                entity.Property(e => e.KeyAniaAtrcMensile)
                    .HasColumnName("KEY_ANIA_ATRC_MENSILE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodFlusso)
                    .HasColumnName("COD_FLUSSO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaDestinataria)
                    .HasColumnName("COD_IMPRESA_DESTINATARIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("COD_IMPRESA_MITTENTE")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("DT_ELABORAZIONE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgControlloMovimenti)
                    .HasColumnName("FLG_CONTROLLO_MOVIMENTI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaAtrcMensile).HasColumnName("ID_ANIA_ATRC_MENSILE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.MeseRilevazione)
                    .HasColumnName("MESE_RILEVAZIONE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NAttestatiRischio).HasColumnName("N_ATTESTATI_RISCHIO");

                entity.Property(e => e.OraInizioElaborazione)
                    .HasColumnName("ORA_INIZIO_ELABORAZIONE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.PrgRecord).HasColumnName("PRG_RECORD");

                entity.Property(e => e.StringaAnomalie)
                    .HasColumnName("STRINGA_ANOMALIE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRecord)
                    .HasColumnName("TIPO_RECORD")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRecordTestata)
                    .HasColumnName("TIPO_RECORD_TESTATA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AniaAtrcMensileErr>(entity =>
            {
                entity.HasKey(e => e.KeyAniaAtrcMensileErr);

                entity.ToTable("ANIA_ATRC_MENSILE_ERR", "IAGENCY");

                entity.HasIndex(e => e.IdAniaAtrcMensile)
                    .HasName("XX02ANIA_ATRC_MENSILE_ERR");

                entity.HasIndex(e => new { e.IdAniaAtrcMensileErr, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_ATRC_MENSILE_ERR");

                entity.Property(e => e.KeyAniaAtrcMensileErr)
                    .HasColumnName("KEY_ANIA_ATRC_MENSILE_ERR")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodFlusso)
                    .HasColumnName("COD_FLUSSO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaDestinataria)
                    .HasColumnName("COD_IMPRESA_DESTINATARIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("COD_IMPRESA_MITTENTE")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneErrore)
                    .HasColumnName("DESCRIZIONE_ERRORE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaAtrcMensile).HasColumnName("ID_ANIA_ATRC_MENSILE");

                entity.Property(e => e.IdAniaAtrcMensileErr).HasColumnName("ID_ANIA_ATRC_MENSILE_ERR");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.OraInizioElaborazione)
                    .HasColumnName("ORA_INIZIO_ELABORAZIONE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.PrgRecord).HasColumnName("PRG_RECORD");

                entity.Property(e => e.TipoErrore)
                    .HasColumnName("TIPO_ERRORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoRecordTestata)
                    .HasColumnName("TIPO_RECORD_TESTATA")
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaAtrcPagellino>(entity =>
            {
                entity.HasKey(e => e.KeyAniaAtrcPagellino);

                entity.ToTable("ANIA_ATRC_PAGELLINO", "IAGENCY");

                entity.HasIndex(e => e.IdAniaAtrcDatiGen)
                    .HasName("XX02ANIA_ATRC_PAGELLINO");

                entity.HasIndex(e => new { e.IdAniaAtrcPagellino, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_ATRC_PAGELLINO");

                entity.Property(e => e.KeyAniaAtrcPagellino)
                    .HasColumnName("KEY_ANIA_ATRC_PAGELLINO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anno1).HasColumnName("ANNO_1");

                entity.Property(e => e.Anno10).HasColumnName("ANNO_10");

                entity.Property(e => e.Anno2).HasColumnName("ANNO_2");

                entity.Property(e => e.Anno3).HasColumnName("ANNO_3");

                entity.Property(e => e.Anno4).HasColumnName("ANNO_4");

                entity.Property(e => e.Anno5).HasColumnName("ANNO_5");

                entity.Property(e => e.Anno6).HasColumnName("ANNO_6");

                entity.Property(e => e.Anno7).HasColumnName("ANNO_7");

                entity.Property(e => e.Anno8).HasColumnName("ANNO_8");

                entity.Property(e => e.Anno9).HasColumnName("ANNO_9");

                entity.Property(e => e.AnnoCorrente).HasColumnName("ANNO_CORRENTE");

                entity.Property(e => e.CodFlusso)
                    .HasColumnName("COD_FLUSSO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaDestinataria)
                    .HasColumnName("COD_IMPRESA_DESTINATARIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("COD_IMPRESA_MITTENTE")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaContratto)
                    .HasColumnName("DT_SCADENZA_CONTRATTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormatoIdentVeicolo)
                    .HasColumnName("FORMATO_IDENT_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaAtrcDatiGen).HasColumnName("ID_ANIA_ATRC_DATI_GEN");

                entity.Property(e => e.IdAniaAtrcPagellino).HasColumnName("ID_ANIA_ATRC_PAGELLINO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentFiscaleContr)
                    .HasColumnName("IDENT_FISCALE_CONTR")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicolo)
                    .HasColumnName("IDENT_VEICOLO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSinAnno1)
                    .HasColumnName("NUMERO_SIN_ANNO_1")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSinAnno10)
                    .HasColumnName("NUMERO_SIN_ANNO_10")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSinAnno2)
                    .HasColumnName("NUMERO_SIN_ANNO_2")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSinAnno3)
                    .HasColumnName("NUMERO_SIN_ANNO_3")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSinAnno4)
                    .HasColumnName("NUMERO_SIN_ANNO_4")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSinAnno5)
                    .HasColumnName("NUMERO_SIN_ANNO_5")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSinAnno6)
                    .HasColumnName("NUMERO_SIN_ANNO_6")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSinAnno7)
                    .HasColumnName("NUMERO_SIN_ANNO_7")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSinAnno8)
                    .HasColumnName("NUMERO_SIN_ANNO_8")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSinAnno9)
                    .HasColumnName("NUMERO_SIN_ANNO_9")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSinAnnoCorrente)
                    .HasColumnName("NUMERO_SIN_ANNO_CORRENTE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.OraInizioElaborazione)
                    .HasColumnName("ORA_INIZIO_ELABORAZIONE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.PrgRecord).HasColumnName("PRG_RECORD");

                entity.Property(e => e.TipoRecord)
                    .HasColumnName("TIPO_RECORD")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRecordTestata)
                    .HasColumnName("TIPO_RECORD_TESTATA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipologiaSinistro)
                    .HasColumnName("TIPOLOGIA_SINISTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaAtrcParitari>(entity =>
            {
                entity.HasKey(e => e.KeyAniaAtrcParitari);

                entity.ToTable("ANIA_ATRC_PARITARI", "IAGENCY");

                entity.HasIndex(e => e.IdAniaAtrcDatiGen)
                    .HasName("XX02ANIA_ATRC_PARITARI");

                entity.HasIndex(e => new { e.IdAniaAtrcParitari, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_ATRC_PARITARI");

                entity.Property(e => e.KeyAniaAtrcParitari)
                    .HasColumnName("KEY_ANIA_ATRC_PARITARI")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anno).HasColumnName("ANNO");

                entity.Property(e => e.CodFlusso)
                    .HasColumnName("COD_FLUSSO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaDestinataria)
                    .HasColumnName("COD_IMPRESA_DESTINATARIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("COD_IMPRESA_MITTENTE")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaContratto)
                    .HasColumnName("DT_SCADENZA_CONTRATTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMalus1)
                    .HasColumnName("FLG_MALUS_1")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMalus10)
                    .HasColumnName("FLG_MALUS_10")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMalus2)
                    .HasColumnName("FLG_MALUS_2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMalus3)
                    .HasColumnName("FLG_MALUS_3")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMalus4)
                    .HasColumnName("FLG_MALUS_4")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMalus5)
                    .HasColumnName("FLG_MALUS_5")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMalus6)
                    .HasColumnName("FLG_MALUS_6")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMalus7)
                    .HasColumnName("FLG_MALUS_7")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMalus8)
                    .HasColumnName("FLG_MALUS_8")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMalus9)
                    .HasColumnName("FLG_MALUS_9")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormatoIdentVeicolo)
                    .HasColumnName("FORMATO_IDENT_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaAtrcDatiGen).HasColumnName("ID_ANIA_ATRC_DATI_GEN");

                entity.Property(e => e.IdAniaAtrcParitari).HasColumnName("ID_ANIA_ATRC_PARITARI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentFiscaleContr)
                    .HasColumnName("IDENT_FISCALE_CONTR")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicolo)
                    .HasColumnName("IDENT_VEICOLO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.OraInizioElaborazione)
                    .HasColumnName("ORA_INIZIO_ELABORAZIONE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Percentuale1)
                    .HasColumnName("PERCENTUALE_1")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.Percentuale10)
                    .HasColumnName("PERCENTUALE_10")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.Percentuale2)
                    .HasColumnName("PERCENTUALE_2")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.Percentuale3)
                    .HasColumnName("PERCENTUALE_3")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.Percentuale4)
                    .HasColumnName("PERCENTUALE_4")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.Percentuale5)
                    .HasColumnName("PERCENTUALE_5")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.Percentuale6)
                    .HasColumnName("PERCENTUALE_6")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.Percentuale7)
                    .HasColumnName("PERCENTUALE_7")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.Percentuale8)
                    .HasColumnName("PERCENTUALE_8")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.Percentuale9)
                    .HasColumnName("PERCENTUALE_9")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PrgRecord).HasColumnName("PRG_RECORD");

                entity.Property(e => e.Progressivo1).HasColumnName("PROGRESSIVO_1");

                entity.Property(e => e.Progressivo10).HasColumnName("PROGRESSIVO_10");

                entity.Property(e => e.Progressivo2).HasColumnName("PROGRESSIVO_2");

                entity.Property(e => e.Progressivo3).HasColumnName("PROGRESSIVO_3");

                entity.Property(e => e.Progressivo4).HasColumnName("PROGRESSIVO_4");

                entity.Property(e => e.Progressivo5).HasColumnName("PROGRESSIVO_5");

                entity.Property(e => e.Progressivo6).HasColumnName("PROGRESSIVO_6");

                entity.Property(e => e.Progressivo7).HasColumnName("PROGRESSIVO_7");

                entity.Property(e => e.Progressivo8).HasColumnName("PROGRESSIVO_8");

                entity.Property(e => e.Progressivo9).HasColumnName("PROGRESSIVO_9");

                entity.Property(e => e.TipoDanno1)
                    .HasColumnName("TIPO_DANNO_1")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDanno10)
                    .HasColumnName("TIPO_DANNO_10")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDanno2)
                    .HasColumnName("TIPO_DANNO_2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDanno3)
                    .HasColumnName("TIPO_DANNO_3")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDanno4)
                    .HasColumnName("TIPO_DANNO_4")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDanno5)
                    .HasColumnName("TIPO_DANNO_5")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDanno6)
                    .HasColumnName("TIPO_DANNO_6")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDanno7)
                    .HasColumnName("TIPO_DANNO_7")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDanno8)
                    .HasColumnName("TIPO_DANNO_8")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoDanno9)
                    .HasColumnName("TIPO_DANNO_9")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoRecord)
                    .HasColumnName("TIPO_RECORD")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRecordTestata)
                    .HasColumnName("TIPO_RECORD_TESTATA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipologiaSinistro)
                    .HasColumnName("TIPOLOGIA_SINISTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaAtrcRichieste>(entity =>
            {
                entity.HasKey(e => e.IdRichiestaAtrc)
                    .HasName("SYS_C0074896");

                entity.ToTable("ANIA_ATRC_RICHIESTE", "ISUITE");

                entity.HasIndex(e => e.DtRiferimentoRichiesta)
                    .HasName("XX03ANIA_ATRC_RICHIESTE");

                entity.HasIndex(e => e.IdRichiestaIbd)
                    .HasName("XX02ANIA_ATRC_RICHIESTE");

                entity.Property(e => e.IdRichiestaAtrc)
                    .HasColumnName("ID_RICHIESTA_ATRC")
                    .ValueGeneratedNever();

                entity.Property(e => e.Canale)
                    .HasColumnName("CANALE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseCuA)
                    .HasColumnName("CLASSE_CU_A")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseCuDa)
                    .HasColumnName("CLASSE_CU_DA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseImpresaA)
                    .HasColumnName("CLASSE_IMPRESA_A")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseImpresaDa)
                    .HasColumnName("CLASSE_IMPRESA_DA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CodFiscaleAventeDiritto)
                    .HasColumnName("COD_FISCALE_AVENTE_DIRITTO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodFiscaleContraente)
                    .HasColumnName("COD_FISCALE_CONTRAENTE")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceImpresa)
                    .HasColumnName("CODICE_IMPRESA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceIur)
                    .HasColumnName("CODICE_IUR")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceLegge)
                    .HasColumnName("CODICE_LEGGE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CogRagSocAventeDiritto)
                    .HasColumnName("COG_RAG_SOC_AVENTE_DIRITTO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagSocialeContraente)
                    .HasColumnName("COGNOME_RAG_SOCIALE_CONTRAENTE")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DtElabAnia)
                    .HasColumnName("DT_ELAB_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFlussoAgg)
                    .HasColumnName("DT_FLUSSO_AGG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFlussoIns)
                    .HasColumnName("DT_FLUSSO_INS")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiferimentoRichiesta)
                    .HasColumnName("DT_RIFERIMENTO_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaContratto)
                    .HasColumnName("DT_SCADENZA_CONTRATTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEsitoElaborazione)
                    .HasColumnName("FLG_ESITO_ELABORAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPolizzaGratuita)
                    .HasColumnName("FLG_POLIZZA_GRATUITA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCausale)
                    .HasColumnName("FLG_TIPO_CAUSALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCausaleAgg)
                    .HasColumnName("FLG_TIPO_CAUSALE_AGG")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMovimento)
                    .HasColumnName("FLG_TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMovimentoAgg)
                    .HasColumnName("FLG_TIPO_MOVIMENTO_AGG")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoPolizza)
                    .HasColumnName("FLG_TIPO_POLIZZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoTariffa)
                    .HasColumnName("FLG_TIPO_TARIFFA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoVeicolo)
                    .HasColumnName("FLG_TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRichiestaIbd).HasColumnName("ID_RICHIESTA_IBD");

                entity.Property(e => e.ImpFrancNoCorrisposte)
                    .HasColumnName("IMP_FRANC_NO_CORRISPOSTE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NaturaAventeDiritto)
                    .HasColumnName("NATURA_AVENTE_DIRITTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NomeAventeDiritto)
                    .HasColumnName("NOME_AVENTE_DIRITTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NomeContraente)
                    .HasColumnName("NOME_CONTRAENTE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NumFrancNoCorrisposte).HasColumnName("NUM_FRANC_NO_CORRISPOSTE");

                entity.Property(e => e.NumeroPolizza)
                    .HasColumnName("NUMERO_POLIZZA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TimestampAgg)
                    .HasColumnName("TIMESTAMP_AGG")
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TimestampIns)
                    .HasColumnName("TIMESTAMP_INS")
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoAventeDiritto)
                    .HasColumnName("TIPO_AVENTE_DIRITTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaAtrcScartiGiorni>(entity =>
            {
                entity.HasKey(e => e.KeyAniaAtrcScartiGiorni);

                entity.ToTable("ANIA_ATRC_SCARTI_GIORNI", "IAGENCY");

                entity.HasIndex(e => e.IdAniaAtrcDatiGen)
                    .HasName("XX02ANIA_ATRC_SCARTI_GIORNI");

                entity.HasIndex(e => new { e.IdAniaAtrcScartiGiorni, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_ATRC_SCARTI_GIORNI");

                entity.Property(e => e.KeyAniaAtrcScartiGiorni)
                    .HasColumnName("KEY_ANIA_ATRC_SCARTI_GIORNI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodFlusso)
                    .HasColumnName("COD_FLUSSO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaDestinataria)
                    .HasColumnName("COD_IMPRESA_DESTINATARIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("COD_IMPRESA_MITTENTE")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneErrore)
                    .HasColumnName("DESCRIZIONE_ERRORE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaAtrcDatiGen).HasColumnName("ID_ANIA_ATRC_DATI_GEN");

                entity.Property(e => e.IdAniaAtrcScartiGiorni).HasColumnName("ID_ANIA_ATRC_SCARTI_GIORNI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.OraInizioElaborazione)
                    .HasColumnName("ORA_INIZIO_ELABORAZIONE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.PrgRecord).HasColumnName("PRG_RECORD");

                entity.Property(e => e.TipoErrore)
                    .HasColumnName("TIPO_ERRORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoRecordTestata)
                    .HasColumnName("TIPO_RECORD_TESTATA")
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaAtrcSinistrosita>(entity =>
            {
                entity.HasKey(e => e.IdAtrcSinistrosita)
                    .HasName("SYS_C0074890");

                entity.ToTable("ANIA_ATRC_SINISTROSITA", "ISUITE");

                entity.HasIndex(e => e.IdRichiestaAtrc)
                    .HasName("XX02ANIA_ATRC_SINISTROSITA");

                entity.HasIndex(e => e.IdRichiestaIbd)
                    .HasName("XX03ANIA_ATRC_SINISTROSITA");

                entity.Property(e => e.IdAtrcSinistrosita)
                    .HasColumnName("ID_ATRC_SINISTROSITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoRiferimento)
                    .HasColumnName("ANNO_RIFERIMENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaSinistro)
                    .HasColumnName("FLG_TIPOLOGIA_SINISTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdRichiestaAtrc).HasColumnName("ID_RICHIESTA_ATRC");

                entity.Property(e => e.IdRichiestaIbd).HasColumnName("ID_RICHIESTA_IBD");

                entity.Property(e => e.NumeroSinistri)
                    .HasColumnName("NUMERO_SINISTRI")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaAtrcSinparitari>(entity =>
            {
                entity.HasKey(e => e.IdAtrcSinparitario);

                entity.ToTable("ANIA_ATRC_SINPARITARI", "ISUITE");

                entity.HasIndex(e => e.IdRichiestaAtrc)
                    .HasName("XX02ANIA_ATRC_SINPARITARI");

                entity.HasIndex(e => e.IdRichiestaIbd)
                    .HasName("XX03ANIA_ATRC_SINPARITARI");

                entity.Property(e => e.IdAtrcSinparitario)
                    .HasColumnName("ID_ATRC_SINPARITARIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoRiferimento).HasColumnName("ANNO_RIFERIMENTO");

                entity.Property(e => e.FlgBonusMalus)
                    .HasColumnName("FLG_BONUS_MALUS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRichiestaAtrc).HasColumnName("ID_RICHIESTA_ATRC");

                entity.Property(e => e.IdRichiestaIbd).HasColumnName("ID_RICHIESTA_IBD");

                entity.Property(e => e.Percentuale)
                    .HasColumnName("PERCENTUALE")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Progressivo).HasColumnName("PROGRESSIVO");

                entity.Property(e => e.TipologiaDanno)
                    .HasColumnName("TIPOLOGIA_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AniaAtrdEsitiRispTardivi>(entity =>
            {
                entity.HasKey(e => e.KeyAniaAtrdEsitirispTard);

                entity.ToTable("ANIA_ATRD_ESITI_RISP_TARDIVI", "IAGENCY");

                entity.Property(e => e.KeyAniaAtrdEsitirispTard)
                    .HasColumnName("KEY_ANIA_ATRD_ESITIRISP_TARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneErrore)
                    .HasColumnName("DESCRIZIONE_ERRORE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtReteAnia)
                    .HasColumnName("DT_RETE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicezione)
                    .HasColumnName("DT_RICEZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgControlloMovimenti)
                    .HasColumnName("FLG_CONTROLLO_MOVIMENTI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaAtrdEsitirispTard).HasColumnName("ID_ANIA_ATRD_ESITIRISP_TARD");

                entity.Property(e => e.IdAniaAtrdRispTardivi).HasColumnName("ID_ANIA_ATRD_RISP_TARDIVI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentSinistroAnia)
                    .HasColumnName("IDENT_SINISTRO_ANIA")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TimestampRicezioneAnia)
                    .HasColumnName("TIMESTAMP_RICEZIONE_ANIA")
                    .HasMaxLength(26)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaAtrdEsitiTardivi>(entity =>
            {
                entity.HasKey(e => e.KeyAniaAtrdEsitiTardivi);

                entity.ToTable("ANIA_ATRD_ESITI_TARDIVI", "IAGENCY");

                entity.Property(e => e.KeyAniaAtrdEsitiTardivi)
                    .HasColumnName("KEY_ANIA_ATRD_ESITI_TARDIVI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneErrore)
                    .HasColumnName("DESCRIZIONE_ERRORE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtReteAnia)
                    .HasColumnName("DT_RETE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicezione)
                    .HasColumnName("DT_RICEZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgControlloMovimenti)
                    .HasColumnName("FLG_CONTROLLO_MOVIMENTI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaAtrdEsitiTardivi).HasColumnName("ID_ANIA_ATRD_ESITI_TARDIVI");

                entity.Property(e => e.IdAniaAtrdInvioTardivi).HasColumnName("ID_ANIA_ATRD_INVIO_TARDIVI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentSinistroAnia)
                    .HasColumnName("IDENT_SINISTRO_ANIA")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TimestampRicezioneAnia)
                    .HasColumnName("TIMESTAMP_RICEZIONE_ANIA")
                    .HasMaxLength(26)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaAtrdInvioTardivi>(entity =>
            {
                entity.HasKey(e => e.KeyAniaAtrdInvioTardivi);

                entity.ToTable("ANIA_ATRD_INVIO_TARDIVI", "IAGENCY");

                entity.Property(e => e.KeyAniaAtrdInvioTardivi)
                    .HasColumnName("KEY_ANIA_ATRD_INVIO_TARDIVI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CausaleMovimento)
                    .HasColumnName("CAUSALE_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodIur)
                    .HasColumnName("COD_IUR")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DtAggiornamentoSinistro)
                    .HasColumnName("DT_AGGIORNAMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAvvenimentoSinistro)
                    .HasColumnName("DT_AVVENIMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDenunciaSinistro)
                    .HasColumnName("DT_DENUNCIA_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamentoSinistro)
                    .HasColumnName("DT_PAGAMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaContratto)
                    .HasColumnName("DT_SCADENZA_CONTRATTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormaTariffaria)
                    .HasColumnName("FORMA_TARIFFARIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FormatoIdentVeicolo)
                    .HasColumnName("FORMATO_IDENT_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaAtrdInvioTardivi).HasColumnName("ID_ANIA_ATRD_INVIO_TARDIVI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentFiscaleAventeDiritto)
                    .HasColumnName("IDENT_FISCALE_AVENTE_DIRITTO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentFiscaleContraente)
                    .HasColumnName("IDENT_FISCALE_CONTRAENTE")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentSinistroAnia)
                    .HasColumnName("IDENT_SINISTRO_ANIA")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicolo)
                    .HasColumnName("IDENT_VEICOLO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PctResponsabilita).HasColumnName("PCT_RESPONSABILITA");

                entity.Property(e => e.RiferimentoRichiedente)
                    .HasColumnName("RIFERIMENTO_RICHIEDENTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RiferimentoRichiesta)
                    .HasColumnName("RIFERIMENTO_RICHIESTA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Testata)
                    .HasColumnName("TESTATA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoMovimento)
                    .HasColumnName("TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoRecord)
                    .HasColumnName("TIPO_RECORD")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipologiaAventeDiritto)
                    .HasColumnName("TIPOLOGIA_AVENTE_DIRITTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipologiaSinistro)
                    .HasColumnName("TIPOLOGIA_SINISTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaAtrdNotifTardivi>(entity =>
            {
                entity.HasKey(e => e.KeyAniaAtrdNotifTardivi);

                entity.ToTable("ANIA_ATRD_NOTIF_TARDIVI", "IAGENCY");

                entity.HasIndex(e => e.CodIur)
                    .HasName("XX02ANIA_ATRD_NOTIF_TARDIVI");

                entity.HasIndex(e => e.IdentVeicolo)
                    .HasName("XX03ANIA_ATRD_NOTIF_TARDIVI");

                entity.HasIndex(e => new { e.IdAniaAtrdNotifTardivi, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_ATRD_NOTIF_TARDIVI");

                entity.Property(e => e.KeyAniaAtrdNotifTardivi)
                    .HasColumnName("KEY_ANIA_ATRD_NOTIF_TARDIVI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CausaleMovimento)
                    .HasColumnName("CAUSALE_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaDestinataria)
                    .HasColumnName("COD_IMPRESA_DESTINATARIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodIur)
                    .HasColumnName("COD_IUR")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DtAggiornamentoSinistro)
                    .HasColumnName("DT_AGGIORNAMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAvvenimentoSinistro)
                    .HasColumnName("DT_AVVENIMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDenunciaSinistro)
                    .HasColumnName("DT_DENUNCIA_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamentoSinistro)
                    .HasColumnName("DT_PAGAMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicezione)
                    .HasColumnName("DT_RICEZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaContratto)
                    .HasColumnName("DT_SCADENZA_CONTRATTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtVerificaCoperturaWise)
                    .HasColumnName("DT_VERIFICA_COPERTURA_WISE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCopertoWiseSino)
                    .HasColumnName("FLG_COPERTO_WISE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormaTariffaria)
                    .HasColumnName("FORMA_TARIFFARIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FormatoIdentVeicolo)
                    .HasColumnName("FORMATO_IDENT_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaAtrdNotifTardivi).HasColumnName("ID_ANIA_ATRD_NOTIF_TARDIVI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentFiscaleAventeDiritto)
                    .HasColumnName("IDENT_FISCALE_AVENTE_DIRITTO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentFiscaleContr)
                    .HasColumnName("IDENT_FISCALE_CONTR")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentSinistroAnia)
                    .HasColumnName("IDENT_SINISTRO_ANIA")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicolo)
                    .HasColumnName("IDENT_VEICOLO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PctResponsabilita).HasColumnName("PCT_RESPONSABILITA");

                entity.Property(e => e.PctResponsabilitaPrecedente).HasColumnName("PCT_RESPONSABILITA_PRECEDENTE");

                entity.Property(e => e.ProtocolloSita)
                    .HasColumnName("PROTOCOLLO_SITA")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.Testata)
                    .HasColumnName("TESTATA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoMovimento)
                    .HasColumnName("TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoRecord)
                    .HasColumnName("TIPO_RECORD")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipologiaAventeDiritto)
                    .HasColumnName("TIPOLOGIA_AVENTE_DIRITTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipologiaSinistro)
                    .HasColumnName("TIPOLOGIA_SINISTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TipologiaSinistroPrecedente)
                    .HasColumnName("TIPOLOGIA_SINISTRO_PRECEDENTE")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaAtrdRispTardivi>(entity =>
            {
                entity.HasKey(e => e.KeyAniaAtrdRispTardivi);

                entity.ToTable("ANIA_ATRD_RISP_TARDIVI", "IAGENCY");

                entity.Property(e => e.KeyAniaAtrdRispTardivi)
                    .HasColumnName("KEY_ANIA_ATRD_RISP_TARDIVI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CausaleMovimento)
                    .HasColumnName("CAUSALE_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodIur)
                    .HasColumnName("COD_IUR")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DtAggiornamentoSinistro)
                    .HasColumnName("DT_AGGIORNAMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAvvenimentoSinistro)
                    .HasColumnName("DT_AVVENIMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDenunciaSinistro)
                    .HasColumnName("DT_DENUNCIA_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamentoSinistro)
                    .HasColumnName("DT_PAGAMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaContratto)
                    .HasColumnName("DT_SCADENZA_CONTRATTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormaTariffaria)
                    .HasColumnName("FORMA_TARIFFARIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FormatoIdentVeicolo)
                    .HasColumnName("FORMATO_IDENT_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaAtrdRispTardivi).HasColumnName("ID_ANIA_ATRD_RISP_TARDIVI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentFiscaleAventeDiritto)
                    .HasColumnName("IDENT_FISCALE_AVENTE_DIRITTO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentFiscaleContraente)
                    .HasColumnName("IDENT_FISCALE_CONTRAENTE")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentSinistroAnia)
                    .HasColumnName("IDENT_SINISTRO_ANIA")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicolo)
                    .HasColumnName("IDENT_VEICOLO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PctResponsabilita).HasColumnName("PCT_RESPONSABILITA");

                entity.Property(e => e.RiferimentoRichiedente)
                    .HasColumnName("RIFERIMENTO_RICHIEDENTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RiferimentoRichiesta)
                    .HasColumnName("RIFERIMENTO_RICHIESTA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Testata)
                    .HasColumnName("TESTATA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.TipoMovimento)
                    .HasColumnName("TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoRecord)
                    .HasColumnName("TIPO_RECORD")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipologiaAventeDiritto)
                    .HasColumnName("TIPOLOGIA_AVENTE_DIRITTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipologiaSinistro)
                    .HasColumnName("TIPOLOGIA_SINISTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaCciInput>(entity =>
            {
                entity.HasKey(e => e.IdAniaCciInput)
                    .HasName("PK__ANIA_CCI__4AFB2C5003E08FD5");

                entity.ToTable("ANIA_CCI_INPUT", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaCciInput)
                    .HasName("PK_ANIA_CCI_INPUT")
                    .IsUnique();

                entity.Property(e => e.IdAniaCciInput)
                    .HasColumnName("ID_ANIA_CCI_INPUT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtRicezione)
                    .HasColumnName("DT_RICEZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRcaInf)
                    .HasColumnName("FLG_RCA_INF")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NomeFile)
                    .HasColumnName("NOME_FILE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Progressivo)
                    .HasColumnName("PROGRESSIVO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<AniaCciInputDett>(entity =>
            {
                entity.HasKey(e => e.IdAniaCciInputDett)
                    .HasName("PK__ANIA_CCI__CD3125CE08019AE8");

                entity.ToTable("ANIA_CCI_INPUT_DETT", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaCciInputDett)
                    .HasName("PK_ANIA_CCI_INPUT_DETT")
                    .IsUnique();

                entity.Property(e => e.IdAniaCciInputDett)
                    .HasColumnName("ID_ANIA_CCI_INPUT_DETT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgCorrettoSino)
                    .HasColumnName("FLG_CORRETTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicomunicatoSino)
                    .HasColumnName("FLG_RICOMUNICATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaCciInput)
                    .HasColumnName("ID_ANIA_CCI_INPUT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdentificativoAnomalia)
                    .HasColumnName("IDENTIFICATIVO_ANOMALIA")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IdentificativoPartDanno)
                    .HasColumnName("IDENTIFICATIVO_PART_DANNO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdentificativoSinistro)
                    .HasColumnName("IDENTIFICATIVO_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.RecordRicevuto)
                    .HasColumnName("RECORD_RICEVUTO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaCciOutput>(entity =>
            {
                entity.HasKey(e => e.IdAniaCciOutput)
                    .HasName("PK__ANIA_CCI__A824204F84EAB6AE");

                entity.ToTable("ANIA_CCI_OUTPUT", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaCciOutput)
                    .HasName("PK_ANIA_CCI_OUTPUT")
                    .IsUnique();

                entity.Property(e => e.IdAniaCciOutput)
                    .HasColumnName("ID_ANIA_CCI_OUTPUT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEstrazioneAl)
                    .HasColumnName("DT_ESTRAZIONE_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEvento)
                    .HasColumnName("DT_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamentoA)
                    .HasColumnName("DT_PAGAMENTO_A")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamentoDa)
                    .HasColumnName("DT_PAGAMENTO_DA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgProvvisorioSino)
                    .HasColumnName("FLG_PROVVISORIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRcaInf)
                    .HasColumnName("FLG_RCA_INF")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NomeFile)
                    .HasColumnName("NOME_FILE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Progressivo)
                    .HasColumnName("PROGRESSIVO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<AniaCciOutputDett>(entity =>
            {
                entity.HasKey(e => e.IdAniaCciOutputDett)
                    .HasName("PK__ANIA_CCI__B4057D1AB65C437B");

                entity.ToTable("ANIA_CCI_OUTPUT_DETT", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaCciOutputDett)
                    .HasName("PK_ANIA_CCI_OUTPUT_DETT")
                    .IsUnique();

                entity.Property(e => e.IdAniaCciOutputDett)
                    .HasColumnName("ID_ANIA_CCI_OUTPUT_DETT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgTipoComunicazione)
                    .HasColumnName("FLG_TIPO_COMUNICAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaCciOutput)
                    .HasColumnName("ID_ANIA_CCI_OUTPUT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdentificativoPartDanno)
                    .HasColumnName("IDENTIFICATIVO_PART_DANNO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdentificativoSinistro)
                    .HasColumnName("IDENTIFICATIVO_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.RecordInviato)
                    .HasColumnName("RECORD_INVIATO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaErroriCard>(entity =>
            {
                entity.HasKey(e => e.IdAniaErroriCard)
                    .HasName("SYS_C0016069");

                entity.ToTable("ANIA_ERRORI_CARD", "ICLAIMS");

                entity.HasIndex(e => new { e.FlgTipoRecord, e.CodiceErrore })
                    .HasName("ANIA_ERRORI_CARD_K01")
                    .IsUnique();

                entity.Property(e => e.IdAniaErroriCard)
                    .HasColumnName("ID_ANIA_ERRORI_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceErrore)
                    .HasColumnName("CODICE_ERRORE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DescErrore)
                    .HasColumnName("DESC_ERRORE")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.FlgBloccanteWarning)
                    .HasColumnName("FLG_BLOCCANTE_WARNING")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRecord)
                    .HasColumnName("FLG_TIPO_RECORD")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AniaErroriRischiBda>(entity =>
            {
                entity.HasKey(e => e.KeyErroriRischiBda)
                    .HasName("PK_ERRORI_RISCHI_BDA");

                entity.ToTable("ANIA_ERRORI_RISCHI_BDA", "IAGENCY");

                entity.HasIndex(e => e.DtRicezione)
                    .HasName("XX01ANIA_ERRORI_RISCHI_BDA");

                entity.Property(e => e.KeyErroriRischiBda)
                    .HasColumnName("KEY_ERRORI_RISCHI_BDA")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anno).HasColumnName("ANNO");

                entity.Property(e => e.CapResSoggTariffato)
                    .HasColumnName("CAP_RES_SOGG_TARIFFATO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CodClasse)
                    .HasColumnName("COD_CLASSE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodClausolaCarrConv)
                    .HasColumnName("COD_CLAUSOLA_CARR_CONV")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodEstensione)
                    .HasColumnName("COD_ESTENSIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodFurto)
                    .HasColumnName("COD_FURTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodIncendio)
                    .HasColumnName("COD_INCENDIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodKasko)
                    .HasColumnName("COD_KASKO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodLimitazione)
                    .HasColumnName("COD_LIMITAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodRateazione)
                    .HasColumnName("COD_RATEAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodScatolaNera)
                    .HasColumnName("COD_SCATOLA_NERA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodSettore)
                    .HasColumnName("COD_SETTORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodTipoGuida)
                    .HasColumnName("COD_TIPO_GUIDA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodTipoPolizza)
                    .HasColumnName("COD_TIPO_POLIZZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodUso)
                    .HasColumnName("COD_USO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DtInizioCopertura)
                    .HasColumnName("DT_INIZIO_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtNascitaSoggTariffato)
                    .HasColumnName("DT_NASCITA_SOGG_TARIFFATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicezione)
                    .HasColumnName("DT_RICEZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaCopertura)
                    .HasColumnName("DT_SCADENZA_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Errori)
                    .HasColumnName("ERRORI")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgScarto)
                    .HasColumnName("FLG_SCARTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgWarning)
                    .HasColumnName("FLG_WARNING")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdErroriRischiBda).HasColumnName("ID_ERRORI_RISCHI_BDA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentificativoRischio)
                    .HasColumnName("IDENTIFICATIVO_RISCHIO")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.ImpFranchigia).HasColumnName("IMP_FRANCHIGIA");

                entity.Property(e => e.ImpMaxCose).HasColumnName("IMP_MAX_COSE");

                entity.Property(e => e.ImpMaxPersone).HasColumnName("IMP_MAX_PERSONE");

                entity.Property(e => e.ProvResSoggTariffato)
                    .HasColumnName("PROV_RES_SOGG_TARIFFATO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.SessoSoggTariffato)
                    .HasColumnName("SESSO_SOGG_TARIFFATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Targa)
                    .HasColumnName("TARGA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TipoTarga)
                    .HasColumnName("TIPO_TARGA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoTariffa)
                    .HasColumnName("TIPO_TARIFFA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ValoreVeicolo).HasColumnName("VALORE_VEICOLO");
            });

            modelBuilder.Entity<AniaEstensioniAmmesse>(entity =>
            {
                entity.HasKey(e => e.IdAniaEstensioneAmmessa);

                entity.ToTable("ANIA_ESTENSIONI_AMMESSE", "ICLAIMS");

                entity.HasIndex(e => e.FlgTipoFileCard)
                    .HasName("XX01ANIA_ESTENSIONI_AMMESSE");

                entity.Property(e => e.IdAniaEstensioneAmmessa)
                    .HasColumnName("ID_ANIA_ESTENSIONE_AMMESSA")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgEstensione)
                    .HasColumnName("FLG_ESTENSIONE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoFileCard)
                    .HasColumnName("FLG_TIPO_FILE_CARD")
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaFlussiCard>(entity =>
            {
                entity.HasKey(e => e.IdFlussoCard)
                    .HasName("SYS_C0016078");

                entity.ToTable("ANIA_FLUSSI_CARD", "ICLAIMS");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02ANIA_FLUSSI_CARD");

                entity.HasIndex(e => e.TargaInv)
                    .HasName("XX03ANIA_FLUSSI_CARD");

                entity.HasIndex(e => e.TargaRic)
                    .HasName("XX08ANIA_FLUSSI_CARD");

                entity.HasIndex(e => new { e.CodAniaCompInv, e.TargaInv })
                    .HasName("XX06ANIA_FLUSSI_CARD");

                entity.HasIndex(e => new { e.CodAniaCompRic, e.TargaRic })
                    .HasName("XX07ANIA_FLUSSI_CARD");

                entity.HasIndex(e => new { e.DtFlussoInv, e.FlgTipoRecord })
                    .HasName("XX04ANIA_FLUSSI_CARD");

                entity.HasIndex(e => new { e.DtFlussoRic, e.FlgTipoRecord })
                    .HasName("XX05ANIA_FLUSSI_CARD");

                entity.Property(e => e.IdFlussoCard)
                    .HasColumnName("ID_FLUSSO_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodAniaCompInv)
                    .IsRequired()
                    .HasColumnName("COD_ANIA_COMP_INV")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodAniaCompRic)
                    .IsRequired()
                    .HasColumnName("COD_ANIA_COMP_RIC")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DtAbbinamento)
                    .HasColumnName("DT_ABBINAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAvvenimento)
                    .HasColumnName("DT_AVVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFlussoInv)
                    .HasColumnName("DT_FLUSSO_INV")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFlussoRic)
                    .HasColumnName("DT_FLUSSO_RIC")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCausaleStatoSospeso)
                    .HasColumnName("FLG_CAUSALE_STATO_SOSPESO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgErroreSino)
                    .HasColumnName("FLG_ERRORE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgIgnoraForfaitSino)
                    .HasColumnName("FLG_IGNORA_FORFAIT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgNomeFlusso)
                    .HasColumnName("FLG_NOME_FLUSSO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRecord)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_RECORD")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitaCoinvolta).HasColumnName("ID_ENTITA_COINVOLTA");

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSpesa).HasColumnName("ID_SPESA");

                entity.Property(e => e.NomeFlusso)
                    .HasColumnName("NOME_FLUSSO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RecordInv)
                    .HasColumnName("RECORD_INV")
                    .IsUnicode(false);

                entity.Property(e => e.RecordRic)
                    .HasColumnName("RECORD_RIC")
                    .IsUnicode(false);

                entity.Property(e => e.TargaInv)
                    .IsRequired()
                    .HasColumnName("TARGA_INV")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TargaRic)
                    .IsRequired()
                    .HasColumnName("TARGA_RIC")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaIbdRichieste>(entity =>
            {
                entity.HasKey(e => e.IdRichiestaIbd)
                    .HasName("SYS_C0074963");

                entity.ToTable("ANIA_IBD_RICHIESTE", "ISUITE");

                entity.HasIndex(e => e.DtRichiesta)
                    .HasName("XX02ANIA_IBD_RICHIESTE");

                entity.HasIndex(e => new { e.IdOggetto, e.FlgTipoOggetto })
                    .HasName("XX03ANIA_IBD_RICHIESTE");

                entity.Property(e => e.IdRichiestaIbd)
                    .HasColumnName("ID_RICHIESTA_IBD")
                    .ValueGeneratedNever();

                entity.Property(e => e.Canale)
                    .HasColumnName("CANALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodImpMand)
                    .HasColumnName("COD_IMP_MAND")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodUser)
                    .HasColumnName("COD_USER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtRichiesta)
                    .HasColumnName("DT_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRichiesta)
                    .HasColumnName("FLG_TIPO_RICHIESTA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoTarga)
                    .HasColumnName("FLG_TIPO_TARGA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.Password)
                    .HasColumnName("PASSWORD")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RifRichiedente)
                    .HasColumnName("RIF_RICHIEDENTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RifRichiesta)
                    .HasColumnName("RIF_RICHIESTA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TargaAnia)
                    .HasColumnName("TARGA_ANIA")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaIncAntifrodeDett>(entity =>
            {
                entity.HasKey(e => e.IdAniaIncAntifrodeDett);

                entity.ToTable("ANIA_INC_ANTIFRODE_DETT", "ICLAIMS");

                entity.HasComment("Tabella relativa al flusso degli incentivi antifrode di ania");

                entity.HasIndex(e => e.IdAniaPartitaCard)
                    .HasName("XX04_ANIA_INC_ANTIFRODE_DETT");

                entity.HasIndex(e => e.IdAniaSinistroCard)
                    .HasName("XX03_ANIA_INC_ANTIFRODE_DETT");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02_ANIA_INC_ANTIFRODE_DETT");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01_ANIA_INC_ANTIFRODE_DETT");

                entity.HasIndex(e => new { e.DtAccadimentoSinistro, e.CodImpresaRicorrente, e.CodImpresaControint, e.IdentVeicRicorrente, e.IdentVeicControint })
                    .HasName("XX05_ANIA_INC_ANTIFRODE_DETT");

                entity.Property(e => e.IdAniaIncAntifrodeDett)
                    .HasColumnName("ID_ANIA_INC_ANTIFRODE_DETT")
                    .ValueGeneratedNever();

                entity.Property(e => e.CausaleMovimento)
                    .HasColumnName("CAUSALE_MOVIMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Classificazione)
                    .HasColumnName("CLASSIFICAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodFiscalePartitaGest)
                    .HasColumnName("COD_FISCALE_PARTITA_GEST")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaControint)
                    .HasColumnName("COD_IMPRESA_CONTROINT")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaControintAss)
                    .HasColumnName("COD_IMPRESA_CONTROINT_ASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaRicorrente)
                    .HasColumnName("COD_IMPRESA_RICORRENTE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaRicorrenteAss)
                    .HasColumnName("COD_IMPRESA_RICORRENTE_ASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DtAccadimentoSinistro)
                    .HasColumnName("DT_ACCADIMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtChiusuraPratica)
                    .HasColumnName("DT_CHIUSURA_PRATICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCreazionePratica)
                    .HasColumnName("DT_CREAZIONE_PRATICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtTestata)
                    .HasColumnName("DT_TESTATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FormatoIdentVeicControint)
                    .HasColumnName("FORMATO_IDENT_VEIC_CONTROINT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormatoIdentVeicRicorrente)
                    .HasColumnName("FORMATO_IDENT_VEIC_RICORRENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaPartitaCard).HasColumnName("ID_ANIA_PARTITA_CARD");

                entity.Property(e => e.IdAniaSinistroCard).HasColumnName("ID_ANIA_SINISTRO_CARD");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFlussoCard).HasColumnName("ID_FLUSSO_CARD");

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");

                entity.Property(e => e.IdRecupero).HasColumnName("ID_RECUPERO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSospesoCard).HasColumnName("ID_SOSPESO_CARD");

                entity.Property(e => e.IdentPartitaGestionaria)
                    .HasColumnName("IDENT_PARTITA_GESTIONARIA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicControint)
                    .HasColumnName("IDENT_VEIC_CONTROINT")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicRicorrente)
                    .HasColumnName("IDENT_VEIC_RICORRENTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdentificativoStanza)
                    .HasColumnName("IDENTIFICATIVO_STANZA")
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.ImpIncentivo)
                    .HasColumnName("IMP_INCENTIVO")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.NominativoPartitaGest)
                    .HasColumnName("NOMINATIVO_PARTITA_GEST")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ProtocolloPratica)
                    .HasColumnName("PROTOCOLLO_PRATICA")
                    .HasMaxLength(14)
                    .IsUnicode(false);

                entity.Property(e => e.RiferimentoAnia)
                    .HasColumnName("RIFERIMENTO_ANIA")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RuoloImpresa)
                    .HasColumnName("RUOLO_IMPRESA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.StatoPratica)
                    .HasColumnName("STATO_PRATICA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TipoMovimento)
                    .HasColumnName("TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoRecord)
                    .HasColumnName("TIPO_RECORD")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicControint)
                    .HasColumnName("TIPO_VEIC_CONTROINT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoVeicRicorrente)
                    .HasColumnName("TIPO_VEIC_RICORRENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipologiaFunzione)
                    .HasColumnName("TIPOLOGIA_FUNZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaInterrogazioniSita>(entity =>
            {
                entity.HasKey(e => e.IdInterrogazioneSita);

                entity.ToTable("ANIA_INTERROGAZIONI_SITA", "ICLAIMS");

                entity.HasIndex(e => e.IdVeicolo)
                    .HasName("XX02ANIA_INTERROGAZIONI_SITA");

                entity.Property(e => e.IdInterrogazioneSita)
                    .HasColumnName("ID_INTERROGAZIONE_SITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.CoperturaSitaSino)
                    .HasColumnName("COPERTURA_SITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DataInterrogazione)
                    .HasColumnName("DATA_INTERROGAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.EsitoSita)
                    .HasColumnName("ESITO_SITA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdVeicolo).HasColumnName("ID_VEICOLO");

                entity.Property(e => e.RecordRicevutoParte1)
                    .HasColumnName("RECORD_RICEVUTO_PARTE_1")
                    .IsUnicode(false);

                entity.Property(e => e.RecordRicevutoParte2)
                    .HasColumnName("RECORD_RICEVUTO_PARTE_2")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaIvdirOffline>(entity =>
            {
                entity.HasKey(e => e.KeyAniaIvdirOffline);

                entity.ToTable("ANIA_IVDIR_OFFLINE", "IAGENCY");

                entity.HasIndex(e => e.IdAniaIvdirOffline)
                    .HasName("XAK1_ANIA_IVDIR_OFFLINE");

                entity.HasIndex(e => new { e.DtRicezione, e.FlgStato })
                    .HasName("XAK2_ANIA_IVDIR_OFFLINE");

                entity.Property(e => e.KeyAniaIvdirOffline)
                    .HasColumnName("KEY_ANIA_IVDIR_OFFLINE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DataAvvenimento)
                    .HasColumnName("DATA_AVVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataMaxRisposta)
                    .HasColumnName("DATA_MAX_RISPOSTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataUltimaRisposta)
                    .HasColumnName("DATA_ULTIMA_RISPOSTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicezione)
                    .HasColumnName("DT_RICEZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAssicuratoSino)
                    .HasColumnName("FLG_ASSICURATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRispostaOffline)
                    .HasColumnName("FLG_RISPOSTA_OFFLINE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStato)
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlussoRicevuto)
                    .HasColumnName("FLUSSO_RICEVUTO")
                    .HasMaxLength(650)
                    .IsUnicode(false);

                entity.Property(e => e.FormatoIdentVeic)
                    .HasColumnName("FORMATO_IDENT_VEIC")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaIvdirOffline).HasColumnName("ID_ANIA_IVDIR_OFFLINE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentificativoVeicolo)
                    .HasColumnName("IDENTIFICATIVO_VEICOLO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ProtocolloAnia)
                    .HasColumnName("PROTOCOLLO_ANIA")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaIvdirRispOffline>(entity =>
            {
                entity.HasKey(e => e.KeyAniaIvdirRispOffline);

                entity.ToTable("ANIA_IVDIR_RISP_OFFLINE", "IAGENCY");

                entity.HasIndex(e => e.IdAniaIvdirRispOffline)
                    .HasName("XAK1_ANIA_IVDIR_RISP_OFFLINE");

                entity.HasIndex(e => new { e.DtInvio, e.FlgRispostaOffline })
                    .HasName("XAK2_ANIA_IVDIR_RISP_OFFLINE");

                entity.Property(e => e.KeyAniaIvdirRispOffline)
                    .HasColumnName("KEY_ANIA_IVDIR_RISP_OFFLINE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRispostaOffline)
                    .HasColumnName("FLG_RISPOSTA_OFFLINE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlussoInviato)
                    .HasColumnName("FLUSSO_INVIATO")
                    .HasMaxLength(650)
                    .IsUnicode(false);

                entity.Property(e => e.FlussoRicevuto)
                    .HasColumnName("FLUSSO_RICEVUTO")
                    .HasMaxLength(650)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaIvdirOffline).HasColumnName("ID_ANIA_IVDIR_OFFLINE");

                entity.Property(e => e.IdAniaIvdirRispOffline).HasColumnName("ID_ANIA_IVDIR_RISP_OFFLINE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.TipoErrore)
                    .HasColumnName("TIPO_ERRORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaModelliCid07>(entity =>
            {
                entity.HasKey(e => e.IdModello)
                    .HasName("SYS_C0040432");

                entity.ToTable("ANIA_MODELLI_CID07", "ICLAIMS");

                entity.HasIndex(e => e.DtInvio)
                    .HasName("K02_ANIA_MODELLI_CID07");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("K01_ANIA_MODELLI_CID07");

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaModelliCid07Esiti>(entity =>
            {
                entity.HasKey(e => e.IdEsito)
                    .HasName("SYS_C0040830");

                entity.ToTable("ANIA_MODELLI_CID07_ESITI", "ICLAIMS");

                entity.HasIndex(e => e.IdModello)
                    .HasName("K01_ANIA_MODELLI_CID07_ESITI");

                entity.Property(e => e.IdEsito)
                    .HasColumnName("ID_ESITO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .IsUnicode(false);

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgErroreSino)
                    .HasColumnName("FLG_ERRORE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdModello).HasColumnName("ID_MODELLO");
            });

            modelBuilder.Entity<AniaPartitaCard>(entity =>
            {
                entity.HasKey(e => e.KeyAniaPartitaCard);

                entity.ToTable("ANIA_PARTITA_CARD", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaPartitaCard)
                    .HasName("XX01ANIA_PARTITA_CARD");

                entity.HasIndex(e => new { e.DtPrimaPredisposizione, e.DtStoScadenzaLog })
                    .HasName("XX04ANIA_PARTITA_CARD");

                entity.HasIndex(e => new { e.DtPrimoInvio, e.DtStoScadenzaLog })
                    .HasName("XX05ANIA_PARTITA_CARD");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX02ANIA_PARTITA_CARD");

                entity.HasIndex(e => new { e.IdAnagrafica, e.DtStoScadenzaLog })
                    .HasName("XX06ANIA_PARTITA_CARD");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.DtStoScadenzaLog })
                    .HasName("XX03ANIA_PARTITA_CARD");

                entity.Property(e => e.KeyAniaPartitaCard)
                    .HasColumnName("KEY_ANIA_PARTITA_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceFiscalePartita)
                    .HasColumnName("CODICE_FISCALE_PARTITA")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagioneSociale)
                    .HasColumnName("COGNOME_RAGIONE_SOCIALE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DtPrimaPredisposizione)
                    .HasColumnName("DT_PRIMA_PREDISPOSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimoInvio)
                    .HasColumnName("DT_PRIMO_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimoOk)
                    .HasColumnName("DT_PRIMO_OK")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimaPredisposizione)
                    .HasColumnName("DT_ULTIMA_PREDISPOSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoInvio)
                    .HasColumnName("DT_ULTIMO_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoOk)
                    .HasColumnName("DT_ULTIMO_OK")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgGestionarioDebitore)
                    .HasColumnName("FLG_GESTIONARIO_DEBITORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgUltimoFlussoAccettSino)
                    .HasColumnName("FLG_ULTIMO_FLUSSO_ACCETT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdAniaPartitaCard).HasColumnName("ID_ANIA_PARTITA_CARD");

                entity.Property(e => e.IdAniaPartitaCardDett).HasColumnName("ID_ANIA_PARTITA_CARD_DETT");

                entity.Property(e => e.IdAniaSinistroCard).HasColumnName("ID_ANIA_SINISTRO_CARD");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentificativoPartita)
                    .HasColumnName("IDENTIFICATIVO_PARTITA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ImpIndennizziAntifrode)
                    .HasColumnName("IMP_INDENNIZZI_ANTIFRODE")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.ImportoRecuperiAntifrode)
                    .HasColumnName("IMPORTO_RECUPERI_ANTIFRODE")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.RuoloPartita)
                    .HasColumnName("RUOLO_PARTITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaPartitaCardDett>(entity =>
            {
                entity.HasKey(e => e.IdAniaPartitaCardDett);

                entity.ToTable("ANIA_PARTITA_CARD_DETT", "ICLAIMS");

                entity.HasIndex(e => e.DtElaborazioneAnia)
                    .HasName("XX05ANIA_PARTITA_CARD_DETT");

                entity.HasIndex(e => e.DtInvio)
                    .HasName("XX04ANIA_PARTITA_CARD_DETT");

                entity.HasIndex(e => e.IdAniaPartitaCard)
                    .HasName("XX02ANIA_PARTITA_CARD_DETT");

                entity.HasIndex(e => e.IdAniaPartitaCardDett)
                    .HasName("XX01ANIA_PARTITA_CARD_DETT");

                entity.HasIndex(e => e.IdFlussoCard)
                    .HasName("XX03ANIA_PARTITA_CARD_DETT");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgGestionarioDebitore })
                    .HasName("XX06ANIA_PARTITA_CARD_DETT");

                entity.Property(e => e.IdAniaPartitaCardDett)
                    .HasColumnName("ID_ANIA_PARTITA_CARD_DETT")
                    .ValueGeneratedNever();

                entity.Property(e => e.ADisposizioneGestionaria)
                    .HasColumnName("A_DISPOSIZIONE_GESTIONARIA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceFiscalePartita)
                    .HasColumnName("CODICE_FISCALE_PARTITA")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("DT_ELABORAZIONE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgGestionarioDebitore)
                    .HasColumnName("FLG_GESTIONARIO_DEBITORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScartatoSino)
                    .HasColumnName("FLG_SCARTATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaPartitaCard).HasColumnName("ID_ANIA_PARTITA_CARD");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFlussoCard).HasColumnName("ID_FLUSSO_CARD");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSospesoCard).HasColumnName("ID_SOSPESO_CARD");

                entity.Property(e => e.IdentificativoPartita)
                    .HasColumnName("IDENTIFICATIVO_PARTITA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NominativoPartita)
                    .HasColumnName("NOMINATIVO_PARTITA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PrgMovimentoAnia).HasColumnName("PRG_MOVIMENTO_ANIA");

                entity.Property(e => e.RuoloPartita)
                    .HasColumnName("RUOLO_PARTITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaRaccRivalseCtt>(entity =>
            {
                entity.HasKey(e => e.IdAniaRaccRivalsaCtt);

                entity.ToTable("ANIA_RACC_RIVALSE_CTT", "ICLAIMS");

                entity.HasIndex(e => new { e.IdAniaRivalsaCtt, e.IdIndennizzo })
                    .HasName("XX02ANIA_RACC_RIVALSE_CTT");

                entity.HasIndex(e => new { e.IdAniaRivalsaCtt, e.IdRecupero })
                    .HasName("XX01ANIA_RACC_RIVALSE_CTT");

                entity.Property(e => e.IdAniaRaccRivalsaCtt)
                    .HasColumnName("ID_ANIA_RACC_RIVALSA_CTT")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdAniaRivalsaCtt).HasColumnName("ID_ANIA_RIVALSA_CTT");

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");

                entity.Property(e => e.IdRecupero).HasColumnName("ID_RECUPERO");
            });

            modelBuilder.Entity<AniaRaccordiErroriFunzioni>(entity =>
            {
                entity.HasKey(e => e.IdAniaRaccErroriFunzioni);

                entity.ToTable("ANIA_RACCORDI_ERRORI_FUNZIONI", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaErroriCard)
                    .HasName("XX02ANIA_RACCORDI_ERRORI_FUNZIONI");

                entity.HasIndex(e => new { e.IdAniaSca, e.FlgTipoFlusso })
                    .HasName("XX01ANIA_RACCORDI_ERRORI_FUNZIONI");

                entity.Property(e => e.IdAniaRaccErroriFunzioni)
                    .HasColumnName("ID_ANIA_RACC_ERRORI_FUNZIONI")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoFlusso)
                    .HasColumnName("FLG_TIPO_FLUSSO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaErroriCard).HasColumnName("ID_ANIA_ERRORI_CARD");

                entity.Property(e => e.IdAniaSca).HasColumnName("ID_ANIA_SCA");
            });

            modelBuilder.Entity<AniaRaccordoDocEstensioni>(entity =>
            {
                entity.HasKey(e => e.IdAniaRaccDocEstensioni)
                    .HasName("PK_ID_ANIA_RACCORDO_DOC_ESTENSIONI");

                entity.ToTable("ANIA_RACCORDO_DOC_ESTENSIONI", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaEstensioneAmmessa)
                    .HasName("XX02ANIA_RACCORDO_DOC_ESTENSIONI");

                entity.HasIndex(e => e.IdAniaTipoDocumentazione)
                    .HasName("XX01ANIA_RACCORDO_DOC_ESTENSIONI");

                entity.Property(e => e.IdAniaRaccDocEstensioni)
                    .HasColumnName("ID_ANIA_RACC_DOC_ESTENSIONI")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdAniaEstensioneAmmessa).HasColumnName("ID_ANIA_ESTENSIONE_AMMESSA");

                entity.Property(e => e.IdAniaTipoDocumentazione).HasColumnName("ID_ANIA_TIPO_DOCUMENTAZIONE");
            });

            modelBuilder.Entity<AniaRaccordoErroriCard>(entity =>
            {
                entity.HasKey(e => e.IdAniaRaccordoErroriCard);

                entity.ToTable("ANIA_RACCORDO_ERRORI_CARD", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaRaccordoErroriCard)
                    .HasName("XX01ANIA_RACCORDO_ERRORI_CARD");

                entity.HasIndex(e => new { e.IdAniaCardDettaglio, e.FlgTipoFlusso })
                    .HasName("XX02ANIA_RACCORDO_ERRORI_CARD");

                entity.Property(e => e.IdAniaRaccordoErroriCard)
                    .HasColumnName("ID_ANIA_RACCORDO_ERRORI_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoFlusso)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_FLUSSO")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaCardDettaglio).HasColumnName("ID_ANIA_CARD_DETTAGLIO");

                entity.Property(e => e.IdAniaErroriCard).HasColumnName("ID_ANIA_ERRORI_CARD");
            });

            modelBuilder.Entity<AniaRespCard>(entity =>
            {
                entity.HasKey(e => e.KeyAniaRespCard);

                entity.ToTable("ANIA_RESP_CARD", "ICLAIMS");

                entity.HasIndex(e => new { e.IdAniaSinistroCard, e.DtStoScadenzaLog })
                    .HasName("XX02ANIA_RESP_CARD");

                entity.HasIndex(e => new { e.IdSinistro, e.FlgTipoMittente, e.DtStoScadenzaLog })
                    .HasName("XX01ANIA_RESP_CARD");

                entity.Property(e => e.KeyAniaRespCard)
                    .HasColumnName("KEY_ANIA_RESP_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtPrimaPredisposizione)
                    .HasColumnName("DT_PRIMA_PREDISPOSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimoInvio)
                    .HasColumnName("DT_PRIMO_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimoOk)
                    .HasColumnName("DT_PRIMO_OK")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimaPredisposizione)
                    .HasColumnName("DT_ULTIMA_PREDISPOSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoInvio)
                    .HasColumnName("DT_ULTIMO_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoOk)
                    .HasColumnName("DT_ULTIMO_OK")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRagioneTorto)
                    .HasColumnName("FLG_RAGIONE_TORTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoFirma)
                    .HasColumnName("FLG_TIPO_FIRMA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMittente)
                    .HasColumnName("FLG_TIPO_MITTENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgUltimoFlussoAccettSino)
                    .HasColumnName("FLG_ULTIMO_FLUSSO_ACCETT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaRespCard).HasColumnName("ID_ANIA_RESP_CARD");

                entity.Property(e => e.IdAniaSinistroCard).HasColumnName("ID_ANIA_SINISTRO_CARD");

                entity.Property(e => e.IdAniaSituazioneRespDett).HasColumnName("ID_ANIA_SITUAZIONE_RESP_DETT");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<AniaRiepilogoRivalseCtt>(entity =>
            {
                entity.HasKey(e => e.IdAniaRiepRivalsaCtt)
                    .HasName("PK_ANIA_RIEP_RIVALSE_CTT");

                entity.ToTable("ANIA_RIEPILOGO_RIVALSE_CTT", "ICLAIMS");

                entity.HasIndex(e => new { e.CodImpresa, e.DtStanzaRiferimento })
                    .HasName("XX01ANIA_RIEP_RIVALSE_CTT");

                entity.Property(e => e.IdAniaRiepRivalsaCtt)
                    .HasColumnName("ID_ANIA_RIEP_RIVALSA_CTT")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DtStanzaRiferimento)
                    .HasColumnName("DT_STANZA_RIFERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.ImpASaldoAl)
                    .HasColumnName("IMP_A_SALDO_AL")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.ImpASaldoDel)
                    .HasColumnName("IMP_A_SALDO_DEL")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.ImpCttControintAl)
                    .HasColumnName("IMP_CTT_CONTROINT_AL")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.ImpCttControintDel)
                    .HasColumnName("IMP_CTT_CONTROINT_DEL")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.ImpCttRicorrAl)
                    .HasColumnName("IMP_CTT_RICORR_AL")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.ImpCttRicorrDel)
                    .HasColumnName("IMP_CTT_RICORR_DEL")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.NumPagControintAl).HasColumnName("NUM_PAG_CONTROINT_AL");

                entity.Property(e => e.NumPagControintDel).HasColumnName("NUM_PAG_CONTROINT_DEL");

                entity.Property(e => e.NumPagRicorrAl).HasColumnName("NUM_PAG_RICORR_AL");

                entity.Property(e => e.NumPagRicorrDel).HasColumnName("NUM_PAG_RICORR_DEL");

                entity.Property(e => e.NumStorniControintAl).HasColumnName("NUM_STORNI_CONTROINT_AL");

                entity.Property(e => e.NumStorniControintDel).HasColumnName("NUM_STORNI_CONTROINT_DEL");

                entity.Property(e => e.NumStorniRicorrAl).HasColumnName("NUM_STORNI_RICORR_AL");

                entity.Property(e => e.NumStorniRicorrDel).HasColumnName("NUM_STORNI_RICORR_DEL");
            });

            modelBuilder.Entity<AniaRivalseCtt>(entity =>
            {
                entity.HasKey(e => e.KeyAniaRivalsaCtt);

                entity.ToTable("ANIA_RIVALSE_CTT", "ICLAIMS");

                entity.HasIndex(e => e.CodFiscaleDanneggiato)
                    .HasName("XX05ANIA_RIVALSE_CTT");

                entity.HasIndex(e => new { e.CodImpresaMittente, e.CodImpresaDestinataria })
                    .HasName("XX02ANIA_RIVALSE_CTT");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01ANIA_RIVALSE_CTT");

                entity.HasIndex(e => new { e.DtInizioElaborazione, e.OraInizioElaborazione, e.ProgressivoRecord })
                    .HasName("XX03ANIA_RIVALSE_CTT");

                entity.HasIndex(e => new { e.DtAccadimentoSinistro, e.CodImpresaRicorrente, e.IdentVeicRicorrente, e.CodImpresaControint, e.IdentVeicControint })
                    .HasName("XX04ANIA_RIVALSE_CTT");

                entity.Property(e => e.KeyAniaRivalsaCtt)
                    .HasColumnName("KEY_ANIA_RIVALSA_CTT")
                    .ValueGeneratedNever();

                entity.Property(e => e.AssenzaCollisioni)
                    .HasColumnName("ASSENZA_COLLISIONI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AssenzaCoperturaSic)
                    .HasColumnName("ASSENZA_COPERTURA_SIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CausaleMovimento)
                    .HasColumnName("CAUSALE_MOVIMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Classificazione)
                    .HasColumnName("CLASSIFICAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .IsUnicode(false);

                entity.Property(e => e.CodFiscaleDanneggiato)
                    .HasColumnName("COD_FISCALE_DANNEGGIATO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpControintAss)
                    .HasColumnName("COD_IMP_CONTROINT_ASS")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpRicorrenteAss)
                    .HasColumnName("COD_IMP_RICORRENTE_ASS")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaControint)
                    .HasColumnName("COD_IMPRESA_CONTROINT")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaDestinataria)
                    .HasColumnName("COD_IMPRESA_DESTINATARIA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("COD_IMPRESA_MITTENTE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaRicorrente)
                    .HasColumnName("COD_IMPRESA_RICORRENTE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Convenzione)
                    .HasColumnName("CONVENZIONE")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.DtAbbinamento)
                    .HasColumnName("DT_ABBINAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAccadimentoSinistro)
                    .HasColumnName("DT_ACCADIMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtChiusuraPratica)
                    .HasColumnName("DT_CHIUSURA_PRATICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCreazionePratica)
                    .HasColumnName("DT_CREAZIONE_PRATICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStanza)
                    .HasColumnName("DT_STANZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoRivalsa)
                    .HasColumnName("FLG_STATO_RIVALSA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FormIdentVeicControint)
                    .HasColumnName("FORM_IDENT_VEIC_CONTROINT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormIdentVeicRicorrente)
                    .HasColumnName("FORM_IDENT_VEIC_RICORRENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaRivalsaCtt).HasColumnName("ID_ANIA_RIVALSA_CTT");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentPartitaControint)
                    .HasColumnName("IDENT_PARTITA_CONTROINT")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IdentPartitaRicorrente)
                    .HasColumnName("IDENT_PARTITA_RICORRENTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IdentSinistroControint)
                    .HasColumnName("IDENT_SINISTRO_CONTROINT")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdentSinistroRicorrente)
                    .HasColumnName("IDENT_SINISTRO_RICORRENTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdentStanzaRivalse)
                    .HasColumnName("IDENT_STANZA_RIVALSE")
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicControint)
                    .HasColumnName("IDENT_VEIC_CONTROINT")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicRicorrente)
                    .HasColumnName("IDENT_VEIC_RICORRENTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ImpDirittiGestione)
                    .HasColumnName("IMP_DIRITTI_GESTIONE")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.ImpRiservaResidua)
                    .HasColumnName("IMP_RISERVA_RESIDUA")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.ImpRivalsa)
                    .HasColumnName("IMP_RIVALSA")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.ImpRivalsaContabilizzato)
                    .HasColumnName("IMP_RIVALSA_CONTABILIZZATO")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.NumVeicoliCoinvolti).HasColumnName("NUM_VEICOLI_COINVOLTI");

                entity.Property(e => e.OraInizioElaborazione).HasColumnName("ORA_INIZIO_ELABORAZIONE");

                entity.Property(e => e.ProgressivoRecord)
                    .HasColumnName("PROGRESSIVO_RECORD")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.ProtocolloPratica).HasColumnName("PROTOCOLLO_PRATICA");

                entity.Property(e => e.ProvAccadimentoSinistro)
                    .HasColumnName("PROV_ACCADIMENTO_SINISTRO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.RespControint)
                    .HasColumnName("RESP_CONTROINT")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.RespRicorrente)
                    .HasColumnName("RESP_RICORRENTE")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.RiferimentoAnia)
                    .HasColumnName("RIFERIMENTO_ANIA")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RuoloImpresa)
                    .HasColumnName("RUOLO_IMPRESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.StatoPratica)
                    .HasColumnName("STATO_PRATICA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SuperamentoPlafond)
                    .HasColumnName("SUPERAMENTO_PLAFOND")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoImporto)
                    .HasColumnName("TIPO_IMPORTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoMovimento)
                    .HasColumnName("TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoPagamento)
                    .HasColumnName("TIPO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoVeicControint)
                    .HasColumnName("TIPO_VEIC_CONTROINT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoVeicRicorrente)
                    .HasColumnName("TIPO_VEIC_RICORRENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipologiaFunzione)
                    .HasColumnName("TIPOLOGIA_FUNZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSaldiConvenzioni>(entity =>
            {
                entity.HasKey(e => e.KeyAniaSaldoConvenzione);

                entity.ToTable("ANIA_SALDI_CONVENZIONI", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaSaldoConvenzione)
                    .HasName("XX05ANIA_SALDI_CONVENZIONI");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02ANIA_SALDI_CONVENZIONI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03ANIA_SALDI_CONVENZIONI");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX04ANIA_SALDI_CONVENZIONI");

                entity.HasIndex(e => new { e.IdAniaSaldoConvenzione, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_SALDI_CONVENZIONI");

                entity.Property(e => e.KeyAniaSaldoConvenzione)
                    .HasColumnName("KEY_ANIA_SALDO_CONVENZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoInvio)
                    .HasColumnName("DT_ULTIMO_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoPagamento)
                    .HasColumnName("DT_ULTIMO_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoAnia)
                    .HasColumnName("FLG_STATO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoWise)
                    .HasColumnName("FLG_STATO_WISE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoConvenzione)
                    .HasColumnName("FLG_TIPO_CONVENZIONE")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaSaldoConvenzione).HasColumnName("ID_ANIA_SALDO_CONVENZIONE");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImportoPagato)
                    .HasColumnName("IMPORTO_PAGATO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImportoRecuperatoAnia)
                    .HasColumnName("IMPORTO_RECUPERATO_ANIA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImportoRecuperatoWise)
                    .HasColumnName("IMPORTO_RECUPERATO_WISE")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<AniaScaA>(entity =>
            {
                entity.HasKey(e => e.IdAniaScaA);

                entity.ToTable("ANIA_SCA_A", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaScaF)
                    .HasName("XX04ANIA_SCA_A");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoRecord })
                    .HasName("XX01ANIA_SCA_A");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.IdFunzioneSinistro })
                    .HasName("XX03ANIA_SCA_A");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoRecord, e.FlgTipoFunzione })
                    .HasName("XX02ANIA_SCA_A");

                entity.Property(e => e.IdAniaScaA)
                    .HasColumnName("ID_ANIA_SCA_A")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodImpresaCtp)
                    .HasColumnName("COD_IMPRESA_CTP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("COD_IMPRESA_MITTENTE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceFlusso)
                    .HasColumnName("CODICE_FLUSSO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DtEvento)
                    .HasColumnName("DT_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFlussoInv)
                    .HasColumnName("DT_FLUSSO_INV")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFlussoRic)
                    .HasColumnName("DT_FLUSSO_RIC")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgFormatoVeicCtp)
                    .HasColumnName("FLG_FORMATO_VEIC_CTP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFormatoVeicMittente)
                    .HasColumnName("FLG_FORMATO_VEIC_MITTENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRuoloImpresaMittente)
                    .HasColumnName("FLG_RUOLO_IMPRESA_MITTENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoFunzione)
                    .HasColumnName("FLG_TIPO_FUNZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRecord)
                    .HasColumnName("FLG_TIPO_RECORD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaScaF).HasColumnName("ID_ANIA_SCA_F");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFunzioneSinistro).HasColumnName("ID_FUNZIONE_SINISTRO");

                entity.Property(e => e.IdRichiestaTransizione).HasColumnName("ID_RICHIESTA_TRANSIZIONE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdentVeicCtp)
                    .HasColumnName("IDENT_VEIC_CTP")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicMittente)
                    .HasColumnName("IDENT_VEIC_MITTENTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NomeFlusso)
                    .HasColumnName("NOME_FLUSSO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProgressivoRecord).HasColumnName("PROGRESSIVO_RECORD");

                entity.Property(e => e.RifImpresaMittente)
                    .HasColumnName("RIF_IMPRESA_MITTENTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaScaC>(entity =>
            {
                entity.HasKey(e => e.IdAniaScaC);

                entity.ToTable("ANIA_SCA_C", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaScaA)
                    .HasName("XX02ANIA_SCA_C");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01ANIA_SCA_C");

                entity.Property(e => e.IdAniaScaC)
                    .HasColumnName("ID_ANIA_SCA_C")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgClassificazioneRichiesta)
                    .HasColumnName("FLG_CLASSIFICAZIONE_RICHIESTA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCodiceStatoAttuale)
                    .HasColumnName("FLG_CODICE_STATO_ATTUALE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCodiceStatoRichiesto)
                    .HasColumnName("FLG_CODICE_STATO_RICHIESTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgNoteCambioStato)
                    .HasColumnName("FLG_NOTE_CAMBIO_STATO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaScaA).HasColumnName("ID_ANIA_SCA_A");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");
            });

            modelBuilder.Entity<AniaScaC1>(entity =>
            {
                entity.HasKey(e => e.IdAniaScaC1);

                entity.ToTable("ANIA_SCA_C1", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaScaA)
                    .HasName("XX03ANIA_SCA_C1");

                entity.HasIndex(e => e.IdAniaScaC)
                    .HasName("XX02ANIA_SCA_C1");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01ANIA_SCA_C1");

                entity.Property(e => e.IdAniaScaC1)
                    .HasColumnName("ID_ANIA_SCA_C1")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgRagioneTorto)
                    .HasColumnName("FLG_RAGIONE_TORTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaScaA).HasColumnName("ID_ANIA_SCA_A");

                entity.Property(e => e.IdAniaScaC).HasColumnName("ID_ANIA_SCA_C");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");
            });

            modelBuilder.Entity<AniaScaC2>(entity =>
            {
                entity.HasKey(e => e.IdAniaScaC2);

                entity.ToTable("ANIA_SCA_C2", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaScaA)
                    .HasName("XX03ANIA_SCA_C2");

                entity.HasIndex(e => e.IdAniaScaC)
                    .HasName("XX02ANIA_SCA_C2");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01ANIA_SCA_C2");

                entity.Property(e => e.IdAniaScaC2)
                    .HasColumnName("ID_ANIA_SCA_C2")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodFiscaleDanneggiato)
                    .HasColumnName("COD_FISCALE_DANNEGGIATO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeDanneggiato)
                    .HasColumnName("COGNOME_DANNEGGIATO")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.DtNascitaDanneggiato)
                    .HasColumnName("DT_NASCITA_DANNEGGIATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgSenzaCollisioniSino)
                    .HasColumnName("FLG_SENZA_COLLISIONI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSenzaCoperturaSicSino)
                    .HasColumnName("FLG_SENZA_COPERTURA_SIC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSuperaPlafondSino)
                    .HasColumnName("FLG_SUPERA_PLAFOND_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoImporto)
                    .HasColumnName("FLG_TIPO_IMPORTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoPagamento)
                    .HasColumnName("FLG_TIPO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicRichiedente)
                    .HasColumnName("FLG_TIPO_VEIC_RICHIEDENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaScaA).HasColumnName("ID_ANIA_SCA_A");

                entity.Property(e => e.IdAniaScaC).HasColumnName("ID_ANIA_SCA_C");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdentSinistroMittente)
                    .HasColumnName("IDENT_SINISTRO_MITTENTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ImpDanno)
                    .HasColumnName("IMP_DANNO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDirittiGestione)
                    .HasColumnName("IMP_DIRITTI_GESTIONE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRichiestoDanno)
                    .HasColumnName("IMP_RICHIESTO_DANNO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisarcito)
                    .HasColumnName("IMP_RISARCITO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRivalsa)
                    .HasColumnName("IMP_RIVALSA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpStimaRiserva)
                    .HasColumnName("IMP_STIMA_RISERVA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.LuogoNascitaDanneggiato)
                    .HasColumnName("LUOGO_NASCITA_DANNEGGIATO")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NomeDanneggiato)
                    .HasColumnName("NOME_DANNEGGIATO")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroVeicCoinvolti).HasColumnName("NUMERO_VEIC_COINVOLTI");

                entity.Property(e => e.PercRespControparte)
                    .HasColumnName("PERC_RESP_CONTROPARTE")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PercRespMittente)
                    .HasColumnName("PERC_RESP_MITTENTE")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.ProvinciaAccadimento)
                    .HasColumnName("PROVINCIA_ACCADIMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaScaC3>(entity =>
            {
                entity.HasKey(e => e.IdAniaScaC3);

                entity.ToTable("ANIA_SCA_C3", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaScaA)
                    .HasName("XX03ANIA_SCA_C3");

                entity.HasIndex(e => e.IdAniaScaC)
                    .HasName("XX02ANIA_SCA_C3");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01ANIA_SCA_C3");

                entity.Property(e => e.IdAniaScaC3)
                    .HasColumnName("ID_ANIA_SCA_C3")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdAniaScaA).HasColumnName("ID_ANIA_SCA_A");

                entity.Property(e => e.IdAniaScaC).HasColumnName("ID_ANIA_SCA_C");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdentSinistroMittente)
                    .HasColumnName("IDENT_SINISTRO_MITTENTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ImpDanno)
                    .HasColumnName("IMP_DANNO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDirittiGestione)
                    .HasColumnName("IMP_DIRITTI_GESTIONE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRimborso)
                    .HasColumnName("IMP_RIMBORSO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PercRespControparte)
                    .HasColumnName("PERC_RESP_CONTROPARTE")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PercRespMittente)
                    .HasColumnName("PERC_RESP_MITTENTE")
                    .HasColumnType("decimal(10, 5)");
            });

            modelBuilder.Entity<AniaScaC4>(entity =>
            {
                entity.HasKey(e => e.IdAniaScaC4);

                entity.ToTable("ANIA_SCA_C4", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaScaA)
                    .HasName("XX03ANIA_SCA_C4");

                entity.HasIndex(e => e.IdAniaScaC)
                    .HasName("XX02ANIA_SCA_C4");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01ANIA_SCA_C4");

                entity.Property(e => e.IdAniaScaC4)
                    .HasColumnName("ID_ANIA_SCA_C4")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdAniaScaA).HasColumnName("ID_ANIA_SCA_A");

                entity.Property(e => e.IdAniaScaC).HasColumnName("ID_ANIA_SCA_C");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpDaCaricare)
                    .HasColumnName("IMP_DA_CARICARE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RifAniaPraticaDaStornare)
                    .HasColumnName("RIF_ANIA_PRATICA_DA_STORNARE")
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaScaC5>(entity =>
            {
                entity.HasKey(e => e.IdAniaScaC5);

                entity.ToTable("ANIA_SCA_C5", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaScaA)
                    .HasName("XX03ANIA_SCA_C5");

                entity.HasIndex(e => e.IdAniaScaC)
                    .HasName("XX02ANIA_SCA_C5");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01ANIA_SCA_C5");

                entity.Property(e => e.IdAniaScaC5)
                    .HasColumnName("ID_ANIA_SCA_C5")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodFisDanneggiato)
                    .HasColumnName("COD_FIS_DANNEGGIATO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRuoloDanneggiato)
                    .HasColumnName("FLG_RUOLO_DANNEGGIATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaScaA).HasColumnName("ID_ANIA_SCA_A");

                entity.Property(e => e.IdAniaScaC).HasColumnName("ID_ANIA_SCA_C");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdentPartitaDanno)
                    .HasColumnName("IDENT_PARTITA_DANNO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NominativoDanneggiato)
                    .HasColumnName("NOMINATIVO_DANNEGGIATO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaScaC6>(entity =>
            {
                entity.HasKey(e => e.IdAniaScaC6);

                entity.ToTable("ANIA_SCA_C6", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaScaA)
                    .HasName("XX03ANIA_SCA_C6");

                entity.HasIndex(e => e.IdAniaScaC)
                    .HasName("XX02ANIA_SCA_C6");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01ANIA_SCA_C6");

                entity.Property(e => e.IdAniaScaC6)
                    .HasColumnName("ID_ANIA_SCA_C6")
                    .ValueGeneratedNever();

                entity.Property(e => e.CfPivaDanneggiato)
                    .HasColumnName("CF_PIVA_DANNEGGIATO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.ConvenzioneCard)
                    .HasColumnName("CONVENZIONE_CARD")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRuoloDanneggiato)
                    .HasColumnName("FLG_RUOLO_DANNEGGIATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDanno)
                    .HasColumnName("FLG_TIPO_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaScaA).HasColumnName("ID_ANIA_SCA_A");

                entity.Property(e => e.IdAniaScaC).HasColumnName("ID_ANIA_SCA_C");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdentPartitaDanno)
                    .HasColumnName("IDENT_PARTITA_DANNO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IdentSinistro)
                    .HasColumnName("IDENT_SINISTRO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NominativoDanneggiato)
                    .HasColumnName("NOMINATIVO_DANNEGGIATO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ProvinciaResidenzaProp)
                    .HasColumnName("PROVINCIA_RESIDENZA_PROP")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaScaD>(entity =>
            {
                entity.HasKey(e => e.IdAniaScaD);

                entity.ToTable("ANIA_SCA_D", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaScaA)
                    .HasName("XX02ANIA_SCA_D");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01ANIA_SCA_D");

                entity.Property(e => e.IdAniaScaD)
                    .HasColumnName("ID_ANIA_SCA_D")
                    .ValueGeneratedNever();

                entity.Property(e => e.CheckSum)
                    .HasColumnName("CHECK_SUM")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.DimensioneFile).HasColumnName("DIMENSIONE_FILE");

                entity.Property(e => e.FlgTipoDocumento)
                    .HasColumnName("FLG_TIPO_DOCUMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoFile)
                    .HasColumnName("FLG_TIPO_FILE")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdAniaScaA).HasColumnName("ID_ANIA_SCA_A");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.NomeFile)
                    .HasColumnName("NOME_FILE")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaScaF>(entity =>
            {
                entity.HasKey(e => e.IdAniaScaF);

                entity.ToTable("ANIA_SCA_F", "ICLAIMS");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoRecord })
                    .HasName("XX02ANIA_SCA_F");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.IdFunzioneSinistro })
                    .HasName("XX03ANIA_SCA_F");

                entity.Property(e => e.IdAniaScaF)
                    .HasColumnName("ID_ANIA_SCA_F")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceFlusso)
                    .HasColumnName("CODICE_FLUSSO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceStatoAttuale)
                    .HasColumnName("CODICE_STATO_ATTUALE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceStatoPrecedente)
                    .HasColumnName("CODICE_STATO_PRECEDENTE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DtAbbinamento)
                    .HasColumnName("DT_ABBINAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFlussoRic)
                    .HasColumnName("DT_FLUSSO_RIC")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPresaInCarico)
                    .HasColumnName("DT_PRESA_IN_CARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgBloccanteWarning)
                    .HasColumnName("FLG_BLOCCANTE_WARNING")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMittenteDestinataria)
                    .HasColumnName("FLG_MITTENTE_DESTINATARIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPresenzaDocumentazione)
                    .HasColumnName("FLG_PRESENZA_DOCUMENTAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRuoloGestionaria)
                    .HasColumnName("FLG_RUOLO_GESTIONARIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRuoloRichiesta)
                    .HasColumnName("FLG_RUOLO_RICHIESTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSospensione)
                    .HasColumnName("FLG_SOSPENSIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoRecord)
                    .HasColumnName("FLG_STATO_RECORD")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRecord)
                    .HasColumnName("FLG_TIPO_RECORD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRiferimentoAnia)
                    .HasColumnName("FLG_TIPO_RIFERIMENTO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GestoreImpresaCtp)
                    .HasColumnName("GESTORE_IMPRESA_CTP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GestoreImpresaMittente)
                    .HasColumnName("GESTORE_IMPRESA_MITTENTE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFunzioneSinistro).HasColumnName("ID_FUNZIONE_SINISTRO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.KeyStato).HasColumnName("KEY_STATO");

                entity.Property(e => e.NomeFlusso)
                    .HasColumnName("NOME_FLUSSO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProcessoAutomatico)
                    .HasColumnName("PROCESSO_AUTOMATICO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ProgressivoRecord).HasColumnName("PROGRESSIVO_RECORD");

                entity.Property(e => e.RiferimentoAnia)
                    .HasColumnName("RIFERIMENTO_ANIA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RiservatoAnia)
                    .HasColumnName("RISERVATO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.StringaAnomalie)
                    .HasColumnName("STRINGA_ANOMALIE")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaScaP>(entity =>
            {
                entity.HasKey(e => e.IdAniaScaP);

                entity.ToTable("ANIA_SCA_P", "ICLAIMS");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoRecord })
                    .HasName("XX01ANIA_SCA_P");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoRecord, e.FlgTipoFunzione })
                    .HasName("XX02ANIA_SCA_P");

                entity.Property(e => e.IdAniaScaP)
                    .HasColumnName("ID_ANIA_SCA_P")
                    .ValueGeneratedNever();

                entity.Property(e => e.CheckSum)
                    .HasColumnName("CHECK_SUM")
                    .HasMaxLength(32)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceClassificazione)
                    .HasColumnName("CODICE_CLASSIFICAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceStato)
                    .HasColumnName("CODICE_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DimensioneFile).HasColumnName("DIMENSIONE_FILE");

                entity.Property(e => e.DtAbbinamento)
                    .HasColumnName("DT_ABBINAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFlussoRic)
                    .HasColumnName("DT_FLUSSO_RIC")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgBloccanteWarning)
                    .HasColumnName("FLG_BLOCCANTE_WARNING")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoRecord)
                    .HasColumnName("FLG_STATO_RECORD")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDocumento)
                    .HasColumnName("FLG_TIPO_DOCUMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoFile)
                    .HasColumnName("FLG_TIPO_FILE")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoFunzione)
                    .HasColumnName("FLG_TIPO_FUNZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRecord)
                    .HasColumnName("FLG_TIPO_RECORD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRiferimentoAnia)
                    .HasColumnName("FLG_TIPO_RIFERIMENTO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.NomeFileInArichivio)
                    .HasColumnName("NOME_FILE_IN_ARICHIVIO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NomeFileOriginale)
                    .HasColumnName("NOME_FILE_ORIGINALE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NomeFlusso)
                    .HasColumnName("NOME_FLUSSO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.ProgressivoRecord).HasColumnName("PROGRESSIVO_RECORD");

                entity.Property(e => e.RiferimentoAnia)
                    .HasColumnName("RIFERIMENTO_ANIA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StringaAnomalie)
                    .HasColumnName("STRINGA_ANOMALIE")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaScaR>(entity =>
            {
                entity.HasKey(e => e.IdAniaScaR);

                entity.ToTable("ANIA_SCA_R", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaScaP)
                    .HasName("XX03ANIA_SCA_R");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoRecord })
                    .HasName("XX01ANIA_SCA_R");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoRecord, e.FlgTipoFunzione })
                    .HasName("XX02ANIA_SCA_R");

                entity.Property(e => e.IdAniaScaR)
                    .HasColumnName("ID_ANIA_SCA_R")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodImpresaCtp)
                    .HasColumnName("COD_IMPRESA_CTP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("COD_IMPRESA_MITTENTE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DtEvento)
                    .HasColumnName("DT_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFlussoInv)
                    .HasColumnName("DT_FLUSSO_INV")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFlussoRic)
                    .HasColumnName("DT_FLUSSO_RIC")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCodiceStatoRich)
                    .HasColumnName("FLG_CODICE_STATO_RICH")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFormatoVeicCtp)
                    .HasColumnName("FLG_FORMATO_VEIC_CTP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFormatoVeicMittente)
                    .HasColumnName("FLG_FORMATO_VEIC_MITTENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoFunzione)
                    .HasColumnName("FLG_TIPO_FUNZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRecord)
                    .HasColumnName("FLG_TIPO_RECORD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.GestoreImpresaMittente)
                    .HasColumnName("GESTORE_IMPRESA_MITTENTE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaScaP).HasColumnName("ID_ANIA_SCA_P");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdentVeicCtp)
                    .HasColumnName("IDENT_VEIC_CTP")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicMittente)
                    .HasColumnName("IDENT_VEIC_MITTENTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NomeFlusso)
                    .HasColumnName("NOME_FLUSSO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ProgressivoRecord).HasColumnName("PROGRESSIVO_RECORD");
            });

            modelBuilder.Entity<AniaSegnalazioniMctc>(entity =>
            {
                entity.HasKey(e => e.KeySegnalazMctc);

                entity.ToTable("ANIA_SEGNALAZIONI_MCTC", "IAGENCY");

                entity.HasIndex(e => e.DtRicezione)
                    .HasName("XX01ANIA_SEGNALAZIONI_MCTC");

                entity.HasIndex(e => new { e.DtRicezione, e.NPolizza, e.IdentificativoVeic })
                    .HasName("XX03ANIA_SEGNALAZIONI_MCTC");

                entity.Property(e => e.KeySegnalazMctc)
                    .HasColumnName("KEY_SEGNALAZ_MCTC")
                    .ValueGeneratedNever();

                entity.Property(e => e.CausaleMovimento)
                    .HasColumnName("CAUSALE_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagSocialeContr)
                    .HasColumnName("COGNOME_RAG_SOCIALE_CONTR")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagSocialeProp)
                    .HasColumnName("COGNOME_RAG_SOCIALE_PROP")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffettoCopertura)
                    .HasColumnName("DT_EFFETTO_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoPolizza)
                    .HasColumnName("DT_EFFETTO_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("DT_ELABORAZIONE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicezione)
                    .HasColumnName("DT_RICEZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicezioneFlusso)
                    .HasColumnName("DT_RICEZIONE_FLUSSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaCopertura)
                    .HasColumnName("DT_SCADENZA_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPolizza)
                    .HasColumnName("DT_SCADENZA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EsitoElaborazione)
                    .HasColumnName("ESITO_ELABORAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgControlloMovimenti)
                    .HasColumnName("FLG_CONTROLLO_MOVIMENTI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormatoIdentVeic)
                    .HasColumnName("FORMATO_IDENT_VEIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdSegnalazMctc).HasColumnName("ID_SEGNALAZ_MCTC");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentFiscaleContr)
                    .HasColumnName("IDENT_FISCALE_CONTR")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentFiscaleProp)
                    .HasColumnName("IDENT_FISCALE_PROP")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentificativoVeic)
                    .HasColumnName("IDENTIFICATIVO_VEIC")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NomeContr)
                    .HasColumnName("NOME_CONTR")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NomeProp)
                    .HasColumnName("NOME_PROP")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.OraRicezioneFlusso)
                    .HasColumnName("ORA_RICEZIONE_FLUSSO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.OrarioDecorrenzaCop)
                    .HasColumnName("ORARIO_DECORRENZA_COP")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.OrarioScadenzaCop)
                    .HasColumnName("ORARIO_SCADENZA_COP")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.ProtocolloAniaNuovaCop)
                    .HasColumnName("PROTOCOLLO_ANIA_NUOVA_COP")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.StringaAnomalie)
                    .HasColumnName("STRINGA_ANOMALIE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TimestampValidazione)
                    .HasColumnName("TIMESTAMP_VALIDAZIONE")
                    .HasMaxLength(26)
                    .IsUnicode(false);

                entity.Property(e => e.TipoAggiornamento)
                    .HasColumnName("TIPO_AGGIORNAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoMovimento)
                    .HasColumnName("TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoVeic)
                    .HasColumnName("TIPO_VEIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoVeicErrMctc)
                    .HasColumnName("TIPO_VEIC_ERR_MCTC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoVeicMctc)
                    .HasColumnName("TIPO_VEIC_MCTC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AniaServiziWeb>(entity =>
            {
                entity.HasKey(e => e.IdAniaServiziWeb);

                entity.ToTable("ANIA_SERVIZI_WEB", "ICLAIMS");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01ANIA_RIVALSE_CTT");

                entity.HasIndex(e => new { e.DtAccadimentoSinistro, e.CodImpresaRicorrente, e.IdentVeicRicorrente, e.CodImpresaControint, e.IdentVeicControint })
                    .HasName("XX03ANIA_RIVALSE_CTT");

                entity.Property(e => e.IdAniaServiziWeb)
                    .HasColumnName("ID_ANIA_SERVIZI_WEB")
                    .ValueGeneratedNever();

                entity.Property(e => e.Classificazione)
                    .HasColumnName("CLASSIFICAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodFiscaleDanneggiato)
                    .HasColumnName("COD_FISCALE_DANNEGGIATO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaControint)
                    .HasColumnName("COD_IMPRESA_CONTROINT")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaRicorrente)
                    .HasColumnName("COD_IMPRESA_RICORRENTE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DtAccadimentoSinistro)
                    .HasColumnName("DT_ACCADIMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoCambioStato)
                    .HasColumnName("DT_ULTIMO_CAMBIO_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FormIdentVeicControint)
                    .HasColumnName("FORM_IDENT_VEIC_CONTROINT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormIdentVeicRicorrente)
                    .HasColumnName("FORM_IDENT_VEIC_RICORRENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCardServizioWeb).HasColumnName("ID_CARD_SERVIZIO_WEB");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFlussoCard).HasColumnName("ID_FLUSSO_CARD");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdentControint)
                    .HasColumnName("IDENT_CONTROINT")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdentRicorrente)
                    .HasColumnName("IDENT_RICORRENTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicControint)
                    .HasColumnName("IDENT_VEIC_CONTROINT")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicRicorrente)
                    .HasColumnName("IDENT_VEIC_RICORRENTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ProtocolloPratica)
                    .HasColumnName("PROTOCOLLO_PRATICA")
                    .HasMaxLength(14)
                    .IsUnicode(false);

                entity.Property(e => e.RiferimentoAnia)
                    .HasColumnName("RIFERIMENTO_ANIA")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RuoloImpresa)
                    .HasColumnName("RUOLO_IMPRESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.StatoPratica)
                    .HasColumnName("STATO_PRATICA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicControint)
                    .HasColumnName("TIPO_VEIC_CONTROINT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoVeicRicorrente)
                    .HasColumnName("TIPO_VEIC_RICORRENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipologiaFunzione)
                    .HasColumnName("TIPOLOGIA_FUNZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSicLightPosAss>(entity =>
            {
                entity.HasKey(e => e.IdRispostaLightPosAss);

                entity.ToTable("ANIA_SIC_LIGHT_POS_ASS", "ICLAIMS");

                entity.HasIndex(e => e.IdRispostaLight)
                    .HasName("XX01_ANIA_SIC_LIGHT_POS_ASS");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02_ANIA_SIC_LIGHT_POS_ASS");

                entity.Property(e => e.IdRispostaLightPosAss)
                    .HasColumnName("ID_RISPOSTA_LIGHT_POS_ASS")
                    .ValueGeneratedNever();

                entity.Property(e => e.Causale)
                    .HasColumnName("CAUSALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodFiscaleContraente)
                    .HasColumnName("COD_FISCALE_CONTRAENTE")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodFiscaleProprietario)
                    .HasColumnName("COD_FISCALE_PROPRIETARIO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeContraente)
                    .HasColumnName("COGNOME_CONTRAENTE")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeProprietario)
                    .HasColumnName("COGNOME_PROPRIETARIO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaMora)
                    .HasColumnName("DT_SCADENZA_MORA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCopertura)
                    .HasColumnName("FLG_COPERTURA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgUtilizzo)
                    .HasColumnName("FLG_UTILIZZO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRispostaLight).HasColumnName("ID_RISPOSTA_LIGHT");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.NomeContraente)
                    .HasColumnName("NOME_CONTRAENTE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NomeProprietario)
                    .HasColumnName("NOME_PROPRIETARIO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NumPolizza)
                    .HasColumnName("NUM_POLIZZA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TipoMovimento)
                    .HasColumnName("TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AniaSicOffline>(entity =>
            {
                entity.HasKey(e => e.KeyAniaSicOffline);

                entity.ToTable("ANIA_SIC_OFFLINE", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaSicOffline)
                    .HasName("XAK1_ANIA_SIC_OFFLINE");

                entity.HasIndex(e => new { e.DtRicezione, e.FlgStato })
                    .HasName("XAK2_ANIA_SIC_OFFLINE");

                entity.Property(e => e.KeyAniaSicOffline)
                    .HasColumnName("KEY_ANIA_SIC_OFFLINE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodImpDeb)
                    .HasColumnName("COD_IMP_DEB")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpMand)
                    .HasColumnName("COD_IMP_MAND")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DataAvvenimento)
                    .HasColumnName("DATA_AVVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataMaxRisposta)
                    .HasColumnName("DATA_MAX_RISPOSTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataUltimaRisposta)
                    .HasColumnName("DATA_ULTIMA_RISPOSTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicezione)
                    .HasColumnName("DT_RICEZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAssicuratoSino)
                    .HasColumnName("FLG_ASSICURATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRispostaOffline)
                    .HasColumnName("FLG_RISPOSTA_OFFLINE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStato)
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoTargaDeb)
                    .HasColumnName("FLG_TIPO_TARGA_DEB")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoTargaMand)
                    .HasColumnName("FLG_TIPO_TARGA_MAND")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlussoRicevuto)
                    .HasColumnName("FLUSSO_RICEVUTO")
                    .HasMaxLength(650)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaSicOffline).HasColumnName("ID_ANIA_SIC_OFFLINE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ProtocolloSic)
                    .HasColumnName("PROTOCOLLO_SIC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TargaDeb)
                    .HasColumnName("TARGA_DEB")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TargaMand)
                    .HasColumnName("TARGA_MAND")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSicRichieste>(entity =>
            {
                entity.HasKey(e => e.IdRichiestasic)
                    .HasName("SYS_C0016082");

                entity.ToTable("ANIA_SIC_RICHIESTE", "ICLAIMS");

                entity.HasIndex(e => e.IdRispostasic)
                    .HasName("XX03ANIA_SIC_RICHIESTE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02ANIA_SIC_RICHIESTE");

                entity.Property(e => e.IdRichiestasic)
                    .HasColumnName("ID_RICHIESTASIC")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompDebitrice)
                    .HasColumnName("COD_COMP_DEBITRICE")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtRichiesta)
                    .HasColumnName("DT_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdRiferimentoInvio).HasColumnName("ID_RIFERIMENTO_INVIO");

                entity.Property(e => e.IdRispostasic).HasColumnName("ID_RISPOSTASIC");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.RecordInvioRichiestaSic)
                    .HasColumnName("RECORD_INVIO_RICHIESTA_SIC")
                    .HasMaxLength(450)
                    .IsUnicode(false);

                entity.Property(e => e.TargaAniaDebitrice)
                    .HasColumnName("TARGA_ANIA_DEBITRICE")
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSicRichiesteLight>(entity =>
            {
                entity.HasKey(e => e.IdRichiestaLight);

                entity.ToTable("ANIA_SIC_RICHIESTE_LIGHT", "ICLAIMS");

                entity.HasIndex(e => e.DtRichiesta)
                    .HasName("XX01_ANIA_SIC_RICHIESTE_LIGHT");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02_ANIA_SIC_RICHIESTE_LIGHT");

                entity.Property(e => e.IdRichiestaLight)
                    .HasColumnName("ID_RICHIESTA_LIGHT")
                    .ValueGeneratedNever();

                entity.Property(e => e.Canale)
                    .HasColumnName("CANALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodFunzione)
                    .HasColumnName("COD_FUNZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpCtp)
                    .HasColumnName("COD_IMP_CTP")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpMand)
                    .HasColumnName("COD_IMP_MAND")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodServizio)
                    .HasColumnName("COD_SERVIZIO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodUser)
                    .HasColumnName("COD_USER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtAvvenimento)
                    .HasColumnName("DT_AVVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiesta)
                    .HasColumnName("DT_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgIdentVeicolo1)
                    .HasColumnName("FLG_IDENT_VEICOLO_1")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIdentVeicolo2)
                    .HasColumnName("FLG_IDENT_VEICOLO_2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicolo1)
                    .HasColumnName("FLG_TIPO_VEICOLO_1")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicolo2)
                    .HasColumnName("FLG_TIPO_VEICOLO_2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRispostaLight).HasColumnName("ID_RISPOSTA_LIGHT");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdentVeicolo1)
                    .HasColumnName("IDENT_VEICOLO_1")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdentVeicolo2)
                    .HasColumnName("IDENT_VEICOLO_2")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .HasColumnName("PASSWORD")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RifRichiedente)
                    .HasColumnName("RIF_RICHIEDENTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RifRichiesta)
                    .HasColumnName("RIF_RICHIESTA")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSicRisposte>(entity =>
            {
                entity.HasKey(e => e.IdRispostasic)
                    .HasName("SYS_C0016084");

                entity.ToTable("ANIA_SIC_RISPOSTE", "ICLAIMS");

                entity.HasIndex(e => e.IdRispostaSic1)
                    .HasName("XX02ANIA_SIC_RISPOSTE");

                entity.Property(e => e.IdRispostasic)
                    .HasColumnName("ID_RISPOSTASIC")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompDebitrice)
                    .HasColumnName("COD_COMP_DEBITRICE")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodRispostaSic)
                    .HasColumnName("COD_RISPOSTA_SIC")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoErroreSic)
                    .HasColumnName("FLG_TIPO_ERRORE_SIC")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdRispostaSic1).HasColumnName("ID_RISPOSTA_SIC");

                entity.Property(e => e.RecordRispostaSic)
                    .HasColumnName("RECORD_RISPOSTA_SIC")
                    .IsUnicode(false);

                entity.Property(e => e.RecordRispostaSicParte2)
                    .HasColumnName("RECORD_RISPOSTA_SIC_PARTE2")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSicRisposteLight>(entity =>
            {
                entity.HasKey(e => e.IdRispostaLight);

                entity.ToTable("ANIA_SIC_RISPOSTE_LIGHT", "ICLAIMS");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02_ANIA_SIC_RISPOSTE_LIGHT");

                entity.HasIndex(e => new { e.FlgSinCardVeicolo1, e.FlgSinCardVeicolo2 })
                    .HasName("XX03ANIA_SIC_RISPOSTE_LIGHT");

                entity.Property(e => e.IdRispostaLight)
                    .HasColumnName("ID_RISPOSTA_LIGHT")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DescVeicolo1)
                    .HasColumnName("DESC_VEICOLO_1")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DescVeicolo2)
                    .HasColumnName("DESC_VEICOLO_2")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSinCardVeicolo1)
                    .HasColumnName("FLG_SIN_CARD_VEICOLO_1")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinCardVeicolo2)
                    .HasColumnName("FLG_SIN_CARD_VEICOLO_2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.NumRigheDaVis).HasColumnName("NUM_RIGHE_DA_VIS");

                entity.Property(e => e.NumRigheTrovate).HasColumnName("NUM_RIGHE_TROVATE");

                entity.Property(e => e.NumSinistriVeicolo1).HasColumnName("NUM_SINISTRI_VEICOLO_1");

                entity.Property(e => e.NumSinistriVeicolo2).HasColumnName("NUM_SINISTRI_VEICOLO_2");

                entity.Property(e => e.ProtocolloSic)
                    .HasColumnName("PROTOCOLLO_SIC")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.RispostaOffline)
                    .HasColumnName("RISPOSTA_OFFLINE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RispostaOnline)
                    .HasColumnName("RISPOSTA_ONLINE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoErrore)
                    .HasColumnName("TIPO_ERRORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRispostaOnline)
                    .HasColumnName("TIPO_RISPOSTA_ONLINE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AniaSicRisposteOffline>(entity =>
            {
                entity.HasKey(e => e.KeyAniaSicRispostaOffline);

                entity.ToTable("ANIA_SIC_RISPOSTE_OFFLINE", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaSicRispostaOffline)
                    .HasName("XAK1_ANIA_SIC_RISPOSTE_OFFLINE");

                entity.HasIndex(e => new { e.DtInvio, e.FlgRispostaOffline })
                    .HasName("XAK2_ANIA_SIC_RISPOSTE_OFFLINE");

                entity.Property(e => e.KeyAniaSicRispostaOffline)
                    .HasColumnName("KEY_ANIA_SIC_RISPOSTA_OFFLINE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRispostaOffline)
                    .HasColumnName("FLG_RISPOSTA_OFFLINE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlussoInviato)
                    .HasColumnName("FLUSSO_INVIATO")
                    .HasMaxLength(650)
                    .IsUnicode(false);

                entity.Property(e => e.FlussoRicevuto)
                    .HasColumnName("FLUSSO_RICEVUTO")
                    .HasMaxLength(650)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaSicOffline).HasColumnName("ID_ANIA_SIC_OFFLINE");

                entity.Property(e => e.IdAniaSicRispostaOffline).HasColumnName("ID_ANIA_SIC_RISPOSTA_OFFLINE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.TipoErrore)
                    .HasColumnName("TIPO_ERRORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSinistriCardRichieste>(entity =>
            {
                entity.HasKey(e => e.IdRichiestaCard)
                    .HasName("SYS_C0074958");

                entity.ToTable("ANIA_SINISTRI_CARD_RICHIESTE", "ISUITE");

                entity.HasIndex(e => e.DtRiferimentoRichiesta)
                    .HasName("XX03ANIA_SIN_CARD_RICHIESTE");

                entity.HasIndex(e => e.IdRichiestaIbd)
                    .HasName("XX02ANIA_SIN_CARD_RICHIESTE");

                entity.Property(e => e.IdRichiestaCard)
                    .HasColumnName("ID_RICHIESTA_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceImpresaDebitrice)
                    .HasColumnName("CODICE_IMPRESA_DEBITRICE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceImpresaGestionaria)
                    .HasColumnName("CODICE_IMPRESA_GESTIONARIA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DtAccadimentoSinistro)
                    .HasColumnName("DT_ACCADIMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAggiornamentoSinistro)
                    .HasColumnName("DT_AGGIORNAMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiferimentoRichiesta)
                    .HasColumnName("DT_RIFERIMENTO_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStanza)
                    .HasColumnName("DT_STANZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEsitoElaborazione)
                    .HasColumnName("FLG_ESITO_ELABORAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoPagamento)
                    .HasColumnName("FLG_STATO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoTargaDebitrice)
                    .HasColumnName("FLG_TIPO_TARGA_DEBITRICE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoTargaGestionaria)
                    .HasColumnName("FLG_TIPO_TARGA_GESTIONARIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloDebitrice)
                    .HasColumnName("FLG_TIPO_VEICOLO_DEBITRICE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloGestionaria)
                    .HasColumnName("FLG_TIPO_VEICOLO_GESTIONARIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloRichiesta)
                    .HasColumnName("FLG_TIPO_VEICOLO_RICHIESTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRichiestaIbd).HasColumnName("ID_RICHIESTA_IBD");

                entity.Property(e => e.NumeroSinistroDenunciante)
                    .HasColumnName("NUMERO_SINISTRO_DENUNCIANTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.RuoloVeicoloRichiesto)
                    .HasColumnName("RUOLO_VEICOLO_RICHIESTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TargaDebitrice)
                    .HasColumnName("TARGA_DEBITRICE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TargaGestionaria)
                    .HasColumnName("TARGA_GESTIONARIA")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSinistroCard>(entity =>
            {
                entity.HasKey(e => e.KeyAniaSinistroCard);

                entity.ToTable("ANIA_SINISTRO_CARD", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaSinistroCard)
                    .HasName("XX01ANIA_SINISTRO_CARD");

                entity.HasIndex(e => new { e.DtPrimaPredisposizione, e.DtStoScadenzaLog })
                    .HasName("XX04ANIA_SINISTRO_CARD");

                entity.HasIndex(e => new { e.DtPrimoInvio, e.DtStoScadenzaLog })
                    .HasName("XX05ANIA_SINISTRO_CARD");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX02ANIA_SINISTRO_CARD");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaLog })
                    .HasName("XX03ANIA_SINISTRO_CARD");

                entity.Property(e => e.KeyAniaSinistroCard)
                    .HasColumnName("KEY_ANIA_SINISTRO_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoEsercizio).HasColumnName("ANNO_ESERCIZIO");

                entity.Property(e => e.CodAniaCompInv)
                    .HasColumnName("COD_ANIA_COMP_INV")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodAniaCompRic)
                    .HasColumnName("COD_ANIA_COMP_RIC")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodIstatComune)
                    .HasColumnName("COD_ISTAT_COMUNE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DtAvvenimento)
                    .HasColumnName("DT_AVVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimaPredisposizione)
                    .HasColumnName("DT_PRIMA_PREDISPOSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimoInvio)
                    .HasColumnName("DT_PRIMO_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimoOk)
                    .HasColumnName("DT_PRIMO_OK")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimaPredisposizione)
                    .HasColumnName("DT_ULTIMA_PREDISPOSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoInvio)
                    .HasColumnName("DT_ULTIMO_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoOk)
                    .HasColumnName("DT_ULTIMO_OK")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgGestionarioDebitore)
                    .HasColumnName("FLG_GESTIONARIO_DEBITORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScoreAia)
                    .HasColumnName("FLG_SCORE_AIA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgUltimoFlussoAccettSino)
                    .HasColumnName("FLG_ULTIMO_FLUSSO_ACCETT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaSinistroCard).HasColumnName("ID_ANIA_SINISTRO_CARD");

                entity.Property(e => e.IdAniaSinistroCardDett).HasColumnName("ID_ANIA_SINISTRO_CARD_DETT");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpFranchigiaRecuperabile)
                    .HasColumnName("IMP_FRANCHIGIA_RECUPERABILE")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.ImpIndennizziAntifrode)
                    .HasColumnName("IMP_INDENNIZZI_ANTIFRODE")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.ImportoRecuperiAntifrode)
                    .HasColumnName("IMPORTO_RECUPERI_ANTIFRODE")
                    .HasColumnType("decimal(15, 2)");

                entity.Property(e => e.ImportoRecuperiArbitrato)
                    .HasColumnName("IMPORTO_RECUPERI_ARBITRATO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImportoSpeseArbitrato)
                    .HasColumnName("IMPORTO_SPESE_ARBITRATO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TargaInv)
                    .HasColumnName("TARGA_INV")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TargaRic)
                    .HasColumnName("TARGA_RIC")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSinistroCardDett>(entity =>
            {
                entity.HasKey(e => e.IdAniaSinistroCardDett);

                entity.ToTable("ANIA_SINISTRO_CARD_DETT", "ICLAIMS");

                entity.HasIndex(e => e.DtElaborazioneAnia)
                    .HasName("XX05ANIA_SINISTRO_CARD_DETT");

                entity.HasIndex(e => e.DtInvio)
                    .HasName("XX04ANIA_SINISTRO_CARD_DETT");

                entity.HasIndex(e => e.IdAniaSinistroCard)
                    .HasName("XX02ANIA_SINISTRO_CARD_DETT");

                entity.HasIndex(e => e.IdAniaSinistroCardDett)
                    .HasName("XX01ANIA_SINISTRO_CARD_DETT");

                entity.HasIndex(e => e.IdFlussoCard)
                    .HasName("XX03ANIA_SINISTRO_CARD_DETT");

                entity.HasIndex(e => new { e.IdSinistro, e.FlgGestionarioDebitore })
                    .HasName("XX06ANIA_SINISTRO_CARD_DETT");

                entity.Property(e => e.IdAniaSinistroCardDett)
                    .HasColumnName("ID_ANIA_SINISTRO_CARD_DETT")
                    .ValueGeneratedNever();

                entity.Property(e => e.ADisposizioneGestionaria)
                    .HasColumnName("A_DISPOSIZIONE_GESTIONARIA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CinPatenteConducenteDeb)
                    .HasColumnName("CIN_PATENTE_CONDUCENTE_DEB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodIstatComune)
                    .HasColumnName("COD_ISTAT_COMUNE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceFisContraenteGest)
                    .HasColumnName("CODICE_FIS_CONTRAENTE_GEST")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("DT_ELABORAZIONE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtNascitaConducenteDeb)
                    .HasColumnName("DT_NASCITA_CONDUCENTE_DEB")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgGestionarioDebitore)
                    .HasColumnName("FLG_GESTIONARIO_DEBITORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScartatoSino)
                    .HasColumnName("FLG_SCARTATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScoreAia)
                    .HasColumnName("FLG_SCORE_AIA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSicDataSinistro)
                    .HasColumnName("FLG_SIC_DATA_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSicEsitoKo)
                    .HasColumnName("FLG_SIC_ESITO_KO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSicImpresaDeb)
                    .HasColumnName("FLG_SIC_IMPRESA_DEB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSicImpresaGest)
                    .HasColumnName("FLG_SIC_IMPRESA_GEST")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSicNonTrovato)
                    .HasColumnName("FLG_SIC_NON_TROVATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSicRispostaOffline)
                    .HasColumnName("FLG_SIC_RISPOSTA_OFFLINE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSicRispostaOnline)
                    .HasColumnName("FLG_SIC_RISPOSTA_ONLINE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSicVeicoloDeb)
                    .HasColumnName("FLG_SIC_VEICOLO_DEB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSicVeicoloGest)
                    .HasColumnName("FLG_SIC_VEICOLO_GEST")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSiglaProvForfait)
                    .HasColumnName("FLG_TIPO_SIGLA_PROV_FORFAIT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoStatoAccadimentoSin)
                    .HasColumnName("FLG_TIPO_STATO_ACCADIMENTO_SIN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloDebitore)
                    .HasColumnName("FLG_TIPO_VEICOLO_DEBITORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloForfait)
                    .HasColumnName("FLG_TIPO_VEICOLO_FORFAIT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloGestionario)
                    .HasColumnName("FLG_TIPO_VEICOLO_GESTIONARIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaSinistroCard).HasColumnName("ID_ANIA_SINISTRO_CARD");

                entity.Property(e => e.IdFlussoCard).HasColumnName("ID_FLUSSO_CARD");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSospesoCard).HasColumnName("ID_SOSPESO_CARD");

                entity.Property(e => e.IdentificativoSinistro)
                    .HasColumnName("IDENTIFICATIVO_SINISTRO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NominativoConducenteDeb)
                    .HasColumnName("NOMINATIVO_CONDUCENTE_DEB")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NominativoContraenteDeb)
                    .HasColumnName("NOMINATIVO_CONTRAENTE_DEB")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NominativoContraenteGest)
                    .HasColumnName("NOMINATIVO_CONTRAENTE_GEST")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PrgMovimentoAnia).HasColumnName("PRG_MOVIMENTO_ANIA");

                entity.Property(e => e.PrgPatenteConducenteDeb)
                    .HasColumnName("PRG_PATENTE_CONDUCENTE_DEB")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.ProtocolloSic)
                    .HasColumnName("PROTOCOLLO_SIC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ProtocolloSicRiscontrato)
                    .HasColumnName("PROTOCOLLO_SIC_RISCONTRATO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ProvPatenteConducenteDeb)
                    .HasColumnName("PROV_PATENTE_CONDUCENTE_DEB")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ProvResProprietarioGest)
                    .HasColumnName("PROV_RES_PROPRIETARIO_GEST")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ProvinciaAccadimentoSin)
                    .HasColumnName("PROVINCIA_ACCADIMENTO_SIN")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ProvinciaForfait)
                    .HasColumnName("PROVINCIA_FORFAIT")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RadiceSic)
                    .HasColumnName("RADICE_SIC")
                    .HasMaxLength(14)
                    .IsUnicode(false);

                entity.Property(e => e.SuffissoSic)
                    .HasColumnName("SUFFISSO_SIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AniaSitaCopertMensile>(entity =>
            {
                entity.HasKey(e => e.KeyAniaSitaCopMensile);

                entity.ToTable("ANIA_SITA_COPERT_MENSILE", "IAGENCY");

                entity.HasIndex(e => new { e.IdAniaSitaCopMensile, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_SITA_COPERT_MENSILE");

                entity.HasIndex(e => new { e.CodImpresa, e.MeseRilevazione, e.TipoVeicolo })
                    .HasName("XX02ANIA_SITA_COPERT_MENSILE");

                entity.HasIndex(e => new { e.DtInizioElaborazione, e.MeseRilevazione, e.TipoVeicolo })
                    .HasName("XX03ANIA_SITA_COPERT_MENSILE");

                entity.Property(e => e.KeyAniaSitaCopMensile)
                    .HasColumnName("KEY_ANIA_SITA_COP_MENSILE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodFlusso)
                    .HasColumnName("COD_FLUSSO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaDestinataria)
                    .HasColumnName("COD_IMPRESA_DESTINATARIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("COD_IMPRESA_MITTENTE")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("DT_ELABORAZIONE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgControlloMovimenti)
                    .HasColumnName("FLG_CONTROLLO_MOVIMENTI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaSitaCopMensile).HasColumnName("ID_ANIA_SITA_COP_MENSILE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.MeseRilevazione)
                    .HasColumnName("MESE_RILEVAZIONE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroVeicoliCop).HasColumnName("NUMERO_VEICOLI_COP");

                entity.Property(e => e.OraInizioElaborazione)
                    .HasColumnName("ORA_INIZIO_ELABORAZIONE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.PrgRecord).HasColumnName("PRG_RECORD");

                entity.Property(e => e.StringaAnomalie)
                    .HasColumnName("STRINGA_ANOMALIE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRecord)
                    .HasColumnName("TIPO_RECORD")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRecordTestata)
                    .HasColumnName("TIPO_RECORD_TESTATA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AniaSitaCopertMensileErr>(entity =>
            {
                entity.HasKey(e => e.KeyAniaSitaCopMensileErr)
                    .HasName("PK_ANIA_SITA_COPERT_MEN_ERR");

                entity.ToTable("ANIA_SITA_COPERT_MENSILE_ERR", "IAGENCY");

                entity.HasIndex(e => e.IdAniaSitaCopMensile)
                    .HasName("XX02ANIA_SITA_COP_MEN_ERR");

                entity.HasIndex(e => new { e.IdAniaSitaCopMensileErr, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_SITA_COP_MEN_ERR");

                entity.Property(e => e.KeyAniaSitaCopMensileErr)
                    .HasColumnName("KEY_ANIA_SITA_COP_MENSILE_ERR")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodFlusso)
                    .HasColumnName("COD_FLUSSO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaDestinataria)
                    .HasColumnName("COD_IMPRESA_DESTINATARIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("COD_IMPRESA_MITTENTE")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneErrore)
                    .HasColumnName("DESCRIZIONE_ERRORE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaSitaCopMensile).HasColumnName("ID_ANIA_SITA_COP_MENSILE");

                entity.Property(e => e.IdAniaSitaCopMensileErr).HasColumnName("ID_ANIA_SITA_COP_MENSILE_ERR");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.OraInizioElaborazione)
                    .HasColumnName("ORA_INIZIO_ELABORAZIONE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.PrgRecord).HasColumnName("PRG_RECORD");

                entity.Property(e => e.TipoErrore)
                    .HasColumnName("TIPO_ERRORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoRecordTestata)
                    .HasColumnName("TIPO_RECORD_TESTATA")
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSitaCopertureErr>(entity =>
            {
                entity.HasKey(e => e.KeyAniaSitaCopErr);

                entity.ToTable("ANIA_SITA_COPERTURE_ERR", "IAGENCY");

                entity.HasIndex(e => e.IdAniaSitaCopInvii)
                    .HasName("XX02ANIA_SITA_COPERTURE_ERR");

                entity.HasIndex(e => new { e.IdAniaSitaCopErr, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_SITA_COPERTURE_ERR");

                entity.Property(e => e.KeyAniaSitaCopErr)
                    .HasColumnName("KEY_ANIA_SITA_COP_ERR")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneErrore)
                    .HasColumnName("DESCRIZIONE_ERRORE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaSitaCopErr).HasColumnName("ID_ANIA_SITA_COP_ERR");

                entity.Property(e => e.IdAniaSitaCopInvii).HasColumnName("ID_ANIA_SITA_COP_INVII");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ProtocolloAniaMovErr)
                    .HasColumnName("PROTOCOLLO_ANIA_MOV_ERR")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.ProtocolloAniaNuovaCop)
                    .HasColumnName("PROTOCOLLO_ANIA_NUOVA_COP")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.TipoAggiornamento)
                    .HasColumnName("TIPO_AGGIORNAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoErrore)
                    .HasColumnName("TIPO_ERRORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AniaSitaCopertureInvii>(entity =>
            {
                entity.HasKey(e => e.KeyAniaSitaCopInvii);

                entity.ToTable("ANIA_SITA_COPERTURE_INVII", "IAGENCY");

                entity.HasIndex(e => new { e.IdAniaSitaCopInvii, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_SITA_COPERTURE_INVII");

                entity.HasIndex(e => new { e.DtInvio, e.NPolizza, e.IdentificativoVeic })
                    .HasName("XX03ANIA_SITA_COPERTURE_INVII");

                entity.HasIndex(e => new { e.CodImpresa, e.FormatoIdentVeic, e.IdentificativoVeic, e.TipoVeic, e.DtEffettoCopertura, e.DtScadenzaCopertura, e.OrarioDecorrenzaCop, e.IdentFiscaleContr, e.IdentFiscaleProp })
                    .HasName("XX02ANIA_SITA_COPERTURE_INVII");

                entity.Property(e => e.KeyAniaSitaCopInvii)
                    .HasColumnName("KEY_ANIA_SITA_COP_INVII")
                    .ValueGeneratedNever();

                entity.Property(e => e.CampoAnia)
                    .HasColumnName("CAMPO_ANIA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CanaleTrasmissione)
                    .HasColumnName("CANALE_TRASMISSIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CausaleMovimento)
                    .HasColumnName("CAUSALE_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodFunzione)
                    .HasColumnName("COD_FUNZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodServizio)
                    .HasColumnName("COD_SERVIZIO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodUser)
                    .HasColumnName("COD_USER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceIur)
                    .HasColumnName("CODICE_IUR")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagSocialeContr)
                    .HasColumnName("COGNOME_RAG_SOCIALE_CONTR")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagSocialeProp)
                    .HasColumnName("COGNOME_RAG_SOCIALE_PROP")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffettoCopertura)
                    .HasColumnName("DT_EFFETTO_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoPolizza)
                    .HasColumnName("DT_EFFETTO_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("DT_ELABORAZIONE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIncassoEffConv)
                    .HasColumnName("DT_INCASSO_EFF_CONV")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicezioneFlusso)
                    .HasColumnName("DT_RICEZIONE_FLUSSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaCopertura)
                    .HasColumnName("DT_SCADENZA_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPolizza)
                    .HasColumnName("DT_SCADENZA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaSospensione)
                    .HasColumnName("DT_SCADENZA_SOSPENSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EsitoElaborazione)
                    .HasColumnName("ESITO_ELABORAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgControlloMovimenti)
                    .HasColumnName("FLG_CONTROLLO_MOVIMENTI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDaReinviareSino)
                    .HasColumnName("FLG_DA_REINVIARE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloMctc)
                    .HasColumnName("FLG_TIPO_VEICOLO_MCTC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormIdenVeicAltern)
                    .HasColumnName("FORM_IDEN_VEIC_ALTERN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormaTariffaria)
                    .HasColumnName("FORMA_TARIFFARIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FormatoIdentVeic)
                    .HasColumnName("FORMATO_IDENT_VEIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaSitaCopInvii).HasColumnName("ID_ANIA_SITA_COP_INVII");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdenVeicAltern)
                    .HasColumnName("IDEN_VEIC_ALTERN")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdentFiscaleContr)
                    .HasColumnName("IDENT_FISCALE_CONTR")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentFiscaleProp)
                    .HasColumnName("IDENT_FISCALE_PROP")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentificativoVeic)
                    .HasColumnName("IDENTIFICATIVO_VEIC")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ModalitaPagamento)
                    .HasColumnName("MODALITA_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NGiorniEstenzioneCop).HasColumnName("N_GIORNI_ESTENZIONE_COP");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NomeContr)
                    .HasColumnName("NOME_CONTR")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NomeProp)
                    .HasColumnName("NOME_PROP")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.OraRicezioneFlusso)
                    .HasColumnName("ORA_RICEZIONE_FLUSSO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.OrarioDecorrenzaCop)
                    .HasColumnName("ORARIO_DECORRENZA_COP")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.OrarioScadenzaCop)
                    .HasColumnName("ORARIO_SCADENZA_COP")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .HasColumnName("PASSWORD")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PresenzaBlackBox)
                    .HasColumnName("PRESENZA_BLACK_BOX")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ProtocolloAniaMovErr)
                    .HasColumnName("PROTOCOLLO_ANIA_MOV_ERR")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.ProtocolloAniaNuovaCop)
                    .HasColumnName("PROTOCOLLO_ANIA_NUOVA_COP")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.RifRichiedente)
                    .HasColumnName("RIF_RICHIEDENTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RifRichiesta)
                    .HasColumnName("RIF_RICHIESTA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.StringaAnomalie)
                    .HasColumnName("STRINGA_ANOMALIE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TimestampValidazione)
                    .HasColumnName("TIMESTAMP_VALIDAZIONE")
                    .HasMaxLength(26)
                    .IsUnicode(false);

                entity.Property(e => e.TipoAggiornamento)
                    .HasColumnName("TIPO_AGGIORNAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoMovimento)
                    .HasColumnName("TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoPolizza)
                    .HasColumnName("TIPO_POLIZZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoVeic)
                    .HasColumnName("TIPO_VEIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AniaSitaRichieste>(entity =>
            {
                entity.HasKey(e => e.IdRichiestaSita)
                    .HasName("SYS_C0074899");

                entity.ToTable("ANIA_SITA_RICHIESTE", "ISUITE");

                entity.HasIndex(e => e.DtRiferimentoRichiesta)
                    .HasName("XX03ANIA_SITA_RICHIESTE");

                entity.HasIndex(e => e.IdRichiestaIbd)
                    .HasName("XX02ANIA_SITA_RICHIESTE");

                entity.Property(e => e.IdRichiestaSita)
                    .HasColumnName("ID_RICHIESTA_SITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodFiscaleContraente)
                    .HasColumnName("COD_FISCALE_CONTRAENTE")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodFiscaleProprietario)
                    .HasColumnName("COD_FISCALE_PROPRIETARIO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceImpresa)
                    .HasColumnName("CODICE_IMPRESA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceIur)
                    .HasColumnName("CODICE_IUR")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffettoCopertura)
                    .HasColumnName("DT_EFFETTO_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoPolizza)
                    .HasColumnName("DT_EFFETTO_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtElabAnia)
                    .HasColumnName("DT_ELAB_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIncasso)
                    .HasColumnName("DT_INCASSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiferimentoRichiesta)
                    .HasColumnName("DT_RIFERIMENTO_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaCopertura)
                    .HasColumnName("DT_SCADENZA_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaMora)
                    .HasColumnName("DT_SCADENZA_MORA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPolizza)
                    .HasColumnName("DT_SCADENZA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaSospensione)
                    .HasColumnName("DT_SCADENZA_SOSPENSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoAggiornamento)
                    .HasColumnName("DT_ULTIMO_AGGIORNAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgBlackBoxPresenteSino)
                    .HasColumnName("FLG_BLACK_BOX_PRESENTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCanaleUltimoAgg)
                    .HasColumnName("FLG_CANALE_ULTIMO_AGG")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgControlloIdentVeic)
                    .HasColumnName("FLG_CONTROLLO_IDENT_VEIC")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDatiCompleti)
                    .HasColumnName("FLG_DATI_COMPLETI")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEsitoElaborazione)
                    .HasColumnName("FLG_ESITO_ELABORAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgModalitaPagamento)
                    .HasColumnName("FLG_MODALITA_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTacitoRinnovoSino)
                    .HasColumnName("FLG_TACITO_RINNOVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCausale)
                    .HasColumnName("FLG_TIPO_CAUSALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMovimento)
                    .HasColumnName("FLG_TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoPolizza)
                    .HasColumnName("FLG_TIPO_POLIZZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoTargaAlternativo)
                    .HasColumnName("FLG_TIPO_TARGA_ALTERNATIVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoTariffa)
                    .HasColumnName("FLG_TIPO_TARIFFA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoVeicolo)
                    .HasColumnName("FLG_TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloMctc)
                    .HasColumnName("FLG_TIPO_VEICOLO_MCTC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GiorniEstensioneCopertura)
                    .HasColumnName("GIORNI_ESTENSIONE_COPERTURA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdRichiestaIbd).HasColumnName("ID_RICHIESTA_IBD");

                entity.Property(e => e.IdentVeicoloAlternativo)
                    .HasColumnName("IDENT_VEICOLO_ALTERNATIVO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroPolizza)
                    .HasColumnName("NUMERO_POLIZZA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.OraEffettoCopertura)
                    .HasColumnName("ORA_EFFETTO_COPERTURA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.OraScadenzaCopertura)
                    .HasColumnName("ORA_SCADENZA_COPERTURA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.ProtocolloAnia)
                    .HasColumnName("PROTOCOLLO_ANIA")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.RifRichiedenteUltimoAgg)
                    .HasColumnName("RIF_RICHIEDENTE_ULTIMO_AGG")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RifRichiestaUltimoAgg)
                    .HasColumnName("RIF_RICHIESTA_ULTIMO_AGG")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.TimeUltimoAgg)
                    .HasColumnName("TIME_ULTIMO_AGG")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.UserUltimoAgg)
                    .HasColumnName("USER_ULTIMO_AGG")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSitaSovrapCoperture>(entity =>
            {
                entity.HasKey(e => e.KeyAniaSitaSovrapCop);

                entity.ToTable("ANIA_SITA_SOVRAP_COPERTURE", "IAGENCY");

                entity.HasIndex(e => new { e.IdAniaSitaSovrapCop, e.DtStoScadenzaFis })
                    .HasName("XX01ANIA_SITA_SOVRAP_COPERTURE");

                entity.HasIndex(e => new { e.FormatoIdentVeic, e.IdentificativoVeic, e.TipoVeicolo })
                    .HasName("XX02ANIA_SITA_SOVRAP_COPERTURE");

                entity.Property(e => e.KeyAniaSitaSovrapCop)
                    .HasColumnName("KEY_ANIA_SITA_SOVRAP_COP")
                    .ValueGeneratedNever();

                entity.Property(e => e.CasisticaRilevata)
                    .HasColumnName("CASISTICA_RILEVATA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodFlusso)
                    .HasColumnName("COD_FLUSSO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaDestinataria)
                    .HasColumnName("COD_IMPRESA_DESTINATARIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("COD_IMPRESA_MITTENTE")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodIurNuovoInserimento)
                    .HasColumnName("COD_IUR_NUOVO_INSERIMENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CodIurSovrapposto)
                    .HasColumnName("COD_IUR_SOVRAPPOSTO")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("DT_ELABORAZIONE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FormatoIdentVeic)
                    .HasColumnName("FORMATO_IDENT_VEIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaSitaSovrapCop).HasColumnName("ID_ANIA_SITA_SOVRAP_COP");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentificativoVeic)
                    .HasColumnName("IDENTIFICATIVO_VEIC")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.InsCausaleMovimento)
                    .HasColumnName("INS_CAUSALE_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InsCodImpresa)
                    .HasColumnName("INS_COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.InsDtEffettoCopertura)
                    .HasColumnName("INS_DT_EFFETTO_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.InsDtScadenzaCopertura)
                    .HasColumnName("INS_DT_SCADENZA_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.InsDtScadenzaMora)
                    .HasColumnName("INS_DT_SCADENZA_MORA")
                    .HasColumnType("datetime");

                entity.Property(e => e.InsDtUltimoAgg)
                    .HasColumnName("INS_DT_ULTIMO_AGG")
                    .HasColumnType("datetime");

                entity.Property(e => e.InsIdentFiscaleContr)
                    .HasColumnName("INS_IDENT_FISCALE_CONTR")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.InsIdentFiscaleProp)
                    .HasColumnName("INS_IDENT_FISCALE_PROP")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.InsNPolizza)
                    .HasColumnName("INS_N_POLIZZA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.InsOraEffettoCop)
                    .HasColumnName("INS_ORA_EFFETTO_COP")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.InsOraScadenzaMora)
                    .HasColumnName("INS_ORA_SCADENZA_MORA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.InsOrarioScadenzaCop)
                    .HasColumnName("INS_ORARIO_SCADENZA_COP")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.InsProtocollo)
                    .HasColumnName("INS_PROTOCOLLO")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.InsTipoMovimento)
                    .HasColumnName("INS_TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.InsTipoVeicoloMctc)
                    .HasColumnName("INS_TIPO_VEICOLO_MCTC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.OraInizioElaborazione)
                    .HasColumnName("ORA_INIZIO_ELABORAZIONE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.PrgRecord).HasColumnName("PRG_RECORD");

                entity.Property(e => e.RuoloImpDestFlusso)
                    .HasColumnName("RUOLO_IMP_DEST_FLUSSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SovCausaleMovimento)
                    .HasColumnName("SOV_CAUSALE_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SovCodImpresa)
                    .HasColumnName("SOV_COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.SovDtEffettoCopertura)
                    .HasColumnName("SOV_DT_EFFETTO_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.SovDtScadenzaCopertura)
                    .HasColumnName("SOV_DT_SCADENZA_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.SovDtScadenzaMora)
                    .HasColumnName("SOV_DT_SCADENZA_MORA")
                    .HasColumnType("datetime");

                entity.Property(e => e.SovDtUltimoAgg)
                    .HasColumnName("SOV_DT_ULTIMO_AGG")
                    .HasColumnType("datetime");

                entity.Property(e => e.SovFormatoIdentVeic)
                    .HasColumnName("SOV_FORMATO_IDENT_VEIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SovIdentFiscaleContr)
                    .HasColumnName("SOV_IDENT_FISCALE_CONTR")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.SovIdentFiscaleProp)
                    .HasColumnName("SOV_IDENT_FISCALE_PROP")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.SovIdentificativoVeic)
                    .HasColumnName("SOV_IDENTIFICATIVO_VEIC")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.SovNPolizza)
                    .HasColumnName("SOV_N_POLIZZA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.SovOraEffettoCop)
                    .HasColumnName("SOV_ORA_EFFETTO_COP")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.SovOraScadenzaMora)
                    .HasColumnName("SOV_ORA_SCADENZA_MORA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.SovOrarioScadenzaCop)
                    .HasColumnName("SOV_ORARIO_SCADENZA_COP")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.SovProtocollo)
                    .HasColumnName("SOV_PROTOCOLLO")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.SovTipoMovimento)
                    .HasColumnName("SOV_TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SovTipoVeicolo)
                    .HasColumnName("SOV_TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SovTipoVeicoloMctc)
                    .HasColumnName("SOV_TIPO_VEICOLO_MCTC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoRecord)
                    .HasColumnName("TIPO_RECORD")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRecordTestata)
                    .HasColumnName("TIPO_RECORD_TESTATA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AniaSituazioniResp>(entity =>
            {
                entity.HasKey(e => e.KeyAniaSituazioneResp);

                entity.ToTable("ANIA_SITUAZIONI_RESP", "ICLAIMS");

                entity.HasIndex(e => e.DtStoEffettoFis)
                    .HasName("XX05ANIA_SITUAZIONI_RESP");

                entity.HasIndex(e => e.DtStoEffettoLog)
                    .HasName("XX03ANIA_SITUAZIONI_RESP");

                entity.HasIndex(e => e.DtStoScadenzaFis)
                    .HasName("XX06ANIA_SITUAZIONI_RESP");

                entity.HasIndex(e => e.DtStoScadenzaLog)
                    .HasName("XX04ANIA_SITUAZIONI_RESP");

                entity.HasIndex(e => e.IdAniaSituazioneResp)
                    .HasName("XX01ANIA_SITUAZIONI_RESP");

                entity.HasIndex(e => new { e.AniaDtMaxArbitrato, e.DtStoScadenzaLog })
                    .HasName("XX09ANIA_SITUAZIONI_RESP");

                entity.HasIndex(e => new { e.AniaDtMaxRisp, e.DtStoScadenzaLog })
                    .HasName("XX08ANIA_SITUAZIONI_RESP");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaLog })
                    .HasName("XX02ANIA_SITUAZIONI_RESP");

                entity.HasIndex(e => new { e.AniaSitResp, e.AniaDtElaborazione, e.DtStoScadenzaLog })
                    .HasName("XX07ANIA_SITUAZIONI_RESP");

                entity.Property(e => e.KeyAniaSituazioneResp)
                    .HasColumnName("KEY_ANIA_SITUAZIONE_RESP")
                    .ValueGeneratedNever();

                entity.Property(e => e.AniaCodImpCtp)
                    .HasColumnName("ANIA_COD_IMP_CTP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AniaCodResp)
                    .HasColumnName("ANIA_COD_RESP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.AniaDtElaborazione)
                    .HasColumnName("ANIA_DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.AniaDtMaxArbitrato)
                    .HasColumnName("ANIA_DT_MAX_ARBITRATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.AniaDtMaxRisp)
                    .HasColumnName("ANIA_DT_MAX_RISP")
                    .HasColumnType("datetime");

                entity.Property(e => e.AniaImpResp)
                    .HasColumnName("ANIA_IMP_RESP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AniaPrimaImpresaArbitrato)
                    .HasColumnName("ANIA_PRIMA_IMPRESA_ARBITRATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AniaProgressivo).HasColumnName("ANIA_PROGRESSIVO");

                entity.Property(e => e.AniaRagioneTorto)
                    .HasColumnName("ANIA_RAGIONE_TORTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.AniaRuoloImpresa)
                    .HasColumnName("ANIA_RUOLO_IMPRESA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.AniaSecondaImpresaArbitrato)
                    .HasColumnName("ANIA_SECONDA_IMPRESA_ARBITRATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.AniaSitResp)
                    .HasColumnName("ANIA_SIT_RESP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.AniaStatoResp)
                    .HasColumnName("ANIA_STATO_RESP")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.AniaTipoAggiornamento)
                    .HasColumnName("ANIA_TIPO_AGGIORNAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CasoCidNostro)
                    .HasColumnName("CASO_CID_NOSTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CasoCidTerzo)
                    .HasColumnName("CASO_CID_TERZO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ClassificazioneNa)
                    .HasColumnName("CLASSIFICAZIONE_NA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CptDtInvio)
                    .HasColumnName("CPT_DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.CtpCasoCidNostro)
                    .HasColumnName("CTP_CASO_CID_NOSTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CtpCasoCidTerzo)
                    .HasColumnName("CTP_CASO_CID_TERZO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CtpClassificazioneNa)
                    .HasColumnName("CTP_CLASSIFICAZIONE_NA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CtpDicResp)
                    .HasColumnName("CTP_DIC_RESP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CtpFlgAutorita)
                    .HasColumnName("CTP_FLG_AUTORITA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CtpFlgTestimoni)
                    .HasColumnName("CTP_FLG_TESTIMONI")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CtpImpResp)
                    .HasColumnName("CTP_IMP_RESP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CtpMotivoForzatura)
                    .HasColumnName("CTP_MOTIVO_FORZATURA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CtpNote)
                    .HasColumnName("CTP_NOTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CtpRagioneTorto)
                    .HasColumnName("CTP_RAGIONE_TORTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CtpTipoDichiarazione)
                    .HasColumnName("CTP_TIPO_DICHIARAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CtpTipoFirma)
                    .HasColumnName("CTP_TIPO_FIRMA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DicResp)
                    .HasColumnName("DIC_RESP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimaPredisposizione)
                    .HasColumnName("DT_PRIMA_PREDISPOSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimoInvio)
                    .HasColumnName("DT_PRIMO_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimoOk)
                    .HasColumnName("DT_PRIMO_OK")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimaPredisposizione)
                    .HasColumnName("DT_ULTIMA_PREDISPOSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoInvio)
                    .HasColumnName("DT_ULTIMO_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoOk)
                    .HasColumnName("DT_ULTIMO_OK")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAutorita)
                    .HasColumnName("FLG_AUTORITA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTestimoni)
                    .HasColumnName("FLG_TESTIMONI")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCardAnia)
                    .HasColumnName("FLG_TIPO_CARD_ANIA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoMittente)
                    .HasColumnName("FLG_TIPO_MITTENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgUltimoFlussoAccettSino)
                    .HasColumnName("FLG_ULTIMO_FLUSSO_ACCETT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaSituazioneResp).HasColumnName("ID_ANIA_SITUAZIONE_RESP");

                entity.Property(e => e.IdCinquinaCard).HasColumnName("ID_CINQUINA_CARD");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdFlussoCard).HasColumnName("ID_FLUSSO_CARD");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpResp)
                    .HasColumnName("IMP_RESP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MotivoForzatura)
                    .HasColumnName("MOTIVO_FORZATURA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RagioneTorto)
                    .HasColumnName("RAGIONE_TORTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TipoDichiarazione)
                    .HasColumnName("TIPO_DICHIARAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TipoFirma)
                    .HasColumnName("TIPO_FIRMA")
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSituazioniRespDett>(entity =>
            {
                entity.HasKey(e => e.IdAniaSituazioneRespDett);

                entity.ToTable("ANIA_SITUAZIONI_RESP_DETT", "ICLAIMS");

                entity.HasIndex(e => e.DtElaborazioneAnia)
                    .HasName("XX05ANIA_SITUAZIONI_RESP_DETT");

                entity.HasIndex(e => e.DtInvio)
                    .HasName("XX04ANIA_SITUAZIONI_RESP_DETT");

                entity.HasIndex(e => e.IdAniaRespCard)
                    .HasName("XX02ANIA_SITUAZIONI_RESP_DETT");

                entity.HasIndex(e => e.IdAniaSituazioneRespDett)
                    .HasName("XX01ANIA_SITUAZIONI_RESP_DETT");

                entity.HasIndex(e => e.IdFlussoCard)
                    .HasName("XX03ANIA_SITUAZIONI_RESP_DETT");

                entity.HasIndex(e => new { e.IdSinistro, e.FlgTipoMittente })
                    .HasName("XX06ANIA_SITUAZIONI_RESP_DETT");

                entity.Property(e => e.IdAniaSituazioneRespDett)
                    .HasColumnName("ID_ANIA_SITUAZIONE_RESP_DETT")
                    .ValueGeneratedNever();

                entity.Property(e => e.ADisposizioneGestionaria)
                    .HasColumnName("A_DISPOSIZIONE_GESTIONARIA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CasoCidCtp)
                    .HasColumnName("CASO_CID_CTP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CasoCidMittente)
                    .HasColumnName("CASO_CID_MITTENTE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodPrimaImpresaArbitrato)
                    .HasColumnName("COD_PRIMA_IMPRESA_ARBITRATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodSecondaImpresaArbitrato)
                    .HasColumnName("COD_SECONDA_IMPRESA_ARBITRATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceImpresaResp)
                    .HasColumnName("CODICE_IMPRESA_RESP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceImpresaRespAnia)
                    .HasColumnName("CODICE_IMPRESA_RESP_ANIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceUtenteWeb)
                    .HasColumnName("CODICE_UTENTE_WEB")
                    .HasMaxLength(14)
                    .IsUnicode(false);

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("DT_ELABORAZIONE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtMaxRichiestaArbitrato)
                    .HasColumnName("DT_MAX_RICHIESTA_ARBITRATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtMaxRispostaCtp)
                    .HasColumnName("DT_MAX_RISPOSTA_CTP")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPredisposizione)
                    .HasColumnName("DT_PREDISPOSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDichiarazioneResp)
                    .HasColumnName("FLG_DICHIARAZIONE_RESP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDichiarazioneRespAnia)
                    .HasColumnName("FLG_DICHIARAZIONE_RESP_ANIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgInterfaccia)
                    .HasColumnName("FLG_INTERFACCIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInterventoAutoritaSino)
                    .HasColumnName("FLG_INTERVENTO_AUTORITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoForzaturaResp)
                    .HasColumnName("FLG_MOTIVO_FORZATURA_RESP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPresenzaTestimoniSino)
                    .HasColumnName("FLG_PRESENZA_TESTIMONI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRagioneTorto)
                    .HasColumnName("FLG_RAGIONE_TORTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRagioneTortoAnia)
                    .HasColumnName("FLG_RAGIONE_TORTO_ANIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRuoloImpresa)
                    .HasColumnName("FLG_RUOLO_IMPRESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScartatoSino)
                    .HasColumnName("FLG_SCARTATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSituazioneRespAnia)
                    .HasColumnName("FLG_SITUAZIONE_RESP_ANIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoResponsabilitaAnia)
                    .HasColumnName("FLG_STATO_RESPONSABILITA_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAggiornamento)
                    .HasColumnName("FLG_TIPO_AGGIORNAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDichiarazione)
                    .HasColumnName("FLG_TIPO_DICHIARAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoFirma)
                    .HasColumnName("FLG_TIPO_FIRMA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMittente)
                    .HasColumnName("FLG_TIPO_MITTENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaRespCard).HasColumnName("ID_ANIA_RESP_CARD");

                entity.Property(e => e.IdAniaSinistroCard).HasColumnName("ID_ANIA_SINISTRO_CARD");

                entity.Property(e => e.IdFlussoCard).HasColumnName("ID_FLUSSO_CARD");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSospesoCard).HasColumnName("ID_SOSPESO_CARD");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PrgMovimentoAnia).HasColumnName("PRG_MOVIMENTO_ANIA");
            });

            modelBuilder.Entity<AniaSiviRichieste>(entity =>
            {
                entity.HasKey(e => e.IdRichiestaSivi)
                    .HasName("SYS_C0074910");

                entity.ToTable("ANIA_SIVI_RICHIESTE", "ISUITE");

                entity.HasIndex(e => e.DtRiferimentoRichiesta)
                    .HasName("XX03ANIA_SIVI_RICHIESTE");

                entity.HasIndex(e => e.IdRichiestaIbd)
                    .HasName("XX02ANIA_SIVI_RICHIESTE");

                entity.Property(e => e.IdRichiestaSivi)
                    .HasColumnName("ID_RICHIESTA_SIVI")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoImmatricolazione).HasColumnName("ANNO_IMMATRICOLAZIONE");

                entity.Property(e => e.AppGancioTraino)
                    .HasColumnName("APP_GANCIO_TRAINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ApprovazioneFrenoServizio)
                    .HasColumnName("APPROVAZIONE_FRENO_SERVIZIO")
                    .HasMaxLength(28)
                    .IsUnicode(false);

                entity.Property(e => e.ApprovazioneSilenziatore)
                    .HasColumnName("APPROVAZIONE_SILENZIATORE")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Assi).HasColumnName("ASSI");

                entity.Property(e => e.CaratteristicheBase)
                    .HasColumnName("CARATTERISTICHE_BASE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CavalliFiscali).HasColumnName("CAVALLI_FISCALI");

                entity.Property(e => e.Cilindrata)
                    .HasColumnName("CILINDRATA")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Cilindri).HasColumnName("CILINDRI");

                entity.Property(e => e.ClasseInquinamento)
                    .HasColumnName("CLASSE_INQUINAMENTO")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.CodIstatComuneResidenza)
                    .HasColumnName("COD_ISTAT_COMUNE_RESIDENZA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodIstatProvinciaResidenza)
                    .HasColumnName("COD_ISTAT_PROVINCIA_RESIDENZA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodNazionalitaCostruttore)
                    .HasColumnName("COD_NAZIONALITA_COSTRUTTORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodProvinciaEmissione)
                    .HasColumnName("COD_PROVINCIA_EMISSIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodProvinciaResidenza)
                    .HasColumnName("COD_PROVINCIA_RESIDENZA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceCicCiclomotore)
                    .HasColumnName("CODICE_CIC_CICLOMOTORE")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceFiscaleIntestatario)
                    .HasColumnName("CODICE_FISCALE_INTESTATARIO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceImologazione)
                    .HasColumnName("CODICE_IMOLOGAZIONE")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.DataAggOmologazione)
                    .HasColumnName("DATA_AGG_OMOLOGAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataInizioCircolazione)
                    .HasColumnName("DATA_INIZIO_CIRCOLAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataOmologazione)
                    .HasColumnName("DATA_OMOLOGAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DenominazioneCommerciale)
                    .HasColumnName("DENOMINAZIONE_COMMERCIALE")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DtEmissione)
                    .HasColumnName("DT_EMISSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtImmatricolazione)
                    .HasColumnName("DT_IMMATRICOLAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiferimentoRichiesta)
                    .HasColumnName("DT_RIFERIMENTO_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.EmissioniBiossidoAzoto)
                    .HasColumnName("EMISSIONI_BIOSSIDO_AZOTO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.EmissioniCo2).HasColumnName("EMISSIONI_CO2");

                entity.Property(e => e.FlgCategoriaUso)
                    .HasColumnName("FLG_CATEGORIA_USO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCodiceCarrozzeria)
                    .HasColumnName("FLG_CODICE_CARROZZERIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCodiceCausaleEmissione)
                    .HasColumnName("FLG_CODICE_CAUSALE_EMISSIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEsitoElaborazione)
                    .HasColumnName("FLG_ESITO_ELABORAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgProvenienzaVeicolo)
                    .HasColumnName("FLG_PROVENIENZA_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAlimentazione)
                    .HasColumnName("FLG_TIPO_ALIMENTAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoImmatricolazione)
                    .HasColumnName("FLG_TIPO_IMMATRICOLAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoTargaAlternativo)
                    .HasColumnName("FLG_TIPO_TARGA_ALTERNATIVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicolo)
                    .HasColumnName("FLG_TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloMctc)
                    .HasColumnName("FLG_TIPO_VEICOLO_MCTC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GiriMotore).HasColumnName("GIRI_MOTORE");

                entity.Property(e => e.GiriNumeroDecibel).HasColumnName("GIRI_NUMERO_DECIBEL");

                entity.Property(e => e.IdRichiestaIbd).HasColumnName("ID_RICHIESTA_IBD");

                entity.Property(e => e.IdentVeicoloAlternativo)
                    .HasColumnName("IDENT_VEICOLO_ALTERNATIVO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Idfuoristrada)
                    .HasColumnName("IDFUORISTRADA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IndEmissioniAzoto)
                    .HasColumnName("IND_EMISSIONI_AZOTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IndEmissioniCarbonio)
                    .HasColumnName("IND_EMISSIONI_CARBONIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Interasse1)
                    .HasColumnName("INTERASSE_1")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Interasse2)
                    .HasColumnName("INTERASSE_2")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Interasse3)
                    .HasColumnName("INTERASSE_3")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Larghezza).HasColumnName("LARGHEZZA");

                entity.Property(e => e.LimitatoreVelocita)
                    .HasColumnName("LIMITATORE_VELOCITA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LimiteAnnoRichiamo)
                    .HasColumnName("LIMITE_ANNO_RICHIAMO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LimiteNumeroRichiami).HasColumnName("LIMITE_NUMERO_RICHIAMI");

                entity.Property(e => e.Lunghezza).HasColumnName("LUNGHEZZA");

                entity.Property(e => e.MarcaModello)
                    .HasColumnName("MARCA_MODELLO")
                    .HasMaxLength(42)
                    .IsUnicode(false);

                entity.Property(e => e.Marce).HasColumnName("MARCE");

                entity.Property(e => e.ModOmologazione)
                    .HasColumnName("MOD_OMOLOGAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ModelloMotore)
                    .HasColumnName("MODELLO_MOTORE")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.NomeComuneResidenza)
                    .HasColumnName("NOME_COMUNE_RESIDENZA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NomeCostruttore)
                    .HasColumnName("NOME_COSTRUTTORE")
                    .HasMaxLength(42)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroDecibel)
                    .HasColumnName("NUMERO_DECIBEL")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroPostiAnteriori).HasColumnName("NUMERO_POSTI_ANTERIORI");

                entity.Property(e => e.NumeroPostiTotali).HasColumnName("NUMERO_POSTI_TOTALI");

                entity.Property(e => e.NumeroTempi).HasColumnName("NUMERO_TEMPI");

                entity.Property(e => e.PesoPotComplessiva).HasColumnName("PESO_POT_COMPLESSIVA");

                entity.Property(e => e.PesoPotRimorchiabile).HasColumnName("PESO_POT_RIMORCHIABILE");

                entity.Property(e => e.PesoPotenzialeMassima).HasColumnName("PESO_POTENZIALE_MASSIMA");

                entity.Property(e => e.PesoRimorchiabile).HasColumnName("PESO_RIMORCHIABILE");

                entity.Property(e => e.PesoSuRalla).HasColumnName("PESO_SU_RALLA");

                entity.Property(e => e.PesoVeicolo).HasColumnName("PESO_VEICOLO");

                entity.Property(e => e.Pneumatici)
                    .HasColumnName("PNEUMATICI")
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.Portata).HasColumnName("PORTATA");

                entity.Property(e => e.PortataPot).HasColumnName("PORTATA_POT");

                entity.Property(e => e.PortataUtile).HasColumnName("PORTATA_UTILE");

                entity.Property(e => e.PostiASedere).HasColumnName("POSTI_A_SEDERE");

                entity.Property(e => e.PostiDiServizio).HasColumnName("POSTI_DI_SERVIZIO");

                entity.Property(e => e.PostiInPiedi).HasColumnName("POSTI_IN_PIEDI");

                entity.Property(e => e.PotenzaMassima).HasColumnName("POTENZA_MASSIMA");

                entity.Property(e => e.RallaA).HasColumnName("RALLA_A");

                entity.Property(e => e.RallaDa).HasColumnName("RALLA_DA");

                entity.Property(e => e.RapportoPonte)
                    .HasColumnName("RAPPORTO_PONTE")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.RapportoTrasmissione)
                    .HasColumnName("RAPPORTO_TRASMISSIONE")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.RigheDescrittive)
                    .HasColumnName("RIGHE_DESCRITTIVE")
                    .HasMaxLength(72)
                    .IsUnicode(false);

                entity.Property(e => e.Sbalzo).HasColumnName("SBALZO");

                entity.Property(e => e.Servosterzo)
                    .HasColumnName("SERVOSTERZO")
                    .HasMaxLength(18)
                    .IsUnicode(false);

                entity.Property(e => e.StatoEsteroCorpiSpeciali)
                    .HasColumnName("STATO_ESTERO_CORPI_SPECIALI")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.SysDtElaborazione)
                    .HasColumnName("SYS_DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Tara).HasColumnName("TARA");

                entity.Property(e => e.TargaPrecedente)
                    .HasColumnName("TARGA_PRECEDENTE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TipoAbs)
                    .HasColumnName("TIPO_ABS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoCambio)
                    .HasColumnName("TIPO_CAMBIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.TipoFrenoServizio)
                    .HasColumnName("TIPO_FRENO_SERVIZIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoFrenoSoccorso)
                    .HasColumnName("TIPO_FRENO_SOCCORSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoModello)
                    .HasColumnName("TIPO_MODELLO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TipoPotenzaMassima)
                    .HasColumnName("TIPO_POTENZA_MASSIMA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.TipoValidita)
                    .HasColumnName("TIPO_VALIDITA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipologiaProprietario)
                    .HasColumnName("TIPOLOGIA_PROPRIETARIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Valore)
                    .HasColumnName("VALORE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.VarianteModello)
                    .HasColumnName("VARIANTE_MODELLO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.VelocitaMassima).HasColumnName("VELOCITA_MASSIMA");

                entity.Property(e => e.VersioneModello)
                    .HasColumnName("VERSIONE_MODELLO")
                    .HasMaxLength(35)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSospesiCard>(entity =>
            {
                entity.HasKey(e => e.IdSospesoCard)
                    .HasName("SYS_C0016092");

                entity.ToTable("ANIA_SOSPESI_CARD", "ICLAIMS");

                entity.Property(e => e.IdSospesoCard)
                    .HasColumnName("ID_SOSPESO_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodAniaCompInv)
                    .IsRequired()
                    .HasColumnName("COD_ANIA_COMP_INV")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodAniaCompRic)
                    .IsRequired()
                    .HasColumnName("COD_ANIA_COMP_RIC")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .IsUnicode(false);

                entity.Property(e => e.DtAvvenimento)
                    .HasColumnName("DT_AVVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFlussoRic)
                    .HasColumnName("DT_FLUSSO_RIC")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCausaleStato)
                    .HasColumnName("FLG_CAUSALE_STATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgIgnoraForfaitSino)
                    .HasColumnName("FLG_IGNORA_FORFAIT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStato)
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRecord)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_RECORD")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.NomeFile)
                    .HasColumnName("NOME_FILE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NomeFlusso)
                    .HasColumnName("NOME_FLUSSO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Progressivo).HasColumnName("PROGRESSIVO");

                entity.Property(e => e.RecordRic)
                    .HasColumnName("RECORD_RIC")
                    .IsUnicode(false);

                entity.Property(e => e.TargaInv)
                    .IsRequired()
                    .HasColumnName("TARGA_INV")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TargaRic)
                    .IsRequired()
                    .HasColumnName("TARGA_RIC")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSsrcRichieste>(entity =>
            {
                entity.HasKey(e => e.IdRichiestaSsrc)
                    .HasName("SYS_C0074952");

                entity.ToTable("ANIA_SSRC_RICHIESTE", "ISUITE");

                entity.HasIndex(e => e.DtRiferimentoRichiesta)
                    .HasName("XX03ANIA_SRC_RICHIESTE");

                entity.HasIndex(e => e.IdRichiestaIbd)
                    .HasName("XX02ANIA_SSRC_RICHIESTE");

                entity.Property(e => e.IdRichiestaSsrc)
                    .HasColumnName("ID_RICHIESTA_SSRC")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceImpresaDebitrice)
                    .HasColumnName("CODICE_IMPRESA_DEBITRICE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceImpresaDenunciante)
                    .HasColumnName("CODICE_IMPRESA_DENUNCIANTE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DtAccadimentoSinistro)
                    .HasColumnName("DT_ACCADIMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInserimentoSinistro)
                    .HasColumnName("DT_INSERIMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiferimentoRichiesta)
                    .HasColumnName("DT_RIFERIMENTO_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEsitoElaborazione)
                    .HasColumnName("FLG_ESITO_ELABORAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRuoloVeicolo)
                    .HasColumnName("FLG_RUOLO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCidParzialeTotale)
                    .HasColumnName("FLG_TIPO_CID_PARZIALE_TOTALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloControparte)
                    .HasColumnName("FLG_TIPO_VEICOLO_CONTROPARTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloDenunciante)
                    .HasColumnName("FLG_TIPO_VEICOLO_DENUNCIANTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloRichiesta)
                    .HasColumnName("FLG_TIPO_VEICOLO_RICHIESTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRichiestaIbd).HasColumnName("ID_RICHIESTA_IBD");

                entity.Property(e => e.NumeroSinistroDenunciante)
                    .HasColumnName("NUMERO_SINISTRO_DENUNCIANTE")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.TargaVeicoloControparte)
                    .HasColumnName("TARGA_VEICOLO_CONTROPARTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TargaVeicoloDenunciante)
                    .HasColumnName("TARGA_VEICOLO_DENUNCIANTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSurrogheInps>(entity =>
            {
                entity.HasKey(e => e.KeyAniaSurrogaInps);

                entity.ToTable("ANIA_SURROGHE_INPS", "ICLAIMS");

                entity.HasIndex(e => new { e.IdAniaSurrogaInps, e.DtStoScadenzaLog })
                    .HasName("XX02ANIA_SURROGHE_INPS");

                entity.HasIndex(e => new { e.Identificativo, e.DtStoScadenzaLog })
                    .HasName("XX03ANIA_SURROGHE_INPS");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.DtFlusso, e.CodFiscaleDanneggiato })
                    .HasName("XX01ANIA_SURROGHE_INPS");

                entity.Property(e => e.KeyAniaSurrogaInps)
                    .HasColumnName("KEY_ANIA_SURROGA_INPS")
                    .ValueGeneratedNever();

                entity.Property(e => e.Causale)
                    .HasColumnName("CAUSALE")
                    .HasMaxLength(27)
                    .IsUnicode(false);

                entity.Property(e => e.CodFiscaleDanneggiato)
                    .HasColumnName("COD_FISCALE_DANNEGGIATO")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresa)
                    .HasColumnName("COD_IMPRESA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaDestinataria)
                    .HasColumnName("COD_IMPRESA_DESTINATARIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodImpresaMittente)
                    .HasColumnName("COD_IMPRESA_MITTENTE")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeDanneggiato)
                    .HasColumnName("COGNOME_DANNEGGIATO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DtAccadimentoSinistro)
                    .HasColumnName("DT_ACCADIMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAperturaPratica)
                    .HasColumnName("DT_APERTURA_PRATICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEsitoPratica)
                    .HasColumnName("DT_ESITO_PRATICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFlusso)
                    .HasColumnName("DT_FLUSSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPagImpresa)
                    .HasColumnName("DT_SCADENZA_PAG_IMPRESA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaRisposta)
                    .HasColumnName("DT_SCADENZA_RISPOSTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.Edizione)
                    .HasColumnName("EDIZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCausaleStato)
                    .HasColumnName("FLG_CAUSALE_STATO")
                    .IsUnicode(false);

                entity.Property(e => e.GiorniIndennizzati).HasColumnName("GIORNI_INDENNIZZATI");

                entity.Property(e => e.Iban)
                    .HasColumnName("IBAN")
                    .HasMaxLength(27)
                    .IsUnicode(false);

                entity.Property(e => e.IdAniaSurrogaInps).HasColumnName("ID_ANIA_SURROGA_INPS");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteBonifico).HasColumnName("ID_UTENTE_BONIFICO");

                entity.Property(e => e.Identificativo)
                    .HasColumnName("IDENTIFICATIVO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ImpIndennitaMalattia)
                    .HasColumnName("IMP_INDENNITA_MALATTIA")
                    .HasColumnType("decimal(9, 2)");

                entity.Property(e => e.ImpInteressiLegali)
                    .HasColumnName("IMP_INTERESSI_LEGALI")
                    .HasColumnType("decimal(9, 2)");

                entity.Property(e => e.ImpRivalutazione)
                    .HasColumnName("IMP_RIVALUTAZIONE")
                    .HasColumnType("decimal(9, 2)");

                entity.Property(e => e.ImpSpeseAmministrative)
                    .HasColumnName("IMP_SPESE_AMMINISTRATIVE")
                    .HasColumnType("decimal(9, 2)");

                entity.Property(e => e.ImpTotaleSurroga)
                    .HasColumnName("IMP_TOTALE_SURROGA")
                    .HasColumnType("decimal(9, 2)");

                entity.Property(e => e.ImpTotaleSurrogaPrec)
                    .HasColumnName("IMP_TOTALE_SURROGA_PREC")
                    .HasColumnType("decimal(9, 2)");

                entity.Property(e => e.NomeDanneggiato)
                    .HasColumnName("NOME_DANNEGGIATO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.OraFlusso)
                    .HasColumnName("ORA_FLUSSO")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Progressivo)
                    .HasColumnName("PROGRESSIVO")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.ProtocolloEsitoPratica)
                    .HasColumnName("PROTOCOLLO_ESITO_PRATICA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ProtocolloPratica)
                    .HasColumnName("PROTOCOLLO_PRATICA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ResponseCode)
                    .HasColumnName("RESPONSE_CODE")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRecord)
                    .HasColumnName("TIPO_RECORD")
                    .HasMaxLength(6)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaSurrogheInpsErr>(entity =>
            {
                entity.HasKey(e => e.KeyAniaSurrogaInpsErr);

                entity.ToTable("ANIA_SURROGHE_INPS_ERR", "ICLAIMS");

                entity.HasIndex(e => new { e.IdAniaSurrogaInps, e.DtStoScadenzaLog })
                    .HasName("XX01ANIA_SURROGHE_INPS_ERR");

                entity.Property(e => e.KeyAniaSurrogaInpsErr)
                    .HasColumnName("KEY_ANIA_SURROGA_INPS_ERR")
                    .ValueGeneratedNever();

                entity.Property(e => e.DescErrore)
                    .HasColumnName("DESC_ERRORE")
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAniaSurrogaInps).HasColumnName("ID_ANIA_SURROGA_INPS");

                entity.Property(e => e.IdAniaSurrogaInpsErr).HasColumnName("ID_ANIA_SURROGA_INPS_ERR");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<AniaSurrogheInpsTrans>(entity =>
            {
                entity.HasKey(e => e.IdAniaSurrogheInpsTrans);

                entity.ToTable("ANIA_SURROGHE_INPS_TRANS", "ICLAIMS");

                entity.HasIndex(e => e.DtAbbinamento)
                    .HasName("XX01ANIA_SURROGHE_INPS_TRANS");

                entity.Property(e => e.IdAniaSurrogheInpsTrans)
                    .HasColumnName("ID_ANIA_SURROGHE_INPS_TRANS")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAbbinamento)
                    .HasColumnName("DT_ABBINAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.StringaFlusso)
                    .HasColumnName("STRINGA_FLUSSO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaTipoDannoCard>(entity =>
            {
                entity.HasKey(e => e.KeyAniaTipoDannoCard);

                entity.ToTable("ANIA_TIPO_DANNO_CARD", "ICLAIMS");

                entity.HasIndex(e => e.IdAniaTipoDannoCard)
                    .HasName("XX01ANIA_TIPO_DANNO_CARD");

                entity.HasIndex(e => new { e.DtPrimaPredisposizione, e.DtStoScadenzaLog })
                    .HasName("XX04ANIA_TIPO_DANNO_CARD");

                entity.HasIndex(e => new { e.DtPrimoInvio, e.DtStoScadenzaLog })
                    .HasName("XX05ANIA_TIPO_DANNO_CARD");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX02ANIA_TIPO_DANNO_CARD");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoDannoAnia, e.DtStoScadenzaLog })
                    .HasName("XX03ANIA_TIPO_DANNO_CARD");

                entity.Property(e => e.KeyAniaTipoDannoCard)
                    .HasColumnName("KEY_ANIA_TIPO_DANNO_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAggiornamento)
                    .HasColumnName("DT_AGGIORNAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimaPredisposizione)
                    .HasColumnName("DT_PRIMA_PREDISPOSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimoInvio)
                    .HasColumnName("DT_PRIMO_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimoOk)
                    .HasColumnName("DT_PRIMO_OK")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimaPredisposizione)
                    .HasColumnName("DT_ULTIMA_PREDISPOSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoInvio)
                    .HasColumnName("DT_ULTIMO_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoOk)
                    .HasColumnName("DT_ULTIMO_OK")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoPagamento)
                    .HasColumnName("DT_ULTIMO_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAvvisoChiusuraUffSino)
                    .HasColumnName("FLG_AVVISO_CHIUSURA_UFF_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiusuraUfficioSino)
                    .HasColumnName("FLG_CHIUSURA_UFFICIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDefinizionePagamentoAnia)
                    .HasColumnName("FLG_DEFINIZIONE_PAGAMENTO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGestionarioDebitore)
                    .HasColumnName("FLG_GESTIONARIO_DEBITORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIndicatoreCttFranchigia)
                    .HasColumnName("FLG_INDICATORE_CTT_FRANCHIGIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoChiusura)
                    .HasColumnName("FLG_MOTIVO_CHIUSURA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMovBloccatiDaAniaSino)
                    .HasColumnName("FLG_MOV_BLOCCATI_DA_ANIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoDannoAnia)
                    .HasColumnName("FLG_STATO_DANNO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoConvenzione)
                    .HasColumnName("FLG_TIPO_CONVENZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoConvenzioneAnia)
                    .HasColumnName("FLG_TIPO_CONVENZIONE_ANIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDannoAnia)
                    .HasColumnName("FLG_TIPO_DANNO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgUltimoFlussoAccettSino)
                    .HasColumnName("FLG_ULTIMO_FLUSSO_ACCETT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgUltimoTipoFlussoAgg)
                    .HasColumnName("FLG_ULTIMO_TIPO_FLUSSO_AGG")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.ForfaitRecuperatoAnia)
                    .HasColumnName("FORFAIT_RECUPERATO_ANIA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ForfaitRecuperatoWise)
                    .HasColumnName("FORFAIT_RECUPERATO_WISE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IdAniaPartitaCard).HasColumnName("ID_ANIA_PARTITA_CARD");

                entity.Property(e => e.IdAniaSinistroCard).HasColumnName("ID_ANIA_SINISTRO_CARD");

                entity.Property(e => e.IdAniaTipoDannoCard).HasColumnName("ID_ANIA_TIPO_DANNO_CARD");

                entity.Property(e => e.IdAniaTipoDannoDett).HasColumnName("ID_ANIA_TIPO_DANNO_DETT");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentificativoPartita)
                    .HasColumnName("IDENTIFICATIVO_PARTITA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ImportoRiserva)
                    .HasColumnName("IMPORTO_RISERVA")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<AniaTipoDannoCardDettAgg>(entity =>
            {
                entity.HasKey(e => e.IdAniaTipoDannoDettAgg)
                    .HasName("PK_ANIA_TIPO_DANNO_DETT_AGG");

                entity.ToTable("ANIA_TIPO_DANNO_CARD_DETT_AGG", "ICLAIMS");

                entity.HasIndex(e => e.DtElaborazioneAnia)
                    .HasName("XX05ANIA_TIPO_DANNO_DETT_AGG");

                entity.HasIndex(e => e.DtInvio)
                    .HasName("XX04ANIA_TIPO_DANNO_DETT_AGG");

                entity.HasIndex(e => e.IdAniaTipoDannoCard)
                    .HasName("XX02ANIA_TIPO_DANNO_DETT_AGG");

                entity.HasIndex(e => e.IdAniaTipoDannoDettAgg)
                    .HasName("XX01ANIA_TIPO_DANNO_DETT_AGG");

                entity.HasIndex(e => e.IdFlussoCard)
                    .HasName("XX03ANIA_TIPO_DANNO_DETT_AGG");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoDannoAnia, e.FlgGestionarioDebitore })
                    .HasName("XX06ANIA_TIPO_DANNO_DETT_AGG");

                entity.Property(e => e.IdAniaTipoDannoDettAgg)
                    .HasColumnName("ID_ANIA_TIPO_DANNO_DETT_AGG")
                    .ValueGeneratedNever();

                entity.Property(e => e.ADisposizioneGestionaria)
                    .HasColumnName("A_DISPOSIZIONE_GESTIONARIA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DtAggiornamento)
                    .HasColumnName("DT_AGGIORNAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtContabileRiferimento)
                    .HasColumnName("DT_CONTABILE_RIFERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("DT_ELABORAZIONE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDefinizionePagamento)
                    .HasColumnName("FLG_DEFINIZIONE_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGestionarioDebitore)
                    .HasColumnName("FLG_GESTIONARIO_DEBITORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScartatoSino)
                    .HasColumnName("FLG_SCARTATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoConvenzioneAnia)
                    .HasColumnName("FLG_TIPO_CONVENZIONE_ANIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDannoAnia)
                    .HasColumnName("FLG_TIPO_DANNO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaTipoDannoCard).HasColumnName("ID_ANIA_TIPO_DANNO_CARD");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFlussoCard).HasColumnName("ID_FLUSSO_CARD");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSospesoCard).HasColumnName("ID_SOSPESO_CARD");

                entity.Property(e => e.IdentificativoPartita)
                    .HasColumnName("IDENTIFICATIVO_PARTITA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ImportoRiserva)
                    .HasColumnName("IMPORTO_RISERVA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrgMovimentoAnia).HasColumnName("PRG_MOVIMENTO_ANIA");
            });

            modelBuilder.Entity<AniaTipoDannoCardDettChiu>(entity =>
            {
                entity.HasKey(e => e.IdAniaTipoDannoDettChius)
                    .HasName("PK_ANIA_TIPO_DANNO_DETT_CHIU");

                entity.ToTable("ANIA_TIPO_DANNO_CARD_DETT_CHIU", "ICLAIMS");

                entity.HasIndex(e => e.DtElaborazioneAnia)
                    .HasName("XX05ANIA_TIPO_DANNO_DETT_CHIU");

                entity.HasIndex(e => e.DtInvio)
                    .HasName("XX04ANIA_TIPO_DANNO_DETT_CHIU");

                entity.HasIndex(e => e.IdFlussoCard)
                    .HasName("XX03ANIA_TIPO_DANNO_DETT_CHIU");

                entity.HasIndex(e => new { e.IdAniaTipoDannoCard, e.FlgTipoFlusso })
                    .HasName("XX02ANIA_TIPO_DANNO_DETT_CHIU");

                entity.HasIndex(e => new { e.IdAniaTipoDannoDettChius, e.FlgTipoFlusso })
                    .HasName("XX01ANIA_TIPO_DANNO_DETT_CHIU");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoDannoAnia, e.FlgGestionarioDebitore })
                    .HasName("XX06ANIA_TIPO_DANNO_DETT_CHIU");

                entity.Property(e => e.IdAniaTipoDannoDettChius)
                    .HasColumnName("ID_ANIA_TIPO_DANNO_DETT_CHIUS")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("DT_ELABORAZIONE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoAggAnia)
                    .HasColumnName("DT_ULTIMO_AGG_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgGestionarioDebitore)
                    .HasColumnName("FLG_GESTIONARIO_DEBITORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRuoloImpresa)
                    .HasColumnName("FLG_RUOLO_IMPRESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDannoAnia)
                    .HasColumnName("FLG_TIPO_DANNO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoFlusso)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_FLUSSO")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoFlussoUltimoAgg)
                    .HasColumnName("FLG_TIPO_FLUSSO_ULTIMO_AGG")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaTipoDannoCard).HasColumnName("ID_ANIA_TIPO_DANNO_CARD");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFlussoCard).HasColumnName("ID_FLUSSO_CARD");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSospesoCard).HasColumnName("ID_SOSPESO_CARD");

                entity.Property(e => e.IdentificativoPartita)
                    .HasColumnName("IDENTIFICATIVO_PARTITA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IdentificativoSinistro)
                    .HasColumnName("IDENTIFICATIVO_SINISTRO")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaTipoDannoCardDettDen>(entity =>
            {
                entity.HasKey(e => e.IdAniaTipoDannoDettDen)
                    .HasName("PK_ANIA_TIPO_DANNO_DETT_DEN");

                entity.ToTable("ANIA_TIPO_DANNO_CARD_DETT_DEN", "ICLAIMS");

                entity.HasIndex(e => e.DtElaborazioneAnia)
                    .HasName("XX05ANIA_TIPO_DANNO_DETT_DEN");

                entity.HasIndex(e => e.DtInvio)
                    .HasName("XX04ANIA_TIPO_DANNO_DETT_DEN");

                entity.HasIndex(e => e.IdAniaTipoDannoCard)
                    .HasName("XX02ANIA_TIPO_DANNO_DETT_DEN");

                entity.HasIndex(e => e.IdAniaTipoDannoDettDen)
                    .HasName("XX01ANIA_TIPO_DANNO_DETT_DEN");

                entity.HasIndex(e => e.IdFlussoCard)
                    .HasName("XX03ANIA_TIPO_DANNO_DETT_DEN");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoDannoAnia, e.FlgGestionarioDebitore })
                    .HasName("XX06ANIA_TIPO_DANNO_DETT_DEN");

                entity.Property(e => e.IdAniaTipoDannoDettDen)
                    .HasColumnName("ID_ANIA_TIPO_DANNO_DETT_DEN")
                    .ValueGeneratedNever();

                entity.Property(e => e.ADisposizioneGestionaria)
                    .HasColumnName("A_DISPOSIZIONE_GESTIONARIA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DtAggiornamento)
                    .HasColumnName("DT_AGGIORNAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("DT_ELABORAZIONE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDefinizionePagamento)
                    .HasColumnName("FLG_DEFINIZIONE_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGestionarioDebitore)
                    .HasColumnName("FLG_GESTIONARIO_DEBITORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIndicatoreCttFranchigia)
                    .HasColumnName("FLG_INDICATORE_CTT_FRANCHIGIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScartatoSino)
                    .HasColumnName("FLG_SCARTATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoDannoAnia)
                    .HasColumnName("FLG_STATO_DANNO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoConvenzioneAnia)
                    .HasColumnName("FLG_TIPO_CONVENZIONE_ANIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDannoAnia)
                    .HasColumnName("FLG_TIPO_DANNO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMovimentoDenuncia)
                    .HasColumnName("FLG_TIPO_MOVIMENTO_DENUNCIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaTipoDannoCard).HasColumnName("ID_ANIA_TIPO_DANNO_CARD");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFlussoCard).HasColumnName("ID_FLUSSO_CARD");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSospesoCard).HasColumnName("ID_SOSPESO_CARD");

                entity.Property(e => e.IdentificativoPartita)
                    .HasColumnName("IDENTIFICATIVO_PARTITA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ImportoRiserva)
                    .HasColumnName("IMPORTO_RISERVA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MotivoChiusura)
                    .HasColumnName("MOTIVO_CHIUSURA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrgMovimentoAnia).HasColumnName("PRG_MOVIMENTO_ANIA");
            });

            modelBuilder.Entity<AniaTipoDannoCardDettPag>(entity =>
            {
                entity.HasKey(e => e.IdAniaTipoDannoDettPag)
                    .HasName("PK_ANIA_TIPO_DANNO_DETT_PAG");

                entity.ToTable("ANIA_TIPO_DANNO_CARD_DETT_PAG", "ICLAIMS");

                entity.HasIndex(e => e.DtElaborazioneAnia)
                    .HasName("XX05ANIA_TIPO_DANNO_DETT_PAG");

                entity.HasIndex(e => e.DtInvio)
                    .HasName("XX04ANIA_TIPO_DANNO_DETT_PAG");

                entity.HasIndex(e => e.IdAniaTipoDannoCard)
                    .HasName("XX02ANIA_TIPO_DANNO_DETT_PAG");

                entity.HasIndex(e => e.IdAniaTipoDannoDettPag)
                    .HasName("XX01ANIA_TIPO_DANNO_DETT_PAG");

                entity.HasIndex(e => e.IdFlussoCard)
                    .HasName("XX03ANIA_TIPO_DANNO_DETT_PAG");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoDannoAnia, e.FlgGestionarioDebitore })
                    .HasName("XX06ANIA_TIPO_DANNO_DETT_PAG");

                entity.Property(e => e.IdAniaTipoDannoDettPag)
                    .HasColumnName("ID_ANIA_TIPO_DANNO_DETT_PAG")
                    .ValueGeneratedNever();

                entity.Property(e => e.ADisposizioneGestionaria)
                    .HasColumnName("A_DISPOSIZIONE_GESTIONARIA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DtContabileRiferimento)
                    .HasColumnName("DT_CONTABILE_RIFERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtElaborazioneAnia)
                    .HasColumnName("DT_ELABORAZIONE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPredisposizione)
                    .HasColumnName("DT_PREDISPOSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCausaleMovimento)
                    .HasColumnName("FLG_CAUSALE_MOVIMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDefinizionePagamento)
                    .HasColumnName("FLG_DEFINIZIONE_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgErogazioneImporto)
                    .HasColumnName("FLG_EROGAZIONE_IMPORTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGestionarioDebitore)
                    .HasColumnName("FLG_GESTIONARIO_DEBITORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIdentificativoMassimale)
                    .HasColumnName("FLG_IDENTIFICATIVO_MASSIMALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRuoloImpresa)
                    .HasColumnName("FLG_RUOLO_IMPRESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScartatoSino)
                    .HasColumnName("FLG_SCARTATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoConvenzioneAnia)
                    .HasColumnName("FLG_TIPO_CONVENZIONE_ANIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDannoAnia)
                    .HasColumnName("FLG_TIPO_DANNO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMovimento)
                    .HasColumnName("FLG_TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoResponsabilitaDeb)
                    .HasColumnName("FLG_TIPO_RESPONSABILITA_DEB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoSiglaProvForfait)
                    .HasColumnName("FLG_TIPO_SIGLA_PROV_FORFAIT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicoloForfait)
                    .HasColumnName("FLG_TIPO_VEICOLO_FORFAIT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ForfaitAccreditatoGest)
                    .HasColumnName("FORFAIT_ACCREDITATO_GEST")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IdAniaSinistroCard).HasColumnName("ID_ANIA_SINISTRO_CARD");

                entity.Property(e => e.IdAniaTipoDannoCard).HasColumnName("ID_ANIA_TIPO_DANNO_CARD");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFlussoCard).HasColumnName("ID_FLUSSO_CARD");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSospesoCard).HasColumnName("ID_SOSPESO_CARD");

                entity.Property(e => e.IdentificativoPartita)
                    .HasColumnName("IDENTIFICATIVO_PARTITA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ImportoLiquidatoGest)
                    .HasColumnName("IMPORTO_LIQUIDATO_GEST")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrgMovimentoAnia).HasColumnName("PRG_MOVIMENTO_ANIA");

                entity.Property(e => e.ProvResProprietarioGest)
                    .HasColumnName("PROV_RES_PROPRIETARIO_GEST")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ProvinciaForfait)
                    .HasColumnName("PROVINCIA_FORFAIT")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AniaTipoDocumentazione>(entity =>
            {
                entity.HasKey(e => e.IdAniaTipoDocumentazione);

                entity.ToTable("ANIA_TIPO_DOCUMENTAZIONE", "ICLAIMS");

                entity.HasIndex(e => e.FlgCodice)
                    .HasName("XX01ANIA_TIPO_DOCUMENTAZIONE");

                entity.Property(e => e.IdAniaTipoDocumentazione)
                    .HasColumnName("ID_ANIA_TIPO_DOCUMENTAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DescrizioneSituazioneResp)
                    .HasColumnName("DESCRIZIONE_SITUAZIONE_RESP")
                    .IsUnicode(false);

                entity.Property(e => e.DimensioneMassimaKb).HasColumnName("DIMENSIONE_MASSIMA_KB");

                entity.Property(e => e.FlgCodice)
                    .HasColumnName("FLG_CODICE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroAllegati).HasColumnName("NUMERO_ALLEGATI");
            });

            modelBuilder.Entity<AntifrodeNoSinistro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ANTIFRODE_NO_SINISTRO", "ICLAIMS");

                entity.Property(e => e.AnnoEsito)
                    .HasColumnName("ANNO_ESITO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.DtEvento)
                    .HasColumnName("DT_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvestigazione)
                    .HasColumnName("DT_INVESTIGAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimaSegnalazione)
                    .HasColumnName("DT_PRIMA_SEGNALAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEntePrimaSegnalazione)
                    .HasColumnName("FLG_ENTE_PRIMA_SEGNALAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgParteCivile)
                    .HasColumnName("FLG_PARTE_CIVILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgParteOffesa)
                    .HasColumnName("FLG_PARTE_OFFESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistroFantasmaSino)
                    .HasColumnName("FLG_SINISTRO_FANTASMA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistroSerialeSino)
                    .HasColumnName("FLG_SINISTRO_SERIALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTriage)
                    .HasColumnName("FLG_TRIAGE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAntifrodeNoSin).HasColumnName("ID_ANTIFRODE_NO_SIN");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdCslRadicamento).HasColumnName("ID_CSL_RADICAMENTO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpInvestigazioni)
                    .HasColumnName("IMP_INVESTIGAZIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeyAntifrodeNoSin).HasColumnName("KEY_ANTIFRODE_NO_SIN");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.NoteInvestigazioni)
                    .HasColumnName("NOTE_INVESTIGAZIONI")
                    .IsUnicode(false);

                entity.Property(e => e.NumeroParti).HasColumnName("NUMERO_PARTI");

                entity.Property(e => e.SinistroSerialeNote)
                    .HasColumnName("SINISTRO_SERIALE_NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.Targa)
                    .HasColumnName("TARGA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TipoEsito)
                    .HasColumnName("TIPO_ESITO")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AppoAnag>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("APPO_ANAG");

                entity.Property(e => e.Cap)
                    .HasColumnName("CAP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CodTipoDocumento)
                    .HasColumnName("COD_TIPO_DOCUMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceFiscale)
                    .HasColumnName("CODICE_FISCALE")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cognome)
                    .HasColumnName("COGNOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagioneSociale)
                    .HasColumnName("COGNOME_RAGIONE_SOCIALE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DescComuneIndirizzo)
                    .HasColumnName("DESC_COMUNE_INDIRIZZO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DescComuneNascita)
                    .HasColumnName("DESC_COMUNE_NASCITA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtNascita)
                    .HasColumnName("DT_NASCITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRilascio)
                    .HasColumnName("DT_RILASCIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgSesso)
                    .HasColumnName("FLG_SESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAnagrafica)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ANAGRAFICA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTitoloOnorifico)
                    .HasColumnName("FLG_TITOLO_ONORIFICO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Indirizzo)
                    .HasColumnName("INDIRIZZO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nome)
                    .HasColumnName("NOME")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroDocumento)
                    .HasColumnName("NUMERO_DOCUMENTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PartitaIva)
                    .HasColumnName("PARTITA_IVA")
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ProvinciaIndirizzo)
                    .HasColumnName("PROVINCIA_INDIRIZZO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ProvinciaNascita)
                    .HasColumnName("PROVINCIA_NASCITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AppoEsito>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("APPO_ESITO");

                entity.Property(e => e.CodAgenzia)
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CompetenzaEsito)
                    .HasColumnName("COMPETENZA_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEsito)
                    .HasColumnName("DT_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFogliocassa)
                    .HasColumnName("DT_FOGLIOCASSA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysEsito)
                    .HasColumnName("DT_SYS_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoEsito)
                    .HasColumnName("FLG_TIPO_ESITO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdTabMotivoStorno)
                    .HasColumnName("ID_TAB_MOTIVO_STORNO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitEsito)
                    .HasColumnName("ID_TIT_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTitolo)
                    .HasColumnName("ID_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpIncassato)
                    .HasColumnName("IMP_INCASSATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NFogliocassa)
                    .HasColumnName("N_FOGLIOCASSA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<AppoFixRvProvv>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("APPO_FIX_RV_PROVV");

                entity.Property(e => e.DtEvento)
                    .HasColumnName("DT_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysEvento)
                    .IsRequired()
                    .HasColumnName("DT_SYS_EVENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Esito)
                    .HasColumnName("ESITO")
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdGaranzia).HasColumnName("ID_GARANZIA");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdProvvigioneFix).HasColumnName("ID_PROVVIGIONE_FIX");

                entity.Property(e => e.IdProvvigioneOrig).HasColumnName("ID_PROVVIGIONE_ORIG");

                entity.Property(e => e.IdRetevenditaFix).HasColumnName("ID_RETEVENDITA_FIX");

                entity.Property(e => e.IdRetevenditaOrig).HasColumnName("ID_RETEVENDITA_ORIG");

                entity.Property(e => e.KeyEvento).HasColumnName("KEY_EVENTO");

                entity.Property(e => e.KeyProvvigioneFix).HasColumnName("KEY_PROVVIGIONE_FIX");

                entity.Property(e => e.KeyProvvigioneOrig).HasColumnName("KEY_PROVVIGIONE_ORIG");

                entity.Property(e => e.LivelloFix).HasColumnName("LIVELLO_FIX");

                entity.Property(e => e.LivelloOrig).HasColumnName("LIVELLO_ORIG");

                entity.Property(e => e.NPolizza)
                    .IsRequired()
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TimestampElaborazione)
                    .IsRequired()
                    .HasColumnName("TIMESTAMP_ELABORAZIONE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<AppoPol>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("APPO_POL");

                entity.Property(e => e.AbbinataFinanziamento)
                    .HasColumnName("ABBINATA_FINANZIAMENTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CodAgenzia)
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodAgenziaFirma)
                    .HasColumnName("COD_AGENZIA_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodCompagnia)
                    .HasColumnName("COD_COMPAGNIA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodFraz)
                    .HasColumnName("COD_FRAZ")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProdotto)
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore)
                    .HasColumnName("COD_PRODUTTORE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore4)
                    .HasColumnName("COD_PRODUTTORE4")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore4Firma)
                    .HasColumnName("COD_PRODUTTORE4_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttoreFirma)
                    .HasColumnName("COD_PRODUTTORE_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRamo)
                    .IsRequired()
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagenzia)
                    .HasColumnName("COD_SUBAGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagenziaFirma)
                    .HasColumnName("COD_SUBAGENZIA_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoRata)
                    .HasColumnName("DT_EFFETTO_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEmissione)
                    .HasColumnName("DT_EMISSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaOrig)
                    .HasColumnName("DT_SCADENZA_ORIG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPolizza)
                    .HasColumnName("DT_SCADENZA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaRata)
                    .HasColumnName("DT_SCADENZA_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FascicoloInformativo)
                    .HasColumnName("FASCICOLO_INFORMATIVO")
                    .IsUnicode(false);

                entity.Property(e => e.FlgAppartenenzaRete)
                    .HasColumnName("FLG_APPARTENENZA_RETE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDurata)
                    .IsRequired()
                    .HasColumnName("FLG_DURATA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTacRinnovoSino)
                    .IsRequired()
                    .HasColumnName("FLG_TAC_RINNOVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCoass)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.HhmmEffetto)
                    .HasColumnName("HHMM_EFFETTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolStato)
                    .HasColumnName("ID_POL_STATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(38, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NPratica)
                    .HasColumnName("N_PRATICA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NProposta)
                    .HasColumnName("N_PROPOSTA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PctAccessori)
                    .HasColumnName("PCT_ACCESSORI")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.TipoCedente)
                    .HasColumnName("TIPO_CEDENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoProdotto)
                    .HasColumnName("TIPO_PRODOTTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoTariffa)
                    .HasColumnName("TIPO_TARIFFA")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AppoPol2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("APPO_POL2");

                entity.Property(e => e.AbbinataFinanziamento)
                    .HasColumnName("ABBINATA_FINANZIAMENTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CodAgenzia)
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodAgenziaFirma)
                    .HasColumnName("COD_AGENZIA_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodCompagnia)
                    .HasColumnName("COD_COMPAGNIA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodFraz)
                    .HasColumnName("COD_FRAZ")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProdotto)
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore)
                    .HasColumnName("COD_PRODUTTORE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore4)
                    .HasColumnName("COD_PRODUTTORE4")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore4Firma)
                    .HasColumnName("COD_PRODUTTORE4_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttoreFirma)
                    .HasColumnName("COD_PRODUTTORE_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRamo)
                    .IsRequired()
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagenzia)
                    .HasColumnName("COD_SUBAGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagenziaFirma)
                    .HasColumnName("COD_SUBAGENZIA_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoRata)
                    .HasColumnName("DT_EFFETTO_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEmissione)
                    .HasColumnName("DT_EMISSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaOrig)
                    .HasColumnName("DT_SCADENZA_ORIG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPolizza)
                    .HasColumnName("DT_SCADENZA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaRata)
                    .HasColumnName("DT_SCADENZA_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FascicoloInformativo)
                    .HasColumnName("FASCICOLO_INFORMATIVO")
                    .IsUnicode(false);

                entity.Property(e => e.FlgAppartenenzaRete)
                    .HasColumnName("FLG_APPARTENENZA_RETE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDurata)
                    .IsRequired()
                    .HasColumnName("FLG_DURATA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTacRinnovoSino)
                    .IsRequired()
                    .HasColumnName("FLG_TAC_RINNOVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCoass)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.HhmmEffetto)
                    .HasColumnName("HHMM_EFFETTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolStato)
                    .HasColumnName("ID_POL_STATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(38, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NPratica)
                    .HasColumnName("N_PRATICA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NProposta)
                    .HasColumnName("N_PROPOSTA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PctAccessori)
                    .HasColumnName("PCT_ACCESSORI")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.TipoCedente)
                    .HasColumnName("TIPO_CEDENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoProdotto)
                    .HasColumnName("TIPO_PRODOTTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoTariffa)
                    .HasColumnName("TIPO_TARIFFA")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AppoPol3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("APPO_POL3");

                entity.Property(e => e.AbbinataFinanziamento)
                    .HasColumnName("ABBINATA_FINANZIAMENTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CodAgenzia)
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodAgenziaFirma)
                    .HasColumnName("COD_AGENZIA_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodCompagnia)
                    .HasColumnName("COD_COMPAGNIA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodFraz)
                    .HasColumnName("COD_FRAZ")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProdotto)
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore)
                    .HasColumnName("COD_PRODUTTORE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore4)
                    .HasColumnName("COD_PRODUTTORE4")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore4Firma)
                    .HasColumnName("COD_PRODUTTORE4_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttoreFirma)
                    .HasColumnName("COD_PRODUTTORE_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRamo)
                    .IsRequired()
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagenzia)
                    .HasColumnName("COD_SUBAGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagenziaFirma)
                    .HasColumnName("COD_SUBAGENZIA_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoRata)
                    .HasColumnName("DT_EFFETTO_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEmissione)
                    .HasColumnName("DT_EMISSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaOrig)
                    .HasColumnName("DT_SCADENZA_ORIG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPolizza)
                    .HasColumnName("DT_SCADENZA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaRata)
                    .HasColumnName("DT_SCADENZA_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FascicoloInformativo)
                    .HasColumnName("FASCICOLO_INFORMATIVO")
                    .IsUnicode(false);

                entity.Property(e => e.FlgAppartenenzaRete)
                    .HasColumnName("FLG_APPARTENENZA_RETE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDurata)
                    .IsRequired()
                    .HasColumnName("FLG_DURATA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTacRinnovoSino)
                    .IsRequired()
                    .HasColumnName("FLG_TAC_RINNOVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCoass)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.HhmmEffetto)
                    .HasColumnName("HHMM_EFFETTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolStato)
                    .HasColumnName("ID_POL_STATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(38, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NPratica)
                    .HasColumnName("N_PRATICA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NProposta)
                    .HasColumnName("N_PROPOSTA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PctAccessori)
                    .HasColumnName("PCT_ACCESSORI")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.TipoCedente)
                    .HasColumnName("TIPO_CEDENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoProdotto)
                    .HasColumnName("TIPO_PRODOTTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoTariffa)
                    .HasColumnName("TIPO_TARIFFA")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AppoPol4>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("APPO_POL4");

                entity.Property(e => e.AbbinataFinanziamento)
                    .HasColumnName("ABBINATA_FINANZIAMENTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CodAgenzia)
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodAgenziaFirma)
                    .HasColumnName("COD_AGENZIA_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodCompagnia)
                    .HasColumnName("COD_COMPAGNIA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodFraz)
                    .HasColumnName("COD_FRAZ")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProdotto)
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore)
                    .HasColumnName("COD_PRODUTTORE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore4)
                    .HasColumnName("COD_PRODUTTORE4")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore4Firma)
                    .HasColumnName("COD_PRODUTTORE4_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttoreFirma)
                    .HasColumnName("COD_PRODUTTORE_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRamo)
                    .IsRequired()
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagenzia)
                    .HasColumnName("COD_SUBAGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagenziaFirma)
                    .HasColumnName("COD_SUBAGENZIA_FIRMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoRata)
                    .HasColumnName("DT_EFFETTO_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEmissione)
                    .HasColumnName("DT_EMISSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaOrig)
                    .HasColumnName("DT_SCADENZA_ORIG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPolizza)
                    .HasColumnName("DT_SCADENZA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaRata)
                    .HasColumnName("DT_SCADENZA_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FascicoloInformativo)
                    .HasColumnName("FASCICOLO_INFORMATIVO")
                    .IsUnicode(false);

                entity.Property(e => e.FlgAppartenenzaRete)
                    .HasColumnName("FLG_APPARTENENZA_RETE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDurata)
                    .IsRequired()
                    .HasColumnName("FLG_DURATA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTacRinnovoSino)
                    .IsRequired()
                    .HasColumnName("FLG_TAC_RINNOVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCoass)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.HhmmEffetto)
                    .HasColumnName("HHMM_EFFETTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolStato)
                    .HasColumnName("ID_POL_STATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(38, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NPratica)
                    .HasColumnName("N_PRATICA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NProposta)
                    .HasColumnName("N_PROPOSTA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PctAccessori)
                    .HasColumnName("PCT_ACCESSORI")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.TipoCedente)
                    .HasColumnName("TIPO_CEDENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoProdotto)
                    .HasColumnName("TIPO_PRODOTTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipoTariffa)
                    .HasColumnName("TIPO_TARIFFA")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AppoPolFix>(entity =>
            {
                entity.HasKey(e => e.IdPolizza);

                entity.ToTable("APPO_POL_FIX");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .ValueGeneratedNever();
            });

            modelBuilder.Entity<AppoPolcoass>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("APPO_POLCOASS");

                entity.Property(e => e.CodAgeCoass)
                    .HasColumnName("COD_AGE_COASS")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodCompagnia)
                    .HasColumnName("COD_COMPAGNIA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCompCoass)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_COMP_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolCoass)
                    .HasColumnName("ID_POL_COASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NPolizzaDelegataria)
                    .HasColumnName("N_POLIZZA_DELEGATARIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PctQuota)
                    .HasColumnName("PCT_QUOTA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<AppoQPolFix>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("APPO_qPOL_FIX");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdTitTipoTitolo)
                    .HasColumnName("ID_TIT_TIPO_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTitolo)
                    .HasColumnName("ID_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AppoTit>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("APPO_TIT");

                entity.Property(e => e.CodAgenzia)
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore)
                    .HasColumnName("COD_PRODUTTORE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore4)
                    .HasColumnName("COD_PRODUTTORE4")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagenzia)
                    .HasColumnName("COD_SUBAGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodTipoTitolo)
                    .HasColumnName("COD_TIPO_TITOLO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CompetenzaEmesso)
                    .HasColumnName("COMPETENZA_EMESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCopertura)
                    .HasColumnName("DT_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysEmesso)
                    .HasColumnName("DT_SYS_EMESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoTitolo)
                    .HasColumnName("FLG_STATO_TITOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitEsito)
                    .HasColumnName("ID_TIT_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTitolo)
                    .HasColumnName("ID_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpLordo)
                    .HasColumnName("IMP_LORDO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpLordo100)
                    .HasColumnName("IMP_LORDO_100")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotProvAcquistoAge)
                    .HasColumnName("TOT_PROV_ACQUISTO_AGE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotProvIncassoAge)
                    .HasColumnName("TOT_PROV_INCASSO_AGE")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<ArRaccordoRami>(entity =>
            {
                entity.HasKey(e => e.KeyArRaccordo)
                    .HasName("PK__AR_RACCO__E68BAB86ABA66DED");

                entity.ToTable("AR_RACCORDO_RAMI", "ISUITE");

                entity.HasIndex(e => e.IdArRaccordo)
                    .HasName("XX01AR_RACCORDO_RAMI");

                entity.HasIndex(e => e.IdArSottogruppo)
                    .HasName("XX02AR_RACCORDO_RAMI");

                entity.HasIndex(e => e.KeyArRaccordo)
                    .HasName("PK_AR_RACCORDO_RAMI")
                    .IsUnique();

                entity.Property(e => e.KeyArRaccordo)
                    .HasColumnName("KEY_AR_RACCORDO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRamoAttivita)
                    .HasColumnName("FLG_RAMO_ATTIVITA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSettorizzazioneSintetica)
                    .IsRequired()
                    .HasColumnName("FLG_SETTORIZZAZIONE_SINTETICA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdArRaccordo)
                    .HasColumnName("ID_AR_RACCORDO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdArSottogruppo)
                    .HasColumnName("ID_AR_SOTTOGRUPPO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ArSegnalazioni>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AR_SEGNALAZIONI", "IFLOW");

                entity.Property(e => e.AnnoEsercizio).HasColumnName("ANNO_ESERCIZIO");

                entity.Property(e => e.DtEffettoEvento)
                    .HasColumnName("DT_EFFETTO_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoPolizza)
                    .HasColumnName("DT_EFFETTO_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEvento)
                    .HasColumnName("DT_EVENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSegnalazione)
                    .HasColumnName("FLG_TIPO_SEGNALAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdSegnalazioneAr).HasColumnName("ID_SEGNALAZIONE_AR");

                entity.Property(e => e.ImpLiquidazione)
                    .HasColumnName("IMP_LIQUIDAZIONE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MotivoAnnullamento)
                    .HasColumnName("MOTIVO_ANNULLAMENTO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NominativoAssicurato)
                    .HasColumnName("NOMINATIVO_ASSICURATO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NominativoBeneficiario)
                    .HasColumnName("NOMINATIVO_BENEFICIARIO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NominativoContraente)
                    .HasColumnName("NOMINATIVO_CONTRAENTE")
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArSottogruppi>(entity =>
            {
                entity.HasKey(e => e.KeyArSottogruppo)
                    .HasName("PK__AR_SOTTO__5E8D56CEC1FA7CAD");

                entity.ToTable("AR_SOTTOGRUPPI", "ISUITE");

                entity.HasIndex(e => e.IdArSottogruppo)
                    .HasName("XX01AR_SOTTOGRUPPI");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02AR_SOTTOGRUPPI");

                entity.HasIndex(e => e.KeyArSottogruppo)
                    .HasName("PK_AR_SOTTOGRUPPI")
                    .IsUnique();

                entity.Property(e => e.KeyArSottogruppo)
                    .HasColumnName("KEY_AR_SOTTOGRUPPO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodiceSottogruppo)
                    .IsRequired()
                    .HasColumnName("CODICE_SOTTOGRUPPO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdArSottogruppo)
                    .HasColumnName("ID_AR_SOTTOGRUPPO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ArcAgeCoass>(entity =>
            {
                entity.HasKey(e => e.IdAgeCoass)
                    .HasName("SYS_C0066020");

                entity.ToTable("ARC_AGE_COASS", "IAGENCY");

                entity.Property(e => e.IdAgeCoass)
                    .HasColumnName("ID_AGE_COASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodAgeCoass)
                    .IsRequired()
                    .HasColumnName("COD_AGE_COASS")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtFine)
                    .HasColumnName("DT_FINE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizio)
                    .HasColumnName("DT_INIZIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ArcAllegati>(entity =>
            {
                entity.HasKey(e => e.KeyAllegato);

                entity.ToTable("ARC_ALLEGATI", "ISUITE");

                entity.HasIndex(e => new { e.FlgTipoOggetto, e.IdOggetto })
                    .HasName("K02_ARC_ALLEGATI");

                entity.HasIndex(e => new { e.IdAllegato, e.DtStoScadenzaFis })
                    .HasName("K03_ARC_ALLEGATI");

                entity.HasIndex(e => new { e.FlgSistemaPostalizzazione, e.DtStoScadenzaLog, e.DtStatoPostalizzazione })
                    .HasName("K04_ARC_ALLEGATI");

                entity.HasIndex(e => new { e.PrgAllegato, e.DtStoEffettoLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_ALLEGATI")
                    .IsUnique();

                entity.Property(e => e.KeyAllegato)
                    .HasColumnName("KEY_ALLEGATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAccettaPostalizzazione)
                    .HasColumnName("DT_ACCETTA_POSTALIZZAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtComunicazionePortale)
                    .HasColumnName("DT_COMUNICAZIONE_PORTALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtGenFlussoPostalizzazione)
                    .HasColumnName("DT_GEN_FLUSSO_POSTALIZZAZIONE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtInvioDocumentale)
                    .HasColumnName("DT_INVIO_DOCUMENTALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoPostalizzazione)
                    .HasColumnName("DT_STATO_POSTALIZZAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FilePostalizzazione)
                    .HasColumnName("FILE_POSTALIZZAZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFirmaGrafoSino)
                    .HasColumnName("FLG_FIRMA_GRAFO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInviatoDocumentaleSino)
                    .HasColumnName("FLG_INVIATO_DOCUMENTALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMacroTipologiaAllegato)
                    .HasColumnName("FLG_MACRO_TIPOLOGIA_ALLEGATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgProvenienza)
                    .HasColumnName("FLG_PROVENIENZA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSistemaPostalizzazione)
                    .HasColumnName("FLG_SISTEMA_POSTALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoComunicazione)
                    .HasColumnName("FLG_STATO_COMUNICAZIONE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoFirmaGrafo)
                    .HasColumnName("FLG_STATO_FIRMA_GRAFO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoPostalizzazione)
                    .HasColumnName("FLG_STATO_POSTALIZZAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPostalizzazione)
                    .HasColumnName("FLG_TIPO_POSTALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaAllegato)
                    .HasColumnName("FLG_TIPOLOGIA_ALLEGATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato)
                    .HasColumnName("ID_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdModello).HasColumnName("ID_MODELLO");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteInserimento).HasColumnName("ID_UTENTE_INSERIMENTO");

                entity.Property(e => e.KeyIndirizzoSpedizione).HasColumnName("KEY_INDIRIZZO_SPEDIZIONE");

                entity.Property(e => e.LivelloVisibilita).HasColumnName("LIVELLO_VISIBILITA");

                entity.Property(e => e.MetadatiXml)
                    .HasColumnName("METADATI_XML")
                    .IsUnicode(false);

                entity.Property(e => e.MetadatoReport)
                    .HasColumnName("METADATO_REPORT")
                    .IsUnicode(false);

                entity.Property(e => e.NRaccomandata)
                    .HasColumnName("N_RACCOMANDATA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NomeAllegato)
                    .IsRequired()
                    .HasColumnName("NOME_ALLEGATO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.NumRepertorioFirmaGrafo)
                    .HasColumnName("NUM_REPERTORIO_FIRMA_GRAFO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.PrgAllegato).HasColumnName("PRG_ALLEGATO");

                entity.Property(e => e.PrgArchiviazione).HasColumnName("PRG_ARCHIVIAZIONE");

                entity.Property(e => e.PrgArchiviazioneEsterno)
                    .HasColumnName("PRG_ARCHIVIAZIONE_ESTERNO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PrgFascicolo).HasColumnName("PRG_FASCICOLO");

                entity.Property(e => e.PrgStampa).HasColumnName("PRG_STAMPA");
            });

            modelBuilder.Entity<ArcAllegatiAppartenenze>(entity =>
            {
                entity.HasKey(e => e.IdAllegatoAppartenenze);

                entity.ToTable("ARC_ALLEGATI_APPARTENENZE", "ISUITE");

                entity.HasIndex(e => e.IdAllegato)
                    .HasName("K01_ARC_ALLEGATI_APPARTENENZE");

                entity.Property(e => e.IdAllegatoAppartenenze)
                    .HasColumnName("ID_ALLEGATO_APPARTENENZE")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgStatoInvioDocumento)
                    .HasColumnName("FLG_STATO_INVIO_DOCUMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");
            });

            modelBuilder.Entity<ArcAllegatiErrori>(entity =>
            {
                entity.HasKey(e => e.IdAllegatoErrore);

                entity.ToTable("ARC_ALLEGATI_ERRORI", "ISUITE");

                entity.HasIndex(e => e.IdAllegato)
                    .HasName("X01_ARC_ALLEGATI_ERRORI");

                entity.Property(e => e.IdAllegatoErrore)
                    .HasColumnName("ID_ALLEGATO_ERRORE")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.DtErrore)
                    .HasColumnName("DT_ERRORE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");
            });

            modelBuilder.Entity<ArcAllegatiIdm>(entity =>
            {
                entity.HasKey(e => e.KeyAllegatoIdm);

                entity.ToTable("ARC_ALLEGATI_IDM", "ISUITE");

                entity.HasIndex(e => e.IdAllegatoIdm)
                    .HasName("XX01ARC_ALLEGATI_IDM");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03ARC_ALLEGATI_IDM");

                entity.HasIndex(e => e.PrgEsternoIdm)
                    .HasName("XX02ARC_ALLEGATI_IDM");

                entity.HasIndex(e => new { e.IdAllegatoIdm, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_ARC_ALLEGATI_IDM_STO")
                    .IsUnique();

                entity.Property(e => e.KeyAllegatoIdm)
                    .HasColumnName("KEY_ALLEGATO_IDM")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCanaleCartaSino)
                    .HasColumnName("FLG_CANALE_CARTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCanaleFaxSino)
                    .HasColumnName("FLG_CANALE_FAX_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCanaleTelnetSino)
                    .HasColumnName("FLG_CANALE_TELNET_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdAllegatoIdm).HasColumnName("ID_ALLEGATO_IDM");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.PrgEsternoIdm)
                    .HasColumnName("PRG_ESTERNO_IDM")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcAllegatiMotivoAss>(entity =>
            {
                entity.HasKey(e => e.IdAllegatoMotivoAss);

                entity.ToTable("ARC_ALLEGATI_MOTIVO_ASS", "ISUITE");

                entity.Property(e => e.IdAllegatoMotivoAss)
                    .HasColumnName("ID_ALLEGATO_MOTIVO_ASS")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgMotivoAssicurazione)
                    .HasColumnName("FLG_MOTIVO_ASSICURAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdRegolaAllegato).HasColumnName("ID_REGOLA_ALLEGATO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<ArcAllegatiOperazioni>(entity =>
            {
                entity.HasKey(e => e.IdAllegatoOperazione);

                entity.ToTable("ARC_ALLEGATI_OPERAZIONI", "ISUITE");

                entity.Property(e => e.IdAllegatoOperazione)
                    .HasColumnName("ID_ALLEGATO_OPERAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoEvento)
                    .HasColumnName("FLG_TIPO_EVENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdRegolaAllegato).HasColumnName("ID_REGOLA_ALLEGATO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<ArcAllegatiParametri>(entity =>
            {
                entity.HasKey(e => e.IdAllegatoParametro);

                entity.ToTable("ARC_ALLEGATI_PARAMETRI", "ISUITE");

                entity.HasIndex(e => e.IdAllegato)
                    .HasName("X02_ARC_ALLEGATI_PARAMETRI");

                entity.HasIndex(e => new { e.IdAllegato, e.IdParametroStampa })
                    .HasName("X01_ARC_ALLEGATI_PARAMETRI")
                    .IsUnique();

                entity.Property(e => e.IdAllegatoParametro)
                    .HasColumnName("ID_ALLEGATO_PARAMETRO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAnnullatoSino)
                    .HasColumnName("FLG_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdDestinatarioPrincipale).HasColumnName("ID_DESTINATARIO_PRINCIPALE");

                entity.Property(e => e.IdParametroStampa).HasColumnName("ID_PARAMETRO_STAMPA");
            });

            modelBuilder.Entity<ArcAllegatiPortalePeriti>(entity =>
            {
                entity.HasKey(e => e.IdAllegatoPortalePeriti)
                    .HasName("PK_ARC_ALLEGATI");

                entity.ToTable("ARC_ALLEGATI_PORTALE_PERITI", "IFLOW");

                entity.HasIndex(e => e.DtCaricamentoPortale)
                    .HasName("XX04_ARC_ALLEGATI_PORTALE_PERITI");

                entity.HasIndex(e => e.IdAllegato)
                    .HasName("XX01_ARC_ALLEGATI_PORTALE_PERITI");

                entity.HasIndex(e => e.IdFiduciario)
                    .HasName("XX02_ARC_ALLEGATI_PORTALE_PERITI");

                entity.HasIndex(e => new { e.IdSinistro, e.IdIncarico })
                    .HasName("XX03_ARC_ALLEGATI_PORTALE_PERITI");

                entity.Property(e => e.IdAllegatoPortalePeriti)
                    .HasColumnName("ID_ALLEGATO_PORTALE_PERITI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodPerito)
                    .HasColumnName("COD_PERITO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtCaricamentoPortale)
                    .HasColumnName("DT_CARICAMENTO_PORTALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCaricamentoWise)
                    .HasColumnName("DT_CARICAMENTO_WISE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdFiduciario).HasColumnName("ID_FIDUCIARIO");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.NomeFile)
                    .HasColumnName("NOME_FILE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.NomeFileZip)
                    .HasColumnName("NOME_FILE_ZIP")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.TipologiaDocumento)
                    .HasColumnName("TIPOLOGIA_DOCUMENTO")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcAllegatiVisionati>(entity =>
            {
                entity.HasKey(e => e.IdAllegatoVisionato);

                entity.ToTable("ARC_ALLEGATI_VISIONATI", "ISUITE");

                entity.HasIndex(e => e.IdentificativoEsterno)
                    .HasName("XX01_ARC_ALLEGATI_VISIONATI");

                entity.Property(e => e.IdAllegatoVisionato)
                    .HasColumnName("ID_ALLEGATO_VISIONATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgVisionatoSino)
                    .HasColumnName("FLG_VISIONATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdentificativoEsterno)
                    .HasColumnName("IDENTIFICATIVO_ESTERNO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcAssegni>(entity =>
            {
                entity.HasKey(e => e.IdAssegno);

                entity.ToTable("ARC_ASSEGNI", "ICLAIMS");

                entity.HasIndex(e => e.IdCarnetAss)
                    .HasName("XX01ARC_ASSEGNI");

                entity.Property(e => e.IdAssegno)
                    .HasColumnName("ID_ASSEGNO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAnnullamento)
                    .HasColumnName("DT_ANNULLAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCausaleAnnAss)
                    .HasColumnName("FLG_CAUSALE_ANN_ASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoAss)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_ASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCarnetAss).HasColumnName("ID_CARNET_ASS");

                entity.Property(e => e.NumeroAssegno)
                    .HasColumnName("NUMERO_ASSEGNO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<ArcAssegniIndennizzi>(entity =>
            {
                entity.HasKey(e => e.IdAssegniIndennizzi);

                entity.ToTable("ARC_ASSEGNI_INDENNIZZI", "ICLAIMS");

                entity.HasIndex(e => e.IdAssegno)
                    .HasName("XX01ARC_ASSEGNI_INDENNIZZI");

                entity.HasIndex(e => e.IdIndennizzo)
                    .HasName("XX02ARC_ASSEGNI_INDENNIZZI");

                entity.Property(e => e.IdAssegniIndennizzi)
                    .HasColumnName("ID_ASSEGNI_INDENNIZZI")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdAssegno).HasColumnName("ID_ASSEGNO");

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");
            });

            modelBuilder.Entity<ArcCarnetAss>(entity =>
            {
                entity.HasKey(e => e.IdCarnetAss);

                entity.ToTable("ARC_CARNET_ASS", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03ARC_CARNET_ASS");

                entity.HasIndex(e => e.IdContocorrente)
                    .HasName("XX04ARC_CARNET_ASS");

                entity.HasIndex(e => e.IdFiduciario)
                    .HasName("XX06ARC_CARNET_ASS");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX05ARC_CARNET_ASS");

                entity.HasIndex(e => e.IdLiquidatore)
                    .HasName("XX01ARC_CARNET_ASS");

                entity.Property(e => e.IdCarnetAss)
                    .HasColumnName("ID_CARNET_ASS")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAssLiqFid)
                    .HasColumnName("DT_ASS_LIQ_FID")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCaricoIsp)
                    .HasColumnName("DT_CARICO_ISP")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTaglioAss)
                    .HasColumnName("FLG_TAGLIO_ASS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCarnet)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_CARNET")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdContocorrente).HasColumnName("ID_CONTOCORRENTE");

                entity.Property(e => e.IdFiduciario).HasColumnName("ID_FIDUCIARIO");

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdLiquidatore).HasColumnName("ID_LIQUIDATORE");
            });

            modelBuilder.Entity<ArcCompCoass>(entity =>
            {
                entity.HasKey(e => e.IdCompCoass)
                    .HasName("ARC_COMP_COASS_PK");

                entity.ToTable("ARC_COMP_COASS", "IAGENCY");

                entity.Property(e => e.IdCompCoass)
                    .HasColumnName("ID_COMP_COASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFine)
                    .HasColumnName("DT_FINE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizio)
                    .HasColumnName("DT_INIZIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAgeCoass)
                    .HasColumnName("ID_AGE_COASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ArcComunicazioni35>(entity =>
            {
                entity.HasKey(e => e.KeyComunicazione)
                    .HasName("SYS_C0014145");

                entity.ToTable("ARC_COMUNICAZIONI_35", "ISUITE");

                entity.HasIndex(e => e.DtEffetto)
                    .HasName("XX03ARC_COMUNICAZIONI");

                entity.HasIndex(e => e.DtEmissione)
                    .HasName("XX02ARC_COMUNICAZIONI");

                entity.HasIndex(e => e.DtEstrazione)
                    .HasName("XX04ARC_COMUNICAZIONI");

                entity.HasIndex(e => e.IdComunicazione)
                    .HasName("XX01ARC_COMUNICAZIONI");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX05ARC_COMUNICAZIONI");

                entity.Property(e => e.KeyComunicazione)
                    .HasColumnName("KEY_COMUNICAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEmissione)
                    .HasColumnName("DT_EMISSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEstrazione)
                    .HasColumnName("DT_ESTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoComunicazione)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_COMUNICAZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdComunicazione).HasColumnName("ID_COMUNICAZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.OggettoComunicazione)
                    .HasColumnName("OGGETTO_COMUNICAZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.TestoComunicazione)
                    .HasColumnName("TESTO_COMUNICAZIONE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcDatiAggDocumentale>(entity =>
            {
                entity.HasKey(e => e.KeyDatiAggDocumentale)
                    .HasName("PK_DATI_AGG_DOCUMENTALE_STO");

                entity.ToTable("ARC_DATI_AGG_DOCUMENTALE", "ISUITE");

                entity.Property(e => e.KeyDatiAggDocumentale)
                    .HasColumnName("KEY_DATI_AGG_DOCUMENTALE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DataCambioStato)
                    .HasColumnName("DATA_CAMBIO_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataCaricamento)
                    .HasColumnName("DATA_CARICAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataTimbro)
                    .HasColumnName("DATA_TIMBRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMacrotipologia)
                    .HasColumnName("FLG_MACROTIPOLOGIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMicrotipologia)
                    .HasColumnName("FLG_MICROTIPOLOGIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoDocumento)
                    .HasColumnName("FLG_STATO_DOCUMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgUfficio)
                    .HasColumnName("FLG_UFFICIO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdDatiAggDocumentale).HasColumnName("ID_DATI_AGG_DOCUMENTALE");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdLiquidatore).HasColumnName("ID_LIQUIDATORE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteDestinatario).HasColumnName("ID_UTENTE_DESTINATARIO");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.NumeroFirme).HasColumnName("NUMERO_FIRME");

                entity.Property(e => e.NumeroSinistro)
                    .HasColumnName("NUMERO_SINISTRO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OriginaleSino)
                    .HasColumnName("ORIGINALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.RecordInviato)
                    .HasColumnName("RECORD_INVIATO")
                    .IsUnicode(false);

                entity.Property(e => e.RilascioDocumentoSino)
                    .HasColumnName("RILASCIO_DOCUMENTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TipoOrigine)
                    .HasColumnName("TIPO_ORIGINE")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcDeroghe>(entity =>
            {
                entity.HasKey(e => e.IdDeroga)
                    .HasName("ARC_DEROGHE_PK");

                entity.ToTable("ARC_DEROGHE", "ISUITE");

                entity.HasIndex(e => e.IdGruppo)
                    .HasName("XX05ARC_DEROGHE");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX04ARC_DEROGHE");

                entity.HasIndex(e => e.IdOggetto)
                    .HasName("XX02ARC_DEROGHE");

                entity.HasIndex(e => e.IdUtenteAssegnata)
                    .HasName("XX03ARC_DEROGHE");

                entity.HasIndex(e => e.IdUtenteRichiesta)
                    .HasName("XX01ARC_DEROGHE");

                entity.Property(e => e.IdDeroga)
                    .HasColumnName("ID_DEROGA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtRichiesta)
                    .HasColumnName("DT_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEscalationParzialeSino)
                    .HasColumnName("FLG_ESCALATION_PARZIALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgModulo)
                    .IsRequired()
                    .HasColumnName("FLG_MODULO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoDeroga)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_DEROGA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAzione)
                    .HasColumnName("FLG_TIPO_AZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaDeroga)
                    .HasColumnName("FLG_TIPOLOGIA_DEROGA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdGruppo).HasColumnName("ID_GRUPPO");

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdUtenteAssegnata).HasColumnName("ID_UTENTE_ASSEGNATA");

                entity.Property(e => e.IdUtenteRichiesta).HasColumnName("ID_UTENTE_RICHIESTA");

                entity.Property(e => e.InfoDeroga)
                    .HasColumnName("INFO_DEROGA")
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.XmlAzione)
                    .IsRequired()
                    .HasColumnName("XML_AZIONE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcDerogheEscalation>(entity =>
            {
                entity.HasKey(e => e.IdDerogaescalation);

                entity.ToTable("ARC_DEROGHE_ESCALATION", "ISUITE");

                entity.Property(e => e.IdDerogaescalation)
                    .HasColumnName("ID_DEROGAESCALATION")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdDeroga).HasColumnName("ID_DEROGA");

                entity.Property(e => e.IdGruppoAssegnata).HasColumnName("ID_GRUPPO_ASSEGNATA");

                entity.Property(e => e.IdUtenteAssegnata).HasColumnName("ID_UTENTE_ASSEGNATA");

                entity.Property(e => e.IdUtenteRichiesta).HasColumnName("ID_UTENTE_RICHIESTA");

                entity.Property(e => e.IdUtenteRichiestaOrig).HasColumnName("ID_UTENTE_RICHIESTA_ORIG");
            });

            modelBuilder.Entity<ArcDerogheRandom>(entity =>
            {
                entity.HasKey(e => e.KeyDerogheRandom)
                    .HasName("ARC_DEROGHE_RANDOM_PK");

                entity.ToTable("ARC_DEROGHE_RANDOM", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("IDX3")
                    .IsUnique();

                entity.HasIndex(e => e.IdUtente)
                    .HasName("IDX2")
                    .IsUnique();

                entity.HasIndex(e => e.IdUtentemonitorato)
                    .HasName("IDX4")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdDerogheRandom, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("IDX1")
                    .IsUnique();

                entity.Property(e => e.KeyDerogheRandom)
                    .HasColumnName("KEY_DEROGHE_RANDOM")
                    .ValueGeneratedNever();

                entity.Property(e => e.Deroghexgiorni).HasColumnName("DEROGHEXGIORNI");

                entity.Property(e => e.DtInizioMonitoraggio)
                    .HasColumnName("DT_INIZIO_MONITORAGGIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimaDeroga)
                    .HasColumnName("DT_ULTIMA_DEROGA")
                    .HasColumnType("datetime");

                entity.Property(e => e.GiorniMonitoraggio).HasColumnName("GIORNI_MONITORAGGIO");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdDerogheRandom).HasColumnName("ID_DEROGHE_RANDOM");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtentemonitorato).HasColumnName("ID_UTENTEMONITORATO");

                entity.Property(e => e.MonitorareSino)
                    .HasColumnName("MONITORARE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NumUltimaDeroga).HasColumnName("NUM_ULTIMA_DEROGA");

                entity.Property(e => e.TipoAzioneXml)
                    .HasColumnName("TIPO_AZIONE_XML")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.TotDerogheRandom).HasColumnName("TOT_DEROGHE_RANDOM");

                entity.Property(e => e.Xgiorni).HasColumnName("XGIORNI");
            });

            modelBuilder.Entity<ArcDestDossierRete>(entity =>
            {
                entity.HasKey(e => e.IdDestDossierRete)
                    .HasName("SYS_C0014160");

                entity.ToTable("ARC_DEST_DOSSIER_RETE", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX01ARC_DEST_DOSSIER_RETE");

                entity.HasIndex(e => e.IdDossierRete)
                    .HasName("XX02ARC_DEST_DOSSIER_RETE");

                entity.Property(e => e.IdDestDossierRete)
                    .HasColumnName("ID_DEST_DOSSIER_RETE")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoDestinatarioDoc)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_DESTINATARIO_DOC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoDocumentoMail)
                    .HasColumnName("FLG_TIPO_DOCUMENTO_MAIL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdDossierRete).HasColumnName("ID_DOSSIER_RETE");

                entity.Property(e => e.IndirizzoEmail)
                    .HasColumnName("INDIRIZZO_EMAIL")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcDocumentale>(entity =>
            {
                entity.HasKey(e => e.IdArcDocumentale)
                    .HasName("PK_ID_ARC_DOCUMENTALE");

                entity.ToTable("ARC_DOCUMENTALE", "ISUITE");

                entity.HasIndex(e => e.IdAllegato)
                    .HasName("XX02_ARC_DOCUMENTALE");

                entity.HasIndex(e => new { e.RifEsterno, e.FlgTipologiaDocumentale })
                    .HasName("XX01_ARC_DOCUMENTALE");

                entity.Property(e => e.IdArcDocumentale)
                    .HasColumnName("ID_ARC_DOCUMENTALE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipologiaDocumentale)
                    .IsRequired()
                    .HasColumnName("FLG_TIPOLOGIA_DOCUMENTALE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.NomeDocumento)
                    .HasColumnName("NOME_DOCUMENTO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.RifEsterno)
                    .IsRequired()
                    .HasColumnName("RIF_ESTERNO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TipologiaDocumento)
                    .HasColumnName("TIPOLOGIA_DOCUMENTO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcDocumentaleApp>(entity =>
            {
                entity.HasKey(e => e.IdArcDocumentaleApp)
                    .HasName("PK_ID_ARC_DOCUMENTALE_APP");

                entity.ToTable("ARC_DOCUMENTALE_APP", "ISUITE");

                entity.HasIndex(e => e.IdArcDocumentale)
                    .HasName("XX01_ARC_DOCUMENTALE_APP");

                entity.HasIndex(e => new { e.FlgTipoOggetto, e.IdOggetto })
                    .HasName("XX02_ARC_DOCUMENTALE_APP");

                entity.Property(e => e.IdArcDocumentaleApp)
                    .HasColumnName("ID_ARC_DOCUMENTALE_APP")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAppartenenza)
                    .HasColumnName("DT_APPARTENENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoInvioDocumento)
                    .HasColumnName("FLG_STATO_INVIO_DOCUMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdArcDocumentale).HasColumnName("ID_ARC_DOCUMENTALE");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdUtenteAppartenenza).HasColumnName("ID_UTENTE_APPARTENENZA");
            });

            modelBuilder.Entity<ArcDossierRete>(entity =>
            {
                entity.HasKey(e => e.IdDossierRete)
                    .HasName("SYS_C0014164");

                entity.ToTable("ARC_DOSSIER_RETE", "ISUITE");

                entity.HasIndex(e => e.IdAllegato)
                    .HasName("XX02ARC_DOSSIER_RETE");

                entity.HasIndex(e => e.IdP3DatiGenerali)
                    .HasName("XX05ARC_DOSSIER_RETE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03ARC_DOSSIER_RETE");

                entity.HasIndex(e => e.IdRuoloRete)
                    .HasName("XX04ARC_DOSSIER_RETE");

                entity.HasIndex(e => e.IdTipoDocumentoDossier)
                    .HasName("XX01ARC_DOSSIER_RETE");

                entity.Property(e => e.IdDossierRete)
                    .HasColumnName("ID_DOSSIER_RETE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodRiferimento)
                    .HasColumnName("COD_RIFERIMENTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CorpoMail)
                    .HasColumnName("CORPO_MAIL")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.DtDocumento)
                    .HasColumnName("DT_DOCUMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgArchivioExtSino)
                    .HasColumnName("FLG_ARCHIVIO_EXT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAutomaticoSino)
                    .HasColumnName("FLG_AUTOMATICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoDocDossier)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_DOC_DOSSIER")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCausale)
                    .HasColumnName("FLG_TIPO_CAUSALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdP3DatiGenerali).HasColumnName("ID_P3_DATI_GENERALI");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdRuoloRete).HasColumnName("ID_RUOLO_RETE");

                entity.Property(e => e.IdTipoDocumentoDossier).HasColumnName("ID_TIPO_DOCUMENTO_DOSSIER");

                entity.Property(e => e.IndirizzoEmailMittente)
                    .HasColumnName("INDIRIZZO_EMAIL_MITTENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.OggettoMail)
                    .HasColumnName("OGGETTO_MAIL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdTipoDocumentoDossierNavigation)
                    .WithMany(p => p.ArcDossierRete)
                    .HasForeignKey(d => d.IdTipoDocumentoDossier)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ARC_DOSSI__ID_TI__7128A7F2");
            });

            modelBuilder.Entity<ArcElencoDerogheRandom>(entity =>
            {
                entity.HasKey(e => e.IdElencoDerogheRandom)
                    .HasName("ARC_ELENCO_DEROGHE_RANDOM_PK");

                entity.ToTable("ARC_ELENCO_DEROGHE_RANDOM", "ISUITE");

                entity.HasIndex(e => e.IdDeroghe)
                    .HasName("ARC_ELENCO_DEROGHE_RANDOM_U02")
                    .IsUnique();

                entity.HasIndex(e => e.IdDerogheRandom)
                    .HasName("ARC_ELENCO_DEROGHE_RANDOM_U01")
                    .IsUnique();

                entity.Property(e => e.IdElencoDerogheRandom)
                    .HasColumnName("ID_ELENCO_DEROGHE_RANDOM")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdDeroghe).HasColumnName("ID_DEROGHE");

                entity.Property(e => e.IdDerogheRandom).HasColumnName("ID_DEROGHE_RANDOM");
            });

            modelBuilder.Entity<ArcEstrattiConto>(entity =>
            {
                entity.HasKey(e => e.IdEstrattoConto);

                entity.ToTable("ARC_ESTRATTI_CONTO", "IAGENCY");

                entity.HasIndex(e => new { e.IdRetevendita, e.IdProduttore, e.IdTitEsito, e.DtPagamento })
                    .HasName("XX01ARC_ESTRATTI_CONTO");

                entity.Property(e => e.IdEstrattoConto)
                    .HasColumnName("ID_ESTRATTO_CONTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysRegistrazione)
                    .HasColumnName("DT_SYS_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdProduttore).HasColumnName("ID_PRODUTTORE");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdTitEsito).HasColumnName("ID_TIT_ESITO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpPagato)
                    .HasColumnName("IMP_PAGATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvvPagato)
                    .HasColumnName("IMP_PROVV_PAGATO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<ArcEstrazAlboAgenti>(entity =>
            {
                entity.HasKey(e => e.IdArcEstrazAlboAgenti)
                    .HasName("PK__ARC_ESTR__01C492E4DF6DFBF9");

                entity.ToTable("ARC_ESTRAZ_ALBO_AGENTI", "IROLL");

                entity.HasIndex(e => e.IdArcEstrazAlboAgenti)
                    .HasName("SYS_C0047928")
                    .IsUnique();

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02ARC_ESTRAZ_ALBO_AGENTI");

                entity.Property(e => e.IdArcEstrazAlboAgenti)
                    .HasColumnName("ID_ARC_ESTRAZ_ALBO_AGENTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEstrazione)
                    .HasColumnName("DT_ESTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgInviataIsvapSino)
                    .HasColumnName("FLG_INVIATA_ISVAP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumCoagentiNominati)
                    .HasColumnName("NUM_COAGENTI_NOMINATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumCoagentiRevocati)
                    .HasColumnName("NUM_COAGENTI_REVOCATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumMandatiCessati)
                    .HasColumnName("NUM_MANDATI_CESSATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumMandatiConferiti)
                    .HasColumnName("NUM_MANDATI_CONFERITI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumMandatiVariati)
                    .HasColumnName("NUM_MANDATI_VARIATI")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdCompagniaNavigation)
                    .WithMany(p => p.ArcEstrazAlboAgenti)
                    .HasForeignKey(d => d.IdCompagnia)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ARC_ESTRA__ID_CO__6F405F80");
            });

            modelBuilder.Entity<ArcLogVarSedeOrg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ARC_LOG_VAR_SEDE_ORG", "ISUITE");

                entity.Property(e => e.DtEffettoLogOrg)
                    .HasColumnName("DT_EFFETTO_LOG_ORG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdOrganico).HasColumnName("ID_ORGANICO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<ArcMail>(entity =>
            {
                entity.HasKey(e => e.IdArcMail);

                entity.ToTable("ARC_MAIL", "ISUITE");

                entity.Property(e => e.IdArcMail)
                    .HasColumnName("ID_ARC_MAIL")
                    .ValueGeneratedNever();

                entity.Property(e => e.CorpoMail)
                    .HasColumnName("CORPO_MAIL")
                    .IsUnicode(false);

                entity.Property(e => e.DtInvioMail)
                    .HasColumnName("DT_INVIO_MAIL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPecSino)
                    .HasColumnName("FLG_PEC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.MittenteMail)
                    .IsRequired()
                    .HasColumnName("MITTENTE_MAIL")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.OggettoMail)
                    .HasColumnName("OGGETTO_MAIL")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcMailDest>(entity =>
            {
                entity.HasKey(e => e.IdArcMailDest);

                entity.ToTable("ARC_MAIL_DEST", "ISUITE");

                entity.Property(e => e.IdArcMailDest)
                    .HasColumnName("ID_ARC_MAIL_DEST")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoDestinatario)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_DESTINATARIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdArcMail).HasColumnName("ID_ARC_MAIL");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.MailDestinatario)
                    .HasColumnName("MAIL_DESTINATARIO")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcMandatiAlboAgenti>(entity =>
            {
                entity.HasKey(e => e.KeyArcMandatoAlboAgenti)
                    .HasName("PK__ARC_MAND__F0F3B348C2E90CD5");

                entity.ToTable("ARC_MANDATI_ALBO_AGENTI", "IROLL");

                entity.HasIndex(e => e.IdArcMandatoAlboAgenti)
                    .HasName("XX01ARC_MANDATI_ALBO_AGENTI");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02ARC_MANDATI_ALBO_AGENTI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03ARC_MANDATI_ALBO_AGENTI");

                entity.HasIndex(e => e.KeyArcMandatoAlboAgenti)
                    .HasName("SYS_C0047933")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdArcMandatoAlboAgenti, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1ARC_MANDATI_ALBO_AGENTI")
                    .IsUnique();

                entity.Property(e => e.KeyArcMandatoAlboAgenti)
                    .HasColumnName("KEY_ARC_MANDATO_ALBO_AGENTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodMandato)
                    .HasColumnName("COD_MANDATO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DtAnzianitaGestione)
                    .HasColumnName("DT_ANZIANITA_GESTIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtConferimentoMandato)
                    .HasColumnName("DT_CONFERIMENTO_MANDATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoVariazione)
                    .HasColumnName("DT_EFFETTO_VARIAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRevocaMandato)
                    .HasColumnName("DT_REVOCA_MANDATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMotRevMandAlboAgenti)
                    .HasColumnName("FLG_MOT_REV_MAND_ALBO_AGENTI")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoEsclusivaAlboAgenti)
                    .HasColumnName("FLG_TIPO_ESCLUSIVA_ALBO_AGENTI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMandato)
                    .HasColumnName("FLG_TIPO_MANDATO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdArcMandatoAlboAgenti)
                    .HasColumnName("ID_ARC_MANDATO_ALBO_AGENTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ArcMandatiAlboAgentiAltri>(entity =>
            {
                entity.HasKey(e => e.KeyArcMandAlboAgentiAltri)
                    .HasName("PK__ARC_MAND__15FD686FA3B014BF");

                entity.ToTable("ARC_MANDATI_ALBO_AGENTI_ALTRI", "IROLL");

                entity.HasIndex(e => e.IdArcMandatoAlboAgenti)
                    .HasName("K02_ARC_MAND_ALBO_AGENTI_ALTRI");

                entity.HasIndex(e => e.KeyArcMandAlboAgentiAltri)
                    .HasName("SYS_C0033205")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdArcMandAlboAgentiAltri, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_ARC_MAND_ALBO_AGENTI_ALTRI")
                    .IsUnique();

                entity.Property(e => e.KeyArcMandAlboAgentiAltri)
                    .HasColumnName("KEY_ARC_MAND_ALBO_AGENTI_ALTRI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAdesioneMandato2012)
                    .HasColumnName("DT_ADESIONE_MANDATO_2012")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAccordoAutomazione)
                    .HasColumnName("FLG_ACCORDO_AUTOMAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAdesioneMandato2012)
                    .HasColumnName("FLG_ADESIONE_MANDATO_2012")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCompenso)
                    .HasColumnName("FLG_COMPENSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgOperativitaDanniSino)
                    .HasColumnName("FLG_OPERATIVITA_DANNI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgOperativitaVitaSino)
                    .HasColumnName("FLG_OPERATIVITA_VITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoProvvigioni)
                    .HasColumnName("FLG_TIPO_PROVVIGIONI")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdArcMandAlboAgentiAltri)
                    .HasColumnName("ID_ARC_MAND_ALBO_AGENTI_ALTRI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdArcMandatoAlboAgenti)
                    .HasColumnName("ID_ARC_MANDATO_ALBO_AGENTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAutomazione)
                    .HasColumnName("IMP_AUTOMAZIONE")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<ArcMandatiAlboAgentiR>(entity =>
            {
                entity.HasKey(e => e.KeyArcMandatoAlboAgentiR)
                    .HasName("PK__ARC_MAND__03E3C38159D86465");

                entity.ToTable("ARC_MANDATI_ALBO_AGENTI_R", "IROLL");

                entity.HasIndex(e => e.IdArcMandatoAlboAgenti)
                    .HasName("XX02ARC_MANDATI_ALBO_AGENTI_R");

                entity.HasIndex(e => e.IdArcMandatoAlboAgentiR)
                    .HasName("XX01ARC_MANDATI_ALBO_AGENTI_R");

                entity.HasIndex(e => e.KeyArcMandatoAlboAgentiR)
                    .HasName("SYS_C0047938")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdArcMandatoAlboAgentiR, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1ARC_MANDATI_ALBO_AGENTI_R")
                    .IsUnique();

                entity.Property(e => e.KeyArcMandatoAlboAgentiR)
                    .HasColumnName("KEY_ARC_MANDATO_ALBO_AGENTI_R")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEmissioneDirettaDal)
                    .HasColumnName("DT_EMISSIONE_DIRETTA_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEmissioneDirettaSino)
                    .HasColumnName("FLG_EMISSIONE_DIRETTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoMandatoAlboAgenti)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_MANDATO_ALBO_AGENTI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdArcMandatoAlboAgenti)
                    .HasColumnName("ID_ARC_MANDATO_ALBO_AGENTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdArcMandatoAlboAgentiR)
                    .HasColumnName("ID_ARC_MANDATO_ALBO_AGENTI_R")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ArcMandatiEventi>(entity =>
            {
                entity.HasKey(e => e.IdArcMandatiEventi)
                    .HasName("PK__ARC_MAND__5901D75556F8F415");

                entity.ToTable("ARC_MANDATI_EVENTI", "IROLL");

                entity.HasIndex(e => e.IdArcMandatiEventi)
                    .HasName("PK_ARC_MANDATI_EVENTI")
                    .IsUnique();

                entity.HasIndex(e => e.IdArcMandatoAlboAgenti)
                    .HasName("XX02ARC_MANDATI_EVENTI");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03ARC_MANDATI_EVENTI");

                entity.Property(e => e.IdArcMandatiEventi)
                    .HasColumnName("ID_ARC_MANDATI_EVENTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEvento)
                    .HasColumnName("DT_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoEvento)
                    .HasColumnName("FLG_TIPO_EVENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdArcMandatoAlboAgenti)
                    .HasColumnName("ID_ARC_MANDATO_ALBO_AGENTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ArcNomineAlboAgenti>(entity =>
            {
                entity.HasKey(e => e.KeyArcNominaAlboAgenti)
                    .HasName("PK__ARC_NOMI__73E9C8BA4DF87C69");

                entity.ToTable("ARC_NOMINE_ALBO_AGENTI", "IROLL");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03ARC_NOMINE_ALBO_AGENTI");

                entity.HasIndex(e => e.IdArcNominaAlboAgenti)
                    .HasName("XX01ARC_NOMINE_ALBO_AGENTI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02ARC_NOMINE_ALBO_AGENTI");

                entity.HasIndex(e => e.KeyArcNominaAlboAgenti)
                    .HasName("SYS_C0047948")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdArcNominaAlboAgenti, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1ARC_NOMINE_ALBO_AGENTI")
                    .IsUnique();

                entity.Property(e => e.KeyArcNominaAlboAgenti)
                    .HasColumnName("KEY_ARC_NOMINA_ALBO_AGENTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAnzianitaGest01)
                    .HasColumnName("DT_ANZIANITA_GEST_01")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAnzianitaGest02)
                    .HasColumnName("DT_ANZIANITA_GEST_02")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAxaCampus)
                    .HasColumnName("DT_AXA_CAMPUS")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtNomina)
                    .HasColumnName("DT_NOMINA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRevoca)
                    .HasColumnName("DT_REVOCA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAxaCampus)
                    .HasColumnName("FLG_AXA_CAMPUS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMotRevMandAlboAgenti)
                    .HasColumnName("FLG_MOT_REV_MAND_ALBO_AGENTI")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdArcNominaAlboAgenti)
                    .HasColumnName("ID_ARC_NOMINA_ALBO_AGENTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PercQuotaCpa)
                    .HasColumnName("PERC_QUOTA_CPA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PercQuotaCpa01)
                    .HasColumnName("PERC_QUOTA_CPA_01")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PercQuotaCpa02)
                    .HasColumnName("PERC_QUOTA_CPA_02")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<ArcNomineEventi>(entity =>
            {
                entity.HasKey(e => e.IdArcNomineEventi)
                    .HasName("PK__ARC_NOMI__17C37E93247FA822");

                entity.ToTable("ARC_NOMINE_EVENTI", "IROLL");

                entity.HasIndex(e => e.IdArcNominaAlboAgenti)
                    .HasName("XX02ARC_NOMINE_EVENTI");

                entity.HasIndex(e => e.IdArcNomineEventi)
                    .HasName("PK_ARC_NOMINE_EVENTI")
                    .IsUnique();

                entity.Property(e => e.IdArcNomineEventi)
                    .HasColumnName("ID_ARC_NOMINE_EVENTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEvento)
                    .HasColumnName("DT_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoEvento)
                    .HasColumnName("FLG_TIPO_EVENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdArcNominaAlboAgenti)
                    .HasColumnName("ID_ARC_NOMINA_ALBO_AGENTI")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ArcNoteDocumentale>(entity =>
            {
                entity.HasKey(e => e.IdNoteDocumentale)
                    .HasName("PK_NOTE_DOCUMENTALE");

                entity.ToTable("ARC_NOTE_DOCUMENTALE", "ISUITE");

                entity.Property(e => e.IdNoteDocumentale)
                    .HasColumnName("ID_NOTE_DOCUMENTALE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DataInserimento)
                    .HasColumnName("DATA_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDatiAggDocumentale).HasColumnName("ID_DATI_AGG_DOCUMENTALE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcNotifiche>(entity =>
            {
                entity.HasKey(e => e.IdNotifica)
                    .HasName("PK__ARC_NOTI__18F264B63E5D3103");

                entity.ToTable("ARC_NOTIFICHE", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX05ARC_NOTIFICHE");

                entity.HasIndex(e => e.IdNotifica)
                    .HasName("PK_ARC_NOTIFICHE")
                    .IsUnique();

                entity.HasIndex(e => e.IdUtenteDestinatario)
                    .HasName("XX02ARC_NOTIFICHE");

                entity.HasIndex(e => e.IdUtenteMittente)
                    .HasName("XX04ARC_NOTIFICHE");

                entity.Property(e => e.IdNotifica)
                    .HasColumnName("ID_NOTIFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AltriDati)
                    .HasColumnName("ALTRI_DATI")
                    .IsUnicode(false);

                entity.Property(e => e.CodErrore)
                    .IsRequired()
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtNotifica)
                    .HasColumnName("DT_NOTIFICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteDestinatario).HasColumnName("ID_UTENTE_DESTINATARIO");

                entity.Property(e => e.IdUtenteMittente)
                    .HasColumnName("ID_UTENTE_MITTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ArcNotificheAzioni>(entity =>
            {
                entity.HasKey(e => e.IdNotificaAzione);

                entity.ToTable("ARC_NOTIFICHE_AZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdNotifica)
                    .HasName("XX02ARC_NOTIFICHE_AZIONI");

                entity.Property(e => e.IdNotificaAzione)
                    .HasColumnName("ID_NOTIFICA_AZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgTipoBottone)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_BOTTONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdNotifica)
                    .HasColumnName("ID_NOTIFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.KeyPolEvento).HasColumnName("KEY_POL_EVENTO");

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasColumnName("URL")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcParametriDestinatari>(entity =>
            {
                entity.HasKey(e => e.KeyParametroDestinatario);

                entity.ToTable("ARC_PARAMETRI_DESTINATARI", "ISUITE");

                entity.HasIndex(e => new { e.IdParametroDestinatario, e.DtStoScadenzaFis })
                    .HasName("X01_ARC_PARAMETRI_DESTINATARI")
                    .IsUnique();

                entity.Property(e => e.KeyParametroDestinatario)
                    .HasColumnName("KEY_PARAMETRO_DESTINATARIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSistemaPostalizzazione)
                    .HasColumnName("FLG_SISTEMA_POSTALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoInvioStampa)
                    .HasColumnName("FLG_TIPO_INVIO_STAMPA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPostalizzazione)
                    .HasColumnName("FLG_TIPO_POSTALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdIndirizzo).HasColumnName("ID_INDIRIZZO");

                entity.Property(e => e.IdParametroDestinatario).HasColumnName("ID_PARAMETRO_DESTINATARIO");

                entity.Property(e => e.IdParametroStampa).HasColumnName("ID_PARAMETRO_STAMPA");

                entity.Property(e => e.IdRecapito).HasColumnName("ID_RECAPITO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Nominativo)
                    .HasColumnName("NOMINATIVO")
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcParametriStampa>(entity =>
            {
                entity.HasKey(e => e.IdParametroStampa);

                entity.ToTable("ARC_PARAMETRI_STAMPA", "ISUITE");

                entity.HasIndex(e => new { e.IdOggetto, e.FlgTipoOggetto })
                    .HasName("X01_ARC_PARAMETRI_STAMPA");

                entity.Property(e => e.IdParametroStampa)
                    .HasColumnName("ID_PARAMETRO_STAMPA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Etichetta)
                    .HasColumnName("ETICHETTA")
                    .IsUnicode(false);

                entity.Property(e => e.FlgArchiviazioneSino)
                    .HasColumnName("FLG_ARCHIVIAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAvvisoEmailSino)
                    .HasColumnName("FLG_AVVISO_EMAIL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCartaIntestataSino)
                    .HasColumnName("FLG_CARTA_INTESTATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFascicolazioneSino)
                    .HasColumnName("FLG_FASCICOLAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggettoPadre)
                    .HasColumnName("FLG_TIPO_OGGETTO_PADRE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdDeroga).HasColumnName("ID_DEROGA");

                entity.Property(e => e.IdFormatoReport).HasColumnName("ID_FORMATO_REPORT");

                entity.Property(e => e.IdLinguaReport).HasColumnName("ID_LINGUA_REPORT");

                entity.Property(e => e.IdModelloReport).HasColumnName("ID_MODELLO_REPORT");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdOggettoPadre).HasColumnName("ID_OGGETTO_PADRE");

                entity.Property(e => e.IdUtenteReport).HasColumnName("ID_UTENTE_REPORT");

                entity.Property(e => e.OggettoMail)
                    .HasColumnName("OGGETTO_MAIL")
                    .IsUnicode(false);

                entity.Property(e => e.ParametriDataset)
                    .HasColumnName("PARAMETRI_DATASET")
                    .IsUnicode(false);

                entity.Property(e => e.TestoMail)
                    .HasColumnName("TESTO_MAIL")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcParametriStampaErrori>(entity =>
            {
                entity.HasKey(e => e.IdParametroStampaErrore);

                entity.ToTable("ARC_PARAMETRI_STAMPA_ERRORI", "ISUITE");

                entity.HasIndex(e => e.IdParametroStampa)
                    .HasName("X01_ARC_PARAMETRI_STAMPA_ERRORI");

                entity.Property(e => e.IdParametroStampaErrore)
                    .HasColumnName("ID_PARAMETRO_STAMPA_ERRORE")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.DtErrore)
                    .HasColumnName("DT_ERRORE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdParametroStampa).HasColumnName("ID_PARAMETRO_STAMPA");
            });

            modelBuilder.Entity<ArcPolizzeAntiFrode>(entity =>
            {
                entity.HasKey(e => e.KeyPolizzaAntiFrode)
                    .HasName("SYS_C0075923");

                entity.ToTable("ARC_POLIZZE_ANTI_FRODE", "ICLAIMS");

                entity.HasIndex(e => new { e.IdPolizzaAntiFrode, e.DtStoScadenzaFis })
                    .HasName("XX01_ARC_POLIZZE_ANTI_FRODE");

                entity.HasIndex(e => new { e.IdCompagnia, e.NumeroPolizza, e.DtStoScadenzaFis, e.DtScadenza, e.DtEffetto })
                    .HasName("XX02_ARC_POLIZZE_ANTI_FRODE");

                entity.Property(e => e.KeyPolizzaAntiFrode)
                    .HasColumnName("KEY_POLIZZA_ANTI_FRODE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdPolizzaAntiFrode).HasColumnName("ID_POLIZZA_ANTI_FRODE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.LivelloAntiFrode).HasColumnName("LIVELLO_ANTI_FRODE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.NumeroPolizza)
                    .IsRequired()
                    .HasColumnName("NUMERO_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcPosizioneDanno>(entity =>
            {
                entity.HasKey(e => e.IdArcPosizioneDanno);

                entity.ToTable("ARC_POSIZIONE_DANNO", "IREGULATION");

                entity.Property(e => e.IdArcPosizioneDanno)
                    .HasColumnName("ID_ARC_POSIZIONE_DANNO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Danno)
                    .HasColumnName("DANNO")
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.DtRiferimento)
                    .HasColumnName("DT_RIFERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysEvento)
                    .HasColumnName("DT_SYS_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoDanno)
                    .HasColumnName("FLG_STATO_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoConvenzione)
                    .HasColumnName("FLG_TIPO_CONVENZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDanno)
                    .HasColumnName("FLG_TIPO_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaGestione)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdPosizione)
                    .HasColumnName("ID_POSIZIONE")
                    .HasColumnType("numeric(20, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(20, 0)");
            });

            modelBuilder.Entity<ArcPresaVisioneUtenti>(entity =>
            {
                entity.HasKey(e => e.IdPresaVisioneUtente);

                entity.ToTable("ARC_PRESA_VISIONE_UTENTI", "ISUITE");

                entity.HasIndex(e => e.IdAllegatoVisionato)
                    .HasName("XX01_ARC_PRESA_VISIONE_UTENTI");

                entity.HasIndex(e => e.IdUtente)
                    .HasName("XX02_ARC_PRESA_VISIONE_UTENTI");

                entity.Property(e => e.IdPresaVisioneUtente)
                    .HasColumnName("ID_PRESA_VISIONE_UTENTE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtPresaVisione)
                    .HasColumnName("DT_PRESA_VISIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAllegatoVisionato).HasColumnName("ID_ALLEGATO_VISIONATO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<ArcProdottiMicrodata>(entity =>
            {
                entity.HasKey(e => e.IdProdottoMicrodata)
                    .HasName("PK_ID_PRODOTTO_MICRODATA");

                entity.ToTable("ARC_PRODOTTI_MICRODATA", "IFLOW");

                entity.Property(e => e.IdProdottoMicrodata)
                    .HasColumnName("ID_PRODOTTO_MICRODATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodProdotto)
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescProdotto)
                    .HasColumnName("DESC_PRODOTTO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ArcRegFinBroker>(entity =>
            {
                entity.HasKey(e => e.IdRegFinBroker);

                entity.ToTable("ARC_REG_FIN_BROKER", "IAGENCY");

                entity.HasIndex(e => new { e.IdRetevendita, e.DtIncassiA, e.DtRegolazione })
                    .HasName("XX01ARC_REG_FIN_BROKER");

                entity.Property(e => e.IdRegFinBroker)
                    .HasColumnName("ID_REG_FIN_BROKER")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtIncassiA)
                    .HasColumnName("DT_INCASSI_A")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegolazione)
                    .HasColumnName("DT_REGOLAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysRegistrazione)
                    .HasColumnName("DT_SYS_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdMfDato).HasColumnName("ID_MF_DATO");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.TotPagatoPremi)
                    .HasColumnName("TOT_PAGATO_PREMI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotPagatoProvv)
                    .HasColumnName("TOT_PAGATO_PROVV")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<ArcRegFinBrokerDett>(entity =>
            {
                entity.HasKey(e => e.IdRegFinBrokerDett);

                entity.ToTable("ARC_REG_FIN_BROKER_DETT", "IAGENCY");

                entity.HasIndex(e => e.IdEsito)
                    .HasName("XX02ARC_REG_FIN_BROKER_DETT");

                entity.HasIndex(e => e.IdRegFinBroker)
                    .HasName("XX01ARC_REG_FIN_BROKER_DETT");

                entity.Property(e => e.IdRegFinBrokerDett)
                    .HasColumnName("ID_REG_FIN_BROKER_DETT")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtSysRegistrazione)
                    .HasColumnName("DT_SYS_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoIncasso)
                    .HasColumnName("FLG_TIPO_INCASSO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdEsito).HasColumnName("ID_ESITO");

                entity.Property(e => e.IdRegFinBroker).HasColumnName("ID_REG_FIN_BROKER");

                entity.Property(e => e.IdTitTitolo).HasColumnName("ID_TIT_TITOLO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpLordo)
                    .HasColumnName("IMP_LORDO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagato)
                    .HasColumnName("IMP_PAGATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagatoProvv)
                    .HasColumnName("IMP_PAGATO_PROVV")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvvigioni)
                    .HasColumnName("IMP_PROVVIGIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSaldo)
                    .HasColumnName("IMP_SALDO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<ArcRegoleAllegati>(entity =>
            {
                entity.HasKey(e => e.IdRegolaAllegato);

                entity.ToTable("ARC_REGOLE_ALLEGATI", "ISUITE");

                entity.HasIndex(e => new { e.IdRegolaAllegato, e.DtInizioValidita, e.DtFineValidita })
                    .HasName("XX02ARC_REGOLE_ALLEGATI");

                entity.HasIndex(e => new { e.DtInizioValidita, e.FlgTipoMacrotipologia, e.FlgTipoMicrotipologia, e.FlgObbligatorietaAllegato })
                    .HasName("XX01ARC_REGOLE_ALLEGATI")
                    .IsUnique();

                entity.Property(e => e.IdRegolaAllegato)
                    .HasColumnName("ID_REGOLA_ALLEGATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgObbligatorietaAllegato)
                    .HasColumnName("FLG_OBBLIGATORIETA_ALLEGATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMacrotipologia)
                    .HasColumnName("FLG_TIPO_MACROTIPOLOGIA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoMicrotipologia)
                    .HasColumnName("FLG_TIPO_MICROTIPOLOGIA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTpRegolaSottoscrizione)
                    .HasColumnName("FLG_TP_REGOLA_SOTTOSCRIZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTpRegolaSxApertura)
                    .HasColumnName("FLG_TP_REGOLA_SX_APERTURA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTpRegolaSxLiquidaz)
                    .HasColumnName("FLG_TP_REGOLA_SX_LIQUIDAZ")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdFormula).HasColumnName("ID_FORMULA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<ArcRelazioniFlussi>(entity =>
            {
                entity.HasKey(e => e.IdArcRelazioniFlussi)
                    .HasName("WKF_ARC_RELAZIONI_FLUSSI_PK");

                entity.ToTable("ARC_RELAZIONI_FLUSSI", "ISUITE");

                entity.HasIndex(e => new { e.FlgTipoFlusso, e.IdentificativoEsterno })
                    .HasName("XX01ARC_RELAZIONI_FLUSSI");

                entity.HasIndex(e => new { e.FlgTipoFlusso, e.IdentificativoEsterno, e.IdCompagnia })
                    .HasName("XAK_ARC_RELAZIONI_FLUSSI");

                entity.Property(e => e.IdArcRelazioniFlussi)
                    .HasColumnName("ID_ARC_RELAZIONI_FLUSSI")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoFlusso)
                    .HasColumnName("FLG_TIPO_FLUSSO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.IdOggettoWise).HasColumnName("ID_OGGETTO_WISE");

                entity.Property(e => e.IdentificativoEsterno)
                    .HasColumnName("IDENTIFICATIVO_ESTERNO")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcRelazioniFlussiPtf>(entity =>
            {
                entity.HasKey(e => e.IdArcRelazioneflussoPtf);

                entity.ToTable("ARC_RELAZIONI_FLUSSI_PTF", "IFLOW");

                entity.HasIndex(e => new { e.FlgSistemaOrigine, e.FlgTipoOggettoWise, e.IdOggettoWise, e.IdCompagnia })
                    .HasName("XX02_ARC_RELAZIONI_FLUSSI_PTF");

                entity.HasIndex(e => new { e.FlgSistemaOrigine, e.FlgTipoOperazione, e.IdentificativoEsterno, e.IdCompagnia })
                    .HasName("XX01_ARC_RELAZIONI_FLUSSI_PTF");

                entity.Property(e => e.IdArcRelazioneflussoPtf)
                    .HasColumnName("ID_ARC_RELAZIONEFLUSSO_PTF")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgSistemaOrigine)
                    .HasColumnName("FLG_SISTEMA_ORIGINE")
                    .HasMaxLength(3);

                entity.Property(e => e.FlgTipoOggettoWise)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OGGETTO_WISE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOperazione)
                    .HasColumnName("FLG_TIPO_OPERAZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdOggettoWise).HasColumnName("ID_OGGETTO_WISE");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdPolizzaAnnullata).HasColumnName("ID_POLIZZA_ANNULLATA");

                entity.Property(e => e.IdPolizzaSospesa).HasColumnName("ID_POLIZZA_SOSPESA");

                entity.Property(e => e.IdTitolo).HasColumnName("ID_TITOLO");

                entity.Property(e => e.IdXmlInputDettP).HasColumnName("ID_XML_INPUT_DETT_P");

                entity.Property(e => e.IdentificativoEsterno)
                    .HasColumnName("IDENTIFICATIVO_ESTERNO")
                    .HasMaxLength(300);

                entity.Property(e => e.KeyPolEvento).HasColumnName("KEY_POL_EVENTO");

                entity.Property(e => e.KeyTitEvento).HasColumnName("KEY_TIT_EVENTO");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PeriodoContabile)
                    .HasColumnName("PERIODO_CONTABILE")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.PrgOperazione).HasColumnName("PRG_OPERAZIONE");

                entity.Property(e => e.TimestampInserimento)
                    .IsRequired()
                    .HasColumnName("TIMESTAMP_INSERIMENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<ArcRichiesteAllegati>(entity =>
            {
                entity.HasKey(e => e.IdRichiesteAllegati)
                    .HasName("PK_RICHIESTE_ALLEGATI_STO");

                entity.ToTable("ARC_RICHIESTE_ALLEGATI", "ISUITE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("K01_RICHIESTE_ALLEGATI");

                entity.Property(e => e.IdRichiesteAllegati)
                    .HasColumnName("ID_RICHIESTE_ALLEGATI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DataRichiesta)
                    .HasColumnName("DATA_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.RecordInviato)
                    .HasColumnName("RECORD_INVIATO")
                    .IsUnicode(false);

                entity.Property(e => e.TipoRichiesta)
                    .HasColumnName("TIPO_RICHIESTA")
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcRispQuestionariIdd>(entity =>
            {
                entity.HasKey(e => e.KeyRispQuestionarioIdd)
                    .HasName("PK_ARC_RISP_QUESTIONARIO_IDD");

                entity.ToTable("ARC_RISP_QUESTIONARI_IDD", "IAGENCY");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX04ARC_RISP_QUESTIONARI_IDD");

                entity.HasIndex(e => e.IdQuestionarioIdd)
                    .HasName("XX02ARC_RISP_QUESTIONARI_IDD");

                entity.HasIndex(e => e.IdRispQuestionarioIdd)
                    .HasName("XX01ARC_RISP_QUESTIONARI_IDD");

                entity.HasIndex(e => new { e.IdRispQuestionarioIdd, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX03ARC_RISP_QUESTIONARI_IDD");

                entity.Property(e => e.KeyRispQuestionarioIdd)
                    .HasColumnName("KEY_RISP_QUESTIONARIO_IDD")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdQuestionarioIdd).HasColumnName("ID_QUESTIONARIO_IDD");

                entity.Property(e => e.IdRispQuestionarioIdd).HasColumnName("ID_RISP_QUESTIONARIO_IDD");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<ArcSinistriAntiFrode>(entity =>
            {
                entity.HasKey(e => e.KeySinistroAntiFrode)
                    .HasName("SYS_C0075912");

                entity.ToTable("ARC_SINISTRI_ANTI_FRODE", "ICLAIMS");

                entity.HasIndex(e => new { e.IdSinistroAntiFrode, e.DtStoScadenzaFis })
                    .HasName("XX01_ARC_SINISTRI_ANTI_FRODE");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaFis, e.DtScadenza, e.DtEffetto })
                    .HasName("XX02_ARC_SINISTRI_ANTI_FRODE");

                entity.Property(e => e.KeySinistroAntiFrode)
                    .HasColumnName("KEY_SINISTRO_ANTI_FRODE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DataAggiornamento)
                    .HasColumnName("data_aggiornamento")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FrodeAccertata)
                    .HasColumnName("FRODE_ACCERTATA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSinistroAntiFrode).HasColumnName("ID_SINISTRO_ANTI_FRODE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.LivelloAntiFrode).HasColumnName("LIVELLO_ANTI_FRODE");

                entity.Property(e => e.LivelloCriticita)
                    .HasColumnName("LIVELLO_CRITICITA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcSoggettiAntiFrode>(entity =>
            {
                entity.HasKey(e => e.KeySoggettoAntiFrode)
                    .HasName("SYS_C0075932");

                entity.ToTable("ARC_SOGGETTI_ANTI_FRODE", "ISUITE");

                entity.HasIndex(e => new { e.IdSoggettoAntiFrode, e.DtStoScadenzaFis })
                    .HasName("XX01_ARC_SOGGETTI_ANTI_FRODE");

                entity.HasIndex(e => new { e.CodiceFiscale, e.DtStoScadenzaFis, e.DtScadenza, e.DtEffetto })
                    .HasName("XX02_ARC_SOGGETTI_ANTI_FRODE");

                entity.HasIndex(e => new { e.PartitaIva, e.DtStoScadenzaFis, e.DtScadenza, e.DtEffetto })
                    .HasName("XX03_ARC_SOGGETTI_ANTI_FRODE");

                entity.Property(e => e.KeySoggettoAntiFrode)
                    .HasColumnName("KEY_SOGGETTO_ANTI_FRODE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceFiscale)
                    .HasColumnName("CODICE_FISCALE")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdSoggettoAntiFrode).HasColumnName("ID_SOGGETTO_ANTI_FRODE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.LivelloAntiFrode).HasColumnName("LIVELLO_ANTI_FRODE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.PartitaIva)
                    .HasColumnName("PARTITA_IVA")
                    .HasMaxLength(11)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcTargetMarketCliente>(entity =>
            {
                entity.HasKey(e => e.KeyTargetMarketCliente);

                entity.ToTable("ARC_TARGET_MARKET_CLIENTE", "IAGENCY");

                entity.Property(e => e.KeyTargetMarketCliente)
                    .HasColumnName("KEY_TARGET_MARKET_CLIENTE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTargetMarket)
                    .HasColumnName("FLG_TARGET_MARKET")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdRispQuestionarioIdd).HasColumnName("ID_RISP_QUESTIONARIO_IDD");

                entity.Property(e => e.IdTargetMarketCliente).HasColumnName("ID_TARGET_MARKET_CLIENTE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<ArcTargheAntiFrode>(entity =>
            {
                entity.HasKey(e => e.KeyTargaAntiFrode);

                entity.ToTable("ARC_TARGHE_ANTI_FRODE", "IAGENCY");

                entity.HasIndex(e => new { e.IdTargaAntiFrode, e.DtStoScadenzaFis })
                    .HasName("XX01_ARC_TARGHE_ANTI_FRODE");

                entity.HasIndex(e => new { e.IdCompagnia, e.FlgTipoTarga, e.Targa, e.DtStoScadenzaFis, e.DtScadenza, e.DtEffetto })
                    .HasName("XX02_ARC_TARGHE_ANTI_FRODE");

                entity.HasIndex(e => new { e.IdCompagnia, e.FlgTipoTarga, e.Telaio, e.DtStoScadenzaFis, e.DtScadenza, e.DtEffetto })
                    .HasName("XX03_ARC_TARGHE_ANTI_FRODE");

                entity.Property(e => e.KeyTargaAntiFrode)
                    .HasColumnName("KEY_TARGA_ANTI_FRODE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoTarga)
                    .HasColumnName("FLG_TIPO_TARGA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdTargaAntiFrode).HasColumnName("ID_TARGA_ANTI_FRODE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.Targa)
                    .HasColumnName("TARGA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Telaio)
                    .HasColumnName("TELAIO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ArcTrascodificaSinistro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ARC_TRASCODIFICA_SINISTRO", "IREGULATION");

                entity.Property(e => e.SinistroBollato)
                    .HasColumnName("SINISTRO_BOLLATO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.SinistroRegulation)
                    .HasColumnName("SINISTRO_REGULATION")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<AutosoftParcelle>(entity =>
            {
                entity.HasKey(e => e.IdAutosoftparcelle);

                entity.ToTable("AUTOSOFT_PARCELLE", "ICLAIMS");

                entity.Property(e => e.IdAutosoftparcelle)
                    .HasColumnName("ID_AUTOSOFTPARCELLE")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aliquotaiva)
                    .HasColumnName("ALIQUOTAIVA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Autorizzazionepagamento)
                    .HasColumnName("AUTORIZZAZIONEPAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Contributiprevidenziali)
                    .HasColumnName("CONTRIBUTIPREVIDENZIALI")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Costounitariofoto)
                    .HasColumnName("COSTOUNITARIOFOTO")
                    .HasColumnType("numeric(12, 10)");

                entity.Property(e => e.Costounitariokm)
                    .HasColumnName("COSTOUNITARIOKM")
                    .HasColumnType("numeric(12, 10)");

                entity.Property(e => e.Datachiusura)
                    .HasColumnName("DATACHIUSURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datacreazione)
                    .HasColumnName("DATACREAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Datafattura)
                    .HasColumnName("DATAFATTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fotoeffettuate)
                    .HasColumnName("FOTOEFFETTUATE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Fotoinfranchigia)
                    .HasColumnName("FOTOINFRANCHIGIA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.Idfattura)
                    .HasColumnName("IDFATTURA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Imponibileconcassa)
                    .HasColumnName("IMPONIBILECONCASSA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Imponibilesenzacassa)
                    .HasColumnName("IMPONIBILESENZACASSA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Importocassa)
                    .HasColumnName("IMPORTOCASSA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Importocontributiprevidenziali)
                    .HasColumnName("IMPORTOCONTRIBUTIPREVIDENZIALI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Importoiva)
                    .HasColumnName("IMPORTOIVA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Importoperiziaivato)
                    .HasColumnName("IMPORTOPERIZIAIVATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Importoritenutaacconto)
                    .HasColumnName("IMPORTORITENUTAACCONTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Kminfranchigia)
                    .HasColumnName("KMINFRANCHIGIA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Kmpercorsi)
                    .HasColumnName("KMPERCORSI")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Noteparcella)
                    .HasColumnName("NOTEPARCELLA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Numerofattura)
                    .HasColumnName("NUMEROFATTURA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Onorarioaccertamento)
                    .HasColumnName("ONORARIOACCERTAMENTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.OnorarioaccertamentoConf)
                    .HasColumnName("ONORARIOACCERTAMENTO_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Onorarioard)
                    .HasColumnName("ONORARIOARD")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.OnorarioardConf)
                    .HasColumnName("ONORARIOARD_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Onorarioconcordato)
                    .HasColumnName("ONORARIOCONCORDATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.OnorarioconcordatoConf)
                    .HasColumnName("ONORARIOCONCORDATO_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Onorariointerlocutorie)
                    .HasColumnName("ONORARIOINTERLOCUTORIE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.OnorariointerlocutorieConf)
                    .HasColumnName("ONORARIOINTERLOCUTORIE_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Onorarioliquidazione)
                    .HasColumnName("ONORARIOLIQUIDAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.OnorarioliquidazioneConf)
                    .HasColumnName("ONORARIOLIQUIDAZIONE_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Onorarionegativa)
                    .HasColumnName("ONORARIONEGATIVA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.OnorarionegativaConf)
                    .HasColumnName("ONORARIONEGATIVA_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Onorarioperizia)
                    .HasColumnName("ONORARIOPERIZIA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.OnorarioperiziaConf)
                    .HasColumnName("ONORARIOPERIZIA_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Onorarioriscontro)
                    .HasColumnName("ONORARIORISCONTRO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.OnorarioriscontroConf)
                    .HasColumnName("ONORARIORISCONTRO_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PercContributiprevidenziali)
                    .HasColumnName("PERC_CONTRIBUTIPREVIDENZIALI")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.RifIncaricoautosoft)
                    .IsRequired()
                    .HasColumnName("RIF_INCARICOAUTOSOFT")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Ritenutaacconto)
                    .HasColumnName("RITENUTAACCONTO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.SpFoto)
                    .HasColumnName("SP_FOTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SpFotoConf)
                    .HasColumnName("SP_FOTO_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SpKm)
                    .HasColumnName("SP_KM")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SpKmConf)
                    .HasColumnName("SP_KM_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SpKmtipoimporto)
                    .HasColumnName("SP_KMTIPOIMPORTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SpPostali)
                    .HasColumnName("SP_POSTALI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SpPostaliConf)
                    .HasColumnName("SP_POSTALI_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SpPostalitipoimporto)
                    .HasColumnName("SP_POSTALITIPOIMPORTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SpRaccomandate)
                    .HasColumnName("SP_RACCOMANDATE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SpRaccomandateConf)
                    .HasColumnName("SP_RACCOMANDATE_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SpRaccomandatetipoimporto)
                    .HasColumnName("SP_RACCOMANDATETIPOIMPORTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SpVarieimponibile)
                    .HasColumnName("SP_VARIEIMPONIBILE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SpVarieimponibileConf)
                    .HasColumnName("SP_VARIEIMPONIBILE_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SpVarienonimponibile)
                    .HasColumnName("SP_VARIENONIMPONIBILE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SpVarienonimponibileConf)
                    .HasColumnName("SP_VARIENONIMPONIBILE_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SpVisura)
                    .HasColumnName("SP_VISURA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SpVisuraConf)
                    .HasColumnName("SP_VISURA_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.SpVisuratipoimporto)
                    .HasColumnName("SP_VISURATIPOIMPORTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.StatoFlusso)
                    .HasColumnName("STATO_FLUSSO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Statoautority)
                    .HasColumnName("STATOAUTORITY")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TotNonimponibile)
                    .HasColumnName("TOT_NONIMPONIBILE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotOnorari)
                    .HasColumnName("TOT_ONORARI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotParcella)
                    .HasColumnName("TOT_PARCELLA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotParcellaivato)
                    .HasColumnName("TOT_PARCELLAIVATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotParcellanettocassa)
                    .HasColumnName("TOT_PARCELLANETTOCASSA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotParcellanettocassaConf)
                    .HasColumnName("TOT_PARCELLANETTOCASSA_CONF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotParcellanettoritacconto)
                    .HasColumnName("TOT_PARCELLANETTORITACCONTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotSpImponibili)
                    .HasColumnName("TOT_SP_IMPONIBILI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotSpNonimponibili)
                    .HasColumnName("TOT_SP_NONIMPONIBILI")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<BdiConsultazioneEsclusi>(entity =>
            {
                entity.HasKey(e => e.ChiaveEsclusa)
                    .HasName("PK__BDI_CONS__61A33CAAA24FDD34");

                entity.ToTable("BDI_CONSULTAZIONE_ESCLUSI", "IREGULATION");

                entity.Property(e => e.ChiaveEsclusa)
                    .HasColumnName("CHIAVE_ESCLUSA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BdiConsultazioneInvii>(entity =>
            {
                entity.HasKey(e => e.KeyConsultazioneinvio)
                    .HasName("PK_BDI_CONS_INVII");

                entity.ToTable("BDI_CONSULTAZIONE_INVII", "IREGULATION");

                entity.HasIndex(e => e.IdConsultazioneinvio)
                    .HasName("XX01_BDI_CONS_INVII");

                entity.Property(e => e.KeyConsultazioneinvio)
                    .HasColumnName("KEY_CONSULTAZIONEINVIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtErrore)
                    .HasColumnName("DT_ERRORE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRisposta)
                    .HasColumnName("DT_RISPOSTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdConsultazioneinvio).HasColumnName("ID_CONSULTAZIONEINVIO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<BdiConsultazioneInviiDett>(entity =>
            {
                entity.HasKey(e => e.KeyConsultazioneinvioDett)
                    .HasName("PK_BDI_CONS_INVII_DETT");

                entity.ToTable("BDI_CONSULTAZIONE_INVII_DETT", "IREGULATION");

                entity.HasIndex(e => e.CodiceFiscalePartitaIva)
                    .HasName("XX05_BDI_CONS_INVII_DETT");

                entity.HasIndex(e => e.IdConsultazioneinvio)
                    .HasName("XX02_BDI_CONS_INVII_DETT");

                entity.HasIndex(e => e.IdConsultazioneinvioDett)
                    .HasName("XX01_BDI_CONS_INVII_DETT");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03_BDI_CONS_INVII_DETT");

                entity.HasIndex(e => e.Targa)
                    .HasName("XX04_BDI_CONS_INVII_DETT");

                entity.Property(e => e.KeyConsultazioneinvioDett)
                    .HasColumnName("KEY_CONSULTAZIONEINVIO_DETT")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodSinistroInviato)
                    .HasColumnName("COD_SINISTRO_INVIATO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceFiscalePartitaIva)
                    .HasColumnName("CODICE_FISCALE_PARTITA_IVA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdConsultazioneinvio).HasColumnName("ID_CONSULTAZIONEINVIO");

                entity.Property(e => e.IdConsultazioneinvioDett).HasColumnName("ID_CONSULTAZIONEINVIO_DETT");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ProgressivoRecord).HasColumnName("PROGRESSIVO_RECORD");

                entity.Property(e => e.Targa)
                    .HasColumnName("TARGA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRicerca)
                    .HasColumnName("TIPO_RICERCA")
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BdiConsultazioneInviiErr>(entity =>
            {
                entity.HasKey(e => e.KeyConsultazioneinvioErr)
                    .HasName("PK_BDI_CONS_INVII_ERR");

                entity.ToTable("BDI_CONSULTAZIONE_INVII_ERR", "IREGULATION");

                entity.HasIndex(e => e.IdConsultazioneinvio)
                    .HasName("XX02_BDI_CONS_INVII_ERR");

                entity.HasIndex(e => e.IdConsultazioneinvioErr)
                    .HasName("XX01_BDI_CONS_INVII_ERR");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03_BDI_CONS_INVII_ERR");

                entity.Property(e => e.KeyConsultazioneinvioErr)
                    .HasColumnName("KEY_CONSULTAZIONEINVIO_ERR")
                    .ValueGeneratedNever();

                entity.Property(e => e.ChiaveTipoRek)
                    .HasColumnName("CHIAVE_TIPO_REK")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodSinistroInviato)
                    .HasColumnName("COD_SINISTRO_INVIATO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdConsultazioneinvio).HasColumnName("ID_CONSULTAZIONEINVIO");

                entity.Property(e => e.IdConsultazioneinvioErr).HasColumnName("ID_CONSULTAZIONEINVIO_ERR");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ProgressivoRecord).HasColumnName("PROGRESSIVO_RECORD");
            });

            modelBuilder.Entity<BdiConsultazioneInviiRisp>(entity =>
            {
                entity.HasKey(e => e.KeyConsultazioneinvioRisp)
                    .HasName("PK_BDI_CONS_INVII_RISP");

                entity.ToTable("BDI_CONSULTAZIONE_INVII_RISP", "IREGULATION");

                entity.HasIndex(e => e.IdConsultazioneinvio)
                    .HasName("XX02_BDI_CONS_INVII_RISP");

                entity.HasIndex(e => e.IdConsultazioneinvioRisp)
                    .HasName("XX01_BDI_CONS_INVII_RISP");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03_BDI_CONS_INVII_RISP");

                entity.Property(e => e.KeyConsultazioneinvioRisp)
                    .HasColumnName("KEY_CONSULTAZIONEINVIO_RISP")
                    .ValueGeneratedNever();

                entity.Property(e => e.ChiaveTipoRek)
                    .HasColumnName("CHIAVE_TIPO_REK")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CodSinistroInviato)
                    .HasColumnName("COD_SINISTRO_INVIATO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceProvvedimento1).HasColumnName("CODICE_PROVVEDIMENTO_1");

                entity.Property(e => e.CodiceProvvedimento2).HasColumnName("CODICE_PROVVEDIMENTO_2");

                entity.Property(e => e.CodiceProvvedimento3).HasColumnName("CODICE_PROVVEDIMENTO_3");

                entity.Property(e => e.CodiceProvvedimento4).HasColumnName("CODICE_PROVVEDIMENTO_4");

                entity.Property(e => e.CodiceProvvedimento5).HasColumnName("CODICE_PROVVEDIMENTO_5");

                entity.Property(e => e.CodiceProvvedimento6).HasColumnName("CODICE_PROVVEDIMENTO_6");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRek)
                    .HasColumnName("FLG_TIPO_REK")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdConsultazioneinvio).HasColumnName("ID_CONSULTAZIONEINVIO");

                entity.Property(e => e.IdConsultazioneinvioRisp).HasColumnName("ID_CONSULTAZIONEINVIO_RISP");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NumSinistri).HasColumnName("NUM_SINISTRI");
            });

            modelBuilder.Entity<BdiRichiesteDati>(entity =>
            {
                entity.HasKey(e => e.IdRichiesta)
                    .HasName("PK__BDI_RICH__9CDFF39EE33C0BCF");

                entity.ToTable("BDI_RICHIESTE_DATI", "IREGULATION");

                entity.HasIndex(e => e.DtCreazioneFile)
                    .HasName("XX03BDI_RICHIESTE_DATI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02BDI_RICHIESTE_DATI");

                entity.Property(e => e.IdRichiesta)
                    .HasColumnName("ID_RICHIESTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtCreazioneFile)
                    .HasColumnName("DT_CREAZIONE_FILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagraficaDestinatario)
                    .HasColumnName("ID_ANAGRAFICA_DESTINATARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCsl)
                    .HasColumnName("ID_CSL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta1)
                    .HasColumnName("ID_ENTITACOINVOLTA1")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta2)
                    .HasColumnName("ID_ENTITACOINVOLTA2")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.RuoloDestinatario)
                    .HasColumnName("RUOLO_DESTINATARIO")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BdiRilievi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BDI_RILIEVI", "IREGULATION");

                entity.HasIndex(e => e.IdEstrazione)
                    .HasName("XX02BDI_RILIEVI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03BDI_RILIEVI");

                entity.HasIndex(e => e.KeyRilievo)
                    .HasName("BDI_RILIEVI_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCompagnia, e.IdIspettorato, e.IdSinistro, e.IdEntitaCoinvolta, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX01BDI_RILIEVI");

                entity.Property(e => e.CodErroreIsvap)
                    .HasColumnName("COD_ERRORE_ISVAP")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CodFiscaleRif)
                    .HasColumnName("COD_FISCALE_RIF")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodIspettorato)
                    .HasColumnName("COD_ISPETTORATO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtInvioIsvap)
                    .HasColumnName("DT_INVIO_ISVAP")
                    .HasColumnType("date");

                entity.Property(e => e.DtLavorazioneRilievo)
                    .HasColumnName("DT_LAVORAZIONE_RILIEVO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegSinistro)
                    .HasColumnName("DT_REG_SINISTRO")
                    .HasColumnType("date");

                entity.Property(e => e.DtRilievo)
                    .HasColumnName("DT_RILIEVO")
                    .HasColumnType("date");

                entity.Property(e => e.DtRitornoIsvap)
                    .HasColumnName("DT_RITORNO_ISVAP")
                    .HasColumnType("date");

                entity.Property(e => e.DtStatoLavorazione)
                    .HasColumnName("DT_STATO_LAVORAZIONE")
                    .HasColumnType("date");

                entity.Property(e => e.DtStatoSinistro)
                    .HasColumnName("DT_STATO_SINISTRO")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInviatoSino)
                    .HasColumnName("FLG_INVIATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichDatiInviataSino)
                    .HasColumnName("FLG_RICH_DATI_INVIATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSanzionabileSino)
                    .HasColumnName("FLG_SANZIONABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoLavorazione)
                    .HasColumnName("FLG_STATO_LAVORAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoRilievo)
                    .HasColumnName("FLG_STATO_RILIEVO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoSinistro)
                    .HasColumnName("FLG_STATO_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEntitaInviata)
                    .HasColumnName("FLG_TIPO_ENTITA_INVIATA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggettoRilievo)
                    .HasColumnName("FLG_TIPO_OGGETTO_RILIEVO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdEntitaCoinvolta).HasColumnName("ID_ENTITA_COINVOLTA");

                entity.Property(e => e.IdEntitaInviata).HasColumnName("ID_ENTITA_INVIATA");

                entity.Property(e => e.IdEstrazione).HasColumnName("ID_ESTRAZIONE");

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdOggettoRilievo).HasColumnName("ID_OGGETTO_RILIEVO");

                entity.Property(e => e.IdRilievo).HasColumnName("ID_RILIEVO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteLavorazioneRilievo).HasColumnName("ID_UTENTE_LAVORAZIONE_RILIEVO");

                entity.Property(e => e.KeyRilievo).HasColumnName("KEY_RILIEVO");

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NominativoRif)
                    .HasColumnName("NOMINATIVO_RIF")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.PartitaIvaRif)
                    .HasColumnName("PARTITA_IVA_RIF")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.TargaRif)
                    .HasColumnName("TARGA_RIF")
                    .HasMaxLength(70)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BdiRilieviIgnorati>(entity =>
            {
                entity.HasKey(e => e.KeyRilievoIgnorato);

                entity.ToTable("BDI_RILIEVI_IGNORATI", "IREGULATION");

                entity.HasIndex(e => new { e.IdSinistro, e.IdOggettoRilievo, e.FlgTipoOggettoRilievo, e.CodErroreIvass, e.DtStoScadenzaLog })
                    .HasName("XX01_BDI_RILIEVI_IGNORATI");

                entity.Property(e => e.KeyRilievoIgnorato)
                    .HasColumnName("KEY_RILIEVO_IGNORATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErroreIvass)
                    .HasColumnName("COD_ERRORE_IVASS")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.FlgIgnoratoSino)
                    .HasColumnName("FLG_IGNORATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggettoRilievo)
                    .HasColumnName("FLG_TIPO_OGGETTO_RILIEVO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdOggettoRilievo).HasColumnName("ID_OGGETTO_RILIEVO");

                entity.Property(e => e.IdRilievo).HasColumnName("ID_RILIEVO");

                entity.Property(e => e.IdRilievoIgnorato).HasColumnName("ID_RILIEVO_IGNORATO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<BpFlussi>(entity =>
            {
                entity.HasKey(e => e.IdBpFlusso)
                    .HasName("PK_IAGENCY.BP_FLUSSI");

                entity.ToTable("BP_FLUSSI", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("BP_FLUSSI_ID_COMPAGNIA");

                entity.HasIndex(e => e.ProgrFlusso)
                    .HasName("BP_FLUSSI_PROGR_FLUSSO");

                entity.Property(e => e.IdBpFlusso)
                    .HasColumnName("ID_BP_FLUSSO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEstrazioneAl)
                    .IsRequired()
                    .HasColumnName("DT_ESTRAZIONE_AL")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtEstrazioneDal)
                    .IsRequired()
                    .HasColumnName("DT_ESTRAZIONE_DAL")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEnteErogatore)
                    .IsRequired()
                    .HasColumnName("FLG_ENTE_EROGATORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoFlusso)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_FLUSSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdUtenteCreazione).HasColumnName("ID_UTENTE_CREAZIONE");

                entity.Property(e => e.IdUtenteInvio).HasColumnName("ID_UTENTE_INVIO");

                entity.Property(e => e.NomeFlusso)
                    .IsRequired()
                    .HasColumnName("NOME_FLUSSO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ProgrFlusso).HasColumnName("PROGR_FLUSSO");
            });

            modelBuilder.Entity<BpFlussiDett>(entity =>
            {
                entity.HasKey(e => e.IdBpFlussoDett)
                    .HasName("PK_IAGENCY.BP_FLUSSI_DETT");

                entity.ToTable("BP_FLUSSI_DETT", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("BP_FLUSSI_DETT_ID_COMPAGNIA");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("BP_FLUSSI_DETT_ID_POLIZZA");

                entity.HasIndex(e => e.KeyPolEvento)
                    .HasName("BP_FLUSSI_DETT_KEY_POL_EVENTO");

                entity.Property(e => e.IdBpFlussoDett)
                    .HasColumnName("ID_BP_FLUSSO_DETT")
                    .ValueGeneratedNever();

                entity.Property(e => e.BpRecord)
                    .IsRequired()
                    .HasColumnName("BP_RECORD")
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOperazione)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OPERAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdBpFlusso).HasColumnName("ID_BP_FLUSSO");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.KeyPolEvento)
                    .HasColumnName("KEY_POL_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NPolizza)
                    .IsRequired()
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<BpScartiEurop>(entity =>
            {
                entity.HasKey(e => e.IdBpScartoEurop);

                entity.ToTable("BP_SCARTI_EUROP", "IAGENCY");

                entity.HasIndex(e => e.FlgStato)
                    .HasName("XX02_BP_SCARTI_EUROP");

                entity.HasIndex(e => new { e.IdBpFlusso, e.IdBpFlussoDett })
                    .HasName("XX01_BP_SCARTI_EUROP");

                entity.Property(e => e.IdBpScartoEurop)
                    .HasColumnName("ID_BP_SCARTO_EUROP")
                    .ValueGeneratedNever();

                entity.Property(e => e.Codice)
                    .HasColumnName("CODICE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneErrore)
                    .HasColumnName("DESCRIZIONE_ERRORE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStato)
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdBpFlusso).HasColumnName("ID_BP_FLUSSO");

                entity.Property(e => e.IdBpFlussoDett).HasColumnName("ID_BP_FLUSSO_DETT");

                entity.Property(e => e.RecordInviato)
                    .HasColumnName("RECORD_INVIATO")
                    .IsUnicode(false);

                entity.Property(e => e.TestataInviata)
                    .HasColumnName("TESTATA_INVIATA")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CardAllegatiTransizioni>(entity =>
            {
                entity.HasKey(e => e.KeyCardAllegatoTransizione);

                entity.ToTable("CARD_ALLEGATI_TRANSIZIONI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdRichiestaTransizione, e.DtStoScadenzaLog })
                    .HasName("XX01CARD_ALLEGATI_TRANSIZIONI");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaLog })
                    .HasName("XX02CARD_ALLEGATI_TRANSIZIONI");

                entity.HasIndex(e => new { e.KeyStato, e.DtStoScadenzaLog })
                    .HasName("XX03CARD_ALLEGATI_TRANSIZIONI");

                entity.Property(e => e.KeyCardAllegatoTransizione)
                    .HasColumnName("KEY_CARD_ALLEGATO_TRANSIZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.FlgTipoDocumentoCard)
                    .HasColumnName("FLG_TIPO_DOCUMENTO_CARD")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdCardAllegatoTransizione).HasColumnName("ID_CARD_ALLEGATO_TRANSIZIONE");

                entity.Property(e => e.IdRichiestaTransizione).HasColumnName("ID_RICHIESTA_TRANSIZIONE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.KeyStato).HasColumnName("KEY_STATO");
            });

            modelBuilder.Entity<CardContrasti1f>(entity =>
            {
                entity.HasKey(e => e.IdCardContrasto1f)
                    .HasName("PK_CONTRASTI_1F");

                entity.ToTable("CARD_CONTRASTI_1F", "ICLAIMS");

                entity.HasIndex(e => e.DtContrasto)
                    .HasName("X03_CONTRASTI_1F");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("X02_CONTRASTI_1F");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtElaborazione })
                    .HasName("X01_CONTRASTI_1F");

                entity.Property(e => e.IdCardContrasto1f)
                    .HasColumnName("ID_CARD_CONTRASTO_1F")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodAniaCompCtp)
                    .HasColumnName("COD_ANIA_COMP_CTP")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DtContrasto)
                    .HasColumnName("DT_CONTRASTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDefinizioneContrasto)
                    .HasColumnName("DT_DEFINIZIONE_CONTRASTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEvento)
                    .HasColumnName("DT_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvioFlusso)
                    .HasColumnName("DT_INVIO_FLUSSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDebitoreGestionario)
                    .HasColumnName("FLG_DEBITORE_GESTIONARIO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEsitoContrastoCard2017)
                    .HasColumnName("FLG_ESITO_CONTRASTO_CARD2017")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRagioneTorto)
                    .HasColumnName("FLG_RAGIONE_TORTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRagioneTortoAnia)
                    .HasColumnName("FLG_RAGIONE_TORTO_ANIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRagioneTortoCtp)
                    .HasColumnName("FLG_RAGIONE_TORTO_CTP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCardAnia)
                    .HasColumnName("FLG_TIPO_CARD_ANIA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCinquinaCard).HasColumnName("ID_CINQUINA_CARD");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdFunzioneSinistro).HasColumnName("ID_FUNZIONE_SINISTRO");

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdLiquidatore).HasColumnName("ID_LIQUIDATORE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.TargaAssicurato)
                    .HasColumnName("TARGA_ASSICURATO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TargaCtp)
                    .HasColumnName("TARGA_CTP")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CardContrastiDoc1f>(entity =>
            {
                entity.HasKey(e => e.IdCardContrastoDoc1f);

                entity.ToTable("CARD_CONTRASTI_DOC_1F", "ICLAIMS");

                entity.HasIndex(e => e.IdCardContrasto1f)
                    .HasName("X01_CARD_CONTRASTI_DOC_1F");

                entity.HasIndex(e => e.IdFiduciario)
                    .HasName("X03_CARD_CONTRASTI_DOC_1F");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("X04_CARD_CONTRASTI_DOC_1F");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("X02_CARD_CONTRASTI_DOC_1F");

                entity.Property(e => e.IdCardContrastoDoc1f)
                    .HasColumnName("ID_CARD_CONTRASTO_DOC_1F")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvioAutomatico)
                    .HasColumnName("DT_INVIO_AUTOMATICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAllegatoCtpSino)
                    .HasColumnName("FLG_ALLEGATO_CTP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDenunciaSino)
                    .HasColumnName("FLG_DENUNCIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInviatoAniaSino)
                    .HasColumnName("FLG_INVIATO_ANIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTestimonianzaSino)
                    .HasColumnName("FLG_TESTIMONIANZA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoDocCard2017)
                    .HasColumnName("FLG_TIPO_DOC_CARD2017")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgVerbaleAccSino)
                    .HasColumnName("FLG_VERBALE_ACC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdCardContrasto1f).HasColumnName("ID_CARD_CONTRASTO_1F");

                entity.Property(e => e.IdFiduciario).HasColumnName("ID_FIDUCIARIO");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");
            });

            modelBuilder.Entity<CardContrastiInc1f>(entity =>
            {
                entity.HasKey(e => e.IdCardContrastoInc1f);

                entity.ToTable("CARD_CONTRASTI_INC_1F", "ICLAIMS");

                entity.HasIndex(e => e.IdFiduciario)
                    .HasName("X03_CARD_CONTRASTI_INC_1F");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("X02_CARD_CONTRASTI_INC_1F");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtElaborazione })
                    .HasName("X01_CARD_CONTRASTI_INC_1F");

                entity.Property(e => e.IdCardContrastoInc1f)
                    .HasColumnName("ID_CARD_CONTRASTO_INC_1F")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEsitoIncarico)
                    .HasColumnName("DT_ESITO_INCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAnnullatoSino)
                    .HasColumnName("FLG_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEsitoIncaricoCard2017)
                    .HasColumnName("FLG_ESITO_INCARICO_CARD2017")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCardContrasto1f).HasColumnName("ID_CARD_CONTRASTO_1F");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdFiduciario).HasColumnName("ID_FIDUCIARIO");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");
            });

            modelBuilder.Entity<CardContrastiLiq1f>(entity =>
            {
                entity.HasKey(e => e.IdCardContrastiLiq1f);

                entity.ToTable("CARD_CONTRASTI_LIQ_1F", "ICLAIMS");

                entity.Property(e => e.IdCardContrastiLiq1f)
                    .HasColumnName("ID_CARD_CONTRASTI_LIQ_1F")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PercentualeRespLiq)
                    .HasColumnName("PERCENTUALE_RESP_LIQ")
                    .HasColumnType("decimal(10, 2)");
            });

            modelBuilder.Entity<CardContrastiLod1f>(entity =>
            {
                entity.HasKey(e => e.IdCardContrastoLod1f);

                entity.ToTable("CARD_CONTRASTI_LOD_1F", "ICLAIMS");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("X01_CARD_CONTRASTI_LOD_1F");

                entity.HasIndex(e => new { e.IdFunzioneSinistro, e.FlgTipoOggetto })
                    .HasName("X02_CARD_CONTRASTI_LOD_1F");

                entity.Property(e => e.IdCardContrastoLod1f)
                    .HasColumnName("ID_CARD_CONTRASTO_LOD_1F")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineLodo)
                    .HasColumnName("DT_FINE_LODO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioLodo)
                    .HasColumnName("DT_INIZIO_LODO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDefinitiPerScadenzaSino)
                    .HasColumnName("FLG_DEFINITI_PER_SCADENZA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRuoloRichiestaCompagnia)
                    .HasColumnName("FLG_RUOLO_RICHIESTA_COMPAGNIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoFinale)
                    .HasColumnName("FLG_STATO_FINALE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCardContrasto1f).HasColumnName("ID_CARD_CONTRASTO_1F");

                entity.Property(e => e.IdFunzioneSinistro).HasColumnName("ID_FUNZIONE_SINISTRO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");
            });

            modelBuilder.Entity<CardFunzioniSinistro>(entity =>
            {
                entity.HasKey(e => e.IdFunzioneSinistro)
                    .HasName("PK_FUNZIONE_SINISTRO");

                entity.ToTable("CARD_FUNZIONI_SINISTRO", "ICLAIMS");

                entity.HasIndex(e => new { e.IdSinistro, e.IdStatoCard })
                    .HasName("XX02CARD_FUNZIONI_SINISTRO");

                entity.HasIndex(e => new { e.IdSinistro, e.FlgTipoOggettoPadre, e.IdTipoOggettoCard })
                    .HasName("XX01CARD_FUNZIONI_SINISTRO");

                entity.Property(e => e.IdFunzioneSinistro)
                    .HasColumnName("ID_FUNZIONE_SINISTRO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaStato)
                    .HasColumnName("DT_SCADENZA_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoAttuale)
                    .HasColumnName("DT_STATO_ATTUALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUploadDocumentiComp)
                    .HasColumnName("DT_UPLOAD_DOCUMENTI_COMP")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUploadDocumentiCtp)
                    .HasColumnName("DT_UPLOAD_DOCUMENTI_CTP")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRuoloGestionaria)
                    .HasColumnName("FLG_RUOLO_GESTIONARIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRuoloRichiesta)
                    .HasColumnName("FLG_RUOLO_RICHIESTA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoFinaleSino)
                    .HasColumnName("FLG_STATO_FINALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggettoPadre)
                    .HasColumnName("FLG_TIPO_OGGETTO_PADRE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdCinquinaCard).HasColumnName("ID_CINQUINA_CARD");

                entity.Property(e => e.IdOggettoPadre).HasColumnName("ID_OGGETTO_PADRE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdStatoCard).HasColumnName("ID_STATO_CARD");

                entity.Property(e => e.IdTipoOggettoCard).HasColumnName("ID_TIPO_OGGETTO_CARD");
            });

            modelBuilder.Entity<CardMovimentiConsap>(entity =>
            {
                entity.HasKey(e => e.IdMovimentoConsap);

                entity.ToTable("CARD_MOVIMENTI_CONSAP", "ICLAIMS");

                entity.HasIndex(e => e.DtContabileConsap)
                    .HasName("XX02_CARD_MOVIMENTI_CONSAP");

                entity.HasIndex(e => e.DtPagamento)
                    .HasName("XX03_CARD_MOVIMENTI_CONSAP");

                entity.HasIndex(e => e.IdFlussoCard)
                    .HasName("XX04_CARD_MOVIMENTI_CONSAP")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01_CARD_MOVIMENTI_CONSAP");

                entity.Property(e => e.IdMovimentoConsap)
                    .HasColumnName("ID_MOVIMENTO_CONSAP")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAbbinamentoFlusso)
                    .HasColumnName("DT_ABBINAMENTO_FLUSSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtContabileConsap)
                    .HasColumnName("DT_CONTABILE_CONSAP")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCausaleMovimento)
                    .HasColumnName("FLG_CAUSALE_MOVIMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgParzialeTotale)
                    .IsRequired()
                    .HasColumnName("FLG_PARZIALE_TOTALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoConvenzione)
                    .HasColumnName("FLG_TIPO_CONVENZIONE")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFlussoCard).HasColumnName("ID_FLUSSO_CARD");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImportoRecuperato)
                    .HasColumnName("IMPORTO_RECUPERATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NSinistro)
                    .IsRequired()
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TipoDanno)
                    .IsRequired()
                    .HasColumnName("TIPO_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<CardMovimentiContabili>(entity =>
            {
                entity.HasKey(e => e.IdMovimentoContabile);

                entity.ToTable("CARD_MOVIMENTI_CONTABILI", "ICLAIMS");

                entity.HasIndex(e => e.DtPagamento)
                    .HasName("XX02_CARD_MOVIMENTI_CONTABILI");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01_CARD_MOVIMENTI_CONTABILI");

                entity.Property(e => e.IdMovimentoContabile)
                    .HasColumnName("ID_MOVIMENTO_CONTABILE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoConvenzione)
                    .HasColumnName("FLG_TIPO_CONVENZIONE")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdRecupero).HasColumnName("ID_RECUPERO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImportoRecupero)
                    .HasColumnName("IMPORTO_RECUPERO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NSinistro)
                    .IsRequired()
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RifEsterno)
                    .HasColumnName("RIF_ESTERNO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRecupero)
                    .HasColumnName("TIPO_RECUPERO")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CardMovimentiTecnici>(entity =>
            {
                entity.HasKey(e => e.IdMovimentoTecnico);

                entity.ToTable("CARD_MOVIMENTI_TECNICI", "ICLAIMS");

                entity.HasIndex(e => e.DtPagamento)
                    .HasName("XX02_CARD_MOVIMENTI_TECNICI");

                entity.HasIndex(e => e.IdRecupero)
                    .HasName("XX03_CARD_MOVIMENTI_TECNICI");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01_CARD_MOVIMENTI_TECNICI");

                entity.Property(e => e.IdMovimentoTecnico)
                    .HasColumnName("ID_MOVIMENTO_TECNICO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoConvenzione)
                    .HasColumnName("FLG_TIPO_CONVENZIONE")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdRecupero).HasColumnName("ID_RECUPERO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImportoRecupero)
                    .HasColumnName("IMPORTO_RECUPERO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NSinistro)
                    .IsRequired()
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRecupero)
                    .IsRequired()
                    .HasColumnName("TIPO_RECUPERO")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CardRichiesteTransizioni>(entity =>
            {
                entity.HasKey(e => e.KeyRichiestaTransizione)
                    .HasName("PK_RICHIESTA_TRANSIZIONE");

                entity.ToTable("CARD_RICHIESTE_TRANSIZIONI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdFunzioneSinistro, e.DtStoScadenzaLog })
                    .HasName("XX01CARD_RICHIESTE_TRANSIZIONI");

                entity.HasIndex(e => new { e.IdFunzioneSinistro, e.IdSinistro })
                    .HasName("XX03CARD_RICHIESTE_TRANSIZIONI");

                entity.HasIndex(e => new { e.IdFunzioneSinistro, e.DtStoScadenzaLog, e.FlgStatoTransizioneCard })
                    .HasName("XX02CARD_RICHIESTE_TRANSIZIONI");

                entity.HasIndex(e => new { e.IdFunzioneSinistro, e.IdSinistro, e.FlgStatoTransizioneCard })
                    .HasName("XX04CARD_RICHIESTE_TRANSIZIONI");

                entity.Property(e => e.KeyRichiestaTransizione)
                    .HasColumnName("KEY_RICHIESTA_TRANSIZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtInvio).HasColumnName("DT_INVIO");

                entity.Property(e => e.DtRichiesta)
                    .HasColumnName("DT_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoTransizione)
                    .HasColumnName("DT_STATO_TRANSIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.FlgInvioAutomaticoSino)
                    .HasColumnName("FLG_INVIO_AUTOMATICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaScaRSino)
                    .HasColumnName("FLG_RICHIESTA_SCA_R_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoTransizioneCard)
                    .HasColumnName("FLG_STATO_TRANSIZIONE_CARD")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdClassificazioneStatoCard).HasColumnName("ID_CLASSIFICAZIONE_STATO_CARD");

                entity.Property(e => e.IdFunzioneSinistro).HasColumnName("ID_FUNZIONE_SINISTRO");

                entity.Property(e => e.IdRichiestaTransizione).HasColumnName("ID_RICHIESTA_TRANSIZIONE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdTransizioneStatoCard).HasColumnName("ID_TRANSIZIONE_STATO_CARD");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteRichiesta).HasColumnName("ID_UTENTE_RICHIESTA");

                entity.Property(e => e.KeyStato).HasColumnName("KEY_STATO");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CardServiziWeb>(entity =>
            {
                entity.HasKey(e => e.IdCardServizioWeb);

                entity.ToTable("CARD_SERVIZI_WEB", "ICLAIMS");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02_CARD_SERVIZI_WEB");

                entity.HasIndex(e => e.IdTipoOggettoCard)
                    .HasName("XX01_CARD_SERVIZI_WEB");

                entity.HasIndex(e => new { e.IdOggettoPadre, e.FlgTipoOggettoPadre })
                    .HasName("XX03_CARD_SERVIZI_WEB");

                entity.Property(e => e.IdCardServizioWeb)
                    .HasColumnName("ID_CARD_SERVIZIO_WEB")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoAttuale)
                    .HasColumnName("DT_STATO_ATTUALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRuoloImpresaAnia)
                    .HasColumnName("FLG_RUOLO_IMPRESA_ANIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggettoPadre)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OGGETTO_PADRE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggettoPadre).HasColumnName("ID_OGGETTO_PADRE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdStatoAttuale).HasColumnName("ID_STATO_ATTUALE");

                entity.Property(e => e.IdTipoOggettoCard).HasColumnName("ID_TIPO_OGGETTO_CARD");
            });

            modelBuilder.Entity<CardStati>(entity =>
            {
                entity.HasKey(e => e.KeyCardStato);

                entity.ToTable("CARD_STATI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdClassificazioneStatoCard, e.DtStoScadenzaLog })
                    .HasName("XX02CARD_STATI");

                entity.HasIndex(e => new { e.KeyStato, e.FlgMittenteDestinataria, e.DtStoScadenzaLog })
                    .HasName("XX01CARD_STATI");

                entity.Property(e => e.KeyCardStato)
                    .HasColumnName("KEY_CARD_STATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.FlgMittenteDestinataria)
                    .HasColumnName("FLG_MITTENTE_DESTINATARIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgProcessoAutomaticoSino)
                    .HasColumnName("FLG_PROCESSO_AUTOMATICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRuoloGestionaria)
                    .HasColumnName("FLG_RUOLO_GESTIONARIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRuoloRichiesta)
                    .HasColumnName("FLG_RUOLO_RICHIESTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCardStato).HasColumnName("ID_CARD_STATO");

                entity.Property(e => e.IdClassificazioneStatoCard).HasColumnName("ID_CLASSIFICAZIONE_STATO_CARD");

                entity.Property(e => e.IdCompagniaMittente).HasColumnName("ID_COMPAGNIA_MITTENTE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.KeyStato).HasColumnName("KEY_STATO");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CauAtp>(entity =>
            {
                entity.HasKey(e => e.KeyAtp);

                entity.ToTable("CAU_ATP", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("X02_CAU_ATP");

                entity.HasIndex(e => e.IdFiduciarioAccertamento)
                    .HasName("X03_CAU_ATP");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("X01_CAU_ATP");

                entity.HasIndex(e => new { e.IdAtp, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CAU_ATP")
                    .IsUnique();

                entity.Property(e => e.KeyAtp)
                    .HasColumnName("KEY_ATP")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAccertamento)
                    .HasColumnName("DT_ACCERTAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEsito)
                    .HasColumnName("DT_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtNotifica)
                    .HasColumnName("DT_NOTIFICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMotivoAtp)
                    .IsRequired()
                    .HasColumnName("FLG_MOTIVO_ATP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoAtp)
                    .HasColumnName("FLG_STATO_ATP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDannoAtp)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_DANNO_ATP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaEsitoAtp)
                    .HasColumnName("FLG_TIPOLOGIA_ESITO_ATP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAtp).HasColumnName("ID_ATP");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFiduciarioAccertamento).HasColumnName("ID_FIDUCIARIO_ACCERTAMENTO");

                entity.Property(e => e.IdLegaleIncaricato).HasColumnName("ID_LEGALE_INCARICATO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NoteAccertamento)
                    .HasColumnName("NOTE_ACCERTAMENTO")
                    .IsUnicode(false);

                entity.Property(e => e.Protocollo).HasColumnName("PROTOCOLLO");
            });

            modelBuilder.Entity<CauAttori>(entity =>
            {
                entity.HasKey(e => e.IdAttore)
                    .HasName("PK__CAU_ATTO__75C84453C3ADCB9E");

                entity.ToTable("CAU_ATTORI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02CAU_ATTORI");

                entity.HasIndex(e => e.IdAttore)
                    .HasName("SYS_C0047272")
                    .IsUnique();

                entity.Property(e => e.IdAttore)
                    .HasColumnName("ID_ATTORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<CauCause>(entity =>
            {
                entity.HasKey(e => e.KeyCausa)
                    .HasName("PK__CAU_CAUS__4BBD332FA0C864A0");

                entity.ToTable("CAU_CAUSE", "ICLAIMS");

                entity.HasIndex(e => e.IdCausa)
                    .HasName("XX03CAU_CAUSE");

                entity.HasIndex(e => e.IdCitazione)
                    .HasName("XX01CAU_CAUSE");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("XX04CAU_CAUSE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02CAU_CAUSE");

                entity.HasIndex(e => e.KeyCausa)
                    .HasName("SYS_C0047285")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX05CAU_CAUSE");

                entity.HasIndex(e => new { e.IdCausa, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CAU_CAUSE_STO")
                    .IsUnique();

                entity.Property(e => e.KeyCausa)
                    .HasColumnName("KEY_CAUSA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DannoCoseSino)
                    .HasColumnName("DANNO_COSE_SINO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DannoLesioniSino)
                    .HasColumnName("DANNO_LESIONI_SINO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DannoVeicoloSino)
                    .HasColumnName("DANNO_VEICOLO_SINO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DtCostituzioneCausa)
                    .HasColumnName("DT_COSTITUZIONE_CAUSA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEsitoCausa)
                    .HasColumnName("DT_ESITO_CAUSA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimaUdienza)
                    .HasColumnName("DT_PRIMA_UDIENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgContenziosoRcSino)
                    .HasColumnName("FLG_CONTENZIOSO_RC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEsitoCausa)
                    .HasColumnName("FLG_ESITO_CAUSA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoCausa)
                    .HasColumnName("FLG_STATO_CAUSA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCausa)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_CAUSA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCuria)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_CURIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoGrado)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_GRADO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAttore).HasColumnName("ID_ATTORE");

                entity.Property(e => e.IdCausa)
                    .HasColumnName("ID_CAUSA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCitazione)
                    .HasColumnName("ID_CITAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLegale).HasColumnName("ID_LEGALE");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpPetitumCose)
                    .HasColumnName("IMP_PETITUM_COSE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpPetitumLesioni)
                    .HasColumnName("IMP_PETITUM_LESIONI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpPetitumVeicolo)
                    .HasColumnName("IMP_PETITUM_VEICOLO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSentenziato)
                    .HasColumnName("IMP_SENTENZIATO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSpeseLegaliCtp)
                    .HasColumnName("IMP_SPESE_LEGALI_CTP")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSpeseResistenza)
                    .HasColumnName("IMP_SPESE_RESISTENZA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.Protocollo).HasColumnName("PROTOCOLLO");
            });

            modelBuilder.Entity<CauCitazioni>(entity =>
            {
                entity.HasKey(e => e.KeyCitazione)
                    .HasName("PK__CAU_CITA__E898B2B9876BF27F");

                entity.ToTable("CAU_CITAZIONI", "ICLAIMS");

                entity.HasIndex(e => e.IdAttore)
                    .HasName("XX02CAU_CITAZIONI");

                entity.HasIndex(e => e.IdCitazione)
                    .HasName("XX01CAU_CITAZIONI");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX04CAU_CITAZIONI");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("XX05CAU_CITAZIONI");

                entity.HasIndex(e => e.IdLegale)
                    .HasName("XX03CAU_CITAZIONI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX06CAU_CITAZIONI");

                entity.HasIndex(e => e.KeyCitazione)
                    .HasName("SYS_C0047296")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX07CAU_CITAZIONI");

                entity.HasIndex(e => new { e.IdCitazione, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CAU_CITAZIONI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyCitazione)
                    .HasColumnName("KEY_CITAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DannoCoseSino)
                    .HasColumnName("DANNO_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DannoLesioniSino)
                    .HasColumnName("DANNO_LESIONI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DannoVeicoloSino)
                    .HasColumnName("DANNO_VEICOLO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtEsitoCitazione)
                    .HasColumnName("DT_ESITO_CITAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtNotificaCitazione)
                    .HasColumnName("DT_NOTIFICA_CITAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazioneCitazione)
                    .HasColumnName("DT_REGISTRAZIONE_CITAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUdienza)
                    .HasColumnName("DT_UDIENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgContenziosoRcSino)
                    .HasColumnName("FLG_CONTENZIOSO_RC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEsitoCitazione)
                    .HasColumnName("FLG_ESITO_CITAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPetitumIndSino)
                    .HasColumnName("FLG_PETITUM_IND_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoCitazione)
                    .HasColumnName("FLG_STATO_CITAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCuria)
                    .HasColumnName("FLG_TIPO_CURIA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdAntifrodeNoSin).HasColumnName("ID_ANTIFRODE_NO_SIN");

                entity.Property(e => e.IdAttore)
                    .HasColumnName("ID_ATTORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCitazione)
                    .HasColumnName("ID_CITAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIncarico)
                    .HasColumnName("ID_INCARICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLegale)
                    .HasColumnName("ID_LEGALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpPetitumCose)
                    .HasColumnName("IMP_PETITUM_COSE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpPetitumLesioni)
                    .HasColumnName("IMP_PETITUM_LESIONI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpPetitumVeicolo)
                    .HasColumnName("IMP_PETITUM_VEICOLO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NoteCitazione)
                    .HasColumnName("NOTE_CITAZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.Protocollo)
                    .HasColumnName("PROTOCOLLO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<CauLegali>(entity =>
            {
                entity.HasKey(e => e.IdLegale)
                    .HasName("PK__CAU_LEGA__02224973C1E817BD");

                entity.ToTable("CAU_LEGALI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02CAU_LEGALI");

                entity.HasIndex(e => e.IdLegale)
                    .HasName("SYS_C0047299")
                    .IsUnique();

                entity.Property(e => e.IdLegale)
                    .HasColumnName("ID_LEGALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<CauMediazioneRinvii>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CAU_MEDIAZIONE_RINVII", "ICLAIMS");

                entity.Property(e => e.DtRinvio)
                    .HasColumnName("DT_RINVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdMediazione).HasColumnName("ID_MEDIAZIONE");

                entity.Property(e => e.IdRinvio).HasColumnName("ID_RINVIO");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CauMediazioni>(entity =>
            {
                entity.HasKey(e => e.KeyMediazione)
                    .HasName("SYS_C0040600");

                entity.ToTable("CAU_MEDIAZIONI", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX04CAU_MEDIAZIONI");

                entity.HasIndex(e => e.IdFiduciarioMediatore)
                    .HasName("XX09CAU_MEDIAZIONI");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("XX05CAU_MEDIAZIONI");

                entity.HasIndex(e => e.IdMediazione)
                    .HasName("XX01CAU_MEDIAZIONI");

                entity.HasIndex(e => e.IdOrganismoMediazione)
                    .HasName("XX07CAU_MEDIAZIONI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX06CAU_MEDIAZIONI");

                entity.HasIndex(e => e.IdUtenteMediatore)
                    .HasName("XX08CAU_MEDIAZIONI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX11CAU_MEDIAZIONI");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX02CAU_MEDIAZIONI");

                entity.HasIndex(e => new { e.IdMediazione, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CAU_MEDIAZIONI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyMediazione)
                    .HasColumnName("KEY_MEDIAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CostoPratica)
                    .HasColumnName("COSTO_PRATICA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DtEsito)
                    .HasColumnName("DT_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIncontro)
                    .HasColumnName("DT_INCONTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtMediazione)
                    .HasColumnName("DT_MEDIAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtNotifica)
                    .HasColumnName("DT_NOTIFICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiesta)
                    .HasColumnName("DT_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAnnullataSino)
                    .HasColumnName("FLG_ANNULLATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEsitoMediazione)
                    .HasColumnName("FLG_ESITO_MEDIAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoMediazione)
                    .HasColumnName("FLG_STATO_MEDIAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMediazione)
                    .HasColumnName("FLG_TIPO_MEDIAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFiduciarioMediatore).HasColumnName("ID_FIDUCIARIO_MEDIATORE");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdIndirizzo).HasColumnName("ID_INDIRIZZO");

                entity.Property(e => e.IdMediazione).HasColumnName("ID_MEDIAZIONE");

                entity.Property(e => e.IdOrganismoMediazione).HasColumnName("ID_ORGANISMO_MEDIAZIONE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteMediatore).HasColumnName("ID_UTENTE_MEDIATORE");

                entity.Property(e => e.IdValuta).HasColumnName("ID_VALUTA");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.Protocollo).HasColumnName("PROTOCOLLO");

                entity.Property(e => e.ValoreCose)
                    .HasColumnName("VALORE_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ValoreLesioni)
                    .HasColumnName("VALORE_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ValoreVeicolo)
                    .HasColumnName("VALORE_VEICOLO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<CauUdienze>(entity =>
            {
                entity.HasKey(e => e.KeyUdienza)
                    .HasName("PK__CAU_UDIE__CFBD11015DD21351");

                entity.ToTable("CAU_UDIENZE", "ICLAIMS");

                entity.HasIndex(e => e.IdCausa)
                    .HasName("XX01CAU_UDIENZE");

                entity.HasIndex(e => e.IdUdienza)
                    .HasName("XX02CAU_UDIENZE");

                entity.HasIndex(e => e.KeyUdienza)
                    .HasName("SYS_C0047308")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdUdienza, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CAU_UDIENZE_STO")
                    .IsUnique();

                entity.Property(e => e.KeyUdienza)
                    .HasColumnName("KEY_UDIENZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUdienza)
                    .HasColumnName("DT_UDIENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCausa)
                    .HasColumnName("ID_CAUSA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUdienza)
                    .HasColumnName("ID_UDIENZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteMotivoRinvio)
                    .HasColumnName("NOTE_MOTIVO_RINVIO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CbiAllineamentiRid>(entity =>
            {
                entity.HasKey(e => e.IdAllineamento)
                    .HasName("SYS_C0022677");

                entity.ToTable("CBI_ALLINEAMENTI_RID", "ISUITE");

                entity.HasIndex(e => e.DtElaborazione)
                    .HasName("XX02CBI_ALLINEAMENTI_RID");

                entity.HasIndex(e => e.IdAnagraficaPagatore)
                    .HasName("XX05CBI_ALLINEAMENTI_RID");

                entity.HasIndex(e => e.IdContocorrenteAddebito)
                    .HasName("XX04CBI_ALLINEAMENTI_RID");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03CBI_ALLINEAMENTI_RID");

                entity.Property(e => e.IdAllineamento)
                    .HasColumnName("ID_ALLINEAMENTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodAbi)
                    .HasColumnName("COD_ABI")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoStato)
                    .HasColumnName("DT_ULTIMO_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMotivoDiniego)
                    .HasColumnName("FLG_MOTIVO_DINIEGO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgUltimoStato)
                    .HasColumnName("FLG_ULTIMO_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagraficaPagatore).HasColumnName("ID_ANAGRAFICA_PAGATORE");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdContocorrenteAccredito).HasColumnName("ID_CONTOCORRENTE_ACCREDITO");

                entity.Property(e => e.IdContocorrenteAddebito).HasColumnName("ID_CONTOCORRENTE_ADDEBITO");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.NumPolizza)
                    .HasColumnName("NUM_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CbiAllineamentiRidDett>(entity =>
            {
                entity.HasKey(e => e.IdAllineamentoDett)
                    .HasName("SYS_C0022681");

                entity.ToTable("CBI_ALLINEAMENTI_RID_DETT", "ISUITE");

                entity.HasIndex(e => e.DtStato)
                    .HasName("XX02CBI_ALLINEAMENTI_RID_DETT");

                entity.HasIndex(e => e.IdAllineamento)
                    .HasName("XX03CBI_ALLINEAMENTI_RID_DETT");

                entity.Property(e => e.IdAllineamentoDett)
                    .HasColumnName("ID_ALLINEAMENTO_DETT")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCodiceCausale)
                    .HasColumnName("FLG_CODICE_CAUSALE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgInviatoRicevuto)
                    .HasColumnName("FLG_INVIATO_RICEVUTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMotivoDiniego)
                    .HasColumnName("FLG_MOTIVO_DINIEGO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoRichiesta)
                    .HasColumnName("FLG_STATO_RICHIESTA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllineamento).HasColumnName("ID_ALLINEAMENTO");

                entity.Property(e => e.NomeFile)
                    .HasColumnName("NOME_FILE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.TestoInviato)
                    .HasColumnName("TESTO_INVIATO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CbiDettLogEsiti>(entity =>
            {
                entity.HasKey(e => e.IdDettLogEsiti)
                    .HasName("PK__CBI_DETT__D762F5FD49C5D145");

                entity.ToTable("CBI_DETT_LOG_ESITI", "ISUITE");

                entity.HasIndex(e => e.IdDettLogEsiti)
                    .HasName("SYS_C0048522")
                    .IsUnique();

                entity.Property(e => e.IdDettLogEsiti)
                    .HasColumnName("ID_DETT_LOG_ESITI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DescErrore)
                    .HasColumnName("DESC_ERRORE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgElaborataSino)
                    .HasColumnName("FLG_ELABORATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgOkSino)
                    .HasColumnName("FLG_OK_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoEsito)
                    .HasColumnName("FLG_STATO_ESITO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdDisposizione)
                    .HasColumnName("ID_DISPOSIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLogEsiti)
                    .HasColumnName("ID_LOG_ESITI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Record10)
                    .HasColumnName("RECORD10")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Record16)
                    .HasColumnName("RECORD16")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Record20)
                    .HasColumnName("RECORD20")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Record30)
                    .HasColumnName("RECORD30")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Record40)
                    .HasColumnName("RECORD40")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Record50)
                    .HasColumnName("RECORD50")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Record60)
                    .HasColumnName("RECORD60")
                    .IsUnicode(false);

                entity.Property(e => e.Record70)
                    .HasColumnName("RECORD70")
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CbiDisposizioni>(entity =>
            {
                entity.HasKey(e => e.IdDisposizione)
                    .HasName("PK__CBI_DISP__BAD25F3A831FABFE");

                entity.ToTable("CBI_DISPOSIZIONI", "ISUITE");

                entity.HasIndex(e => e.IdDisposizione)
                    .HasName("PK01_CBI_DISPOSIZIONI")
                    .IsUnique();

                entity.HasIndex(e => new { e.FlgTipoOggDisp, e.RifOggetto })
                    .HasName("XX07CBI_DISPOSIZIONI");

                entity.Property(e => e.IdDisposizione)
                    .HasColumnName("ID_DISPOSIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodRamoProdotto)
                    .HasColumnName("COD_RAMO_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRiferimento)
                    .HasColumnName("COD_RIFERIMENTO")
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.DtEmessoBanca)
                    .HasColumnName("DT_EMESSO_BANCA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamentoBanca)
                    .HasColumnName("DT_PAGAMENTO_BANCA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStornoBanca)
                    .HasColumnName("DT_STORNO_BANCA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Errore)
                    .HasColumnName("ERRORE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAnnullataSino)
                    .HasColumnName("FLG_ANNULLATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPresaVisioneSino)
                    .HasColumnName("FLG_PRESA_VISIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoDisp)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_DISP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCodRiferimento)
                    .HasColumnName("FLG_TIPO_COD_RIFERIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggDisp)
                    .HasColumnName("FLG_TIPO_OGG_DISP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContocorrenteBenef)
                    .HasColumnName("ID_CONTOCORRENTE_BENEF")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDistinta)
                    .HasColumnName("ID_DISTINTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdValuta).HasColumnName("ID_VALUTA");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.RifOggetto)
                    .IsRequired()
                    .HasColumnName("RIF_OGGETTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdDistintaNavigation)
                    .WithMany(p => p.CbiDisposizioni)
                    .HasForeignKey(d => d.IdDistinta)
                    .HasConstraintName("FK__CBI_DISPO__ID_DI__721CCC2B");
            });

            modelBuilder.Entity<CbiDistinte>(entity =>
            {
                entity.HasKey(e => e.IdDistinta)
                    .HasName("PK__CBI_DIST__F67C405D7CB7A6FF");

                entity.ToTable("CBI_DISTINTE", "ISUITE");

                entity.HasIndex(e => e.IdDistinta)
                    .HasName("CBI_DISTINTE_PK")
                    .IsUnique();

                entity.Property(e => e.IdDistinta)
                    .HasColumnName("ID_DISTINTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodRamoProdotto)
                    .HasColumnName("COD_RAMO_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtDistinta)
                    .HasColumnName("DT_DISTINTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoDistinta)
                    .HasColumnName("DT_STATO_DISTINTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtValuta)
                    .HasColumnName("DT_VALUTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAutorizzataSino)
                    .HasColumnName("FLG_AUTORIZZATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInviataSino)
                    .HasColumnName("FLG_INVIATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMezzoPagamento)
                    .IsRequired()
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoDistinta)
                    .HasColumnName("FLG_STATO_DISTINTA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDistinta)
                    .HasColumnName("FLG_TIPO_DISTINTA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContocorrente)
                    .HasColumnName("ID_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Progressivo)
                    .HasColumnName("PROGRESSIVO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<CbiIncassiRid>(entity =>
            {
                entity.HasKey(e => e.IdIncasso)
                    .HasName("SYS_C0023119");

                entity.ToTable("CBI_INCASSI_RID", "ISUITE");

                entity.HasIndex(e => e.DtElaborazione)
                    .HasName("XX05CBI_INCASSI_RID");

                entity.HasIndex(e => e.IdAllineamento)
                    .HasName("XX02CBI_INCASSI_RID");

                entity.HasIndex(e => e.IdTitEsito)
                    .HasName("XX04CBI_INCASSI_RID");

                entity.HasIndex(e => e.IdTitRatePremio)
                    .HasName("XX06CBI_INCASSI_RID");

                entity.HasIndex(e => e.IdTitTitolo)
                    .HasName("XX03CBI_INCASSI_RID");

                entity.Property(e => e.IdIncasso)
                    .HasColumnName("ID_INCASSO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCodiceCausale)
                    .HasColumnName("FLG_CODICE_CAUSALE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRinvioSino)
                    .HasColumnName("FLG_RINVIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStato)
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllineamento).HasColumnName("ID_ALLINEAMENTO");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdContocorrenteAddebito).HasColumnName("ID_CONTOCORRENTE_ADDEBITO");

                entity.Property(e => e.IdTitEsito).HasColumnName("ID_TIT_ESITO");

                entity.Property(e => e.IdTitRatePremio).HasColumnName("ID_TIT_RATE_PREMIO");

                entity.Property(e => e.IdTitTitolo).HasColumnName("ID_TIT_TITOLO");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MsgIdSepa)
                    .HasColumnName("MSG_ID_SEPA")
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CbiLogEsiti>(entity =>
            {
                entity.HasKey(e => e.IdLogEsiti)
                    .HasName("PK__CBI_LOG___15A027B84026E027");

                entity.ToTable("CBI_LOG_ESITI", "ISUITE");

                entity.HasIndex(e => e.IdLogEsiti)
                    .HasName("CBI_LOG_ESITI_PK")
                    .IsUnique();

                entity.Property(e => e.IdLogEsiti)
                    .HasColumnName("ID_LOG_ESITI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtCaricamento)
                    .HasColumnName("DT_CARICAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoEsito)
                    .HasColumnName("FLG_STATO_ESITO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoEsitoCbi)
                    .HasColumnName("FLG_TIPO_ESITO_CBI")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NomeFile)
                    .HasColumnName("NOME_FILE")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CklChecklist>(entity =>
            {
                entity.HasKey(e => e.IdChecklist)
                    .HasName("PK_ID_CHECKLIST");

                entity.ToTable("CKL_CHECKLIST", "ISUITE");

                entity.HasIndex(e => new { e.IdOperazione, e.FlgMacroTipologiaAllegato, e.FlgTipologiaAllegato, e.IdAnagrafica })
                    .HasName("IDX_MACRO_MICRO");

                entity.Property(e => e.IdChecklist)
                    .HasColumnName("ID_CHECKLIST")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtSysInserimento)
                    .HasColumnName("DT_SYS_INSERIMENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysInvioDocumentale)
                    .HasColumnName("DT_SYS_INVIO_DOCUMENTALE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysUltimoAggiornamento)
                    .HasColumnName("DT_SYS_ULTIMO_AGGIORNAMENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMacroTipologiaAllegato)
                    .HasColumnName("FLG_MACRO_TIPOLOGIA_ALLEGATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoDocumento)
                    .HasColumnName("FLG_STATO_DOCUMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaAllegato)
                    .HasColumnName("FLG_TIPOLOGIA_ALLEGATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato)
                    .HasColumnName("ID_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdOperazione)
                    .HasColumnName("ID_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<CklOperazioni>(entity =>
            {
                entity.HasKey(e => e.IdOperazione)
                    .HasName("PK_ID_OPERAZIONE");

                entity.ToTable("CKL_OPERAZIONI", "ISUITE");

                entity.HasIndex(e => new { e.IdOggetto, e.FlgTipoOggetto })
                    .HasName("IDX_OGGETTO");

                entity.Property(e => e.IdOperazione)
                    .HasColumnName("ID_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtSysInserimento)
                    .HasColumnName("DT_SYS_INSERIMENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysInvioDocumentale)
                    .HasColumnName("DT_SYS_INVIO_DOCUMENTALE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysUltimoAggiornamento)
                    .HasColumnName("DT_SYS_ULTIMO_AGGIORNAMENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoOperazione)
                    .HasColumnName("FLG_STATO_OPERAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOperazione)
                    .HasColumnName("FLG_TIPO_OPERAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdOggetto)
                    .HasColumnName("ID_OGGETTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPratica)
                    .HasColumnName("ID_PRATICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.RifEsterno)
                    .HasColumnName("RIF_ESTERNO")
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CklPratiche>(entity =>
            {
                entity.HasKey(e => e.IdPratica)
                    .HasName("PK_ID_PRATICA");

                entity.ToTable("CKL_PRATICHE", "ISUITE");

                entity.HasIndex(e => new { e.IdOggetto, e.FlgTipoOggetto })
                    .HasName("IDX_OGGETTO");

                entity.Property(e => e.IdPratica)
                    .HasColumnName("ID_PRATICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtSysInserimento)
                    .HasColumnName("DT_SYS_INSERIMENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysInvioDocumentale)
                    .HasColumnName("DT_SYS_INVIO_DOCUMENTALE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysUltimoAggiornamento)
                    .HasColumnName("DT_SYS_ULTIMO_AGGIORNAMENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggetto)
                    .HasColumnName("ID_OGGETTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.RifEsterno)
                    .HasColumnName("RIF_ESTERNO")
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CntFoglicassa>(entity =>
            {
                entity.HasKey(e => e.KeyCntFogliocassa)
                    .HasName("SYS_C0060283");

                entity.ToTable("CNT_FOGLICASSA", "IAGENCY");

                entity.HasIndex(e => e.RifEsterno)
                    .HasName("XX06CNT_FOGLICASSA");

                entity.HasIndex(e => new { e.IdCntFogliocassa, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01CNT_FOGLICASSA");

                entity.HasIndex(e => new { e.IdCntFogliocassa, e.IdCompagnia, e.IdAgenzia, e.DtStoScadenzaFis })
                    .HasName("XX02CNT_FOGLICASSA");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdAgenzia, e.DtStoScadenzaFis, e.DtFogliocassa })
                    .HasName("XX04CNT_FOGLICASSA");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdAgenzia, e.DtStoScadenzaFis, e.IdCntRendiconto })
                    .HasName("XX03CNT_FOGLICASSA");

                entity.Property(e => e.KeyCntFogliocassa)
                    .HasColumnName("KEY_CNT_FOGLIOCASSA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFogliocassa)
                    .HasColumnName("DT_FOGLIOCASSA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAgenzia)
                    .HasColumnName("ID_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCntFogliocassa)
                    .HasColumnName("ID_CNT_FOGLIOCASSA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCntRendiconto)
                    .HasColumnName("ID_CNT_RENDICONTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpARiportareAvere)
                    .HasColumnName("IMP_A_RIPORTARE_AVERE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpARiportareDare)
                    .HasColumnName("IMP_A_RIPORTARE_DARE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpIndennizzi)
                    .HasColumnName("IMP_INDENNIZZI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvvigioniIndennizzi)
                    .HasColumnName("IMP_PROVVIGIONI_INDENNIZZI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvvigioniRecuperi)
                    .HasColumnName("IMP_PROVVIGIONI_RECUPERI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPvAvere)
                    .HasColumnName("IMP_PV_AVERE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPvDare)
                    .HasColumnName("IMP_PV_DARE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRecuperati)
                    .HasColumnName("IMP_RECUPERATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTitPremio)
                    .HasColumnName("IMP_TIT_PREMIO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTitProvvigioni)
                    .HasColumnName("IMP_TIT_PROVVIGIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NFogliocassa)
                    .HasColumnName("N_FOGLIOCASSA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.RifEsterno)
                    .HasColumnName("RIF_ESTERNO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CntRendiconti>(entity =>
            {
                entity.HasKey(e => e.KeyCntRendiconto)
                    .HasName("SYS_C0060286");

                entity.ToTable("CNT_RENDICONTI", "IAGENCY");

                entity.HasIndex(e => new { e.IdCntRendiconto, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01CNT_RENDICONTI");

                entity.HasIndex(e => new { e.IdCntRendiconto, e.IdCompagnia, e.IdAgenzia, e.DtStoScadenzaFis })
                    .HasName("XX02CNT_RENDICONTI");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdAgenzia, e.DtStoScadenzaFis, e.IdCntRendiconto })
                    .HasName("XX03CNT_RENDICONTI");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdAgenzia, e.DtStoScadenzaFis, e.DtRendiconto, e.IdValuta })
                    .HasName("XX04CNT_RENDICONTI");

                entity.Property(e => e.KeyCntRendiconto)
                    .HasColumnName("KEY_CNT_RENDICONTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtRendiconto)
                    .HasColumnName("DT_RENDICONTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAgenzia)
                    .HasColumnName("ID_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCcAgenzia).HasColumnName("ID_CC_AGENZIA");

                entity.Property(e => e.IdCcSeparato).HasColumnName("ID_CC_SEPARATO");

                entity.Property(e => e.IdCntRendiconto)
                    .HasColumnName("ID_CNT_RENDICONTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpFrancProvvigioni)
                    .HasColumnName("IMP_FRANC_PROVVIGIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFrancRecuperata)
                    .HasColumnName("IMP_FRANC_RECUPERATA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPvAvere)
                    .HasColumnName("IMP_PV_AVERE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPvDare)
                    .HasColumnName("IMP_PV_DARE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSinPagato)
                    .HasColumnName("IMP_SIN_PAGATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSinProvvigioni)
                    .HasColumnName("IMP_SIN_PROVVIGIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTitPremio)
                    .HasColumnName("IMP_TIT_PREMIO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTitProvvigioni)
                    .HasColumnName("IMP_TIT_PROVVIGIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NRendiconto)
                    .HasColumnName("N_RENDICONTO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<CommaCheckinRichieste>(entity =>
            {
                entity.HasKey(e => e.IdCommaCheckinRichiesta);

                entity.ToTable("COMMA_CHECKIN_RICHIESTE", "ISUITE");

                entity.HasIndex(e => new { e.IdCommaCheckinRichiesta, e.DtRichiesta })
                    .HasName("XX01_COMMA_CHECKIN_RICHIESTE");

                entity.Property(e => e.IdCommaCheckinRichiesta)
                    .HasColumnName("ID_COMMA_CHECKIN_RICHIESTA")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceFiscale)
                    .HasColumnName("CODICE_FISCALE")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagioneSociale)
                    .HasColumnName("COGNOME_RAGIONE_SOCIALE")
                    .IsUnicode(false);

                entity.Property(e => e.DtRichiesta)
                    .HasColumnName("DT_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoAnagrafica)
                    .HasColumnName("FLG_TIPO_ANAGRAFICA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");
            });

            modelBuilder.Entity<CommaCheckinRisposte>(entity =>
            {
                entity.HasKey(e => e.KeyCommaCheckinRisposta);

                entity.ToTable("COMMA_CHECKIN_RISPOSTE", "ISUITE");

                entity.HasIndex(e => e.IdCommaCheckinRisposta)
                    .HasName("XX01_COMMA_CHECKIN_RISPOSTE");

                entity.HasIndex(e => new { e.FlgTipoOggetto, e.IdOggetto })
                    .HasName("XX02_COMMA_CHECKIN_RISPOSTE");

                entity.Property(e => e.KeyCommaCheckinRisposta)
                    .HasColumnName("KEY_COMMA_CHECKIN_RISPOSTA")
                    .ValueGeneratedNever();

                entity.Property(e => e.Denominazione)
                    .HasColumnName("DENOMINAZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.DenominazioneOriginale)
                    .HasColumnName("DENOMINAZIONE_ORIGINALE")
                    .IsUnicode(false);

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimoAggiornamento)
                    .HasColumnName("DT_ULTIMO_AGGIORNAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAnnullatoSino)
                    .HasColumnName("FLG_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoSoggetto)
                    .HasColumnName("FLG_STATO_SOGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDenominazione)
                    .HasColumnName("FLG_TIPO_DENOMINAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSoggetto)
                    .HasColumnName("FLG_TIPO_SOGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCommaCheckinRichiesta).HasColumnName("ID_COMMA_CHECKIN_RICHIESTA");

                entity.Property(e => e.IdCommaCheckinRisposta).HasColumnName("ID_COMMA_CHECKIN_RISPOSTA");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentFonteSoggetto)
                    .HasColumnName("IDENT_FONTE_SOGGETTO")
                    .IsUnicode(false);

                entity.Property(e => e.IdentSoggetto)
                    .HasColumnName("IDENT_SOGGETTO")
                    .IsUnicode(false);

                entity.Property(e => e.Progressivo).HasColumnName("PROGRESSIVO");

                entity.Property(e => e.Vicinanza).HasColumnName("VICINANZA");
            });

            modelBuilder.Entity<CorreggiDataDenunciaPervenimento>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("correggi_Data-Denuncia-Pervenimento");

                entity.Property(e => e.AnnoEsercizio)
                    .HasColumnName("ANNO_ESERCIZIO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtDenuncia)
                    .HasColumnName("DT_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPervenimentoDenuncia)
                    .HasColumnName("DT_PERVENIMENTO_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("id_compagnia")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NSinistro)
                    .IsRequired()
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbBeneficiari>(entity =>
            {
                entity.HasKey(e => e.IdBeneficiariopagamento)
                    .HasName("PK__CTB_BENE__529CC9D9583F13E6");

                entity.ToTable("CTB_BENEFICIARI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02CTB_BENEFICIARI");

                entity.HasIndex(e => e.IdBeneficiariopagamento)
                    .HasName("SYS_C0047311")
                    .IsUnique();

                entity.Property(e => e.IdBeneficiariopagamento)
                    .HasColumnName("ID_BENEFICIARIOPAGAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<CtbClausole>(entity =>
            {
                entity.HasKey(e => e.KeyClausolaquietanza)
                    .HasName("PK__CTB_CLAU__67A4C371E114ABFE");

                entity.ToTable("CTB_CLAUSOLE", "ICLAIMS");

                entity.HasIndex(e => e.IdClausola)
                    .HasName("XX03CTB_CLAUSOLE");

                entity.HasIndex(e => e.IdClausolaquietanza)
                    .HasName("XX02CTB_CLAUSOLE");

                entity.HasIndex(e => e.IdQuietanza)
                    .HasName("XX01CTB_CLAUSOLE");

                entity.HasIndex(e => e.KeyClausolaquietanza)
                    .HasName("SYS_C0047314")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdClausolaquietanza, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CTB_CLAUSOLE_STO")
                    .IsUnique();

                entity.Property(e => e.KeyClausolaquietanza)
                    .HasColumnName("KEY_CLAUSOLAQUIETANZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdClausola)
                    .HasColumnName("ID_CLAUSOLA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdClausolaquietanza)
                    .HasColumnName("ID_CLAUSOLAQUIETANZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdQuietanza)
                    .HasColumnName("ID_QUIETANZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<CtbCoassEc>(entity =>
            {
                entity.HasKey(e => e.KeyEcdelegaaltrui)
                    .HasName("PK__CTB_COAS__728BDA4AED8F8A29");

                entity.ToTable("CTB_COASS_EC", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04CTB_COASS_EC");

                entity.HasIndex(e => e.IdCompagniaDelegataria)
                    .HasName("XX01CTB_COASS_EC");

                entity.HasIndex(e => e.IdContocorrente)
                    .HasName("XX03CTB_COASS_EC");

                entity.HasIndex(e => e.IdEcdelegaaltrui)
                    .HasName("XX02CTB_COASS_EC");

                entity.HasIndex(e => e.KeyEcdelegaaltrui)
                    .HasName("SYS_C0047325")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdEcdelegaaltrui, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CTB_COASS_EC_STO")
                    .IsUnique();

                entity.Property(e => e.KeyEcdelegaaltrui)
                    .HasColumnName("KEY_ECDELEGAALTRUI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoEc)
                    .HasColumnName("ANNO_EC")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtOrdinePagamento)
                    .HasColumnName("DT_ORDINE_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicevimentoEc)
                    .HasColumnName("DT_RICEVIMENTO_EC")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMezzoPagamento)
                    .IsRequired()
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoStorno)
                    .HasColumnName("FLG_MOTIVO_STORNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoContabile)
                    .HasColumnName("FLG_STATO_CONTABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagniaDelegataria)
                    .HasColumnName("ID_COMPAGNIA_DELEGATARIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContocorrente)
                    .HasColumnName("ID_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEcdelegaaltrui)
                    .HasColumnName("ID_ECDELEGAALTRUI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NAssegno)
                    .HasColumnName("N_ASSEGNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NEc)
                    .HasColumnName("N_EC")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbCostControlSottoprest>(entity =>
            {
                entity.HasKey(e => e.IdCostControlSottoprest);

                entity.ToTable("CTB_COST_CONTROL_SOTTOPREST", "ICLAIMS");

                entity.HasIndex(e => e.IdDeroga)
                    .HasName("XX02_CTB_COST_CONTROL_SOTTOPREST");

                entity.HasIndex(e => e.IdIndennizzo)
                    .HasName("XX01_CTB_COST_CONTROL_SOTTOPREST");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03_CTB_COST_CONTROL_SOTTOPREST");

                entity.Property(e => e.IdCostControlSottoprest)
                    .HasColumnName("ID_COST_CONTROL_SOTTOPREST")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodPrestazioneMed)
                    .HasColumnName("COD_PRESTAZIONE_MED")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdDeroga).HasColumnName("ID_DEROGA");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSottoprestazione).HasColumnName("ID_SOTTOPRESTAZIONE");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<CtbDatiAggiuntiviPagamenti>(entity =>
            {
                entity.HasKey(e => e.KeyDatiAggiuntiviPagamenti);

                entity.ToTable("CTB_DATI_AGGIUNTIVI_PAGAMENTI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdOggetto, e.FlgTipoOggetto })
                    .HasName("XX01_CTB_DATI_AGGIUNTIVI_PAGAMENTI");

                entity.Property(e => e.KeyDatiAggiuntiviPagamenti)
                    .HasColumnName("KEY_DATI_AGGIUNTIVI_PAGAMENTI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAstaRelittoSino)
                    .IsRequired()
                    .HasColumnName("FLG_ASTA_RELITTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCessioneCreditoSino)
                    .IsRequired()
                    .HasColumnName("FLG_CESSIONE_CREDITO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgConcordatoSenzaRipSino)
                    .IsRequired()
                    .HasColumnName("FLG_CONCORDATO_SENZA_RIP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicambiOriginaliSino)
                    .IsRequired()
                    .HasColumnName("FLG_RICAMBI_ORIGINALI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRipAntieconomicaSino)
                    .IsRequired()
                    .HasColumnName("FLG_RIP_ANTIECONOMICA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDatiAggiuntiviPagamenti).HasColumnName("ID_DATI_AGGIUNTIVI_PAGAMENTI");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<CtbDebitori>(entity =>
            {
                entity.HasKey(e => e.IdDebitorerecupero)
                    .HasName("PK__CTB_DEBI__ED6851EFF6282321");

                entity.ToTable("CTB_DEBITORI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02CTB_DEBITORI");

                entity.HasIndex(e => e.IdDebitorerecupero)
                    .HasName("SYS_C0047328")
                    .IsUnique();

                entity.Property(e => e.IdDebitorerecupero)
                    .HasColumnName("ID_DEBITORERECUPERO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<CtbFatture>(entity =>
            {
                entity.HasKey(e => e.KeyFattura);

                entity.ToTable("CTB_FATTURE", "ICLAIMS");

                entity.HasIndex(e => new { e.IdFattura, e.DtStoScadenzaLog })
                    .HasName("XX01CTB_FATTURE");

                entity.HasIndex(e => new { e.IdIndennizzo, e.DtStoScadenzaLog })
                    .HasName("XX03CTB_FATTURE");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaLog })
                    .HasName("XX02CTB_FATTURE");

                entity.Property(e => e.KeyFattura)
                    .HasColumnName("KEY_FATTURA")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cpa)
                    .HasColumnName("CPA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DtFattura)
                    .HasColumnName("DT_FATTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtVersamento)
                    .HasColumnName("DT_VERSAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgIntestatario)
                    .HasColumnName("FLG_INTESTATARIO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgModPagamento)
                    .HasColumnName("FLG_MOD_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgProformaSino)
                    .HasColumnName("FLG_PROFORMA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStato)
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdCalcoloautomatico).HasColumnName("ID_CALCOLOAUTOMATICO");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFattura).HasColumnName("ID_FATTURA");

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpTotale)
                    .HasColumnName("IMP_TOTALE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpTotaleNettoAPagare)
                    .HasColumnName("IMP_TOTALE_NETTO_A_PAGARE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Imponibile)
                    .HasColumnName("IMPONIBILE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Inps)
                    .HasColumnName("INPS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iva)
                    .HasColumnName("IVA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NFattura)
                    .HasColumnName("N_FATTURA")
                    .IsUnicode(false);

                entity.Property(e => e.NonImponibile)
                    .HasColumnName("NON_IMPONIBILE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.RitenutaAcconto)
                    .HasColumnName("RITENUTA_ACCONTO")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<CtbFattureEstere>(entity =>
            {
                entity.HasKey(e => e.KeyFatturaEstera);

                entity.ToTable("CTB_FATTURE_ESTERE", "ICLAIMS");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdSinistro, e.DtStoScadenzaLog })
                    .HasName("XX01_CTB_FATTURE_ESTERE");

                entity.Property(e => e.KeyFatturaEstera)
                    .HasColumnName("KEY_FATTURA_ESTERA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DataFattura)
                    .HasColumnName("DATA_FATTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DiCuiOnorari)
                    .HasColumnName("DI_CUI_ONORARI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DtScaricoContabilita)
                    .HasColumnName("DT_SCARICO_CONTABILITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoContabile)
                    .HasColumnName("FLG_STATO_CONTABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoFattura)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_FATTURA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdFatturaEstera).HasColumnName("ID_FATTURA_ESTERA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpContabilizzato)
                    .HasColumnName("IMP_CONTABILIZZATO")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.ImportoDanniPersone)
                    .HasColumnName("IMPORTO_DANNI_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImportoDannoMateriale)
                    .HasColumnName("IMPORTO_DANNO_MATERIALE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImportoRicarico)
                    .HasColumnName("IMPORTO_RICARICO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.NumFattura)
                    .HasColumnName("NUM_FATTURA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.SpeseLiquidazione)
                    .HasColumnName("SPESE_LIQUIDAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.SpeseResistenza)
                    .HasColumnName("SPESE_RESISTENZA")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<CtbFattureEstereDett>(entity =>
            {
                entity.HasKey(e => e.KeyFatturaDett);

                entity.ToTable("CTB_FATTURE_ESTERE_DETT", "ICLAIMS");

                entity.HasIndex(e => new { e.IdFatturaDett, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("IX_CTB_FATTURE_ESTERE_DETT_1");

                entity.HasIndex(e => new { e.IdFatturaEstera, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("IX_CTB_FATTURE_ESTERE_DETT_2");

                entity.Property(e => e.KeyFatturaDett)
                    .HasColumnName("KEY_FATTURA_DETT")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdFatturaDett).HasColumnName("ID_FATTURA_DETT");

                entity.Property(e => e.IdFatturaEstera).HasColumnName("ID_FATTURA_ESTERA");

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");

                entity.Property(e => e.IdRecupero).HasColumnName("ID_RECUPERO");

                entity.Property(e => e.IdSpesa).HasColumnName("ID_SPESA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<CtbFattureEsterePag>(entity =>
            {
                entity.HasKey(e => e.KeyFatturaEsteraPag);

                entity.ToTable("CTB_FATTURE_ESTERE_PAG", "ICLAIMS");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.IdFatturaEstera })
                    .HasName("IX_CTB_FATTURE_ESTERE_PAG_1");

                entity.Property(e => e.KeyFatturaEsteraPag)
                    .HasColumnName("KEY_FATTURA_ESTERA_PAG")
                    .ValueGeneratedNever();

                entity.Property(e => e.DataPagamento)
                    .HasColumnName("DATA_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabilita)
                    .HasColumnName("DT_SCARICO_CONTABILITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdFatturaEstera).HasColumnName("ID_FATTURA_ESTERA");

                entity.Property(e => e.IdFatturaEsteraPag).HasColumnName("ID_FATTURA_ESTERA_PAG");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpPagamento)
                    .HasColumnName("IMP_PAGAMENTO")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<CtbForfaitContabile>(entity =>
            {
                entity.HasKey(e => e.KeyForfaitContabile);

                entity.ToTable("CTB_FORFAIT_CONTABILE", "ICLAIMS");

                entity.HasIndex(e => e.DtScarico)
                    .HasName("XX07CTB_FORFAIT_CONTABILE");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX03CTB_FORFAIT_CONTABILE");

                entity.HasIndex(e => e.IdForfaitContabile)
                    .HasName("XX01CTB_FORFAIT_CONTABILE");

                entity.HasIndex(e => e.IdForfaitContabileAtteso)
                    .HasName("XX05CTB_FORFAIT_CONTABILE");

                entity.HasIndex(e => e.IdRecupero)
                    .HasName("XX04CTB_FORFAIT_CONTABILE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02CTB_FORFAIT_CONTABILE");

                entity.HasIndex(e => e.IdUtente)
                    .HasName("XX06CTB_FORFAIT_CONTABILE");

                entity.HasIndex(e => new { e.DtScarico, e.FlgStatoContabile })
                    .HasName("XX08CTB_FORFAIT_CONTABILE");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX09CTB_FORFAIT_CONTABILE");

                entity.HasIndex(e => new { e.IdForfaitContabile, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CTB_FORFAIT_CONTABILE_STO")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.IdRecupero, e.IdEntitacoinvolta, e.IdSinistro })
                    .HasName("XX10CTB_FORFAIT_CONTABILE");

                entity.Property(e => e.KeyForfaitContabile)
                    .HasColumnName("KEY_FORFAIT_CONTABILE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCausalePagamentoAnia)
                    .HasColumnName("FLG_CAUSALE_PAGAMENTO_ANIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoContabile)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_CONTABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoContoForfait)
                    .HasColumnName("FLG_TIPO_CONTO_FORFAIT")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoConvenzione)
                    .HasColumnName("FLG_TIPO_CONVENZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoConvenzioneAnia)
                    .HasColumnName("FLG_TIPO_CONVENZIONE_ANIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdForfaitContabile).HasColumnName("ID_FORFAIT_CONTABILE");

                entity.Property(e => e.IdForfaitContabileAtteso).HasColumnName("ID_FORFAIT_CONTABILE_ATTESO");

                entity.Property(e => e.IdRecupero).HasColumnName("ID_RECUPERO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<CtbGaranzie>(entity =>
            {
                entity.HasKey(e => e.IdGaranziapagata)
                    .HasName("PK__CTB_GARA__C95A53135A5F2353");

                entity.ToTable("CTB_GARANZIE", "ICLAIMS");

                entity.HasIndex(e => e.IdGaranziaassicurata)
                    .HasName("XX03CTB_GARANZIE");

                entity.HasIndex(e => e.IdGaranziapagata)
                    .HasName("SYS_C0047332")
                    .IsUnique();

                entity.HasIndex(e => e.IdIndennizzo)
                    .HasName("XX02CTB_GARANZIE");

                entity.HasIndex(e => e.IdRecupero)
                    .HasName("XX05CTB_GARANZIE");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX04CTB_GARANZIE");

                entity.HasIndex(e => new { e.IdGaranziaassicurata, e.IdIndennizzo, e.IdQuietanza, e.IdRecupero })
                    .HasName("XCTB_GARANZIE_02")
                    .IsUnique();

                entity.Property(e => e.IdGaranziapagata)
                    .HasColumnName("ID_GARANZIAPAGATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgAssicuratoSino)
                    .IsRequired()
                    .HasColumnName("FLG_ASSICURATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdGaranziaassicurata)
                    .HasColumnName("ID_GARANZIAASSICURATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndennizzo)
                    .HasColumnName("ID_INDENNIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdQuietanza).HasColumnName("ID_QUIETANZA");

                entity.Property(e => e.IdRecupero)
                    .HasColumnName("ID_RECUPERO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpIndennizzo)
                    .HasColumnName("IMP_INDENNIZZO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRecupero)
                    .HasColumnName("IMP_RECUPERO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<CtbIndennizzi>(entity =>
            {
                entity.HasKey(e => e.KeyIndennizzo)
                    .HasName("PK__CTB_INDE__D60E8B72FC3C0CFA");

                entity.ToTable("CTB_INDENNIZZI", "ICLAIMS");

                entity.HasIndex(e => e.DtPagamento)
                    .HasName("XX14CTB_INDENNIZZI");

                entity.HasIndex(e => e.IdBeneficiariopagamento)
                    .HasName("XX07CTB_INDENNIZZI");

                entity.HasIndex(e => e.IdContocorrente)
                    .HasName("XX09CTB_INDENNIZZI");

                entity.HasIndex(e => e.IdEcdelegaaltrui)
                    .HasName("XX02CTB_INDENNIZZI");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX01CTB_INDENNIZZI");

                entity.HasIndex(e => e.IdIndennizzo)
                    .HasName("XX05CTB_INDENNIZZI");

                entity.HasIndex(e => e.IdIndennizzoStornato)
                    .HasName("XX06CTB_INDENNIZZI");

                entity.HasIndex(e => e.IdQuietanza)
                    .HasName("XX10CTB_INDENNIZZI");

                entity.HasIndex(e => e.IdQuietanzaTesta)
                    .HasName("XX03CTB_INDENNIZZI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX04CTB_INDENNIZZI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX08CTB_INDENNIZZI");

                entity.HasIndex(e => e.KeyIndennizzo)
                    .HasName("SYS_C0047349")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtPagamento, e.FlgStatoContabile })
                    .HasName("XX12CTB_INDENNIZZI");

                entity.HasIndex(e => new { e.DtScaricoContabile, e.FlgStatoContabile })
                    .HasName("XX11CTB_INDENNIZZI");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX13CTB_INDENNIZZI");

                entity.HasIndex(e => new { e.IdIndennizzo, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CTB_INDENNIZZI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyIndennizzo)
                    .HasColumnName("KEY_INDENNIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoInvioCid)
                    .HasColumnName("ANNO_INVIO_CID")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.AnnoInvioCoass)
                    .HasColumnName("ANNO_INVIO_COASS")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodiceCig)
                    .HasColumnName("CODICE_CIG")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DtOrdinePagamento)
                    .HasColumnName("DT_ORDINE_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStanza)
                    .HasColumnName("DT_STANZA")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAutorizzatoSino)
                    .HasColumnName("FLG_AUTORIZZATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEntePagatore)
                    .HasColumnName("FLG_ENTE_PAGATORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFuoriStanzaSino)
                    .HasColumnName("FLG_FUORI_STANZA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLegaleCtpSino)
                    .IsRequired()
                    .HasColumnName("FLG_LEGALE_CTP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLiqNettoPenaleSino)
                    .HasColumnName("FLG_LIQ_NETTO_PENALE_SINO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMezzoPagamento)
                    .IsRequired()
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoStorno)
                    .HasColumnName("FLG_MOTIVO_STORNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgOnorariSeparatiSino)
                    .HasColumnName("FLG_ONORARI_SEPARATI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPagamentoDirettoSino)
                    .HasColumnName("FLG_PAGAMENTO_DIRETTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgParzialePersSino)
                    .HasColumnName("FLG_PARZIALE_PERS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgParzialeReCoseSino)
                    .HasColumnName("FLG_PARZIALE_RE_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgParzialeVeicSino)
                    .HasColumnName("FLG_PARZIALE_VEIC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRecordAnnullatoSino)
                    .HasColumnName("FLG_RECORD_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgRichiediDatiBersaniSino)
                    .HasColumnName("FLG_RICHIEDI_DATI_BERSANI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRiparCarrConvSino)
                    .HasColumnName("FLG_RIPAR_CARR_CONV_SINO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRisSpecificoSino)
                    .HasColumnName("FLG_RIS_SPECIFICO_SINO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRivalsaInpsSino)
                    .HasColumnName("FLG_RIVALSA_INPS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSeparatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_SEPARATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoContabile)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_CONTABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoFatturaEstero)
                    .HasColumnName("FLG_STATO_FATTURA_ESTERO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAnagBeneficiario)
                    .HasColumnName("flg_tipo_anag_beneficiario")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCtt)
                    .HasColumnName("FLG_TIPO_CTT")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoLiquidazione)
                    .HasColumnName("FLG_TIPO_LIQUIDAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPagamentoCard)
                    .HasColumnName("FLG_TIPO_PAGAMENTO_CARD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoProposta)
                    .HasColumnName("FLG_TIPO_PROPOSTA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdBeneficiariopagamento)
                    .HasColumnName("ID_BENEFICIARIOPAGAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContocorrente)
                    .HasColumnName("ID_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContocorrenteComp)
                    .HasColumnName("ID_CONTOCORRENTE_COMP")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDeroga).HasColumnName("ID_DEROGA");

                entity.Property(e => e.IdEcdelegaaltrui)
                    .HasColumnName("ID_ECDELEGAALTRUI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntePagatore)
                    .HasColumnName("ID_ENTE_PAGATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndennizzo)
                    .HasColumnName("ID_INDENNIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndennizzoStornato)
                    .HasColumnName("ID_INDENNIZZO_STORNATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMandato)
                    .HasColumnName("ID_MANDATO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdQuietanza)
                    .HasColumnName("ID_QUIETANZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdQuietanzaTesta)
                    .HasColumnName("ID_QUIETANZA_TESTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteAutorizzatore).HasColumnName("ID_UTENTE_AUTORIZZATORE");

                entity.Property(e => e.IdUtenteAutorizzatoreDer).HasColumnName("ID_UTENTE_AUTORIZZATORE_DER");

                entity.Property(e => e.IdUtenteOrdine).HasColumnName("ID_UTENTE_ORDINE");

                entity.Property(e => e.IdUtentePagamento).HasColumnName("ID_UTENTE_PAGAMENTO");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpCorrentezza)
                    .HasColumnName("IMP_CORRENTEZZA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDiCuiMorali)
                    .HasColumnName("IMP_DI_CUI_MORALI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpDiCuiOnorari)
                    .HasColumnName("IMP_DI_CUI_ONORARI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpDiCuiPatrimoniali)
                    .HasColumnName("IMP_DI_CUI_PATRIMONIALI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpDiCuiSpese)
                    .HasColumnName("IMP_DI_CUI_SPESE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagPersone)
                    .HasColumnName("IMP_PAG_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagReCose)
                    .HasColumnName("IMP_PAG_RE_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagVeicoli)
                    .HasColumnName("IMP_PAG_VEICOLI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPenaleApplicata)
                    .HasColumnName("IMP_PENALE_APPLICATA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiservaPersone)
                    .HasColumnName("IMP_RISERVA_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaReCose)
                    .HasColumnName("IMP_RISERVA_RE_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaVeicoli)
                    .HasColumnName("IMP_RISERVA_VEICOLI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeySchedaDanno).HasColumnName("KEY_SCHEDA_DANNO");

                entity.Property(e => e.MeseInvioCid)
                    .HasColumnName("MESE_INVIO_CID")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.MeseInvioCoass)
                    .HasColumnName("MESE_INVIO_COASS")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NAssegno)
                    .HasColumnName("N_ASSEGNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NFogliocassa)
                    .HasColumnName("N_FOGLIOCASSA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NoteCorrentezza)
                    .HasColumnName("NOTE_CORRENTEZZA")
                    .IsUnicode(false);

                entity.Property(e => e.NoteDisposizione)
                    .HasColumnName("NOTE_DISPOSIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.RifEsterno)
                    .HasColumnName("RIF_ESTERNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbIndennizziPrestazioni>(entity =>
            {
                entity.HasKey(e => e.KeyIndennizzoprestazione);

                entity.ToTable("CTB_INDENNIZZI_PRESTAZIONI", "ICLAIMS");

                entity.HasIndex(e => e.IdDanno)
                    .HasName("XX02_CTB_INDENNIZZI_PRESTAZIONI");

                entity.HasIndex(e => new { e.IdIndennizzoprestazione, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CTB_INDENNIZZI_PRESTAZIONI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyIndennizzoprestazione)
                    .HasColumnName("KEY_INDENNIZZOPRESTAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRecordAnnullatoSino)
                    .HasColumnName("FLG_RECORD_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdGaranziacolpita).HasColumnName("ID_GARANZIACOLPITA");

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");

                entity.Property(e => e.IdIndennizzoprestazione).HasColumnName("ID_INDENNIZZOPRESTAZIONE");

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.IdQuietanza).HasColumnName("ID_QUIETANZA");

                entity.Property(e => e.IdSottoprestazione).HasColumnName("ID_SOTTOPRESTAZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdValuta).HasColumnName("ID_VALUTA");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<CtbMandati>(entity =>
            {
                entity.HasKey(e => e.KeyMandato)
                    .HasName("PK__CTB_MAND__F24B303534970843");

                entity.ToTable("CTB_MANDATI", "ICLAIMS");

                entity.HasIndex(e => e.KeyMandato)
                    .HasName("CTB_MANDATI_PK")
                    .IsUnique();

                entity.Property(e => e.KeyMandato)
                    .HasColumnName("KEY_MANDATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Causale)
                    .HasColumnName("CAUSALE")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.CodRamoProdotto)
                    .HasColumnName("COD_RAMO_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtMandato)
                    .HasColumnName("DT_MANDATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMezzoPagamento)
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoMandato)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_MANDATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMandato)
                    .HasColumnName("FLG_TIPO_MANDATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdBeneficiario)
                    .HasColumnName("ID_BENEFICIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCcBeneficiario)
                    .HasColumnName("ID_CC_BENEFICIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCcCompagnia)
                    .HasColumnName("ID_CC_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMandato)
                    .HasColumnName("ID_MANDATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Numero)
                    .HasColumnName("NUMERO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<CtbNuoveRiservePrestazioni>(entity =>
            {
                entity.HasKey(e => e.KeyNuovariservaprestazione);

                entity.ToTable("CTB_NUOVE_RISERVE_PRESTAZIONI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdNuovariservaprestazione, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CTB_INDENNIZZI_PRESTAZIONI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyNuovariservaprestazione)
                    .HasColumnName("KEY_NUOVARISERVAPRESTAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRecordAnnullatoSino)
                    .HasColumnName("FLG_RECORD_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");

                entity.Property(e => e.IdNuovariservaprestazione).HasColumnName("ID_NUOVARISERVAPRESTAZIONE");

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.IdQuietanza).HasColumnName("ID_QUIETANZA");

                entity.Property(e => e.IdRiserva).HasColumnName("ID_RISERVA");

                entity.Property(e => e.IdSottoprestazione).HasColumnName("ID_SOTTOPRESTAZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdValuta).HasColumnName("ID_VALUTA");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<CtbQuietanze>(entity =>
            {
                entity.HasKey(e => e.KeyQuietanza)
                    .HasName("PK__CTB_QUIE__2FC00FA35143C3E3");

                entity.ToTable("CTB_QUIETANZE", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX01CTB_QUIETANZE");

                entity.HasIndex(e => e.IdQuietanza)
                    .HasName("XX03CTB_QUIETANZE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02CTB_QUIETANZE");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX04CTB_QUIETANZE");

                entity.HasIndex(e => e.KeyQuietanza)
                    .HasName("SYS_C0047363")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdQuietanza, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CTB_QUIETANZE_STO")
                    .IsUnique();

                entity.Property(e => e.KeyQuietanza)
                    .HasColumnName("KEY_QUIETANZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodiceCig)
                    .HasColumnName("CODICE_CIG")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DtAutorizzazione)
                    .HasColumnName("DT_AUTORIZZAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEmissioneQuietanza)
                    .HasColumnName("DT_EMISSIONE_QUIETANZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRestituzione)
                    .HasColumnName("DT_RESTITUZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaAut)
                    .HasColumnName("DT_RICHIESTA_AUT")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgParzialePersSino)
                    .HasColumnName("FLG_PARZIALE_PERS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgParzialeReCoseSino)
                    .HasColumnName("FLG_PARZIALE_RE_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgParzialeVeicSino)
                    .HasColumnName("FLG_PARZIALE_VEIC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRecordAnnullatoSino)
                    .HasColumnName("FLG_RECORD_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgSeparataSino)
                    .IsRequired()
                    .HasColumnName("FLG_SEPARATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoQuietanza)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_QUIETANZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAnagBeneficiario)
                    .HasColumnName("FLG_TIPO_ANAG_BENEFICIARIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoProposta)
                    .HasColumnName("FLG_TIPO_PROPOSTA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdBeneficiariopagamento).HasColumnName("ID_BENEFICIARIOPAGAMENTO");

                entity.Property(e => e.IdDeroga).HasColumnName("ID_DEROGA");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdQuietanza)
                    .HasColumnName("ID_QUIETANZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteOrdine).HasColumnName("ID_UTENTE_ORDINE");

                entity.Property(e => e.IdUtentePagamento).HasColumnName("ID_UTENTE_PAGAMENTO");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpMaxAutorizzatoPersone)
                    .HasColumnName("IMP_MAX_AUTORIZZATO_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxAutorizzatoReCose)
                    .HasColumnName("IMP_MAX_AUTORIZZATO_RE_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxAutorizzatoVeicoli)
                    .HasColumnName("IMP_MAX_AUTORIZZATO_VEICOLI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMinAutorizzatoPersone)
                    .HasColumnName("IMP_MIN_AUTORIZZATO_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMinAutorizzatoReCose)
                    .HasColumnName("IMP_MIN_AUTORIZZATO_RE_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMinAutorizzatoVeicoli)
                    .HasColumnName("IMP_MIN_AUTORIZZATO_VEICOLI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPersone)
                    .HasColumnName("IMP_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpReCose)
                    .HasColumnName("IMP_RE_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaPersone)
                    .HasColumnName("IMP_RISERVA_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaReCose)
                    .HasColumnName("IMP_RISERVA_RE_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaVeicoli)
                    .HasColumnName("IMP_RISERVA_VEICOLI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpVeicoli)
                    .HasColumnName("IMP_VEICOLI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeySchedaDanno).HasColumnName("KEY_SCHEDA_DANNO");

                entity.Property(e => e.RifEsterno)
                    .HasColumnName("RIF_ESTERNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbRecuperi>(entity =>
            {
                entity.HasKey(e => e.KeyRecupero)
                    .HasName("PK__CTB_RECUPERI__1C1D2798");

                entity.ToTable("CTB_RECUPERI", "ICLAIMS");

                entity.HasIndex(e => e.DtPagamento)
                    .HasName("XX12CTB_RECUPERI");

                entity.HasIndex(e => e.DtRata)
                    .HasName("XX14CTB_RECUPERI");

                entity.HasIndex(e => e.IdContocorrente)
                    .HasName("XX08CTB_RECUPERI");

                entity.HasIndex(e => e.IdDanno)
                    .HasName("XX13_CTB_RECUPERI");

                entity.HasIndex(e => e.IdDebitorerecupero)
                    .HasName("XX06CTB_RECUPERI");

                entity.HasIndex(e => e.IdEcdelegaaltrui)
                    .HasName("XX02CTB_RECUPERI");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX01CTB_RECUPERI");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("XX09CTB_RECUPERI");

                entity.HasIndex(e => e.IdRecupero)
                    .HasName("XX04CTB_RECUPERI");

                entity.HasIndex(e => e.IdRecuperoStornato)
                    .HasName("XX05CTB_RECUPERI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03CTB_RECUPERI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX07CTB_RECUPERI");

                entity.HasIndex(e => e.KeyRecupero)
                    .HasName("SYS_C0047378")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtScaricoContabile, e.FlgStatoContabile })
                    .HasName("XX10CTB_RECUPERI");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX11CTB_RECUPERI");

                entity.HasIndex(e => new { e.IdRecupero, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CTB_RECUPERI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyRecupero)
                    .HasColumnName("KEY_RECUPERO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoInvioCoass)
                    .HasColumnName("ANNO_INVIO_COASS")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtCaricamentoResponline)
                    .HasColumnName("DT_CARICAMENTO_RESPONLINE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtConfermaAnia)
                    .HasColumnName("DT_CONFERMA_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtOrdineRecupero)
                    .HasColumnName("DT_ORDINE_RECUPERO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrescrizioneRecuperoAnia)
                    .HasColumnName("DT_PRESCRIZIONE_RECUPERO_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRata)
                    .HasColumnName("DT_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabileAnia)
                    .HasColumnName("DT_SCARICO_CONTABILE_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScartoAnia)
                    .HasColumnName("DT_SCARTO_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMezzoPagamento)
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoStorno)
                    .HasColumnName("FLG_MOTIVO_STORNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRecordAnnullatoSino)
                    .HasColumnName("FLG_RECORD_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgSeparatoSino)
                    .HasColumnName("FLG_SEPARATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoContabile)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_CONTABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoFatturaEstero)
                    .HasColumnName("FLG_STATO_FATTURA_ESTERO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRecupero)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_RECUPERO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTitolo)
                    .HasColumnName("FLG_TITOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTotaleSino)
                    .HasColumnName("FLG_TOTALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdContocorrente)
                    .HasColumnName("ID_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdDebitorerecupero)
                    .HasColumnName("ID_DEBITORERECUPERO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEcdelegaaltrui)
                    .HasColumnName("ID_ECDELEGAALTRUI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIncarico)
                    .HasColumnName("ID_INCARICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRecupero)
                    .HasColumnName("ID_RECUPERO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRecuperoPrecedente).HasColumnName("ID_RECUPERO_PRECEDENTE");

                entity.Property(e => e.IdRecuperoStornato)
                    .HasColumnName("ID_RECUPERO_STORNATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteIncaricato)
                    .HasColumnName("ID_UTENTE_INCARICATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpIniziale)
                    .HasColumnName("IMP_INIZIALE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRecupero)
                    .HasColumnName("IMP_RECUPERO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MeseInvioCoass)
                    .HasColumnName("MESE_INVIO_COASS")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.RifEsterno)
                    .HasColumnName("RIF_ESTERNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbRiserve>(entity =>
            {
                entity.HasKey(e => e.KeyRiserva)
                    .HasName("PK__CTB_RISE__4752512F0AA7D9E1");

                entity.ToTable("CTB_RISERVE", "ICLAIMS");

                entity.HasIndex(e => e.IdDanno)
                    .HasName("XX06_CTB_RISERVE");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX01CTB_RISERVE");

                entity.HasIndex(e => e.IdRiserva)
                    .HasName("XX03CTB_RISERVE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02CTB_RISERVE");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX04CTB_RISERVE");

                entity.HasIndex(e => e.KeyRiserva)
                    .HasName("SYS_C0047389")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX05CTB_RISERVE");

                entity.HasIndex(e => new { e.IdRiserva, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CTB_RISERVE_STO")
                    .IsUnique();

                entity.Property(e => e.KeyRiserva)
                    .HasColumnName("KEY_RISERVA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAutorizzazioneDeroga)
                    .HasColumnName("DT_AUTORIZZAZIONE_DEROGA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgModificaRiserva)
                    .IsRequired()
                    .HasColumnName("FLG_MODIFICA_RISERVA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRiservaDiDefaultSino)
                    .HasColumnName("FLG_RISERVA_DI_DEFAULT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRiserva)
                    .HasColumnName("FLG_TIPO_RISERVA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRiserva2)
                    .HasColumnName("FLG_TIPO_RISERVA2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdDeroga).HasColumnName("ID_DEROGA");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRiserva)
                    .HasColumnName("ID_RISERVA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteAutorizzatoreDer).HasColumnName("ID_UTENTE_AUTORIZZATORE_DER");

                entity.Property(e => e.IdUtenteVariazione).HasColumnName("ID_UTENTE_VARIAZIONE");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpRiserva)
                    .HasColumnName("IMP_RISERVA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbRiserveMigrazione>(entity =>
            {
                entity.HasKey(e => e.IdRiservemigrazione)
                    .HasName("SYS_C0016249");

                entity.ToTable("CTB_RISERVE_MIGRAZIONE", "ICLAIMS");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01CTB_RISERVE_MIGRAZIONE");

                entity.Property(e => e.IdRiservemigrazione)
                    .HasColumnName("ID_RISERVEMIGRAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anno).HasColumnName("ANNO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.RisFCose)
                    .HasColumnName("RIS_F_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFForfait2007)
                    .HasColumnName("RIS_F_FORFAIT_2007")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFForfaitCard)
                    .HasColumnName("RIS_F_FORFAIT_CARD")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFForfaitCtt)
                    .HasColumnName("RIS_F_FORFAIT_CTT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFForfaitLesioni)
                    .HasColumnName("RIS_F_FORFAIT_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFPassanti)
                    .HasColumnName("RIS_F_PASSANTI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFRivalsa)
                    .HasColumnName("RIS_F_RIVALSA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFSpLiquidazione)
                    .HasColumnName("RIS_F_SP_LIQUIDAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFSpResistenza)
                    .HasColumnName("RIS_F_SP_RESISTENZA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFTrasportati)
                    .HasColumnName("RIS_F_TRASPORTATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFVeicoli)
                    .HasColumnName("RIS_F_VEICOLI")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<CtbRiservePrestazioni>(entity =>
            {
                entity.HasKey(e => e.KeyRiservaprestazione);

                entity.ToTable("CTB_RISERVE_PRESTAZIONI", "ICLAIMS");

                entity.HasIndex(e => e.KeyRiserva)
                    .HasName("XX02CTB_RISERVE_PRESTAZIONI");

                entity.HasIndex(e => new { e.IdRiservaprestazione, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CTB_RISERVE_PRESTAZIONI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyRiservaprestazione)
                    .HasColumnName("KEY_RISERVAPRESTAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdGaranziacolpita).HasColumnName("ID_GARANZIACOLPITA");

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.IdRiserva).HasColumnName("ID_RISERVA");

                entity.Property(e => e.IdRiservaprestazione).HasColumnName("ID_RISERVAPRESTAZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdValuta).HasColumnName("ID_VALUTA");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeyRiserva).HasColumnName("KEY_RISERVA");
            });

            modelBuilder.Entity<CtbRiserveTrattamenti>(entity =>
            {
                entity.HasKey(e => e.KeyRiservaTrattamento);

                entity.ToTable("CTB_RISERVE_TRATTAMENTI", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02CTB_RISERVE_TRATTAMENTI");

                entity.HasIndex(e => e.IdMalattiatrattamento)
                    .HasName("XX01CTB_RISERVE_TRATTAMENTI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03CTB_RISERVE_TRATTAMENTI");

                entity.HasIndex(e => new { e.IdRiservaTrattamento, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CTB_RIS_TRATTAMENTI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyRiservaTrattamento)
                    .HasColumnName("KEY_RISERVA_TRATTAMENTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDeroga).HasColumnName("ID_DEROGA");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdGaranzia).HasColumnName("ID_GARANZIA");

                entity.Property(e => e.IdMalattiatrattamento).HasColumnName("ID_MALATTIATRATTAMENTO");

                entity.Property(e => e.IdRiservaTrattamento).HasColumnName("ID_RISERVA_TRATTAMENTO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdTariffa).HasColumnName("ID_TARIFFA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdValuta).HasColumnName("ID_VALUTA");

                entity.Property(e => e.ImpRiserva)
                    .HasColumnName("IMP_RISERVA")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<CtbSpese>(entity =>
            {
                entity.HasKey(e => e.KeySpesa)
                    .HasName("PK__CTB_SPES__E79528A14E8F86C1");

                entity.ToTable("CTB_SPESE", "ICLAIMS");

                entity.HasIndex(e => e.DtPagamento)
                    .HasName("XX14CTB_SPESE");

                entity.HasIndex(e => e.IdContocorrente)
                    .HasName("XX09CTB_SPESE");

                entity.HasIndex(e => e.IdDanno)
                    .HasName("XX15_CTB_SPESE");

                entity.HasIndex(e => e.IdEcdelegaaltrui)
                    .HasName("XX03CTB_SPESE");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX01CTB_SPESE");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("XX02CTB_SPESE");

                entity.HasIndex(e => e.IdParcella)
                    .HasName("XX06CTB_SPESE");

                entity.HasIndex(e => e.IdRecupero)
                    .HasName("XX11CTB_SPESE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX10CTB_SPESE");

                entity.HasIndex(e => e.IdSpesa)
                    .HasName("XX04CTB_SPESE");

                entity.HasIndex(e => e.IdSpesaStornata)
                    .HasName("XX05CTB_SPESE");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX08CTB_SPESE");

                entity.HasIndex(e => e.KeySpesa)
                    .HasName("SYS_C0047419")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtScaricoContabile, e.FlgStatoContabile })
                    .HasName("XX12CTB_SPESE");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX13CTB_SPESE");

                entity.HasIndex(e => new { e.IdSpesa, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_CTB_SPESE_STO")
                    .IsUnique();

                entity.Property(e => e.KeySpesa)
                    .HasColumnName("KEY_SPESA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoInvioCid)
                    .HasColumnName("ANNO_INVIO_CID")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.AnnoInvioCoass)
                    .HasColumnName("ANNO_INVIO_COASS")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtOrdineSpesa)
                    .HasColumnName("DT_ORDINE_SPESA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMezzoPagamento)
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoStorno)
                    .HasColumnName("FLG_MOTIVO_STORNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNotaCreditoSino)
                    .HasColumnName("FLG_NOTA_CREDITO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRecordAnnullatoSino)
                    .HasColumnName("FLG_RECORD_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgRegulationQuotaSino)
                    .HasColumnName("FLG_REGULATION_QUOTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSpesaSpotSino)
                    .HasColumnName("FLG_SPESA_SPOT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoContabile)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_CONTABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoFatturaEstero)
                    .HasColumnName("FLG_STATO_FATTURA_ESTERO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSpesa)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_SPESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaGestione)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdBeneficiariopagamento).HasColumnName("ID_BENEFICIARIOPAGAMENTO");

                entity.Property(e => e.IdContocorrente)
                    .HasColumnName("ID_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContocorrenteComp)
                    .HasColumnName("ID_CONTOCORRENTE_COMP")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdEcdelegaaltrui)
                    .HasColumnName("ID_ECDELEGAALTRUI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIncarico)
                    .HasColumnName("ID_INCARICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdParcella)
                    .HasColumnName("ID_PARCELLA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRecupero)
                    .HasColumnName("ID_RECUPERO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSpesa)
                    .HasColumnName("ID_SPESA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSpesaStornata)
                    .HasColumnName("ID_SPESA_STORNATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpCpa)
                    .HasColumnName("IMP_CPA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpImponibile)
                    .HasColumnName("IMP_IMPONIBILE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpInps)
                    .HasColumnName("IMP_INPS")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpIva)
                    .HasColumnName("IMP_IVA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNonImponibile)
                    .HasColumnName("IMP_NON_IMPONIBILE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRitenuta)
                    .HasColumnName("IMP_RITENUTA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSpesa)
                    .HasColumnName("IMP_SPESA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MeseInvioCid)
                    .HasColumnName("MESE_INVIO_CID")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.MeseInvioCoass)
                    .HasColumnName("MESE_INVIO_COASS")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NAssegno)
                    .HasColumnName("N_ASSEGNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.RifEsterno)
                    .HasColumnName("RIF_ESTERNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbSpeseOutsourcing>(entity =>
            {
                entity.HasKey(e => e.KeySpesaOutsourcing);

                entity.ToTable("CTB_SPESE_OUTSOURCING", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04CTB_SPESE_OUTSOURCING");

                entity.HasIndex(e => e.IdFiduciario)
                    .HasName("XX05CTB_SPESE_OUTSOURCING");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03CTB_SPESE_OUTSOURCING");

                entity.HasIndex(e => e.IdSpesaOutsourcing)
                    .HasName("XX02CTB_SPESE_OUTSOURCING");

                entity.HasIndex(e => new { e.IdSpesaOutsourcing, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01CTB_SPESE_OUTSOURCING");

                entity.Property(e => e.KeySpesaOutsourcing)
                    .HasColumnName("KEY_SPESA_OUTSOURCING")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimaElaborazione).HasColumnName("DT_ULTIMA_ELABORAZIONE");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdFiduciario).HasColumnName("ID_FIDUCIARIO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSpesaOutsourcing).HasColumnName("ID_SPESA_OUTSOURCING");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpSpesaCalcolata)
                    .HasColumnName("IMP_SPESA_CALCOLATA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<CtbSpeseOutsourcingDett>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CTB_SPESE_OUTSOURCING_DETT", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX04CTB_SPESE_OUTSOURCING_DETT");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03CTB_SPESE_OUTSOURCING_DETT");

                entity.HasIndex(e => e.IdSpesaOutsourcing)
                    .HasName("XX02CTB_SPESE_OUTSOURCING_DETT");

                entity.HasIndex(e => e.IdSpesaOutsourcingDett)
                    .HasName("XX05CTB_SPESE_OUTSOURCING_DETT");

                entity.HasIndex(e => new { e.IdSpesaOutsourcingDett, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01CTB_SPESE_OUTSOURCING_DETT");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSpesaOutsourcing).HasColumnName("ID_SPESA_OUTSOURCING");

                entity.Property(e => e.IdSpesaOutsourcingDett).HasColumnName("ID_SPESA_OUTSOURCING_DETT");

                entity.Property(e => e.IdTabSpesaOutsourcing).HasColumnName("ID_TAB_SPESA_OUTSOURCING");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.KeySpesaOutsourcingDett).HasColumnName("KEY_SPESA_OUTSOURCING_DETT");
            });

            modelBuilder.Entity<D005CambiHost>(entity =>
            {
                entity.HasKey(e => new { e.De11DivisaA, e.De11DivisaDa, e.DataCambio });

                entity.ToTable("D005_CAMBI_HOST", "XLAYERS");

                entity.Property(e => e.De11DivisaA)
                    .HasColumnName("DE11_DIVISA_A")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11DivisaDa)
                    .HasColumnName("DE11_DIVISA_DA")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.DataCambio)
                    .HasColumnName("DATA_CAMBIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DeciCambio)
                    .HasColumnName("DECI_CAMBIO")
                    .HasColumnType("decimal(18, 8)");
            });

            modelBuilder.Entity<DocCampiManuali>(entity =>
            {
                entity.HasKey(e => e.IdDocCampomanuale)
                    .HasName("PK__DOC_CAMP__2ACC13504ACA8071");

                entity.ToTable("DOC_CAMPI_MANUALI", "ISUITE");

                entity.Property(e => e.IdDocCampomanuale)
                    .HasColumnName("ID_DOC_CAMPOMANUALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodVariabile)
                    .HasColumnName("COD_VARIABILE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Dimensione)
                    .HasColumnName("DIMENSIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgObbligatorioSino)
                    .HasColumnName("FLG_OBBLIGATORIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoFormato)
                    .HasColumnName("FLG_TIPO_FORMATO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Label)
                    .HasColumnName("LABEL")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Sequenza)
                    .HasColumnName("SEQUENZA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<DocCampiModuli>(entity =>
            {
                entity.HasKey(e => e.IdDocCampomodulo)
                    .HasName("PK__DOC_CAMP__506FE9F3ADA8B852");

                entity.ToTable("DOC_CAMPI_MODULI", "ISUITE");

                entity.Property(e => e.IdDocCampomodulo)
                    .HasColumnName("ID_DOC_CAMPOMODULO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDocCampomanuale)
                    .HasColumnName("ID_DOC_CAMPOMANUALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDocModulo)
                    .HasColumnName("ID_DOC_MODULO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<DocDocumenti>(entity =>
            {
                entity.HasKey(e => e.IdDocDocumento)
                    .HasName("PK__DOC_DOCU__53534B66B0F509C8");

                entity.ToTable("DOC_DOCUMENTI", "ISUITE");

                entity.Property(e => e.IdDocDocumento)
                    .HasColumnName("ID_DOC_DOCUMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDocumento)
                    .HasColumnName("COD_DOCUMENTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineVal)
                    .HasColumnName("DT_FINE_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioVal)
                    .HasColumnName("DT_INIZIO_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDocProcesso)
                    .HasColumnName("ID_DOC_PROCESSO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<DocDocumentoVenditori>(entity =>
            {
                entity.HasKey(e => e.IdDocDocumentovenditore)
                    .HasName("PK__DOC_DOCU__D26209C5346E50EA");

                entity.ToTable("DOC_DOCUMENTO_VENDITORI", "ISUITE");

                entity.Property(e => e.IdDocDocumentovenditore)
                    .HasColumnName("ID_DOC_DOCUMENTOVENDITORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFineVal)
                    .HasColumnName("DT_FINE_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioVal)
                    .HasColumnName("DT_INIZIO_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoVenditore)
                    .HasColumnName("FLG_TIPO_VENDITORE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdDocDocumento)
                    .HasColumnName("ID_DOC_DOCUMENTO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<DocMacroProcessi>(entity =>
            {
                entity.HasKey(e => e.IdDocMacroprocesso)
                    .HasName("PK__DOC_MACR__58139115DEEF82D9");

                entity.ToTable("DOC_MACRO_PROCESSI", "ISUITE");

                entity.Property(e => e.IdDocMacroprocesso)
                    .HasColumnName("ID_DOC_MACROPROCESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodMacroProcesso)
                    .HasColumnName("COD_MACRO_PROCESSO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineVal)
                    .HasColumnName("DT_FINE_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioVal)
                    .HasColumnName("DT_INIZIO_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<DocMaster>(entity =>
            {
                entity.HasKey(e => e.IdDocMaster)
                    .HasName("PK__DOC_MAST__A7073213058B89AE");

                entity.ToTable("DOC_MASTER", "ISUITE");

                entity.Property(e => e.IdDocMaster)
                    .HasColumnName("ID_DOC_MASTER")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ClasseDocumentale)
                    .HasColumnName("CLASSE_DOCUMENTALE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CodMaster)
                    .HasColumnName("COD_MASTER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineVal)
                    .HasColumnName("DT_FINE_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioVal)
                    .HasColumnName("DT_INIZIO_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDocDocumento)
                    .HasColumnName("ID_DOC_DOCUMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<DocModuli>(entity =>
            {
                entity.HasKey(e => e.IdDocModulo)
                    .HasName("PK__DOC_MODU__5041E52B7405B6CA");

                entity.ToTable("DOC_MODULI", "ISUITE");

                entity.Property(e => e.IdDocModulo)
                    .HasColumnName("ID_DOC_MODULO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodModulo)
                    .HasColumnName("COD_MODULO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDocParagrafo)
                    .HasColumnName("ID_DOC_PARAGRAFO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<DocParagrafi>(entity =>
            {
                entity.HasKey(e => e.IdDocParagrafo)
                    .HasName("PK__DOC_PARA__96CB3D6C3EFFF956");

                entity.ToTable("DOC_PARAGRAFI", "ISUITE");

                entity.Property(e => e.IdDocParagrafo)
                    .HasColumnName("ID_DOC_PARAGRAFO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodParagrafo)
                    .HasColumnName("COD_PARAGRAFO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgObbligatorioSino)
                    .HasColumnName("FLG_OBBLIGATORIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDocMaster)
                    .HasColumnName("ID_DOC_MASTER")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<DocProcessi>(entity =>
            {
                entity.HasKey(e => e.IdDocProcesso)
                    .HasName("PK__DOC_PROC__0BF99B7966C1B6CC");

                entity.ToTable("DOC_PROCESSI", "ISUITE");

                entity.Property(e => e.IdDocProcesso)
                    .HasColumnName("ID_DOC_PROCESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodProcesso)
                    .HasColumnName("COD_PROCESSO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineVal)
                    .HasColumnName("DT_FINE_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioVal)
                    .HasColumnName("DT_INIZIO_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDocMacroprocesso)
                    .HasColumnName("ID_DOC_MACROPROCESSO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<Dp2DatiGenerali>(entity =>
            {
                entity.HasKey(e => e.KeyDp2DatiGenerali)
                    .HasName("PK__DP2_DATI__6B9D98CA93637C1C");

                entity.ToTable("DP2_DATI_GENERALI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03DP2_DATI_GENERALI");

                entity.HasIndex(e => e.IdDp2DatiGenerali)
                    .HasName("XX01DP2_DATI_GENERALI");

                entity.HasIndex(e => e.IdDp2Dossier)
                    .HasName("XX05DP2_DATI_GENERALI");

                entity.HasIndex(e => e.IdDp2PianoContr)
                    .HasName("XX04DP2_DATI_GENERALI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02DP2_DATI_GENERALI");

                entity.HasIndex(e => e.KeyDp2DatiGenerali)
                    .HasName("PK_DP2_DATI_GENERALI")
                    .IsUnique();

                entity.Property(e => e.KeyDp2DatiGenerali)
                    .HasColumnName("KEY_DP2_DATI_GENERALI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodiceOmnia)
                    .IsRequired()
                    .HasColumnName("CODICE_OMNIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRitiro)
                    .HasColumnName("DT_RITIRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAnzianita)
                    .IsRequired()
                    .HasColumnName("FLG_ANZIANITA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgInquadramento)
                    .IsRequired()
                    .HasColumnName("FLG_INQUADRAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStato)
                    .IsRequired()
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDp2DatiGenerali)
                    .HasColumnName("ID_DP2_DATI_GENERALI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDp2Dossier)
                    .HasColumnName("ID_DP2_DOSSIER")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDp2PianoContr)
                    .HasColumnName("ID_DP2_PIANO_CONTR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MotivoRitiro)
                    .HasColumnName("MOTIVO_RITIRO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Dp2Dossier>(entity =>
            {
                entity.HasKey(e => e.KeyDp2Dossier)
                    .HasName("PK__DP2_DOSS__B757AD0512E93BD7");

                entity.ToTable("DP2_DOSSIER", "ISUITE");

                entity.HasIndex(e => e.IdDp2Dossier)
                    .HasName("XX01DP2_DOSSIER");

                entity.HasIndex(e => e.KeyDp2Dossier)
                    .HasName("PK_DP2_DOSSIER")
                    .IsUnique();

                entity.Property(e => e.KeyDp2Dossier)
                    .HasColumnName("KEY_DP2_DOSSIER")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtCertificazione)
                    .HasColumnName("DT_CERTIFICAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtContribuzione)
                    .HasColumnName("DT_CONTRIBUZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPianoContribuzione)
                    .HasColumnName("DT_PIANO_CONTRIBUZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCcaaSino)
                    .HasColumnName("FLG_CCAA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCertificazioneSino)
                    .HasColumnName("FLG_CERTIFICAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCurriculumSino)
                    .HasColumnName("FLG_CURRICULUM_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgInpsSino)
                    .HasColumnName("FLG_INPS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgIvaSino)
                    .HasColumnName("FLG_IVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLetteraAdesioneSino)
                    .HasColumnName("FLG_LETTERA_ADESIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLetteraComodatoSino)
                    .HasColumnName("FLG_LETTERA_COMODATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLetteraContribuzioneSino)
                    .HasColumnName("FLG_LETTERA_CONTRIBUZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLetteraNominaSino)
                    .HasColumnName("FLG_LETTERA_NOMINA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPianoContribuzioneSino)
                    .HasColumnName("FLG_PIANO_CONTRIBUZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgValutazioneSino)
                    .HasColumnName("FLG_VALUTAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdDp2Dossier)
                    .HasColumnName("ID_DP2_DOSSIER")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteCcaa)
                    .HasColumnName("NOTE_CCAA")
                    .IsUnicode(false);

                entity.Property(e => e.NoteCertificazione)
                    .HasColumnName("NOTE_CERTIFICAZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.NoteCurriculum)
                    .HasColumnName("NOTE_CURRICULUM")
                    .IsUnicode(false);

                entity.Property(e => e.NoteInps)
                    .HasColumnName("NOTE_INPS")
                    .IsUnicode(false);

                entity.Property(e => e.NoteIva)
                    .HasColumnName("NOTE_IVA")
                    .IsUnicode(false);

                entity.Property(e => e.NoteLetteraAdesione)
                    .HasColumnName("NOTE_LETTERA_ADESIONE")
                    .IsUnicode(false);

                entity.Property(e => e.NoteLetteraComodato)
                    .HasColumnName("NOTE_LETTERA_COMODATO")
                    .IsUnicode(false);

                entity.Property(e => e.NoteLetteraContribuzione)
                    .HasColumnName("NOTE_LETTERA_CONTRIBUZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.NoteLetteraNomina)
                    .HasColumnName("NOTE_LETTERA_NOMINA")
                    .IsUnicode(false);

                entity.Property(e => e.NotePianoContribuzione)
                    .HasColumnName("NOTE_PIANO_CONTRIBUZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.NoteValutazione)
                    .HasColumnName("NOTE_VALUTAZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.Rating)
                    .HasColumnName("RATING")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<Dp2Note>(entity =>
            {
                entity.HasKey(e => e.KeyDp2Note)
                    .HasName("PK__DP2_NOTE__433CD2F768A1CAF1");

                entity.ToTable("DP2_NOTE", "ISUITE");

                entity.HasIndex(e => e.IdDp2DatiGenerali)
                    .HasName("XX02DP2_NOTE");

                entity.HasIndex(e => e.IdDp2Note)
                    .HasName("XX01DP2_NOTE");

                entity.HasIndex(e => e.KeyDp2Note)
                    .HasName("PK_DP2_NOTE")
                    .IsUnique();

                entity.Property(e => e.KeyDp2Note)
                    .HasColumnName("KEY_DP2_NOTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtNota)
                    .HasColumnName("DT_NOTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDp2DatiGenerali)
                    .HasColumnName("ID_DP2_DATI_GENERALI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDp2Note)
                    .HasColumnName("ID_DP2_NOTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Nota)
                    .IsRequired()
                    .HasColumnName("NOTA")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Dp2PianoContr>(entity =>
            {
                entity.HasKey(e => e.KeyDp2PianoContr)
                    .HasName("PK__DP2_PIAN__33866DDC08DAD965");

                entity.ToTable("DP2_PIANO_CONTR", "ISUITE");

                entity.HasIndex(e => e.IdDp2PianoContr)
                    .HasName("XX01DP2_PIANO_CONTR");

                entity.HasIndex(e => e.KeyDp2PianoContr)
                    .HasName("PK_DP2_PIANO_CONTR")
                    .IsUnique();

                entity.Property(e => e.KeyDp2PianoContr)
                    .HasColumnName("KEY_DP2_PIANO_CONTR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CreditoIngresso)
                    .HasColumnName("CREDITO_INGRESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFinePiano)
                    .HasColumnName("DT_FINE_PIANO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPassagioPiano)
                    .HasColumnName("DT_PASSAGIO_PIANO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPassagioPianoTrimestrale)
                    .HasColumnName("DT_PASSAGIO_PIANO_TRIMESTRALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSviluppoPiano)
                    .HasColumnName("DT_SVILUPPO_PIANO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgModelloContributivo)
                    .IsRequired()
                    .HasColumnName("FLG_MODELLO_CONTRIBUTIVO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPiano)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_PIANO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdDp2PianoContr)
                    .HasColumnName("ID_DP2_PIANO_CONTR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteErogazione)
                    .HasColumnName("NOTE_EROGAZIONE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Dp2PianoContrMese>(entity =>
            {
                entity.HasKey(e => e.KeyDp2PianoContrMese)
                    .HasName("PK__DP2_PIAN__09EAC71708D5996A");

                entity.ToTable("DP2_PIANO_CONTR_MESE", "ISUITE");

                entity.HasIndex(e => e.IdDp2PianoContr)
                    .HasName("XX02DP2_PIANO_CONTR_MESE");

                entity.HasIndex(e => e.IdDp2PianoContrMese)
                    .HasName("XX01DP2_PIANO_CONTR_MESE");

                entity.HasIndex(e => e.KeyDp2PianoContrMese)
                    .HasName("PK_DP2_PIANO_CONTR_MESE")
                    .IsUnique();

                entity.Property(e => e.KeyDp2PianoContrMese)
                    .HasColumnName("KEY_DP2_PIANO_CONTR_MESE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoPiano)
                    .HasColumnName("ANNO_PIANO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ContributoBonus)
                    .HasColumnName("CONTRIBUTO_BONUS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ContributoErogatoMese)
                    .HasColumnName("CONTRIBUTO_EROGATO_MESE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ContributoMese)
                    .HasColumnName("CONTRIBUTO_MESE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ContributoMeseCumulato)
                    .HasColumnName("CONTRIBUTO_MESE_CUMULATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDp2PianoContr)
                    .HasColumnName("ID_DP2_PIANO_CONTR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDp2PianoContrMese)
                    .HasColumnName("ID_DP2_PIANO_CONTR_MESE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MesePiano)
                    .HasColumnName("MESE_PIANO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ObiettivoMese)
                    .HasColumnName("OBIETTIVO_MESE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ObiettivoMeseCumulato)
                    .HasColumnName("OBIETTIVO_MESE_CUMULATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Target)
                    .HasColumnName("TARGET")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<Dp2PianoFormativo>(entity =>
            {
                entity.HasKey(e => e.KeyDp2PianoFormativo)
                    .HasName("PK__DP2_PIAN__86C834503D2B2538");

                entity.ToTable("DP2_PIANO_FORMATIVO", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03DP2_PIANO_FORMATIVO");

                entity.HasIndex(e => e.IdDp2DatiGenerali)
                    .HasName("XX02DP2_PIANO_FORMATIVO");

                entity.HasIndex(e => e.IdDp2PianoFormativo)
                    .HasName("XX01DP2_PIANO_FORMATIVO");

                entity.HasIndex(e => e.KeyDp2PianoFormativo)
                    .HasName("PK_DP2_PIANO_FORMATIVA")
                    .IsUnique();

                entity.Property(e => e.KeyDp2PianoFormativo)
                    .HasColumnName("KEY_DP2_PIANO_FORMATIVO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtCertificazione)
                    .HasColumnName("DT_CERTIFICAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCertificazioneSino)
                    .IsRequired()
                    .HasColumnName("FLG_CERTIFICAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDocenza)
                    .IsRequired()
                    .HasColumnName("FLG_DOCENZA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgUnitaFormativa)
                    .IsRequired()
                    .HasColumnName("FLG_UNITA_FORMATIVA")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDp2DatiGenerali)
                    .HasColumnName("ID_DP2_DATI_GENERALI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDp2PianoFormativo)
                    .HasColumnName("ID_DP2_PIANO_FORMATIVO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<Dp2PianoTrimestrale>(entity =>
            {
                entity.HasKey(e => e.KeyPianoTrimestrale)
                    .HasName("PK__DP2_PIAN__C72AEEC862DB607C");

                entity.ToTable("DP2_PIANO_TRIMESTRALE", "ISUITE");

                entity.HasIndex(e => e.IdDp2DatiGenerali)
                    .HasName("XX02DP2_PIANO_TRIMESTRALE");

                entity.HasIndex(e => e.IdPianoTrimestrale)
                    .HasName("XX01DP2_PIANO_TRIMESTRALE");

                entity.HasIndex(e => e.KeyPianoTrimestrale)
                    .HasName("PK_DP2_PIANO_TRIMESTRALE")
                    .IsUnique();

                entity.Property(e => e.KeyPianoTrimestrale)
                    .HasColumnName("KEY_PIANO_TRIMESTRALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AaPagamentoPna)
                    .HasColumnName("AA_PAGAMENTO_PNA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ContributoErogato)
                    .HasColumnName("CONTRIBUTO_EROGATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTrimestre)
                    .HasColumnName("FLG_TRIMESTRE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdDp2DatiGenerali)
                    .HasColumnName("ID_DP2_DATI_GENERALI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPianoTrimestrale)
                    .HasColumnName("ID_PIANO_TRIMESTRALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MmPagamentoPna)
                    .HasColumnName("MM_PAGAMENTO_PNA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Dp2PremiAggiuntivi>(entity =>
            {
                entity.HasKey(e => e.KeyPremiAggiuntivi)
                    .HasName("PK__DP2_PREM__15834F7586E64A07");

                entity.ToTable("DP2_PREMI_AGGIUNTIVI", "ISUITE");

                entity.HasIndex(e => e.IdDp2DatiGenerali)
                    .HasName("XX02DP2_PREMI_AGGIUNTIVI");

                entity.HasIndex(e => e.IdPremiAggiuntivi)
                    .HasName("XX01DP2_PREMI_AGGIUNTIVI");

                entity.HasIndex(e => e.KeyPremiAggiuntivi)
                    .HasName("PK_DP2_PREMI_AGGIUNTIVI")
                    .IsUnique();

                entity.Property(e => e.KeyPremiAggiuntivi)
                    .HasColumnName("KEY_PREMI_AGGIUNTIVI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AaErogazione)
                    .HasColumnName("AA_EROGAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Contesto)
                    .HasColumnName("CONTESTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipologiaPremio)
                    .HasColumnName("FLG_TIPOLOGIA_PREMIO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdDp2DatiGenerali)
                    .HasColumnName("ID_DP2_DATI_GENERALI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPremiAggiuntivi)
                    .HasColumnName("ID_PREMI_AGGIUNTIVI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpPremio)
                    .HasColumnName("IMP_PREMIO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MmErogazione)
                    .HasColumnName("MM_EROGAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EcCoassNd>(entity =>
            {
                entity.HasKey(e => e.IdEcCoassNd);

                entity.ToTable("EC_COASS_ND", "IFLOW");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdOggetto, e.FlgTipoOggetto })
                    .HasName("XX02_EC_COASS_ND");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtPeriodoEc, e.IdRetevendita, e.IdCompagniaCoass })
                    .HasName("XX01_EC_COASS_ND");

                entity.Property(e => e.IdEcCoassNd)
                    .HasColumnName("ID_EC_COASS_ND")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoEsercizio)
                    .HasColumnName("ANNO_ESERCIZIO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtContabMovimento)
                    .HasColumnName("DT_CONTAB_MOVIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamentoEc)
                    .HasColumnName("DT_PAGAMENTO_EC")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPeriodoEc)
                    .HasColumnName("DT_PERIODO_EC")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazioneMovimento)
                    .HasColumnName("DT_REGISTRAZIONE_MOVIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDefinitivoSino)
                    .HasColumnName("FLG_DEFINITIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSelezionatoSino)
                    .HasColumnName("FLG_SELEZIONATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdCompagniaCoass).HasColumnName("ID_COMPAGNIA_COASS");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdTitTipoTitolo).HasColumnName("ID_TIT_TIPO_TITOLO");

                entity.Property(e => e.ImpCommissioni)
                    .HasColumnName("IMP_COMMISSIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpImponibile)
                    .HasColumnName("IMP_IMPONIBILE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNettoDiritti)
                    .HasColumnName("IMP_NETTO_DIRITTI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNettoNoDiritti)
                    .HasColumnName("IMP_NETTO_NO_DIRITTI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTot)
                    .HasColumnName("IMP_TOT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NumEc)
                    .HasColumnName("NUM_EC")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PercCommissioni)
                    .HasColumnName("PERC_COMMISSIONI")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PercIva)
                    .HasColumnName("PERC_IVA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PercQuotaCoass)
                    .HasColumnName("PERC_QUOTA_COASS")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<EstSinistri>(entity =>
            {
                entity.HasKey(e => e.IdEstrazione)
                    .HasName("PK__EST_SINI__837DFC1C793C04CE");

                entity.ToTable("EST_SINISTRI", "IREGULATION");

                entity.HasIndex(e => e.IdEstrazione)
                    .HasName("SYS_C0047756")
                    .IsUnique();

                entity.Property(e => e.IdEstrazione)
                    .HasColumnName("ID_ESTRAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodStatoScarico)
                    .HasColumnName("COD_STATO_SCARICO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodTipoEstrazione)
                    .HasColumnName("COD_TIPO_ESTRAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtElaborazioneIvass)
                    .HasColumnName("DT_ELABORAZIONE_IVASS")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEstrazione)
                    .HasColumnName("DT_ESTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEstrazioneAl)
                    .HasColumnName("DT_ESTRAZIONE_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEstrazioneDal)
                    .HasColumnName("DT_ESTRAZIONE_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRitornoErrori)
                    .HasColumnName("DT_RITORNO_ERRORI")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumSinDefinitiErrati).HasColumnName("NUM_SIN_DEFINITI_ERRATI");

                entity.Property(e => e.NumSinDefinitiInviati).HasColumnName("NUM_SIN_DEFINITI_INVIATI");

                entity.Property(e => e.NumSinErrati).HasColumnName("NUM_SIN_ERRATI");

                entity.Property(e => e.NumSinInviati).HasColumnName("NUM_SIN_INVIATI");

                entity.Property(e => e.TimestampEstrazione)
                    .HasColumnName("TIMESTAMP_ESTRAZIONE")
                    .HasMaxLength(26)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EstSinistriDett>(entity =>
            {
                entity.HasKey(e => e.IdEstrazioneDett)
                    .HasName("PK__EST_SINI__B7FFD7755751E25A");

                entity.ToTable("EST_SINISTRI_DETT", "IREGULATION");

                entity.HasIndex(e => e.IdEntita)
                    .HasName("XX02EST_SINISTRI_DETT");

                entity.HasIndex(e => e.IdEntitaCoinvolta)
                    .HasName("XX04EST_SINISTRI_DETT");

                entity.HasIndex(e => e.IdEstrazione)
                    .HasName("XX03EST_SINISTRI_DETT");

                entity.HasIndex(e => e.IdEstrazioneDett)
                    .HasName("SYS_C0047758")
                    .IsUnique();

                entity.Property(e => e.IdEstrazioneDett)
                    .HasColumnName("ID_ESTRAZIONE_DETT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ChiaveInviata)
                    .HasColumnName("CHIAVE_INVIATA")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.Property(e => e.CodFiscaleRif)
                    .HasColumnName("COD_FISCALE_RIF")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodTipoEntita)
                    .HasColumnName("COD_TIPO_ENTITA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdEntita)
                    .HasColumnName("ID_ENTITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitaCoinvolta)
                    .HasColumnName("ID_ENTITA_COINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEstrazione)
                    .HasColumnName("ID_ESTRAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.NominativoRif)
                    .HasColumnName("NOMINATIVO_RIF")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.PartitaIvaRif)
                    .HasColumnName("PARTITA_IVA_RIF")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.PrgRecordInviato).HasColumnName("PRG_RECORD_INVIATO");

                entity.Property(e => e.RecordEstratto)
                    .HasColumnName("RECORD_ESTRATTO")
                    .HasColumnType("text");

                entity.Property(e => e.TargaRif)
                    .HasColumnName("TARGA_RIF")
                    .HasMaxLength(70)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EstSinistriErrElab>(entity =>
            {
                entity.HasKey(e => e.IdErroreElab)
                    .HasName("PK__EST_SINI__E241EC975ACF77D5");

                entity.ToTable("EST_SINISTRI_ERR_ELAB", "IREGULATION");

                entity.HasIndex(e => e.IdErroreElab)
                    .HasName("SYS_C0047760")
                    .IsUnique();

                entity.HasIndex(e => e.IdEstrazione)
                    .HasName("XX02EST_SINISTRI_ERR_ELAB");

                entity.Property(e => e.IdErroreElab)
                    .HasColumnName("ID_ERRORE_ELAB")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DescrizioneErrore)
                    .HasColumnName("DESCRIZIONE_ERRORE")
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdEstrazione)
                    .HasColumnName("ID_ESTRAZIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<EstSinistriErrRitorni>(entity =>
            {
                entity.HasKey(e => e.IdErrore)
                    .HasName("PK__EST_SINI__CD2959153CBCC931");

                entity.ToTable("EST_SINISTRI_ERR_RITORNI", "IREGULATION");

                entity.HasIndex(e => e.IdErrore)
                    .HasName("SYS_C0047762")
                    .IsUnique();

                entity.HasIndex(e => e.IdEstrazione)
                    .HasName("XX03EST_SINISTRI_ERR_RITORNI");

                entity.HasIndex(e => e.IdEstrazioneDett)
                    .HasName("XX02EST_SINISTRI_ERR_RITORNI");

                entity.Property(e => e.IdErrore)
                    .HasColumnName("ID_ERRORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodTipoErrore)
                    .HasColumnName("COD_TIPO_ERRORE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneErrore)
                    .HasColumnName("DESCRIZIONE_ERRORE")
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdEstrazione)
                    .HasColumnName("ID_ESTRAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEstrazioneDett)
                    .HasColumnName("ID_ESTRAZIONE_DETT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.RecordRicevuto)
                    .HasColumnName("RECORD_RICEVUTO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<EtaAssSegnalazioni>(entity =>
            {
                entity.HasKey(e => e.IdEtaAssSegnalazione);

                entity.ToTable("ETA_ASS_SEGNALAZIONI", "IFLOW");

                entity.HasIndex(e => e.DtElaborazione)
                    .HasName("X03_ETA_ASS_SEGNALAZIONI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("X01_ETA_ASS_SEGNALAZIONI");

                entity.HasIndex(e => new { e.NPolizza, e.IdCompagnia })
                    .HasName("X02_ETA_ASS_SEGNALAZIONI");

                entity.Property(e => e.IdEtaAssSegnalazione)
                    .HasColumnName("ID_ETA_ASS_SEGNALAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagniaAnia)
                    .HasColumnName("COD_COMPAGNIA_ANIA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CodfiscPivaAss)
                    .HasColumnName("CODFISC_PIVA_ASS")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CognomeRagioneSocialeAss)
                    .HasColumnName("COGNOME_RAGIONE_SOCIALE_ASS")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffettoPolizza)
                    .HasColumnName("DT_EFFETTO_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineEstrazione)
                    .HasColumnName("DT_FINE_ESTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniEstrazione)
                    .HasColumnName("DT_INI_ESTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtNascitaAss)
                    .HasColumnName("DT_NASCITA_ASS")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPolizza)
                    .HasColumnName("DT_SCADENZA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysElaborazione)
                    .HasColumnName("DT_SYS_ELABORAZIONE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EtaSegnalazioneBeneAss).HasColumnName("ETA_SEGNALAZIONE_BENE_ASS");

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FidSapWiseAutosoft>(entity =>
            {
                entity.HasKey(e => e.IdFidsapwiseautosoft);

                entity.ToTable("FID_SAP_WISE_AUTOSOFT", "ICLAIMS");

                entity.Property(e => e.IdFidsapwiseautosoft)
                    .HasColumnName("ID_FIDSAPWISEAUTOSOFT")
                    .ValueGeneratedNever();

                entity.Property(e => e.Caricamento)
                    .HasColumnName("CARICAMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CaricatoP)
                    .HasColumnName("CARICATO_P")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CaricatoW)
                    .HasColumnName("CARICATO_W")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodFiduciario)
                    .IsRequired()
                    .HasColumnName("COD_FIDUCIARIO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DatiRecord)
                    .HasColumnName("DATI_RECORD")
                    .IsUnicode(false);

                entity.Property(e => e.NomeFile)
                    .IsRequired()
                    .HasColumnName("NOME_FILE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TipoRecord)
                    .IsRequired()
                    .HasColumnName("TIPO_RECORD")
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FidiCreditoAcquirenti>(entity =>
            {
                entity.HasKey(e => e.KeyFidoAcquirente);

                entity.ToTable("FIDI_CREDITO_ACQUIRENTI", "IAGENCY");

                entity.HasIndex(e => e.IdAnagraficaAcquirente)
                    .HasName("XX02FIDI_CREDITO_ACQUIRENTI");

                entity.HasIndex(e => e.IdFidoAcquirente)
                    .HasName("XX01FIDI_CREDITO_ACQUIRENTI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX03FIDI_CREDITO_ACQUIRENTI");

                entity.Property(e => e.KeyFidoAcquirente)
                    .HasColumnName("KEY_FIDO_ACQUIRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagraficaAcquirente)
                    .HasColumnName("ID_ANAGRAFICA_ACQUIRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFidoAcquirente)
                    .HasColumnName("ID_FIDO_ACQUIRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImportoAffidamento)
                    .HasColumnName("IMPORTO_AFFIDAMENTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FidiCreditoContraenti>(entity =>
            {
                entity.HasKey(e => e.KeyFidoContraente);

                entity.ToTable("FIDI_CREDITO_CONTRAENTI", "IAGENCY");

                entity.HasIndex(e => e.IdAnagraficaContraente)
                    .HasName("XX04FIDI_CREDITO_CONTRAENTI");

                entity.HasIndex(e => e.IdFidoAcquirente)
                    .HasName("XX02FIDI_CREDITO_CONTRAENTI");

                entity.HasIndex(e => e.IdFidoContraente)
                    .HasName("XX01FIDI_CREDITO_CONTRAENTI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX03FIDI_CREDITO_CONTRAENTI");

                entity.Property(e => e.KeyFidoContraente)
                    .HasColumnName("KEY_FIDO_CONTRAENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagraficaContraente)
                    .HasColumnName("ID_ANAGRAFICA_CONTRAENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFidoAcquirente)
                    .HasColumnName("ID_FIDO_ACQUIRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFidoContraente)
                    .HasColumnName("ID_FIDO_CONTRAENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpLimiteEsposizione)
                    .HasColumnName("IMP_LIMITE_ESPOSIZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Fix1>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PctScoperto)
                    .HasColumnName("PCT_SCOPERTO")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<FrmEleValVariabili>(entity =>
            {
                entity.HasKey(e => e.KeyFrmElencoValori)
                    .HasName("PK__FRM_ELE___1B3F0BE70F997625");

                entity.ToTable("FRM_ELE_VAL_VARIABILI", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02FRM_ELE_VAL_VARIABILI");

                entity.HasIndex(e => e.IdFrmElencoValori)
                    .HasName("XX01FRM_ELE_VAL_VARIABILI");

                entity.HasIndex(e => e.IdFrmElencoValoriPrin)
                    .HasName("XX04FRM_ELE_VAL_VARIABILI");

                entity.HasIndex(e => e.IdFrmVariabile)
                    .HasName("XX03FRM_ELE_VAL_VARIABILI");

                entity.HasIndex(e => e.KeyFrmElencoValori)
                    .HasName("SYS_C0030358")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdFrmElencoValoriPrin, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX05FRM_ELE_VAL_VARIABILI");

                entity.Property(e => e.KeyFrmElencoValori)
                    .HasColumnName("KEY_FRM_ELENCO_VALORI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodParametro)
                    .HasColumnName("COD_PARAMETRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFormatoVariabile)
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNascostoSino)
                    .HasColumnName("FLG_NASCOSTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNonInElencoSino)
                    .HasColumnName("FLG_NON_IN_ELENCO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligatorioSino)
                    .HasColumnName("FLG_OBBLIGATORIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTestoMaiuscoloSino)
                    .HasColumnName("FLG_TESTO_MAIUSCOLO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCampoCollegato).HasColumnName("ID_CAMPO_COLLEGATO");

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdFormulaValidazione).HasColumnName("ID_FORMULA_VALIDAZIONE");

                entity.Property(e => e.IdFormulaValorizzazione).HasColumnName("ID_FORMULA_VALORIZZAZIONE");

                entity.Property(e => e.IdFormulaVisibilita).HasColumnName("ID_FORMULA_VISIBILITA");

                entity.Property(e => e.IdFrmElencoValori).HasColumnName("ID_FRM_ELENCO_VALORI");

                entity.Property(e => e.IdFrmElencoValoriPrin).HasColumnName("ID_FRM_ELENCO_VALORI_PRIN");

                entity.Property(e => e.IdFrmVariabile).HasColumnName("ID_FRM_VARIABILE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.LarghezzaLabel).HasColumnName("LARGHEZZA_LABEL");

                entity.Property(e => e.Lunghezza).HasColumnName("LUNGHEZZA");

                entity.Property(e => e.Ordine).HasColumnName("ORDINE");

                entity.Property(e => e.Precisione).HasColumnName("PRECISIONE");

                entity.Property(e => e.ValoreData)
                    .HasColumnName("VALORE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ValoreDataDefault)
                    .HasColumnName("VALORE_DATA_DEFAULT")
                    .HasColumnType("datetime");

                entity.Property(e => e.ValoreNumerico)
                    .HasColumnName("VALORE_NUMERICO")
                    .HasColumnType("numeric(36, 18)");

                entity.Property(e => e.ValoreNumericoDefault)
                    .HasColumnName("VALORE_NUMERICO_DEFAULT")
                    .HasColumnType("numeric(36, 18)");

                entity.Property(e => e.ValoreStringa)
                    .HasColumnName("VALORE_STRINGA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ValoreStringaDefault)
                    .HasColumnName("VALORE_STRINGA_DEFAULT")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FrmGruppiVariabili>(entity =>
            {
                entity.HasKey(e => e.KeyFrmGruppoVariabili)
                    .HasName("PK__FRM_GRUP__1F6EE1B1ACCFE86E");

                entity.ToTable("FRM_GRUPPI_VARIABILI", "ISUITE");

                entity.HasIndex(e => e.IdDescrizioneBottone)
                    .HasName("XX02FRM_GRUPPI_VARIABILI");

                entity.HasIndex(e => e.IdDescrizioneGruppo)
                    .HasName("XX03FRM_GRUPPI_VARIABILI");

                entity.HasIndex(e => e.IdFrmGruppoVariabili)
                    .HasName("XX01FRM_GRUPPI_VARIABILI");

                entity.HasIndex(e => e.KeyFrmGruppoVariabili)
                    .HasName("SYS_C0030368")
                    .IsUnique();

                entity.HasIndex(e => new { e.CodGruppo, e.DtInizioValidita, e.DtFineValidita, e.DtStoScadenzaFis })
                    .HasName("XX04FRM_GRUPPI_VARIABILI");

                entity.Property(e => e.KeyFrmGruppoVariabili)
                    .HasColumnName("KEY_FRM_GRUPPO_VARIABILI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGruppo)
                    .IsRequired()
                    .HasColumnName("COD_GRUPPO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneBottone)
                    .HasColumnName("DESCRIZIONE_BOTTONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneGruppo)
                    .HasColumnName("DESCRIZIONE_GRUPPO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInPaginaSino)
                    .HasColumnName("FLG_IN_PAGINA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEntitaVar)
                    .HasColumnName("FLG_TIPO_ENTITA_VAR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizioneBottone).HasColumnName("ID_DESCRIZIONE_BOTTONE");

                entity.Property(e => e.IdDescrizioneGruppo).HasColumnName("ID_DESCRIZIONE_GRUPPO");

                entity.Property(e => e.IdFormulaVisibilita).HasColumnName("ID_FORMULA_VISIBILITA");

                entity.Property(e => e.IdFrmGruppoVariabili).HasColumnName("ID_FRM_GRUPPO_VARIABILI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Versione).HasColumnName("VERSIONE");
            });

            modelBuilder.Entity<FrmOggettiCondizionali>(entity =>
            {
                entity.HasKey(e => e.KeyFrmOggettiCondizionali)
                    .HasName("PK__FRM_OGGE__4201A68E50D14A45");

                entity.ToTable("FRM_OGGETTI_CONDIZIONALI", "ISUITE");

                entity.Property(e => e.KeyFrmOggettiCondizionali)
                    .HasColumnName("KEY_FRM_OGGETTI_CONDIZIONALI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdFrmGruppoVariabili).HasColumnName("ID_FRM_GRUPPO_VARIABILI");

                entity.Property(e => e.IdFrmOggettiCondizionali).HasColumnName("ID_FRM_OGGETTI_CONDIZIONALI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<FrmVarDinamiche>(entity =>
            {
                entity.HasKey(e => e.KeyFrmVarDinamica)
                    .HasName("PK__FRM_VAR___AC72CB2FC86DF0E2");

                entity.ToTable("FRM_VAR_DINAMICHE", "ISUITE");

                entity.HasIndex(e => e.IdElencoValore)
                    .HasName("XX03FRM_VAR_DINAMICHE");

                entity.HasIndex(e => e.IdFrmVarDinamica)
                    .HasName("XX01FRM_VAR_DINAMICHE");

                entity.HasIndex(e => e.IdOggetto)
                    .HasName("XX02FRM_VAR_DINAMICHE");

                entity.HasIndex(e => e.KeyFrmVarDinamica)
                    .HasName("SYS_C0032687")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdOggetto, e.FlgTipoOggetto, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX04FRM_VAR_DINAMICHE");

                entity.Property(e => e.KeyFrmVarDinamica)
                    .HasColumnName("KEY_FRM_VAR_DINAMICA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdElencoValore).HasColumnName("ID_ELENCO_VALORE");

                entity.Property(e => e.IdFrmVarDinamica).HasColumnName("ID_FRM_VAR_DINAMICA");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ValoreData)
                    .HasColumnName("VALORE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ValoreNumerico)
                    .HasColumnName("VALORE_NUMERICO")
                    .HasColumnType("numeric(36, 18)");

                entity.Property(e => e.ValoreStringa)
                    .HasColumnName("VALORE_STRINGA")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FrmVariabili>(entity =>
            {
                entity.HasKey(e => e.KeyFrmVariabile)
                    .HasName("PK__FRM_VARI__FF7676A61C71E433");

                entity.ToTable("FRM_VARIABILI", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02FRM_VARIABILI");

                entity.HasIndex(e => e.IdFrmGruppoVariabili)
                    .HasName("XX03FRM_VARIABILI");

                entity.HasIndex(e => e.IdFrmVariabile)
                    .HasName("XX01FRM_VARIABILI");

                entity.HasIndex(e => e.IdParametroPrincipale)
                    .HasName("XX04FRM_VARIABILI");

                entity.HasIndex(e => e.KeyFrmVariabile)
                    .HasName("SYS_C0030395")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdParametroPrincipale, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX05FRM_VARIABILI");

                entity.Property(e => e.KeyFrmVariabile)
                    .HasColumnName("KEY_FRM_VARIABILE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodParametro)
                    .HasColumnName("COD_PARAMETRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFormatoVariabile)
                    .IsRequired()
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligatorioSino)
                    .HasColumnName("FLG_OBBLIGATORIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSceltaMultiplaSino)
                    .HasColumnName("FLG_SCELTA_MULTIPLA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdFormulaVisibilita).HasColumnName("ID_FORMULA_VISIBILITA");

                entity.Property(e => e.IdFrmGruppoVariabili).HasColumnName("ID_FRM_GRUPPO_VARIABILI");

                entity.Property(e => e.IdFrmVariabile).HasColumnName("ID_FRM_VARIABILE");

                entity.Property(e => e.IdParametroPrincipale).HasColumnName("ID_PARAMETRO_PRINCIPALE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Lunghezza).HasColumnName("LUNGHEZZA");

                entity.Property(e => e.Ordine).HasColumnName("ORDINE");

                entity.Property(e => e.Precisione).HasColumnName("PRECISIONE");
            });

            modelBuilder.Entity<FrmVariabiliCondizionali>(entity =>
            {
                entity.HasKey(e => e.KeyFrmVariabiliCondizionali)
                    .HasName("PK__FRM_VARI__66D207F3CD208F0F");

                entity.ToTable("FRM_VARIABILI_CONDIZIONALI", "ISUITE");

                entity.Property(e => e.KeyFrmVariabiliCondizionali)
                    .HasColumnName("KEY_FRM_VARIABILI_CONDIZIONALI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEntitaVar)
                    .HasColumnName("FLG_TIPO_ENTITA_VAR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgValidazioneSino)
                    .HasColumnName("FLG_VALIDAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgValorizzazioneSino)
                    .HasColumnName("FLG_VALORIZZAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisibilitaSino)
                    .HasColumnName("FLG_VISIBILITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdFrmElencoValori).HasColumnName("ID_FRM_ELENCO_VALORI");

                entity.Property(e => e.IdFrmGruppoVariabili).HasColumnName("ID_FRM_GRUPPO_VARIABILI");

                entity.Property(e => e.IdFrmVariabile).HasColumnName("ID_FRM_VARIABILE");

                entity.Property(e => e.IdFrmVariabiliCondizionali).HasColumnName("ID_FRM_VARIABILI_CONDIZIONALI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NomeVariabileCondizionale)
                    .HasColumnName("NOME_VARIABILE_CONDIZIONALE")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<FrmVariabiliEntita>(entity =>
            {
                entity.HasKey(e => e.KeyFrmVariabileEntita)
                    .HasName("PK__FRM_VARI__15BD2BCB90DD7C96");

                entity.ToTable("FRM_VARIABILI_ENTITA", "ISUITE");

                entity.HasIndex(e => e.IdFrmGruppoVariabili)
                    .HasName("XX02FRM_VARIABILI_ENTITA");

                entity.HasIndex(e => e.IdFrmVariabileEntita)
                    .HasName("XX01FRM_VARIABILI_ENTITA");

                entity.HasIndex(e => e.IdOggetto)
                    .HasName("XX05FRM_VARIABILI_ENTITA");

                entity.HasIndex(e => e.KeyFrmVariabileEntita)
                    .HasName("SYS_C0030396")
                    .IsUnique();

                entity.Property(e => e.KeyFrmVariabileEntita)
                    .HasColumnName("KEY_FRM_VARIABILE_ENTITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPosRichiesta)
                    .HasColumnName("FLG_POS_RICHIESTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdFrmGruppoVariabili).HasColumnName("ID_FRM_GRUPPO_VARIABILI");

                entity.Property(e => e.IdFrmVariabileEntita).HasColumnName("ID_FRM_VARIABILE_ENTITA");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Ordine).HasColumnName("ORDINE");
            });

            modelBuilder.Entity<IncDanniCorporali>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INC_DANNI_CORPORALI", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02INC_DANNI_CORPORALI");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("XX03INC_DANNI_CORPORALI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01INC_DANNI_CORPORALI");

                entity.HasIndex(e => new { e.IdIncaricodannocorporale, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_INC_DANNI_CORPORALI_STO")
                    .IsUnique();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgProntoSoccorsoSino)
                    .IsRequired()
                    .HasColumnName("FLG_PRONTO_SOCCORSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagraficaOspedale).HasColumnName("ID_ANAGRAFICA_OSPEDALE");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdIncaricodannocorporale).HasColumnName("ID_INCARICODANNOCORPORALE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.KeyIncaricodannocorporale).HasColumnName("KEY_INCARICODANNOCORPORALE");

                entity.Property(e => e.PctInvaliditaPerm)
                    .HasColumnName("PCT_INVALIDITA_PERM")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<IncDanniVeicoli>(entity =>
            {
                entity.HasKey(e => e.KeyIncaricodannoveicolo);

                entity.ToTable("INC_DANNI_VEICOLI", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02INC_DANNI_VEICOLI");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("XX03INC_DANNI_VEICOLI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01INC_DANNI_VEICOLI");

                entity.HasIndex(e => new { e.IdIncaricodannoveicolo, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_INC_DANNI_VEICOLI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyIncaricodannoveicolo)
                    .HasColumnName("KEY_INCARICODANNOVEICOLO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPuntoUrto)
                    .HasColumnName("FLG_PUNTO_URTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdIncaricodannoveicolo).HasColumnName("ID_INCARICODANNOVEICOLO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<IncInabilitaTemporanee>(entity =>
            {
                entity.HasKey(e => e.KeyIncaricoinabilitatemp);

                entity.ToTable("INC_INABILITA_TEMPORANEE", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02INC_INABILITA_TEMPORANEE");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("XX03INC_INABILITA_TEMPORANEE");

                entity.HasIndex(e => e.IdIncaricodannocorporale)
                    .HasName("XX04INC_INABILITA_TEMPORANEE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01INC_INABILITA_TEMPORANEE");

                entity.HasIndex(e => new { e.IdIncaricoinabilitatemp, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_INC_INABILITA_TEMPORANEE_S")
                    .IsUnique();

                entity.Property(e => e.KeyIncaricoinabilitatemp)
                    .HasColumnName("KEY_INCARICOINABILITATEMP")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdIncaricodannocorporale).HasColumnName("ID_INCARICODANNOCORPORALE");

                entity.Property(e => e.IdIncaricoinabilitatemp).HasColumnName("ID_INCARICOINABILITATEMP");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NumeroGiorni).HasColumnName("NUMERO_GIORNI");

                entity.Property(e => e.PctInabilita)
                    .HasColumnName("PCT_INABILITA")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<IncIncarichi>(entity =>
            {
                entity.HasKey(e => e.KeyIncarico)
                    .HasName("PK__INC_INCA__70474F6A4B85CB2B");

                entity.ToTable("INC_INCARICHI", "ICLAIMS");

                entity.HasIndex(e => e.DtScaricoContabile)
                    .HasName("XX07INC_INCARICHI");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("XX03INC_INCARICHI");

                entity.HasIndex(e => e.IdTipoincaricofiduciario)
                    .HasName("XX06INC_INCARICHI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX05INC_INCARICHI");

                entity.HasIndex(e => e.KeyIncarico)
                    .HasName("SYS_C0047432")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX08INC_INCARICHI");

                entity.HasIndex(e => new { e.IdEntitacoinvolta, e.DtStoScadenzaLog })
                    .HasName("XX01INC_INCARICHI");

                entity.HasIndex(e => new { e.IdFiduciario, e.DtStoScadenzaLog })
                    .HasName("XX04INC_INCARICHI");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaLog })
                    .HasName("XX02INC_INCARICHI");

                entity.HasIndex(e => new { e.IdIncarico, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_INC_INCARICHI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyIncarico)
                    .HasColumnName("KEY_INCARICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAssegnazionePerito)
                    .HasColumnName("DT_ASSEGNAZIONE_PERITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDichiarazioneRespPerizia)
                    .HasColumnName("DT_DICHIARAZIONE_RESP_PERIZIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIncarico)
                    .HasColumnName("DT_INCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtLimite)
                    .HasColumnName("DT_LIMITE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtMailAffidamentoRintracci)
                    .HasColumnName("DT_MAIL_AFFIDAMENTO_RINTRACCI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimoSopraluogo)
                    .HasColumnName("DT_PRIMO_SOPRALUOGO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRientro)
                    .HasColumnName("DT_RIENTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCoerenzaDanno)
                    .HasColumnName("flg_coerenza_danno")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDannoPersoneSino)
                    .HasColumnName("FLG_DANNO_PERSONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDannoReCoseSino)
                    .HasColumnName("FLG_DANNO_RE_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDannoVeicoliSino)
                    .HasColumnName("FLG_DANNO_VEICOLI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDichiarazioneRespPerizia)
                    .HasColumnName("FLG_DICHIARAZIONE_RESP_PERIZIA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEsitoIncarico)
                    .HasColumnName("FLG_ESITO_INCARICO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPortaleSino)
                    .HasColumnName("FLG_PORTALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoIncaricoSin)
                    .HasColumnName("flg_stato_incarico_sin")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoLiquidazione)
                    .HasColumnName("FLG_TIPO_LIQUIDAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAtp).HasColumnName("ID_ATP");

                entity.Property(e => e.IdCausa).HasColumnName("ID_CAUSA");

                entity.Property(e => e.IdCitazione).HasColumnName("ID_CITAZIONE");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFiduciario)
                    .HasColumnName("ID_FIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFiduciarioAssegnato).HasColumnName("ID_FIDUCIARIO_ASSEGNATO");

                entity.Property(e => e.IdIncarico)
                    .HasColumnName("ID_INCARICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTipoincaricofiduciario)
                    .HasColumnName("ID_TIPOINCARICOFIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdentificativoEsterno)
                    .HasColumnName("IDENTIFICATIVO_ESTERNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ImpConcordato)
                    .HasColumnName("IMP_CONCORDATO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDanno)
                    .HasColumnName("IMP_DANNO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPreventivoSpesa)
                    .HasColumnName("IMP_PREVENTIVO_SPESA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSpeseMediche)
                    .HasColumnName("IMP_SPESE_MEDICHE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NoteIncarico)
                    .HasColumnName("NOTE_INCARICO")
                    .IsUnicode(false);

                entity.Property(e => e.NoteScarico)
                    .HasColumnName("NOTE_SCARICO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IncIncarichiAutosoft>(entity =>
            {
                entity.HasKey(e => e.KeyIncaricoAutosoft)
                    .HasName("PK_INCARICHI_AUTOSOFT");

                entity.ToTable("INC_INCARICHI_AUTOSOFT", "ICLAIMS");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("XX01_INC_INCARICHI_AUTOSOFT");

                entity.Property(e => e.KeyIncaricoAutosoft)
                    .HasColumnName("KEY_INCARICO_AUTOSOFT")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtChiusura)
                    .HasColumnName("DT_CHIUSURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStato)
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdIncaricoAutosoft).HasColumnName("ID_INCARICO_AUTOSOFT");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<IncIncarichiParcelle>(entity =>
            {
                entity.HasKey(e => e.IdIncaricoparcella)
                    .HasName("PK__INC_INCA__F566D451FFD5A572");

                entity.ToTable("INC_INCARICHI_PARCELLE", "ICLAIMS");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("XX02INC_INCARICHI_PARCELLE");

                entity.HasIndex(e => e.IdIncaricoparcella)
                    .HasName("SYS_C0047434")
                    .IsUnique();

                entity.HasIndex(e => e.IdParcella)
                    .HasName("XX03INC_INCARICHI_PARCELLE");

                entity.HasIndex(e => new { e.IdIncarico, e.IdParcella })
                    .HasName("XINC_INCARICHI_PARCELLE")
                    .IsUnique();

                entity.Property(e => e.IdIncaricoparcella)
                    .HasColumnName("ID_INCARICOPARCELLA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIncarico)
                    .HasColumnName("ID_INCARICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdParcella)
                    .HasColumnName("ID_PARCELLA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<IncParcelle>(entity =>
            {
                entity.HasKey(e => e.KeyParcella)
                    .HasName("PK__INC_PARC__4EFB689CC797C95E");

                entity.ToTable("INC_PARCELLE", "ICLAIMS");

                entity.HasIndex(e => e.IdContocorrente)
                    .HasName("XX04INC_PARCELLE");

                entity.HasIndex(e => e.IdFiduciario)
                    .HasName("XX02INC_PARCELLE");

                entity.HasIndex(e => e.IdParcella)
                    .HasName("XX01INC_PARCELLE");

                entity.HasIndex(e => e.IdStudiofiduciario)
                    .HasName("XX03INC_PARCELLE");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX05INC_PARCELLE");

                entity.HasIndex(e => e.KeyParcella)
                    .HasName("SYS_C0047444")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdParcella, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_INC_PARCELLE_STO")
                    .IsUnique();

                entity.Property(e => e.KeyParcella)
                    .HasColumnName("KEY_PARCELLA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFattura).HasColumnName("DT_FATTURA");

                entity.Property(e => e.DtProforma)
                    .HasColumnName("DT_PROFORMA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgIntestatario)
                    .HasColumnName("FLG_INTESTATARIO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMezzoPagamento)
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPersRitenutaSino)
                    .HasColumnName("FLG_PERS_RITENUTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgProformaSino)
                    .HasColumnName("FLG_PROFORMA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSpeseGestioneSino)
                    .HasColumnName("FLG_SPESE_GESTIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoContabile)
                    .HasColumnName("FLG_STATO_CONTABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoParcella)
                    .HasColumnName("FLG_TIPO_PARCELLA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdContocorrente)
                    .HasColumnName("ID_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContocorrenteComp)
                    .HasColumnName("ID_CONTOCORRENTE_COMP")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFiduciario)
                    .HasColumnName("ID_FIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFiduciarioCorr)
                    .HasColumnName("ID_FIDUCIARIO_CORR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMandato)
                    .HasColumnName("ID_MANDATO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdParcella)
                    .HasColumnName("ID_PARCELLA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdStudiofiduciario)
                    .HasColumnName("ID_STUDIOFIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpRitenuta)
                    .HasColumnName("IMP_RITENUTA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NAssegno)
                    .HasColumnName("N_ASSEGNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NFattura)
                    .HasColumnName("N_FATTURA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NProforma)
                    .HasColumnName("N_PROFORMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.RifEsternoParcella)
                    .HasColumnName("RIF_ESTERNO_PARCELLA")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IncParcelleIndennizzi>(entity =>
            {
                entity.HasKey(e => e.IdParcellaindennizzo);

                entity.ToTable("INC_PARCELLE_INDENNIZZI", "ICLAIMS");

                entity.Property(e => e.IdParcellaindennizzo)
                    .HasColumnName("ID_PARCELLAINDENNIZZO")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");

                entity.Property(e => e.IdParcella).HasColumnName("ID_PARCELLA");
            });

            modelBuilder.Entity<IncParcelleNoteCredito>(entity =>
            {
                entity.HasKey(e => e.KeyParcellaNotaCredito);

                entity.ToTable("INC_PARCELLE_NOTE_CREDITO", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX01_INC_PARCELLE_NOTE_CREDITO");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("XX03_INC_PARCELLE_NOTE_CREDITO");

                entity.HasIndex(e => e.IdParcella)
                    .HasName("XX08_INC_PARCELLE_NOTE_CREDITO");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02_INC_PARCELLE_NOTE_CREDITO");

                entity.HasIndex(e => e.IdSpesa)
                    .HasName("XX05_INC_PARCELLE_NOTE_CREDITO");

                entity.HasIndex(e => e.IdSpesaRiemessa)
                    .HasName("XX07_INC_PARCELLE_NOTE_CREDITO");

                entity.HasIndex(e => e.IdSpesaStorno)
                    .HasName("XX06_INC_PARCELLE_NOTE_CREDITO");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX04_INC_PARCELLE_NOTE_CREDITO");

                entity.HasIndex(e => new { e.IdParcellaNotaCredito, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_INC_PARCELLE_NOTE_CRED_STO")
                    .IsUnique();

                entity.Property(e => e.KeyParcellaNotaCredito)
                    .HasColumnName("KEY_PARCELLA_NOTA_CREDITO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStorno)
                    .HasColumnName("DT_STORNO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMotivoStorno)
                    .IsRequired()
                    .HasColumnName("FLG_MOTIVO_STORNO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRiemettiSpesaSino)
                    .HasColumnName("FLG_RIEMETTI_SPESA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdParcella).HasColumnName("ID_PARCELLA");

                entity.Property(e => e.IdParcellaNotaCredito).HasColumnName("ID_PARCELLA_NOTA_CREDITO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSpesa).HasColumnName("ID_SPESA");

                entity.Property(e => e.IdSpesaRiemessa).HasColumnName("ID_SPESA_RIEMESSA");

                entity.Property(e => e.IdSpesaStorno).HasColumnName("ID_SPESA_STORNO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<IncSedeLesioni>(entity =>
            {
                entity.HasKey(e => e.KeyIncaricosedelesione);

                entity.ToTable("INC_SEDE_LESIONI", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02INC_SEDE_LESIONI");

                entity.HasIndex(e => e.IdIncarico)
                    .HasName("XX03INC_SEDE_LESIONI");

                entity.HasIndex(e => e.IdIncaricodannocorporale)
                    .HasName("XX04INC_SEDE_LESIONI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01INC_SEDE_LESIONI");

                entity.HasIndex(e => new { e.IdIncaricosedelesione, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_INC_SEDE_LESIONI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyIncaricosedelesione)
                    .HasColumnName("KEY_INCARICOSEDELESIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgNaturaLesione)
                    .HasColumnName("FLG_NATURA_LESIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSedeLesione)
                    .HasColumnName("FLG_SEDE_LESIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdIncaricodannocorporale).HasColumnName("ID_INCARICODANNOCORPORALE");

                entity.Property(e => e.IdIncaricosedelesione).HasColumnName("ID_INCARICOSEDELESIONE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<Ip00Host>(entity =>
            {
                entity.HasKey(e => e.DefiMovOriginale);

                entity.ToTable("IP00_HOST", "XLAYERS");

                entity.Property(e => e.DefiMovOriginale)
                    .HasColumnName("DEFI_MOV_ORIGINALE")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.AnnoCompetenza)
                    .HasColumnName("ANNO_COMPETENZA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.AnnoContabile)
                    .HasColumnName("ANNO_CONTABILE")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.AnnoSottoscrizion)
                    .HasColumnName("ANNO_SOTTOSCRIZION")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.BoolClaims)
                    .HasColumnName("BOOL_CLAIMS")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.BoolImportato)
                    .HasColumnName("BOOL_IMPORTATO")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.BoolPostuma)
                    .HasColumnName("BOOL_POSTUMA")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.CateAccount)
                    .IsRequired()
                    .HasColumnName("CATE_ACCOUNT")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CateAreaLavoro)
                    .IsRequired()
                    .HasColumnName("CATE_AREA_LAVORO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('00')");

                entity.Property(e => e.CateCoassicur)
                    .IsRequired()
                    .HasColumnName("CATE_COASSICUR")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CateComponentMov)
                    .IsRequired()
                    .HasColumnName("CATE_COMPONENT_MOV")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('99')");

                entity.Property(e => e.CateFinanziamento)
                    .IsRequired()
                    .HasColumnName("CATE_FINANZIAMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('00')");

                entity.Property(e => e.CateInteresTrasp)
                    .IsRequired()
                    .HasColumnName("CATE_INTERES_TRASP")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('00')");

                entity.Property(e => e.CateMovimentoPol)
                    .IsRequired()
                    .HasColumnName("CATE_MOVIMENTO_POL")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CatePeriodPremio)
                    .IsRequired()
                    .HasColumnName("CATE_PERIOD_PREMIO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('00')");

                entity.Property(e => e.CateRataFinanzia)
                    .IsRequired()
                    .HasColumnName("CATE_RATA_FINANZIA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('00')");

                entity.Property(e => e.CateRateoPrRisc)
                    .HasColumnName("CATE_RATEO_PR_RISC")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CateRischioCauzioni)
                    .IsRequired()
                    .HasColumnName("CATE_RISCHIO_CAUZIONI")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('00')");

                entity.Property(e => e.CateSesso)
                    .IsRequired()
                    .HasColumnName("CATE_SESSO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('00')");

                entity.Property(e => e.CateSettore)
                    .IsRequired()
                    .HasColumnName("CATE_SETTORE")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('CE')");

                entity.Property(e => e.CateTipoPolizza)
                    .IsRequired()
                    .HasColumnName("CATE_TIPO_POLIZZA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('00')");

                entity.Property(e => e.DataAdesione)
                    .HasColumnName("DATA_ADESIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataBilancio)
                    .HasColumnName("DATA_BILANCIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataEffettoMov)
                    .HasColumnName("DATA_EFFETTO_MOV")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataEffettoPol)
                    .HasColumnName("DATA_EFFETTO_POL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataEmissione)
                    .HasColumnName("DATA_EMISSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataEstinzione)
                    .HasColumnName("DATA_ESTINZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataNascitaCli)
                    .HasColumnName("DATA_NASCITA_CLI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataScadenzaMov)
                    .HasColumnName("DATA_SCADENZA_MOV")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataScadenzaPol)
                    .HasColumnName("DATA_SCADENZA_POL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataScadenzaRata)
                    .HasColumnName("DATA_SCADENZA_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.De11CodContraent)
                    .HasColumnName("DE11_COD_CONTRAENT")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.De11CodGaranzia)
                    .IsRequired()
                    .HasColumnName("DE11_COD_GARANZIA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De11CodRischio)
                    .IsRequired()
                    .HasColumnName("DE11_COD_RISCHIO")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11CompCedente)
                    .IsRequired()
                    .HasColumnName("DE11_COMP_CEDENTE")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11DivisaEst)
                    .IsRequired()
                    .HasColumnName("DE11_DIVISA_EST")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11OperazContab)
                    .HasColumnName("DE11_OPERAZ_CONTAB")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11PaeseRischio)
                    .HasColumnName("DE11_PAESE_RISCHIO")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11RamoBilancio)
                    .IsRequired()
                    .HasColumnName("DE11_RAMO_BILANCIO")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11RamoTecnico)
                    .IsRequired()
                    .HasColumnName("DE11_RAMO_TECNICO")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11RipartoPol)
                    .HasColumnName("DE11_RIPARTO_POL")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De16CodAgenzia)
                    .HasColumnName("DE16_COD_AGENZIA")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.De20Cat)
                    .IsRequired()
                    .HasColumnName("DE20_CAT")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.De20CodCliente)
                    .HasColumnName("DE20_COD_CLIENTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20CodGestore)
                    .HasColumnName("DE20_COD_GESTORE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20CodProdotto)
                    .HasColumnName("DE20_COD_PRODOTTO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Gor)
                    .IsRequired()
                    .HasColumnName("DE20_GOR")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.De20Lob)
                    .IsRequired()
                    .HasColumnName("DE20_LOB")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.De20Param1)
                    .HasColumnName("DE20_PARAM1")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param10)
                    .HasColumnName("DE20_PARAM10")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param11)
                    .HasColumnName("DE20_PARAM11")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param12)
                    .HasColumnName("DE20_PARAM12")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param13)
                    .HasColumnName("DE20_PARAM13")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param14)
                    .HasColumnName("DE20_PARAM14")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param15)
                    .HasColumnName("DE20_PARAM15")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param16)
                    .HasColumnName("DE20_PARAM16")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param17)
                    .HasColumnName("DE20_PARAM17")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param18)
                    .HasColumnName("DE20_PARAM18")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param19)
                    .HasColumnName("DE20_PARAM19")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param2)
                    .HasColumnName("DE20_PARAM2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param20)
                    .HasColumnName("DE20_PARAM20")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param3)
                    .HasColumnName("DE20_PARAM3")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param4)
                    .HasColumnName("DE20_PARAM4")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param5)
                    .HasColumnName("DE20_PARAM5")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param6)
                    .HasColumnName("DE20_PARAM6")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param7)
                    .HasColumnName("DE20_PARAM7")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param8)
                    .HasColumnName("DE20_PARAM8")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Param9)
                    .HasColumnName("DE20_PARAM9")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DefiCertificato)
                    .IsRequired()
                    .HasColumnName("DEFI_CERTIFICATO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiCodiceFiscal)
                    .HasColumnName("DEFI_CODICE_FISCAL")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.DefiCognomeAssic)
                    .HasColumnName("DEFI_COGNOME_ASSIC")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.DefiContraente)
                    .IsRequired()
                    .HasColumnName("DEFI_CONTRAENTE")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiDelegataria)
                    .IsRequired()
                    .HasColumnName("DEFI_DELEGATARIA")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiIdenOriginale)
                    .HasColumnName("DEFI_IDEN_ORIGINALE")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.DefiNumMovimento)
                    .IsRequired()
                    .HasColumnName("DEFI_NUM_MOVIMENTO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiNumPolBase)
                    .HasColumnName("DEFI_NUM_POL_BASE")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiNumPolizza)
                    .IsRequired()
                    .HasColumnName("DEFI_NUM_POLIZZA")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiNumRaggr)
                    .HasColumnName("DEFI_NUM_RAGGR")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.FrazAssicurata)
                    .HasColumnName("FRAZ_ASSICURATA")
                    .HasColumnType("numeric(6, 0)");

                entity.Property(e => e.FrazCalcoloPremi)
                    .HasColumnName("FRAZ_CALCOLO_PREMI")
                    .HasColumnType("numeric(6, 2)");

                entity.Property(e => e.FrazFinanziario)
                    .HasColumnName("FRAZ_FINANZIARIO")
                    .HasColumnType("numeric(6, 2)");

                entity.Property(e => e.FrazPremio)
                    .HasColumnName("FRAZ_PREMIO")
                    .HasColumnType("numeric(6, 2)");

                entity.Property(e => e.MeseContabile)
                    .HasColumnName("MESE_CONTABILE")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NumrDurataClaims)
                    .HasColumnName("NUMR_DURATA_CLAIMS")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.NumrDurataPostum)
                    .HasColumnName("NUMR_DURATA_POSTUM")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.NumrEtaEffetPol)
                    .HasColumnName("NUMR_ETA_EFFET_POL")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.NumrEtaScadePol)
                    .HasColumnName("NUMR_ETA_SCADE_POL")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.NumrPeriodPremio)
                    .HasColumnName("NUMR_PERIOD_PREMIO")
                    .HasColumnType("numeric(4, 0)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NumrTesteAssic)
                    .HasColumnName("NUMR_TESTE_ASSIC")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.ProgRata)
                    .HasColumnName("PROG_RATA")
                    .HasColumnType("numeric(8, 0)");

                entity.Property(e => e.QutaRischioNsq)
                    .HasColumnName("QUTA_RISCHIO_NSQ")
                    .HasColumnType("numeric(8, 5)");

                entity.Property(e => e.RaprMovimento)
                    .HasColumnName("RAPR_MOVIMENTO")
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.TestDescrizione)
                    .HasColumnName("TEST_DESCRIZIONE")
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.ValrAssicurato)
                    .HasColumnName("VALR_ASSICURATO")
                    .HasColumnType("numeric(18, 4)");

                entity.Property(e => e.ValrCapitalFinan)
                    .HasColumnName("VALR_CAPITAL_FINAN")
                    .HasColumnType("numeric(18, 4)");

                entity.Property(e => e.ValrCommissioniDir)
                    .HasColumnName("VALR_COMMISSIONI_DIR")
                    .HasColumnType("numeric(18, 4)");

                entity.Property(e => e.ValrMpl)
                    .HasColumnName("VALR_MPL")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ValrMur)
                    .HasColumnName("VALR_MUR")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ValrPremioImpon)
                    .HasColumnName("VALR_PREMIO_IMPON")
                    .HasColumnType("numeric(18, 4)");

                entity.Property(e => e.ValrPremioNetto)
                    .HasColumnName("VALR_PREMIO_NETTO")
                    .HasColumnType("numeric(18, 4)");

                entity.Property(e => e.ValrTasseLocali)
                    .HasColumnName("VALR_TASSE_LOCALI")
                    .HasColumnType("numeric(18, 4)");
            });

            modelBuilder.Entity<IperFlussoDett>(entity =>
            {
                entity.HasKey(e => e.KeyFlussoIperDett);

                entity.ToTable("IPER_FLUSSO_DETT", "IAGENCY");

                entity.HasIndex(e => new { e.IdFlussoIper, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02IPER_FLUSSO_DETT");

                entity.HasIndex(e => new { e.Targa, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX03IPER_FLUSSO_DETT");

                entity.HasIndex(e => new { e.IdFlussoIperDett, e.IdFlussoIper, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01IPER_FLUSSO_DETT");

                entity.Property(e => e.KeyFlussoIperDett)
                    .HasColumnName("KEY_FLUSSO_IPER_DETT")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtScadPolizza)
                    .HasColumnName("DT_SCAD_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdFlussoIper).HasColumnName("ID_FLUSSO_IPER");

                entity.Property(e => e.IdFlussoIperDett).HasColumnName("ID_FLUSSO_IPER_DETT");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.RecordInput)
                    .HasColumnName("RECORD_INPUT")
                    .IsUnicode(false);

                entity.Property(e => e.RecordOutput)
                    .HasColumnName("RECORD_OUTPUT")
                    .IsUnicode(false);

                entity.Property(e => e.Targa)
                    .HasColumnName("TARGA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<IperFlussoErr>(entity =>
            {
                entity.HasKey(e => e.KeyFlussoIperErr);

                entity.ToTable("IPER_FLUSSO_ERR", "IAGENCY");

                entity.HasIndex(e => new { e.IdFlussoIperDett, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02IPER_FLUSSO_ERR");

                entity.HasIndex(e => new { e.IdFlussoIperErr, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01IPER_FLUSSO_ERR");

                entity.Property(e => e.KeyFlussoIperErr)
                    .HasColumnName("KEY_FLUSSO_IPER_ERR")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErr)
                    .HasColumnName("COD_ERR")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdFlussoIperDett).HasColumnName("ID_FLUSSO_IPER_DETT");

                entity.Property(e => e.IdFlussoIperErr).HasColumnName("ID_FLUSSO_IPER_ERR");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<IperFlussoInput>(entity =>
            {
                entity.HasKey(e => e.KeyFlussoIper);

                entity.ToTable("IPER_FLUSSO_INPUT", "IAGENCY");

                entity.HasIndex(e => new { e.IdFlussoIper, e.DtFlusso, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01IPER_FLUSSO_INPUT");

                entity.Property(e => e.KeyFlussoIper)
                    .HasColumnName("KEY_FLUSSO_IPER")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFlusso)
                    .HasColumnName("DT_FLUSSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRisposta)
                    .HasColumnName("DT_RISPOSTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdFlussoIper).HasColumnName("ID_FLUSSO_IPER");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<Is00Host>(entity =>
            {
                entity.HasKey(e => e.DefiMovOriginale);

                entity.ToTable("IS00_HOST", "XLAYERS");

                entity.Property(e => e.DefiMovOriginale)
                    .HasColumnName("DEFI_MOV_ORIGINALE")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.AnnoCompetenza)
                    .HasColumnName("ANNO_COMPETENZA")
                    .HasColumnType("decimal(4, 0)");

                entity.Property(e => e.AnnoContabile)
                    .HasColumnName("ANNO_CONTABILE")
                    .HasColumnType("decimal(4, 0)");

                entity.Property(e => e.BoolClaims)
                    .HasColumnName("BOOL_CLAIMS")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.BoolCumuloRisc)
                    .HasColumnName("BOOL_CUMULO_RISC")
                    .HasColumnType("decimal(1, 0)");

                entity.Property(e => e.BoolImportato)
                    .HasColumnName("BOOL_IMPORTATO")
                    .HasColumnType("decimal(1, 0)");

                entity.Property(e => e.BoolPostuma)
                    .HasColumnName("BOOL_POSTUMA")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.BoolRimborsMef)
                    .HasColumnName("BOOL_RIMBORS_MEF")
                    .HasColumnType("decimal(1, 0)");

                entity.Property(e => e.BoolSpeseQuota)
                    .HasColumnName("BOOL_SPESE_QUOTA")
                    .HasColumnType("decimal(1, 0)");

                entity.Property(e => e.BoolTardivo)
                    .HasColumnName("BOOL_TARDIVO")
                    .HasColumnType("decimal(1, 0)");

                entity.Property(e => e.CateAccount)
                    .IsRequired()
                    .HasColumnName("CATE_ACCOUNT")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('00')");

                entity.Property(e => e.CateAreaLavoro)
                    .IsRequired()
                    .HasColumnName("CATE_AREA_LAVORO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CateCoassicur)
                    .IsRequired()
                    .HasColumnName("CATE_COASSICUR")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CateDanni)
                    .IsRequired()
                    .HasColumnName("CATE_DANNI")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CateFranchigia)
                    .IsRequired()
                    .HasColumnName("CATE_FRANCHIGIA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CateInteresTrasp)
                    .IsRequired()
                    .HasColumnName("CATE_INTERES_TRASP")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CateMovimentoSin)
                    .IsRequired()
                    .HasColumnName("CATE_MOVIMENTO_SIN")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CateNazContraent)
                    .IsRequired()
                    .HasColumnName("CATE_NAZ_CONTRAENT")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CatePregresso)
                    .IsRequired()
                    .HasColumnName("CATE_PREGRESSO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CateSesso)
                    .IsRequired()
                    .HasColumnName("CATE_SESSO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('00')");

                entity.Property(e => e.CateSettore)
                    .IsRequired()
                    .HasColumnName("CATE_SETTORE")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CateTipoPolizza)
                    .IsRequired()
                    .HasColumnName("CATE_TIPO_POLIZZA")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DataAvvenimento)
                    .HasColumnName("DATA_AVVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataBilancio)
                    .HasColumnName("DATA_BILANCIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataDenuncia)
                    .HasColumnName("DATA_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataEffettoMov)
                    .HasColumnName("DATA_EFFETTO_MOV")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataEffettoPol)
                    .HasColumnName("DATA_EFFETTO_POL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataMovimento)
                    .HasColumnName("DATA_MOVIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataNascitaCli)
                    .HasColumnName("DATA_NASCITA_CLI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataPervenimento)
                    .HasColumnName("DATA_PERVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataRegistrazione)
                    .HasColumnName("DATA_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataRiapertura)
                    .HasColumnName("DATA_RIAPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataScadenzaPol)
                    .HasColumnName("DATA_SCADENZA_POL")
                    .HasColumnType("datetime");

                entity.Property(e => e.De11AgenziaPol)
                    .HasColumnName("DE11_AGENZIA_POL")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11Broker)
                    .HasColumnName("DE11_BROKER")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11CategoriaDan)
                    .HasColumnName("DE11_CATEGORIA_DAN")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11CausaNatura)
                    .IsRequired()
                    .HasColumnName("DE11_CAUSA_NATURA")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11CodGaranzia)
                    .IsRequired()
                    .HasColumnName("DE11_COD_GARANZIA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De11CodRischio)
                    .IsRequired()
                    .HasColumnName("DE11_COD_RISCHIO")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11CompCedente)
                    .IsRequired()
                    .HasColumnName("DE11_COMP_CEDENTE")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11Contraente)
                    .HasColumnName("DE11_CONTRAENTE")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.De11DivisaEst)
                    .IsRequired()
                    .HasColumnName("DE11_DIVISA_EST")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11EnteDenuncia)
                    .HasColumnName("DE11_ENTE_DENUNCIA")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11PaeseDeb)
                    .HasColumnName("DE11_PAESE_DEB")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11PaeseRischio)
                    .HasColumnName("DE11_PAESE_RISCHIO")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11RamoMinister)
                    .IsRequired()
                    .HasColumnName("DE11_RAMO_MINISTER")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11RamoTecnico)
                    .IsRequired()
                    .HasColumnName("DE11_RAMO_TECNICO")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11RipartoSin)
                    .IsRequired()
                    .HasColumnName("DE11_RIPARTO_SIN")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11SottoProdotto)
                    .HasColumnName("DE11_SOTTO_PRODOTTO")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De11SubBroker)
                    .HasColumnName("DE11_SUB_BROKER")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.De16CodAgenzia)
                    .HasColumnName("DE16_COD_AGENZIA")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.De20Cat)
                    .IsRequired()
                    .HasColumnName("DE20_CAT")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.De20CodCliente)
                    .HasColumnName("DE20_COD_CLIENTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20CodGestore)
                    .HasColumnName("DE20_COD_GESTORE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20CodProdotto)
                    .HasColumnName("DE20_COD_PRODOTTO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Gor)
                    .IsRequired()
                    .HasColumnName("DE20_GOR")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.De20Lob)
                    .IsRequired()
                    .HasColumnName("DE20_LOB")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.De20MacroGaranzia)
                    .HasColumnName("DE20_MACRO_GARANZIA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.De20Rimborso)
                    .IsRequired()
                    .HasColumnName("DE20_RIMBORSO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('NA')");

                entity.Property(e => e.De20Spese)
                    .IsRequired()
                    .HasColumnName("DE20_SPESE")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('NA')");

                entity.Property(e => e.De20StatoSinistro)
                    .IsRequired()
                    .HasColumnName("DE20_STATO_SINISTRO")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('ND')");

                entity.Property(e => e.DefiCognomeAssic)
                    .HasColumnName("DEFI_COGNOME_ASSIC")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.DefiContraente)
                    .IsRequired()
                    .HasColumnName("DEFI_CONTRAENTE")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiDanneggiato)
                    .IsRequired()
                    .HasColumnName("DEFI_DANNEGGIATO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiDelegataria)
                    .IsRequired()
                    .HasColumnName("DEFI_DELEGATARIA")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiNomeAssic)
                    .HasColumnName("DEFI_NOME_ASSIC")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.DefiNumCumulo)
                    .HasColumnName("DEFI_NUM_CUMULO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiNumMovimento)
                    .HasColumnName("DEFI_NUM_MOVIMENTO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiNumPolBase)
                    .HasColumnName("DEFI_NUM_POL_BASE")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiNumPolizza)
                    .IsRequired()
                    .HasColumnName("DEFI_NUM_POLIZZA")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiNumSinAgenz)
                    .IsRequired()
                    .HasColumnName("DEFI_NUM_SIN_AGENZ")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DefiNumSinistro)
                    .IsRequired()
                    .HasColumnName("DEFI_NUM_SINISTRO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.FrazInteresseEst)
                    .HasColumnName("FRAZ_INTERESSE_EST")
                    .HasColumnType("decimal(6, 2)")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.FrazInvalidita)
                    .HasColumnName("FRAZ_INVALIDITA")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.MeseContabile)
                    .HasColumnName("MESE_CONTABILE")
                    .HasColumnType("decimal(2, 0)");

                entity.Property(e => e.NumrDurataClaims)
                    .HasColumnName("NUMR_DURATA_CLAIMS")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.NumrDurataPostum)
                    .HasColumnName("NUMR_DURATA_POSTUM")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.NumrRateRimbor)
                    .HasColumnName("NUMR_RATE_RIMBOR")
                    .HasColumnType("decimal(6, 0)");

                entity.Property(e => e.ProgMovRiserve)
                    .HasColumnName("PROG_MOV_RISERVE")
                    .HasColumnType("decimal(8, 0)");

                entity.Property(e => e.QutaRischioNsq)
                    .HasColumnName("QUTA_RISCHIO_NSQ")
                    .HasColumnType("decimal(8, 5)");

                entity.Property(e => e.RaprLuogoSinistro)
                    .HasColumnName("RAPR_LUOGO_SINISTRO")
                    .HasMaxLength(1000)
                    .IsUnicode(false);

                entity.Property(e => e.TestDescrizione)
                    .HasColumnName("TEST_DESCRIZIONE")
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.TestLesioni)
                    .HasColumnName("TEST_LESIONI")
                    .HasMaxLength(2000)
                    .IsUnicode(false);

                entity.Property(e => e.TipbProvincia)
                    .IsRequired()
                    .HasColumnName("TIPB_PROVINCIA")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('ND')");

                entity.Property(e => e.ValrFranchigia)
                    .HasColumnName("VALR_FRANCHIGIA")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ValrMassimale)
                    .HasColumnName("VALR_MASSIMALE")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ValrMovimOrig)
                    .HasColumnName("VALR_MOVIM_ORIG")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ValrMovimento)
                    .HasColumnName("VALR_MOVIMENTO")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ValrMpl)
                    .HasColumnName("VALR_MPL")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.ValrMur)
                    .HasColumnName("VALR_MUR")
                    .HasColumnType("decimal(18, 4)");
            });

            modelBuilder.Entity<LivelliScadenzeStati>(entity =>
            {
                entity.HasKey(e => e.IdLivelloScadenzaStato)
                    .HasName("PK_LIVELLI_STATI_SCADENZE");

                entity.ToTable("LIVELLI_SCADENZE_STATI", "ISUITE");

                entity.HasIndex(e => e.IdScadenzaStato)
                    .HasName("XX01_LIVELLI_STATI_SCADENZE");

                entity.HasIndex(e => new { e.DtInizio, e.DtFine })
                    .HasName("XX02_LIVELLI_STATI_SCADENZE");

                entity.HasIndex(e => new { e.IdOggettoTarget, e.FlgTipoOggettoTarget })
                    .HasName("XX03_LIVELLI_STATI_SCADENZE");

                entity.Property(e => e.IdLivelloScadenzaStato)
                    .HasColumnName("ID_LIVELLO_SCADENZA_STATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAnnullamento)
                    .HasColumnName("DT_ANNULLAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFine)
                    .HasColumnName("DT_FINE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizio)
                    .HasColumnName("DT_INIZIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCausaleAnnullamento)
                    .HasColumnName("FLG_CAUSALE_ANNULLAMENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggettoTarget)
                    .HasColumnName("FLG_TIPO_OGGETTO_TARGET")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggettoTarget).HasColumnName("ID_OGGETTO_TARGET");

                entity.Property(e => e.IdScadenzaStato).HasColumnName("ID_SCADENZA_STATO");

                entity.Property(e => e.IdScadenzaStatoOggetto).HasColumnName("ID_SCADENZA_STATO_OGGETTO");

                entity.Property(e => e.IdTarget).HasColumnName("ID_TARGET");
            });

            modelBuilder.Entity<MfCausali>(entity =>
            {
                entity.HasKey(e => e.IdMfCausale)
                    .HasName("SYS_C0060302");

                entity.ToTable("MF_CAUSALI", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02MF_CAUSALI");

                entity.HasIndex(e => e.IdDescCausale)
                    .HasName("XX03MF_CAUSALI");

                entity.HasIndex(e => new { e.IdCompagnia, e.CodCausale })
                    .HasName("K01_MF_CAUSALI")
                    .IsUnique();

                entity.Property(e => e.IdMfCausale)
                    .HasColumnName("ID_MF_CAUSALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodCausale)
                    .IsRequired()
                    .HasColumnName("COD_CAUSALE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescCausale)
                    .IsRequired()
                    .HasColumnName("DESC_CAUSALE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRichiediCcSino)
                    .IsRequired()
                    .HasColumnName("FLG_RICHIEDI_CC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSegno)
                    .IsRequired()
                    .HasColumnName("FLG_SEGNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescCausale)
                    .HasColumnName("ID_DESC_CAUSALE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<MfDati>(entity =>
            {
                entity.HasKey(e => e.KeyMfDato)
                    .HasName("SYS_C0060321");

                entity.ToTable("MF_DATI", "IAGENCY");

                entity.HasIndex(e => e.IdAgenzia)
                    .HasName("XX04MF_DATI");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03MF_DATI");

                entity.HasIndex(e => e.IdContocorrente)
                    .HasName("XX06MF_DATI");

                entity.HasIndex(e => e.IdMfCausale)
                    .HasName("XX01MF_DATI");

                entity.HasIndex(e => e.IdMfDato)
                    .HasName("XX02MF_DATI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX05MF_DATI");

                entity.Property(e => e.KeyMfDato)
                    .HasColumnName("KEY_MF_DATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Anno)
                    .HasColumnName("ANNO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtCompetenza)
                    .HasColumnName("DT_COMPETENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRendiconto)
                    .HasColumnName("DT_RENDICONTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysRegistrazione)
                    .HasColumnName("DT_SYS_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtValuta)
                    .HasColumnName("DT_VALUTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoMv)
                    .HasColumnName("FLG_STATO_MV")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAgenzia)
                    .HasColumnName("ID_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContocorrente)
                    .HasColumnName("ID_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMfCausale)
                    .HasColumnName("ID_MF_CAUSALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMfDato)
                    .HasColumnName("ID_MF_DATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpEntrate)
                    .HasColumnName("IMP_ENTRATE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpUscite)
                    .HasColumnName("IMP_USCITE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.Progressivo)
                    .HasColumnName("PROGRESSIVO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.RifTransazione)
                    .HasColumnName("RIF_TRANSAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Versione)
                    .HasColumnName("VERSIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdMfCausaleNavigation)
                    .WithMany(p => p.MfDati)
                    .HasForeignKey(d => d.IdMfCausale)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__MF_DATI__ID_MF_C__17835B04");
            });

            modelBuilder.Entity<MfEsiti>(entity =>
            {
                entity.HasKey(e => e.KeyMfEsito)
                    .HasName("SYS_C0060334");

                entity.ToTable("MF_ESITI", "IAGENCY");

                entity.HasIndex(e => e.IdMfDato)
                    .HasName("XX01MF_ESITI");

                entity.HasIndex(e => e.IdMfEsito)
                    .HasName("XX03MF_ESITI");

                entity.HasIndex(e => e.IdMfPvAbbinamento)
                    .HasName("XX02MF_ESITI");

                entity.Property(e => e.KeyMfEsito)
                    .HasColumnName("KEY_MF_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CompetenzaEsito)
                    .HasColumnName("COMPETENZA_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEsito)
                    .HasColumnName("DT_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysEsito)
                    .HasColumnName("DT_SYS_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoEsitoMf)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ESITO_MF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdMfDato)
                    .HasColumnName("ID_MF_DATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMfEsito)
                    .HasColumnName("ID_MF_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMfPvAbbinamento)
                    .HasColumnName("ID_MF_PV_ABBINAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<MfPvAbbinamenti>(entity =>
            {
                entity.HasKey(e => e.KeyMfPvAbbinamento)
                    .HasName("SYS_C0060345");

                entity.ToTable("MF_PV_ABBINAMENTI", "IAGENCY");

                entity.HasIndex(e => e.IdMfPvAbbinamento)
                    .HasName("XX02MF_PV_ABBINAMENTI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX01MF_PV_ABBINAMENTI");

                entity.Property(e => e.KeyMfPvAbbinamento)
                    .HasColumnName("KEY_MF_PV_ABBINAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtOperazione)
                    .HasColumnName("DT_OPERAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAutomaticoSino)
                    .IsRequired()
                    .HasColumnName("FLG_AUTOMATICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOperazioneMf)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OPERAZIONE_MF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdMfPvAbbinamento)
                    .HasColumnName("ID_MF_PV_ABBINAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<MsaEstrazAllegatiSin>(entity =>
            {
                entity.HasKey(e => e.IdMsaEstrazAllegatiSin);

                entity.ToTable("MSA_ESTRAZ_ALLEGATI_SIN", "IFLOW");

                entity.HasIndex(e => e.DtElaborazione)
                    .HasName("XX03_MSA_ESTRAZ_ALLEGATI_SIN");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04_MSA_ESTRAZ_ALLEGATI_SIN");

                entity.HasIndex(e => new { e.IdAllegato, e.DtScadenza })
                    .HasName("XX05_MSA_ESTRAZ_ALLEGATI_SIN");

                entity.HasIndex(e => new { e.IdEntitacoinvolta, e.DtScadenza })
                    .HasName("XX02_MSA_ESTRAZ_ALLEGATI_SIN");

                entity.HasIndex(e => new { e.IdSinistro, e.DtScadenza })
                    .HasName("XX01_MSA_ESTRAZ_ALLEGATI_SIN");

                entity.Property(e => e.IdMsaEstrazAllegatiSin)
                    .HasColumnName("ID_MSA_ESTRAZ_ALLEGATI_SIN")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagnia)
                    .HasColumnName("COD_COMPAGNIA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodFiscPIva)
                    .HasColumnName("COD_FISC_P_IVA")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodLiq)
                    .HasColumnName("COD_LIQ")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CslPartita)
                    .HasColumnName("CSL_PARTITA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CslSinistro)
                    .HasColumnName("CSL_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DataAvvenimento)
                    .HasColumnName("DATA_AVVENIMENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DataCaricamento)
                    .HasColumnName("DATA_CARICAMENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DataStato)
                    .HasColumnName("DATA_STATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Datatimbroricezione)
                    .HasColumnName("DATATIMBRORICEZIONE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .IsRequired()
                    .HasColumnName("DT_SCADENZA")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.Iddocumentale)
                    .HasColumnName("IDDOCUMENTALE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Idmacrotipologia)
                    .HasColumnName("IDMACROTIPOLOGIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Idorigine)
                    .HasColumnName("IDORIGINE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Idpartitadanno)
                    .HasColumnName("IDPARTITADANNO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Idwise)
                    .HasColumnName("IDWISE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Keydoc)
                    .HasColumnName("KEYDOC")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Keyjob)
                    .HasColumnName("KEYJOB")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.LuogoSinistro)
                    .HasColumnName("LUOGO_SINISTRO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NominativoLiq)
                    .HasColumnName("NOMINATIVO_LIQ")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NominativoPartita)
                    .HasColumnName("NOMINATIVO_PARTITA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Notifica)
                    .HasColumnName("NOTIFICA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NumFirme)
                    .HasColumnName("NUM_FIRME")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroPolizza)
                    .HasColumnName("NUMERO_POLIZZA")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSinistro)
                    .HasColumnName("NUMERO_SINISTRO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Operazione)
                    .HasColumnName("OPERAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.OriginaleCopia)
                    .HasColumnName("ORIGINALE_COPIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PathImmagine)
                    .HasColumnName("PATH_IMMAGINE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.PrgElaborazioneGiorno).HasColumnName("PRG_ELABORAZIONE_GIORNO");

                entity.Property(e => e.PvProv)
                    .HasColumnName("PV_PROV")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.RamoBilancio)
                    .HasColumnName("RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.RifMandante)
                    .HasColumnName("RIF_MANDANTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RifUci)
                    .HasColumnName("RIF_UCI")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.RuoloPartita)
                    .HasColumnName("RUOLO_PARTITA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Scanondemand)
                    .HasColumnName("SCANONDEMAND")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.StatoSinistro)
                    .HasColumnName("STATO_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Targa)
                    .HasColumnName("TARGA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.UfficioDestinatario)
                    .HasColumnName("UFFICIO_DESTINATARIO")
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MsaEstrazioneNoteDiario>(entity =>
            {
                entity.HasKey(e => e.IdMsaEstrazioneNotaDiario);

                entity.ToTable("MSA_ESTRAZIONE_NOTE_DIARIO", "IFLOW");

                entity.HasIndex(e => e.DtElaborazione)
                    .HasName("XX03_MSA_ESTRAZIONE_NOTE_DIARI");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04_MSA_ESTRAZIONE_NOTE_DIARI");

                entity.HasIndex(e => new { e.IdEntitacoinvolta, e.DtScadenza })
                    .HasName("XX02_MSA_ESTRAZIONE_NOTE_DIARI");

                entity.HasIndex(e => new { e.IdNotaDiario, e.DtScadenza })
                    .HasName("XX05_MSA_ESTRAZIONE_NOTE_DIARI");

                entity.HasIndex(e => new { e.IdSinistro, e.DtScadenza })
                    .HasName("XX01_MSA_ESTRAZIONE_NOTE_DIARI");

                entity.Property(e => e.IdMsaEstrazioneNotaDiario)
                    .HasColumnName("ID_MSA_ESTRAZIONE_NOTA_DIARIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .IsRequired()
                    .HasColumnName("DT_SCADENZA")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdNotaDiario).HasColumnName("ID_NOTA_DIARIO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.Nota)
                    .HasColumnName("NOTA")
                    .IsUnicode(false);

                entity.Property(e => e.PrgElaborazioneGiorno).HasColumnName("PRG_ELABORAZIONE_GIORNO");

                entity.Property(e => e.Utente)
                    .HasColumnName("UTENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MsaGaranzieDett>(entity =>
            {
                entity.HasKey(e => e.IdMsaGaranziaDett);

                entity.ToTable("MSA_GARANZIE_DETT", "IFLOW");

                entity.HasIndex(e => e.IdMsaGaranziaRiep)
                    .HasName("XX01_MSA_GARANZIE_DETT");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX03_MSA_GARANZIE_DETT");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.CodGaranzia, e.CodPrestazione, e.CodSottoprestazione })
                    .HasName("XX02_MSA_GARANZIE_DETT");

                entity.Property(e => e.IdMsaGaranziaDett)
                    .HasColumnName("ID_MSA_GARANZIA_DETT")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGaranzia)
                    .HasColumnName("COD_GARANZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodPrestazione)
                    .HasColumnName("COD_PRESTAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSottoprestazione)
                    .HasColumnName("COD_SOTTOPRESTAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescGaranzia)
                    .HasColumnName("DESC_GARANZIA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DescPrestazione)
                    .HasColumnName("DESC_PRESTAZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DescSottoprestazione)
                    .HasColumnName("DESC_SOTTOPRESTAZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgColpitaSino)
                    .HasColumnName("FLG_COLPITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoMovimento)
                    .HasColumnName("FLG_TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdMsaGaranziaRiep).HasColumnName("ID_MSA_GARANZIA_RIEP");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpRiserva)
                    .HasColumnName("IMP_RISERVA")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<MsaGaranzieRiep>(entity =>
            {
                entity.HasKey(e => e.IdMsaGaranziaRiep);

                entity.ToTable("MSA_GARANZIE_RIEP", "IFLOW");

                entity.HasIndex(e => new { e.DtElaborazione, e.PrgElaborazione })
                    .HasName("XX01_MSA_GARANZIE_RIEP");

                entity.Property(e => e.IdMsaGaranziaRiep)
                    .HasColumnName("ID_MSA_GARANZIA_RIEP")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtElaborazione)
                    .HasColumnName("DT_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgInviatoSino)
                    .HasColumnName("FLG_INVIATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrgElaborazione).HasColumnName("PRG_ELABORAZIONE");

                entity.Property(e => e.TimestampElaborazione)
                    .HasColumnName("TIMESTAMP_ELABORAZIONE")
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<NotifichePortale>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOTIFICHE_PORTALE", "ICLAIMS");

                entity.Property(e => e.DataNotifica)
                    .HasColumnName("DATA_NOTIFICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataPresaVisione)
                    .HasColumnName("DATA_PRESA_VISIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPresaVisioneSino)
                    .HasColumnName("FLG_PRESA_VISIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaNotifica)
                    .HasColumnName("FLG_TIPOLOGIA_NOTIFICA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdIncarico).HasColumnName("ID_INCARICO");

                entity.Property(e => e.IdNotificheportale).HasColumnName("ID_NOTIFICHEPORTALE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteVisione).HasColumnName("ID_UTENTE_VISIONE");

                entity.Property(e => e.KeyIncarico).HasColumnName("KEY_INCARICO");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<OperazioniStati>(entity =>
            {
                entity.HasKey(e => e.IdOperazioniStati)
                    .HasName("PK__OPERAZIO__328A977E3A6413FE");

                entity.ToTable("OPERAZIONI_STATI", "ISUITE");

                entity.HasIndex(e => e.IdOperazioniStati)
                    .HasName("XX01OPERAZIONI_STATI");

                entity.HasIndex(e => e.IdStatoOperazione)
                    .HasName("XX02OPERAZIONI_STATI");

                entity.HasIndex(e => new { e.IdOggetto, e.FlgTipoOggetto })
                    .HasName("XX03OPERAZIONI_STATI");

                entity.Property(e => e.IdOperazioniStati)
                    .HasColumnName("ID_OPERAZIONI_STATI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtEsecuzione)
                    .HasColumnName("DT_ESECUZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdStatoOperazione).HasColumnName("ID_STATO_OPERAZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<P3AgeProduzione>(entity =>
            {
                entity.HasKey(e => e.IdP3AgeProduzione)
                    .HasName("SYS_C0014205");

                entity.ToTable("P3_AGE_PRODUZIONE", "ISUITE");

                entity.HasIndex(e => e.IdP3DatiGenerali)
                    .HasName("XX02P3_AGE_PRODUZIONE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX01P3_AGE_PRODUZIONE");

                entity.Property(e => e.IdP3AgeProduzione)
                    .HasColumnName("ID_P3_AGE_PRODUZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAl)
                    .HasColumnName("DT_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDal)
                    .HasColumnName("DT_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdP3DatiGenerali).HasColumnName("ID_P3_DATI_GENERALI");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");
            });

            modelBuilder.Entity<P3CodiciProd>(entity =>
            {
                entity.HasKey(e => e.IdCodiceProduzione)
                    .HasName("SYS_C0014212");

                entity.ToTable("P3_CODICI_PROD", "ISUITE");

                entity.HasIndex(e => e.IdCausale)
                    .HasName("XX04P3_CODICI_PROD");

                entity.HasIndex(e => e.IdP3DatiGenerali)
                    .HasName("XX03P3_CODICI_PROD");

                entity.HasIndex(e => e.IdTipoCodProd)
                    .HasName("XX01P3_CODICI_PROD");

                entity.Property(e => e.IdCodiceProduzione)
                    .HasColumnName("ID_CODICE_PRODUZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodProduzione)
                    .IsRequired()
                    .HasColumnName("COD_PRODUZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtAl)
                    .HasColumnName("DT_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDal)
                    .HasColumnName("DT_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCausale).HasColumnName("ID_CAUSALE");

                entity.Property(e => e.IdP3DatiGenerali).HasColumnName("ID_P3_DATI_GENERALI");

                entity.Property(e => e.IdTipoCodProd).HasColumnName("ID_TIPO_COD_PROD");

                entity.HasOne(d => d.IdCausaleNavigation)
                    .WithMany(p => p.P3CodiciProd)
                    .HasForeignKey(d => d.IdCausale)
                    .HasConstraintName("FK__P3_CODICI__ID_CA__7310F064");
            });

            modelBuilder.Entity<P3DatiGenerali>(entity =>
            {
                entity.HasKey(e => e.KeyP3DatiGenerali);

                entity.ToTable("P3_DATI_GENERALI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02P3_DATI_GENERALI");

                entity.HasIndex(e => e.IdCausale)
                    .HasName("XX04P3_DATI_GENERALI");

                entity.HasIndex(e => e.IdDipartimento)
                    .HasName("XX03P3_DATI_GENERALI");

                entity.HasIndex(e => e.IdP3DatiGenerali)
                    .HasName("XX01P3_DATI_GENERALI");

                entity.Property(e => e.KeyP3DatiGenerali)
                    .HasColumnName("KEY_P3_DATI_GENERALI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFinRapporto)
                    .HasColumnName("DT_FIN_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniRapporto)
                    .HasColumnName("DT_INI_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdCausale).HasColumnName("ID_CAUSALE");

                entity.Property(e => e.IdDipartimento).HasColumnName("ID_DIPARTIMENTO");

                entity.Property(e => e.IdP3DatiGenerali).HasColumnName("ID_P3_DATI_GENERALI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PolAgenzie>(entity =>
            {
                entity.HasKey(e => e.KeyPolAgenzia)
                    .HasName("SYS_C0060353");

                entity.ToTable("POL_AGENZIE", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolAgenzia, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01POL_AGENZIE");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02POL_AGENZIE");

                entity.HasIndex(e => new { e.IdPolizza, e.IdRetevendita, e.DtStoScadenzaFis })
                    .HasName("XX03POL_AGENZIE");

                entity.Property(e => e.KeyPolAgenzia)
                    .HasColumnName("KEY_POL_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolAgenzia)
                    .HasColumnName("ID_POL_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Livello)
                    .HasColumnName("LIVELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolAgenzie)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_AGENZ__ID_PO__18777F3D");
            });

            modelBuilder.Entity<PolAllegati>(entity =>
            {
                entity.HasKey(e => e.KeyPolAllegato);

                entity.ToTable("POL_ALLEGATI", "IAGENCY");

                entity.HasIndex(e => e.IdAllegato)
                    .HasName("XX03POL_ALLEGATI");

                entity.HasIndex(e => e.IdPolAllegato)
                    .HasName("XX01POL_ALLEGATI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02POL_ALLEGATI");

                entity.Property(e => e.KeyPolAllegato)
                    .HasColumnName("KEY_POL_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAllegato)
                    .HasColumnName("ID_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolAllegato)
                    .HasColumnName("ID_POL_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolAllegati)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_ALLEG__ID_PO__196BA376");
            });

            modelBuilder.Entity<PolAppendici>(entity =>
            {
                entity.HasKey(e => e.KeyPolAppendice)
                    .HasName("SYS_C0060366");

                entity.ToTable("POL_APPENDICI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolAppendice, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01POL_APPENDICI");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02POL_APPENDICI");

                entity.Property(e => e.KeyPolAppendice)
                    .HasColumnName("KEY_POL_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAnnullamento)
                    .HasColumnName("DT_ANNULLAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaCopertura)
                    .HasColumnName("DT_SCADENZA_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoRistampa)
                    .HasColumnName("FLG_MOTIVO_RISTAMPA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoAppendice)
                    .HasColumnName("FLG_STATO_APPENDICE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.HhmmEffetto)
                    .HasColumnName("HHMM_EFFETTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolAppendice)
                    .HasColumnName("ID_POL_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabMotivoStorno)
                    .HasColumnName("ID_TAB_MOTIVO_STORNO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabParametriOperazione)
                    .HasColumnName("ID_TAB_PARAMETRI_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NRifEsterno)
                    .HasColumnName("N_RIF_ESTERNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.PrgAppendice)
                    .HasColumnName("PRG_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolAppendici)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_APPEN__ID_PO__1A5FC7AF");
            });

            modelBuilder.Entity<PolApplicazioniEmi>(entity =>
            {
                entity.HasKey(e => new { e.IdPolizza, e.IdPolBene, e.IdTitTitolo, e.DtEffetto });

                entity.ToTable("POL_APPLICAZIONI_EMI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolizza, e.IdPolBene, e.DtEffetto })
                    .HasName("XX01POL_APPLICAZIONI_EMI");

                entity.HasIndex(e => new { e.IdPolizza, e.IdPolBene, e.IdTitTitolo, e.DtEffetto })
                    .HasName("XX02POL_APPLICAZIONI_EMI");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdPolBene).HasColumnName("ID_POL_BENE");

                entity.Property(e => e.IdTitTitolo).HasColumnName("ID_TIT_TITOLO");

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysEvento)
                    .HasColumnName("DT_SYS_EVENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAnnullatoSino)
                    .HasColumnName("FLG_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PolAssicurati>(entity =>
            {
                entity.HasKey(e => e.KeyPolAssicurato)
                    .HasName("SYS_C0060375");

                entity.ToTable("POL_ASSICURATI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolAssicurato, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01POL_ASSICURATI");

                entity.HasIndex(e => new { e.IdPolBene, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02POL_ASSICURATI");

                entity.HasIndex(e => new { e.IdPolRischioImpiego, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX04POL_ASSICURATI");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX03POL_ASSICURATI");

                entity.Property(e => e.KeyPolAssicurato)
                    .HasColumnName("KEY_POL_ASSICURATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolAssicurato)
                    .HasColumnName("ID_POL_ASSICURATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolBene)
                    .HasColumnName("ID_POL_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolRischioImpiego)
                    .HasColumnName("ID_POL_RISCHIO_IMPIEGO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolAssicurati)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_ASSIC__ID_PO__1B53EBE8");
            });

            modelBuilder.Entity<PolAttestati>(entity =>
            {
                entity.HasKey(e => e.KeyPolAttestato)
                    .HasName("SYS_C0015128");

                entity.ToTable("POL_ATTESTATI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolTestata, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX03POL_ATTESTATI");

                entity.HasIndex(e => new { e.IdPolAttestato, e.IdPolTestata, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX01POL_ATTESTATI");

                entity.Property(e => e.KeyPolAttestato)
                    .HasColumnName("KEY_POL_ATTESTATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.AaEsercizio).HasColumnName("AA_ESERCIZIO");

                entity.Property(e => e.DiCuiCosePar).HasColumnName("DI_CUI_COSE_PAR");

                entity.Property(e => e.DiCuiCosePrinc).HasColumnName("DI_CUI_COSE_PRINC");

                entity.Property(e => e.DiCuiMistiPar).HasColumnName("DI_CUI_MISTI_PAR");

                entity.Property(e => e.DiCuiMistiPrinc).HasColumnName("DI_CUI_MISTI_PRINC");

                entity.Property(e => e.DiCuiPersonePar).HasColumnName("DI_CUI_PERSONE_PAR");

                entity.Property(e => e.DiCuiPersonePrinc).HasColumnName("DI_CUI_PERSONE_PRINC");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoAttestato)
                    .HasColumnName("FLG_STATO_ATTESTATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdPolAttestato).HasColumnName("ID_POL_ATTESTATO");

                entity.Property(e => e.IdPolTestata).HasColumnName("ID_POL_TESTATA");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NPagati).HasColumnName("N_PAGATI");

                entity.Property(e => e.NPagatiRespConcorsuale).HasColumnName("N_PAGATI_RESP_CONCORSUALE");

                entity.Property(e => e.NPagatiRespPrincipale).HasColumnName("N_PAGATI_RESP_PRINCIPALE");

                entity.Property(e => e.NRiservatiCose).HasColumnName("N_RISERVATI_COSE");

                entity.Property(e => e.NRiservatiPersone).HasColumnName("N_RISERVATI_PERSONE");
            });

            modelBuilder.Entity<PolAutorizzazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPolAutorizzazione)
                    .HasName("SYS_C0060388");

                entity.ToTable("POL_AUTORIZZAZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdPolAutorizzazione)
                    .HasName("XX01POL_AUTORIZZAZIONI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX04POL_AUTORIZZAZIONI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03POL_AUTORIZZAZIONI");

                entity.HasIndex(e => e.IdUtenteAutorizzatore)
                    .HasName("XX02POL_AUTORIZZAZIONI");

                entity.Property(e => e.KeyPolAutorizzazione)
                    .HasColumnName("KEY_POL_AUTORIZZAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEsito)
                    .HasColumnName("DT_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvioEmail)
                    .HasColumnName("DT_INVIO_EMAIL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoAutorizzazione)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_AUTORIZZAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolAutorizzazione)
                    .HasColumnName("ID_POL_AUTORIZZAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteAutorizzatore)
                    .HasColumnName("ID_UTENTE_AUTORIZZATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.NoteRichiesta)
                    .HasColumnName("NOTE_RICHIESTA")
                    .IsUnicode(false);

                entity.Property(e => e.PrgAppendice)
                    .HasColumnName("PRG_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolAutorizzazioni)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_AUTOR__ID_PO__1C481021");
            });

            modelBuilder.Entity<PolBeneficiari>(entity =>
            {
                entity.HasKey(e => e.KeyPolBeneficiario)
                    .HasName("SYS_C0060391");

                entity.ToTable("POL_BENEFICIARI", "IAGENCY");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX04POL_BENEFICIARI");

                entity.HasIndex(e => e.IdPolBene)
                    .HasName("XX02POL_BENEFICIARI");

                entity.HasIndex(e => e.IdPolBeneficiario)
                    .HasName("XX01POL_BENEFICIARI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03POL_BENEFICIARI");

                entity.Property(e => e.KeyPolBeneficiario)
                    .HasColumnName("KEY_POL_BENEFICIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAnagBenPtf)
                    .HasColumnName("FLG_TIPO_ANAG_BEN_PTF")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoBeneficiario)
                    .HasColumnName("FLG_TIPO_BENEFICIARIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolBene)
                    .HasColumnName("ID_POL_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolBeneficiario)
                    .HasColumnName("ID_POL_BENEFICIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolBeneficiari)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_BENEF__ID_PO__1D3C345A");
            });

            modelBuilder.Entity<PolBeni>(entity =>
            {
                entity.HasKey(e => e.KeyPolBene)
                    .HasName("SYS_C0060395");

                entity.ToTable("POL_BENI", "IAGENCY");

                entity.HasIndex(e => new { e.NumeroCertificato, e.DtStoScadenzaFis })
                    .HasName("XX06POL_BENI");

                entity.HasIndex(e => new { e.IdPolBene, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01POL_BENI");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02POL_BENI");

                entity.HasIndex(e => new { e.IdPolizza, e.IdPolAssicurato, e.DtStoScadenzaFis })
                    .HasName("XX05POL_BENI");

                entity.HasIndex(e => new { e.IdPolizza, e.IdPolUbicazione, e.DtStoScadenzaFis })
                    .HasName("XX04POL_BENI");

                entity.HasIndex(e => new { e.IdPolizza, e.IdPolVeicolo, e.DtStoScadenzaFis })
                    .HasName("XX03POL_BENI");

                entity.Property(e => e.KeyPolBene)
                    .HasColumnName("KEY_POL_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEsclusione)
                    .HasColumnName("DT_ESCLUSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInclusione)
                    .HasColumnName("DT_INCLUSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInclusioneSino)
                    .HasColumnName("FLG_INCLUSIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoBene)
                    .HasColumnName("FLG_TIPO_BENE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolAssicurato)
                    .HasColumnName("ID_POL_ASSICURATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolBene)
                    .HasColumnName("ID_POL_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolUbicazione)
                    .HasColumnName("ID_POL_UBICAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolVeicolo)
                    .HasColumnName("ID_POL_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrCombinazione)
                    .HasColumnName("ID_PR_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.NumeroCertificato)
                    .HasColumnName("numero_certificato")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PrgApplicazione)
                    .HasColumnName("PRG_APPLICAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolBeni)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_BENI__ID_POL__1E305893");
            });

            modelBuilder.Entity<PolCoass>(entity =>
            {
                entity.HasKey(e => e.KeyPolCoass)
                    .HasName("SYS_C0060406");

                entity.ToTable("POL_COASS", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02POL_COASS");

                entity.HasIndex(e => e.IdPolCoass)
                    .HasName("XX01POL_COASS");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03POL_COASS");

                entity.Property(e => e.KeyPolCoass)
                    .HasColumnName("KEY_POL_COASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCompCoass)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_COMP_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAgeCoass)
                    .HasColumnName("ID_AGE_COASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolCoass)
                    .HasColumnName("ID_POL_COASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NPolizzaCoass)
                    .HasColumnName("N_POLIZZA_COASS")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PctQuota)
                    .HasColumnName("PCT_QUOTA")
                    .HasColumnType("numeric(10, 5)");

                entity.HasOne(d => d.IdAgeCoassNavigation)
                    .WithMany(p => p.PolCoass)
                    .HasForeignKey(d => d.IdAgeCoass)
                    .HasConstraintName("FK__POL_COASS__ID_AG__2018A105");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolCoass)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_COASS__ID_PO__1F247CCC");
            });

            modelBuilder.Entity<PolColl>(entity =>
            {
                entity.HasKey(e => e.KeyPolCollegata)
                    .HasName("POL_COLL_PK");

                entity.ToTable("POL_COLL", "IAGENCY");

                entity.HasIndex(e => e.IdCollegata)
                    .HasName("XX03POL_COLL");

                entity.HasIndex(e => e.IdPolCollegata)
                    .HasName("XX01POL_COLL");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02POL_COLL");

                entity.Property(e => e.KeyPolCollegata)
                    .HasColumnName("KEY_POL_COLLEGATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCollegata)
                    .HasColumnName("ID_COLLEGATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolCollegata)
                    .HasColumnName("ID_POL_COLLEGATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PolConducenti>(entity =>
            {
                entity.HasKey(e => e.KeyPolConducente)
                    .HasName("SYS_C0060409");

                entity.ToTable("POL_CONDUCENTI", "IAGENCY");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02POL_CONDUCENTI");

                entity.HasIndex(e => e.IdPolConducente)
                    .HasName("XX01POL_CONDUCENTI");

                entity.HasIndex(e => e.IdPolVeicolo)
                    .HasName("XX04POL_CONDUCENTI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03POL_CONDUCENTI");

                entity.Property(e => e.KeyPolConducente)
                    .HasColumnName("KEY_POL_CONDUCENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolConducente)
                    .HasColumnName("ID_POL_CONDUCENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolVeicolo)
                    .HasColumnName("ID_POL_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolConducenti)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_CONDU__ID_PO__210CC53E");
            });

            modelBuilder.Entity<PolContraenti>(entity =>
            {
                entity.HasKey(e => e.KeyPolContraente)
                    .HasName("SYS_C0060419");

                entity.ToTable("POL_CONTRAENTI", "IAGENCY");

                entity.HasIndex(e => new { e.IdAnagrafica, e.DtStoScadenzaFis })
                    .HasName("XX04POL_CONTRAENTI");

                entity.HasIndex(e => new { e.IdIndirizzo, e.DtStoScadenzaFis })
                    .HasName("XX03POL_CONTRAENTI");

                entity.HasIndex(e => new { e.IdPolContraente, e.DtStoScadenzaFis })
                    .HasName("XX01POL_CONTRAENTI");

                entity.HasIndex(e => new { e.IdPolizza, e.IdAnagrafica, e.DtStoScadenzaFis })
                    .HasName("XX02POL_CONTRAENTI");

                entity.Property(e => e.KeyPolContraente)
                    .HasColumnName("KEY_POL_CONTRAENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMezzoSpedizionePolizza)
                    .HasColumnName("FLG_MEZZO_SPEDIZIONE_POLIZZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPredefinitoSino)
                    .IsRequired()
                    .HasColumnName("FLG_PREDEFINITO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolContraente)
                    .HasColumnName("ID_POL_CONTRAENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRecapito).HasColumnName("ID_RECAPITO");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolContraenti)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_CONTR__ID_PO__2200E977");
            });

            modelBuilder.Entity<PolContratto>(entity =>
            {
                entity.HasKey(e => e.KeyPolContratto)
                    .HasName("SYS_C0060441");

                entity.ToTable("POL_CONTRATTO", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis })
                    .HasName("XX05POL_CONTRATTO")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPolContratto, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01POL_CONTRATTO");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02POL_CONTRATTO");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.IdAgenzia, e.IdProduttore })
                    .HasName("XX03POL_CONTRATTO");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.DtScadenzaRata, e.FlgDurata, e.IdAgenzia })
                    .HasName("XX04POL_CONTRATTO");

                entity.Property(e => e.KeyPolContratto)
                    .HasColumnName("KEY_POL_CONTRATTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtAppendice)
                    .HasColumnName("DT_APPENDICE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoRata)
                    .HasColumnName("DT_EFFETTO_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineAnnualita)
                    .HasColumnName("DT_FINE_ANNUALITA")
                    .HasColumnType("date");

                entity.Property(e => e.DtIndicizzazione)
                    .HasColumnName("DT_INDICIZZAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioAnnualita)
                    .HasColumnName("DT_INIZIO_ANNUALITA")
                    .HasColumnType("date");

                entity.Property(e => e.DtProssimaRegolazione)
                    .HasColumnName("DT_PROSSIMA_REGOLAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaMoraAttuale)
                    .HasColumnName("DT_SCA_MORA_ATTUALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaMoraFutura)
                    .HasColumnName("DT_SCA_MORA_FUTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPolizza)
                    .HasColumnName("DT_SCADENZA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaRata)
                    .HasColumnName("DT_SCADENZA_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgContrattoCedutoSino)
                    .HasColumnName("FLG_CONTRATTO_CEDUTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaSino)
                    .HasColumnName("FLG_DEROGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDurata)
                    .IsRequired()
                    .HasColumnName("FLG_DURATA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEsentasseSino)
                    .IsRequired()
                    .HasColumnName("FLG_ESENTASSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMezzoIncassoPolizza)
                    .HasColumnName("FLG_MEZZO_INCASSO_POLIZZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgModProv)
                    .IsRequired()
                    .HasColumnName("FLG_MOD_PROV")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRegPremioSino)
                    .IsRequired()
                    .HasColumnName("FLG_REG_PREMIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTacRinnovoSino)
                    .IsRequired()
                    .HasColumnName("FLG_TAC_RINNOVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCoass)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoIndiciz)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_INDICIZ")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAgenzia)
                    .HasColumnName("ID_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCartacredito)
                    .HasColumnName("ID_CARTACREDITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContocorrente)
                    .HasColumnName("ID_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdConvenzione)
                    .HasColumnName("ID_CONVENZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFrazionamento)
                    .HasColumnName("ID_FRAZIONAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPagatore)
                    .HasColumnName("ID_PAGATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPlafond).HasColumnName("ID_PLAFOND");

                entity.Property(e => e.IdPolContratto)
                    .HasColumnName("ID_POL_CONTRATTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProduttore)
                    .HasColumnName("ID_PRODUTTORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSostituente)
                    .HasColumnName("ID_SOSTITUENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccessoriFissi)
                    .HasColumnName("IMP_ACCESSORI_FISSI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpLordo)
                    .HasColumnName("IMP_LORDO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpScontiAumento)
                    .HasColumnName("IMP_SCONTI_AUMENTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MesiRegolazione)
                    .HasColumnName("MESI_REGOLAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MmDurataProroga)
                    .HasColumnName("MM_DURATA_PROROGA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NDocumento)
                    .HasColumnName("N_DOCUMENTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NumLimiteInclusioni).HasColumnName("NUM_LIMITE_INCLUSIONI");

                entity.Property(e => e.PctAccessori)
                    .HasColumnName("PCT_ACCESSORI")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PrgAppendice)
                    .HasColumnName("PRG_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PrgLimiteInclusioni).HasColumnName("PRG_LIMITE_INCLUSIONI");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolContratto)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_CONTR__ID_PO__22F50DB0");
            });

            modelBuilder.Entity<PolCoobbligati>(entity =>
            {
                entity.HasKey(e => e.KeyPolCoobbligato);

                entity.ToTable("POL_COOBBLIGATI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolCoobbligato, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX01POL_COOBBLIGATI");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX03POL_AGENZIE");

                entity.HasIndex(e => new { e.IdPolizza, e.IdAnagrafica, e.DtStoScadenzaFis })
                    .HasName("XX02POL_AGENZIE");

                entity.Property(e => e.KeyPolCoobbligato)
                    .HasColumnName("KEY_POL_COOBBLIGATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdPolCoobbligato).HasColumnName("ID_POL_COOBBLIGATO");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolCoobbligati)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_COOBL__ID_PO__6E814571");
            });

            modelBuilder.Entity<PolDatiTecniciUbicazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPolDatiTecniciUbi)
                    .HasName("PK__POL_DATI__1205DE5DD42CD848");

                entity.ToTable("POL_DATI_TECNICI_UBICAZIONI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX03POL_DATI_TECNICI_UBICAZIONI");

                entity.HasIndex(e => new { e.IdPolDatiTecniciUbi, e.DtStoEffettoFis, e.DtStoScadenzaFis, e.FlgDatiTecniciUbicazione })
                    .HasName("XX01POL_DATI_TECNICI_UBICAZIONI");

                entity.HasIndex(e => new { e.IdPolUbicazione, e.DtStoScadenzaFis, e.DtStoEffettoFis, e.FlgDatiTecniciUbicazione })
                    .HasName("XX02POL_DATI_TECNICI_UBICAZIONI");

                entity.Property(e => e.KeyPolDatiTecniciUbi)
                    .HasColumnName("KEY_POL_DATI_TECNICI_UBI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodFlagSistema)
                    .HasColumnName("COD_FLAG_SISTEMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDatiTecniciUbicazione)
                    .HasColumnName("FLG_DATI_TECNICI_UBICAZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFormatoVariabile)
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPrincipaleSino)
                    .HasColumnName("FLG_PRINCIPALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolDatiTecniciUbi).HasColumnName("ID_POL_DATI_TECNICI_UBI");

                entity.Property(e => e.IdPolUbicazione).HasColumnName("ID_POL_UBICAZIONE");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ValoreData)
                    .HasColumnName("VALORE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ValoreNumerico)
                    .HasColumnName("VALORE_NUMERICO")
                    .HasColumnType("numeric(36, 18)");

                entity.Property(e => e.ValoreStringa)
                    .HasColumnName("VALORE_STRINGA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolDatiTecniciUbicazioni)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_DATI___ID_PO__24DD5622");
            });

            modelBuilder.Entity<PolDatiTecniciVeicoli>(entity =>
            {
                entity.HasKey(e => e.KeyPolDatiTecniciVeicolo)
                    .HasName("SYS_C0060443");

                entity.ToTable("POL_DATI_TECNICI_VEICOLI", "IAGENCY");

                entity.HasIndex(e => e.IdPolDatiTecniciVeicolo)
                    .HasName("XX01POL_DATI_TECNICI_VEICOLI");

                entity.HasIndex(e => e.IdPolVeicolo)
                    .HasName("XX02POL_DATI_TECNICI_VEICOLI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03POL_DATI_TECNICI_VEICOLI");

                entity.Property(e => e.KeyPolDatiTecniciVeicolo)
                    .HasColumnName("KEY_POL_DATI_TECNICI_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodFlagSistema)
                    .HasColumnName("COD_FLAG_SISTEMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDatiTecniciVeicolo)
                    .HasColumnName("FLG_DATI_TECNICI_VEICOLO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFormatoVariabile)
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPrincipaleSino)
                    .HasColumnName("FLG_PRINCIPALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolDatiTecniciVeicolo)
                    .HasColumnName("ID_POL_DATI_TECNICI_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolVeicolo)
                    .HasColumnName("ID_POL_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ProgressivoParametro)
                    .HasColumnName("PROGRESSIVO_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ValoreData)
                    .HasColumnName("VALORE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ValoreNumerico)
                    .HasColumnName("VALORE_NUMERICO")
                    .HasColumnType("numeric(36, 18)");

                entity.Property(e => e.ValoreStringa)
                    .HasColumnName("VALORE_STRINGA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolDatiTecniciVeicoli)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_DATI___ID_PO__25D17A5B");
            });

            modelBuilder.Entity<PolDestinatariRichieste>(entity =>
            {
                entity.HasKey(e => e.KeyPolDestinatarioRichiesta);

                entity.ToTable("POL_DESTINATARI_RICHIESTE", "IAGENCY");

                entity.HasIndex(e => e.IdPolAutorizzazione)
                    .HasName("XX01POL_DESTINATARI_RICHIESTE");

                entity.HasIndex(e => e.IdUtenteMittente)
                    .HasName("XX02POL_DESTINATARI_RICHIESTE");

                entity.Property(e => e.KeyPolDestinatarioRichiesta)
                    .HasColumnName("KEY_POL_DESTINATARIO_RICHIESTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtInvioEmail)
                    .HasColumnName("DT_INVIO_EMAIL")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPolAutorizzazione)
                    .HasColumnName("ID_POL_AUTORIZZAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteMittente)
                    .HasColumnName("ID_UTENTE_MITTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PolEsitoFranchigie>(entity =>
            {
                entity.HasKey(e => e.KeyPolEsitoFranchigia)
                    .HasName("SYS_C0060450");

                entity.ToTable("POL_ESITO_FRANCHIGIE", "IAGENCY");

                entity.HasIndex(e => e.IdAgenziaEsito)
                    .HasName("XX02POL_ESITO_FRANCHIGIE");

                entity.HasIndex(e => e.IdPolEsitoFranchigia)
                    .HasName("XX01POL_ESITO_FRANCHIGIE");

                entity.HasIndex(e => e.IdPolFranchigia)
                    .HasName("XIE1POL_ESITO_FRANCHIGIE");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX04POL_ESITO_FRANCHIGIE");

                entity.Property(e => e.KeyPolEsitoFranchigia)
                    .HasColumnName("KEY_POL_ESITO_FRANCHIGIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEsito)
                    .HasColumnName("DT_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMezzoPagamento)
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoEsito)
                    .HasColumnName("FLG_TIPO_ESITO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAgenziaEsito)
                    .HasColumnName("ID_AGENZIA_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolEsitoFranchigia)
                    .HasColumnName("ID_POL_ESITO_FRANCHIGIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolFranchigia)
                    .HasColumnName("ID_POL_FRANCHIGIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpIncassato)
                    .HasColumnName("IMP_INCASSATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeyArcFoglioCassa)
                    .HasColumnName("KEY_ARC_FOGLIO_CASSA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolEsitoFranchigie)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_ESITO__ID_PO__26C59E94");
            });

            modelBuilder.Entity<PolEventi>(entity =>
            {
                entity.HasKey(e => e.KeyPolEvento)
                    .HasName("SYS_C0060458");

                entity.ToTable("POL_EVENTI", "IAGENCY");

                entity.HasIndex(e => e.DtSysEvento)
                    .HasName("K01_POL_EVENTI");

                entity.HasIndex(e => e.DtSysRiemissione)
                    .HasName("K04_POL_EVENTI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XIE1POL_EVENTI");

                entity.Property(e => e.KeyPolEvento)
                    .HasColumnName("KEY_POL_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CompetenzaEmesso)
                    .HasColumnName("COMPETENZA_EMESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoEvento)
                    .HasColumnName("DT_EFFETTO_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysEvento)
                    .HasColumnName("DT_SYS_EVENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysRiemissione)
                    .HasColumnName("DT_SYS_RIEMISSIONE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDocStampatoSino)
                    .HasColumnName("FLG_DOC_STAMPATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSistemaProvenienza)
                    .HasColumnName("FLG_SISTEMA_PROVENIENZA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoEvento)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_EVENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.HhmmEffetto)
                    .HasColumnName("HHMM_EFFETTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabMotivoStorno)
                    .HasColumnName("ID_TAB_MOTIVO_STORNO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.KeyPolEventoCollegato)
                    .HasColumnName("KEY_POL_EVENTO_COLLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.KeyPolEventoProvvisorio)
                    .HasColumnName("key_pol_evento_provvisorio")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Versione)
                    .IsRequired()
                    .HasColumnName("VERSIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolEventi)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_EVENT__ID_PO__27B9C2CD");
            });

            modelBuilder.Entity<PolFranchigie>(entity =>
            {
                entity.HasKey(e => e.KeyPolFranchigia)
                    .HasName("SYS_C0060461");

                entity.ToTable("POL_FRANCHIGIE", "IAGENCY");

                entity.HasIndex(e => e.IdPolFranchigia)
                    .HasName("XX01POL_FRANCHIGIE");

                entity.HasIndex(e => e.IdPolGaranzia)
                    .HasName("XX03POL_FRANCHIGIE");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02POL_FRANCHIGIE");

                entity.Property(e => e.KeyPolFranchigia)
                    .HasColumnName("KEY_POL_FRANCHIGIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ChiaveEsternaFranchigia)
                    .HasColumnName("CHIAVE_ESTERNA_FRANCHIGIA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ChiaveEsterneSinistro)
                    .HasColumnName("CHIAVE_ESTERNE_SINISTRO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoFranchigia)
                    .HasColumnName("FLG_STATO_FRANCHIGIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolFranchigia)
                    .HasColumnName("ID_POL_FRANCHIGIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolGaranzia)
                    .HasColumnName("ID_POL_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpFranchigia)
                    .HasColumnName("IMP_FRANCHIGIA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvvigione)
                    .HasColumnName("IMP_PROVVIGIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NFranchigia)
                    .HasColumnName("N_FRANCHIGIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolFranchigie)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_FRANC__ID_PO__28ADE706");
            });

            modelBuilder.Entity<PolGarDettagli>(entity =>
            {
                entity.HasKey(e => e.KeyPolGarDettaglio)
                    .HasName("SYS_C0060473");

                entity.ToTable("POL_GAR_DETTAGLI", "IAGENCY");

                entity.HasIndex(e => e.IdPolGarDettaglio)
                    .HasName("XX01POL_GAR_DETTAGLI");

                entity.HasIndex(e => e.IdPolGaranzia)
                    .HasName("XX04POL_GAR_DETTAGLI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03POL_GAR_DETTAGLI");

                entity.HasIndex(e => e.IdPrGarScomposizione)
                    .HasName("XX02POL_GAR_DETTAGLI");

                entity.Property(e => e.KeyPolGarDettaglio)
                    .HasColumnName("KEY_POL_GAR_DETTAGLIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCatTariffa)
                    .HasColumnName("FLG_CAT_TARIFFA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdPolGarDettaglio)
                    .HasColumnName("ID_POL_GAR_DETTAGLIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolGaranzia)
                    .HasColumnName("ID_POL_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarScomposizione)
                    .HasColumnName("ID_PR_GAR_SCOMPOSIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PctScomposizione)
                    .HasColumnName("PCT_SCOMPOSIZIONE")
                    .HasColumnType("numeric(10, 5)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolGarDettagli)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_GAR_D__ID_PO__29A20B3F");
            });

            modelBuilder.Entity<PolGaranzie>(entity =>
            {
                entity.HasKey(e => e.KeyPolGaranzia)
                    .HasName("SYS_C0060464");

                entity.ToTable("POL_GARANZIE", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolBene, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02POL_GARANZIE");

                entity.HasIndex(e => new { e.IdPolGaranzia, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01POL_GARANZIE");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX03POL_GARANZIE");

                entity.HasIndex(e => new { e.IdPolGaranzia, e.DtTariffaOriginale, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX16POL_GARANZIE");

                entity.HasIndex(e => new { e.IdPolizza, e.IdPolBene, e.IdPolGaranzia, e.DtStoEffettoFis })
                    .HasName("XX15POL_GARANZIE");

                entity.HasIndex(e => new { e.IdPolizza, e.IdPolBene, e.IdPolGaranzia, e.DtStoScadenzaFis, e.DtScadenzaGaranzia })
                    .HasName("XX14POL_GARANZIE");

                entity.Property(e => e.KeyPolGaranzia)
                    .HasColumnName("KEY_POL_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtScadenzaGaranzia)
                    .HasColumnName("DT_SCADENZA_GARANZIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtTariffaOriginale)
                    .HasColumnName("DT_TARIFFA_ORIGINALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtTentataVendita)
                    .HasColumnName("DT_TENTATA_VENDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPrMinForzNoScontoSino)
                    .HasColumnName("FLG_PR_MIN_FORZ_NO_SCONTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAbbatSconto)
                    .HasColumnName("FLG_TIPO_ABBAT_SCONTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdPolBene)
                    .HasColumnName("ID_POL_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolGaranzia)
                    .HasColumnName("ID_POL_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarTariffa)
                    .HasColumnName("ID_PR_GAR_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrPacchetto).HasColumnName("ID_PR_PACCHETTO");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaCapitale1)
                    .HasColumnName("ID_VALUTA_CAPITALE1")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaCapitale2)
                    .HasColumnName("ID_VALUTA_CAPITALE2")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaFranchigia)
                    .HasColumnName("ID_VALUTA_FRANCHIGIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaMaxCose)
                    .HasColumnName("ID_VALUTA_MAX_COSE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaMaxInterruzione)
                    .HasColumnName("ID_VALUTA_MAX_INTERRUZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaMaxPersone)
                    .HasColumnName("ID_VALUTA_MAX_PERSONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaMaxSinistro)
                    .HasColumnName("ID_VALUTA_MAX_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccessoriAnnuo)
                    .HasColumnName("IMP_ACCESSORI_ANNUO")
                    .HasColumnType("numeric(24, 8)");

                entity.Property(e => e.ImpAccessoriOperazione)
                    .HasColumnName("IMP_ACCESSORI_OPERAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAntiracket)
                    .HasColumnName("IMP_ANTIRACKET")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitale1)
                    .HasColumnName("IMP_CAPITALE1")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitale1Originale)
                    .HasColumnName("IMP_CAPITALE1_ORIGINALE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitale2)
                    .HasColumnName("IMP_CAPITALE2")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpDetraibile)
                    .HasColumnName("IMP_DETRAIBILE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigia)
                    .HasColumnName("IMP_FRANCHIGIA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigiaAgg)
                    .HasColumnName("IMP_FRANCHIGIA_AGG")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigiaAggAnnuo)
                    .HasColumnName("IMP_FRANCHIGIA_AGG_ANNUO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxCose)
                    .HasColumnName("IMP_MAX_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxInterruzione)
                    .HasColumnName("IMP_MAX_INTERRUZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxPersone)
                    .HasColumnName("IMP_MAX_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxScoperto)
                    .HasColumnName("IMP_MAX_SCOPERTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxSinistro)
                    .HasColumnName("IMP_MAX_SINISTRO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNettoAnnuo)
                    .HasColumnName("IMP_NETTO_ANNUO")
                    .HasColumnType("numeric(24, 8)");

                entity.Property(e => e.ImpNettoOperazione)
                    .HasColumnName("IMP_NETTO_OPERAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPremioFormula)
                    .HasColumnName("IMP_PREMIO_FORMULA")
                    .HasColumnType("numeric(24, 8)");

                entity.Property(e => e.ImpScontabileRinnovo)
                    .HasColumnName("IMP_SCONTABILE_RINNOVO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsnAnnuo)
                    .HasColumnName("IMP_SSN_ANNUO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsnOperazione)
                    .HasColumnName("IMP_SSN_OPERAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasseAnnuo)
                    .HasColumnName("IMP_TASSE_ANNUO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasseOperazione)
                    .HasColumnName("IMP_TASSE_OPERAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NAddetti)
                    .HasColumnName("N_ADDETTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.NrQuote)
                    .HasColumnName("NR_QUOTE")
                    .HasColumnType("numeric(36, 18)");

                entity.Property(e => e.PctAntiracket)
                    .HasColumnName("PCT_ANTIRACKET")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctFvs)
                    .HasColumnName("PCT_FVS")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctScoperto)
                    .HasColumnName("PCT_SCOPERTO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctSsn)
                    .HasColumnName("PCT_SSN")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctTasse)
                    .HasColumnName("PCT_TASSE")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctVarPremioFirmaOrig)
                    .HasColumnName("PCT_VAR_PREMIO_FIRMA_ORIG")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctVarPremioOrig)
                    .HasColumnName("PCT_VAR_PREMIO_ORIG")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctVariazionePremio)
                    .HasColumnName("PCT_VARIAZIONE_PREMIO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctVariazionePremioFirma)
                    .HasColumnName("PCT_VARIAZIONE_PREMIO_FIRMA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.Tasso)
                    .HasColumnName("TASSO")
                    .HasColumnType("numeric(18, 9)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolGaranzie)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_GARAN__ID_PO__2A962F78");
            });

            modelBuilder.Entity<PolGaranzieFirma>(entity =>
            {
                entity.HasKey(e => e.IdPolGaranziaFirma)
                    .HasName("POL_GARANZIE_FIRMA_PK");

                entity.ToTable("POL_GARANZIE_FIRMA", "IAGENCY");

                entity.HasIndex(e => e.IdPolGaranzia)
                    .HasName("XX02POL_GARANZIE_FIRMA");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX01POL_GARANZIE_FIRMA");

                entity.Property(e => e.IdPolGaranziaFirma)
                    .HasColumnName("ID_POL_GARANZIA_FIRMA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolGaranzia)
                    .HasColumnName("ID_POL_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAntiracket)
                    .HasColumnName("IMP_ANTIRACKET")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigiaAgg)
                    .HasColumnName("IMP_FRANCHIGIA_AGG")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolGaranzieFirma)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_GARAN__ID_PO__2B8A53B1");
            });

            modelBuilder.Entity<PolGaranzieRegolate>(entity =>
            {
                entity.HasKey(e => e.KeyPolGaranziaRegolata)
                    .HasName("SYS_C0060470");

                entity.ToTable("POL_GARANZIE_REGOLATE", "IAGENCY");

                entity.HasIndex(e => e.IdPolGaranziaRegolata)
                    .HasName("XX01POL_GARANZIE_REGOLATE");

                entity.HasIndex(e => e.IdPolRegPremio)
                    .HasName("XX02POL_GARANZIE_REGOLATE");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03POL_GARANZIE_REGOLATE");

                entity.Property(e => e.KeyPolGaranziaRegolata)
                    .HasColumnName("KEY_POL_GARANZIA_REGOLATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DatoConsuntivo)
                    .HasColumnName("DATO_CONSUNTIVO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolGaranzia)
                    .HasColumnName("ID_POL_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolGaranziaRegolata)
                    .HasColumnName("ID_POL_GARANZIA_REGOLATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolRegPremio)
                    .HasColumnName("ID_POL_REG_PREMIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPolGaranziaNavigation)
                    .WithMany(p => p.PolGaranzieRegolate)
                    .HasForeignKey(d => d.IdPolGaranzia)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__POL_GARAN__ID_PO__2D729C23");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolGaranzieRegolate)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_GARAN__ID_PO__2C7E77EA");
            });

            modelBuilder.Entity<PolOperazioniFondi>(entity =>
            {
                entity.HasKey(e => e.KeyPolOperazioneFondi)
                    .HasName("SYS_C0060476");

                entity.ToTable("POL_OPERAZIONI_FONDI", "IAGENCY");

                entity.HasIndex(e => e.IdPolGaranzia)
                    .HasName("XX02POL_OPERAZIONI_FONDI");

                entity.HasIndex(e => e.IdPolOperazioneFondi)
                    .HasName("XX01POL_OPERAZIONI_FONDI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03POL_OPERAZIONI_FONDI");

                entity.Property(e => e.KeyPolOperazioneFondi)
                    .HasColumnName("KEY_POL_OPERAZIONE_FONDI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolGaranzia)
                    .HasColumnName("ID_POL_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolOperazioneFondi)
                    .HasColumnName("ID_POL_OPERAZIONE_FONDI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpCapitalePuro)
                    .HasColumnName("IMP_CAPITALE_PURO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCaricamenti)
                    .HasColumnName("IMP_CARICAMENTI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpDiritti)
                    .HasColumnName("IMP_DIRITTI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpImposte)
                    .HasColumnName("IMP_IMPOSTE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NrQuote)
                    .HasColumnName("NR_QUOTE")
                    .HasColumnType("numeric(36, 18)");

                entity.Property(e => e.PctVariazione)
                    .HasColumnName("PCT_VARIAZIONE")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PrgAppendice)
                    .HasColumnName("PRG_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolOperazioniFondi)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_OPERA__ID_PO__2E66C05C");
            });

            modelBuilder.Entity<PolOptional>(entity =>
            {
                entity.HasKey(e => e.KeyPolOptional)
                    .HasName("SYS_C0060479");

                entity.ToTable("POL_OPTIONAL", "IAGENCY");

                entity.HasIndex(e => e.IdPolOptional)
                    .HasName("XX01POL_OPTIONAL");

                entity.HasIndex(e => e.IdPolVeicolo)
                    .HasName("XX02POL_OPTIONAL");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03POL_OPTIONAL");

                entity.Property(e => e.KeyPolOptional)
                    .HasColumnName("KEY_POL_OPTIONAL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodqrtInfocar)
                    .HasColumnName("CODQRT_INFOCAR")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOptional)
                    .HasColumnName("FLG_TIPO_OPTIONAL")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdPolOptional)
                    .HasColumnName("ID_POL_OPTIONAL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolVeicolo)
                    .HasColumnName("ID_POL_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpOptional)
                    .HasColumnName("IMP_OPTIONAL")
                    .HasColumnType("numeric(18, 2)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolOptional)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_OPTIO__ID_PO__2F5AE495");
            });

            modelBuilder.Entity<PolParametri>(entity =>
            {
                entity.HasKey(e => e.KeyPolParametro)
                    .HasName("SYS_C0060482");

                entity.ToTable("POL_PARAMETRI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolParametro, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX01POL_PARAMETRI");

                entity.HasIndex(e => new { e.IdPolizza, e.IdPolGaranzia, e.IdPolParametro, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX02POL_PARAMETRI");

                entity.Property(e => e.KeyPolParametro)
                    .HasColumnName("KEY_POL_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DatoVariabile)
                    .HasColumnName("DATO_VARIABILE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgForzatoSino)
                    .HasColumnName("FLG_FORZATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolGaranzia)
                    .HasColumnName("ID_POL_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolParametro)
                    .HasColumnName("ID_POL_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrParametro)
                    .HasColumnName("ID_PR_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrValParametro)
                    .HasColumnName("ID_PR_VAL_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolParametri)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_PARAM__ID_PO__304F08CE");
            });

            modelBuilder.Entity<PolPolizze>(entity =>
            {
                entity.HasKey(e => e.IdPolizza)
                    .HasName("SYS_C0060488");

                entity.ToTable("POL_POLIZZE", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02POL_POLIZZE");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX04POL_POLIZZE");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtEffetto })
                    .HasName("XX10_POL_POLIZZE");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdPrProdotto })
                    .HasName("XIE1POL_POLIZZE");

                entity.HasIndex(e => new { e.IdCompagnia, e.NPolizza })
                    .HasName("XX05POL_POLIZZE");

                entity.HasIndex(e => new { e.IdCompagnia, e.NPreventivo })
                    .HasName("XX08_POL_POLIZZE");

                entity.HasIndex(e => new { e.IdCompagnia, e.NProposta })
                    .HasName("XX06POL_POLIZZE");

                entity.HasIndex(e => new { e.IdCompagnia, e.NRifEsterno })
                    .HasName("XX09_POL_POLIZZE");

                entity.HasIndex(e => new { e.NPolizza, e.IdCompagnia })
                    .HasName("FilteredIndex")
                    .IsUnique()
                    .HasFilter("([N_POLIZZA]<>'39861' AND [N_POLIZZA]<>'165426')");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtProdotto)
                    .HasColumnName("DT_PRODOTTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaOrig)
                    .HasColumnName("DT_SCADENZA_ORIG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgModProvOrig)
                    .HasColumnName("FLG_MOD_PROV_ORIG")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPolizzaBaseSino)
                    .HasColumnName("FLG_POLIZZA_BASE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSistemaProvenienza)
                    .HasColumnName("FLG_SISTEMA_PROVENIENZA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.HhmmEffetto)
                    .HasColumnName("HHMM_EFFETTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NPreventivo)
                    .HasColumnName("N_PREVENTIVO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NProposta)
                    .HasColumnName("N_PROPOSTA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NRifEsterno)
                    .HasColumnName("N_RIF_ESTERNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PolPremiFirma>(entity =>
            {
                entity.HasKey(e => e.KeyPolPremioFirma)
                    .HasName("POL_PREMI_FIRMA_PK");

                entity.ToTable("POL_PREMI_FIRMA", "IAGENCY");

                entity.HasIndex(e => e.IdPolPremioFirma)
                    .HasName("XX01POL_PREMI_FIRMA");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02POL_PREMI_FIRMA");

                entity.Property(e => e.KeyPolPremioFirma)
                    .HasColumnName("KEY_POL_PREMIO_FIRMA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolPremioFirma)
                    .HasColumnName("ID_POL_PREMIO_FIRMA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPlafondConsumato)
                    .HasColumnName("IMP_PLAFOND_CONSUMATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpVariazioneMaturato)
                    .HasColumnName("IMP_VARIAZIONE_MATURATO")
                    .HasColumnType("numeric(18, 2)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolPremiFirma)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_PREMI__ID_PO__31432D07");
            });

            modelBuilder.Entity<PolProprietari>(entity =>
            {
                entity.HasKey(e => e.KeyPolProprietario)
                    .HasName("SYS_C0060493");

                entity.ToTable("POL_PROPRIETARI", "IAGENCY");

                entity.HasIndex(e => new { e.IdAnagrafica, e.DtStoScadenzaFis })
                    .HasName("XX03POL_PROPRIETARI");

                entity.HasIndex(e => new { e.IdPolBene, e.DtStoScadenzaFis })
                    .HasName("XX02POL_PROPRIETARI");

                entity.HasIndex(e => new { e.IdPolProprietario, e.DtStoScadenzaFis })
                    .HasName("XX01POL_PROPRIETARI");

                entity.HasIndex(e => new { e.IdPolizza, e.IdAnagrafica, e.DtStoScadenzaFis })
                    .HasName("XX04POL_PROPRIETARI");

                entity.Property(e => e.KeyPolProprietario)
                    .HasColumnName("KEY_POL_PROPRIETARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPredefinitoSino)
                    .HasColumnName("FLG_PREDEFINITO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolBene)
                    .HasColumnName("ID_POL_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolProprietario)
                    .HasColumnName("ID_POL_PROPRIETARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolProprietari)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_PROPR__ID_PO__32375140");
            });

            modelBuilder.Entity<PolProvvigioni>(entity =>
            {
                entity.HasKey(e => e.KeyPolProvvigione)
                    .HasName("SYS_C0060496");

                entity.ToTable("POL_PROVVIGIONI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolGaranzia, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02POL_PROVVIGIONI");

                entity.HasIndex(e => new { e.IdPolProvvigione, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01POL_PROVVIGIONI");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX03POL_PROVVIGIONI");

                entity.HasIndex(e => new { e.IdPolizza, e.IdPolGaranzia, e.IdAgenzia, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX04POL_PROVVIGIONI");

                entity.Property(e => e.KeyPolProvvigione)
                    .HasColumnName("KEY_POL_PROVVIGIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDerogaPrvAcc)
                    .HasColumnName("COD_DEROGA_PRV_ACC")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaPrvAccOperaz)
                    .HasColumnName("COD_DEROGA_PRV_ACC_OPERAZ")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaPrvGar)
                    .HasColumnName("COD_DEROGA_PRV_GAR")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaPrvGarOperaz)
                    .HasColumnName("COD_DEROGA_PRV_GAR_OPERAZ")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaPrvAccOperazSino)
                    .HasColumnName("FLG_DEROGA_PRV_ACC_OPERAZ_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaPrvAccSino)
                    .HasColumnName("FLG_DEROGA_PRV_ACC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaPrvGarOperazSino)
                    .HasColumnName("FLG_DEROGA_PRV_GAR_OPERAZ_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaPrvGarSino)
                    .HasColumnName("FLG_DEROGA_PRV_GAR_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAgenzia)
                    .HasColumnName("ID_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolGaranzia)
                    .HasColumnName("ID_POL_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolProvvigione)
                    .HasColumnName("ID_POL_PROVVIGIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccAcquisto)
                    .HasColumnName("IMP_ACC_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccAcquistoOperazione)
                    .HasColumnName("IMP_ACC_ACQUISTO_OPERAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccIncasso)
                    .HasColumnName("IMP_ACC_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccIncassoOperazione)
                    .HasColumnName("IMP_ACC_INCASSO_OPERAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarAcquisto)
                    .HasColumnName("IMP_GAR_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarAcquistoOperazione)
                    .HasColumnName("IMP_GAR_ACQUISTO_OPERAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarIncasso)
                    .HasColumnName("IMP_GAR_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarIncassoOperazione)
                    .HasColumnName("IMP_GAR_INCASSO_OPERAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PctAccAcquisto)
                    .HasColumnName("PCT_ACC_ACQUISTO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctAccAcquistoOperazione)
                    .HasColumnName("PCT_ACC_ACQUISTO_OPERAZIONE")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctAccIncasso)
                    .HasColumnName("PCT_ACC_INCASSO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctAccIncassoOperazione)
                    .HasColumnName("PCT_ACC_INCASSO_OPERAZIONE")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctGarAcquisto)
                    .HasColumnName("PCT_GAR_ACQUISTO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctGarAcquistoOperazione)
                    .HasColumnName("PCT_GAR_ACQUISTO_OPERAZIONE")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctGarIncasso)
                    .HasColumnName("PCT_GAR_INCASSO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctGarIncassoOperazione)
                    .HasColumnName("PCT_GAR_INCASSO_OPERAZIONE")
                    .HasColumnType("numeric(10, 5)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolProvvigioni)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_PROVV__ID_PO__332B7579");
            });

            modelBuilder.Entity<PolProvvigioniFirma>(entity =>
            {
                entity.HasKey(e => e.IdPolProvvigioneFirma);

                entity.ToTable("POL_PROVVIGIONI_FIRMA", "IAGENCY");

                entity.HasIndex(e => e.IdPolProvvigione)
                    .HasName("XX01POL_PROVVIGIONI_FIRMA");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03POL_PROVVIGIONI_FIRMA");

                entity.Property(e => e.IdPolProvvigioneFirma)
                    .HasColumnName("ID_POL_PROVVIGIONE_FIRMA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDerogaPrvAcc)
                    .HasColumnName("COD_DEROGA_PRV_ACC")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaPrvGar)
                    .HasColumnName("COD_DEROGA_PRV_GAR")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogaPrvAccSino)
                    .HasColumnName("FLG_DEROGA_PRV_ACC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaPrvGarSino)
                    .HasColumnName("FLG_DEROGA_PRV_GAR_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPrimaEmissioneSino)
                    .HasColumnName("FLG_PRIMA_EMISSIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolProvvigione)
                    .HasColumnName("ID_POL_PROVVIGIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccAcquisto)
                    .HasColumnName("IMP_ACC_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccIncasso)
                    .HasColumnName("IMP_ACC_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarAcquisto)
                    .HasColumnName("IMP_GAR_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarIncasso)
                    .HasColumnName("IMP_GAR_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PctAccAcquisto)
                    .HasColumnName("PCT_ACC_ACQUISTO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctAccIncasso)
                    .HasColumnName("PCT_ACC_INCASSO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctGarAcquisto)
                    .HasColumnName("PCT_GAR_ACQUISTO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctGarIncasso)
                    .HasColumnName("PCT_GAR_INCASSO")
                    .HasColumnType("numeric(10, 5)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolProvvigioniFirma)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_PROVV__ID_PO__341F99B2");
            });

            modelBuilder.Entity<PolRca>(entity =>
            {
                entity.HasKey(e => e.KeyPolRca)
                    .HasName("SYS_C0060498");

                entity.ToTable("POL_RCA", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03POL_RCA");

                entity.HasIndex(e => e.IdPolRca)
                    .HasName("XX01POL_RCA");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02POL_RCA");

                entity.Property(e => e.KeyPolRca)
                    .HasColumnName("KEY_POL_RCA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CfPivaAtrDivVeic)
                    .HasColumnName("CF_PIVA_ATR_DIV_VEIC")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseCuLegge40Ibdv)
                    .HasColumnName("CLASSE_CU_LEGGE40_IBDV")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseCuPropLegge40)
                    .HasColumnName("CLASSE_CU_PROP_LEGGE_40")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodFisPropLegge40)
                    .HasColumnName("COD_FIS_PROP_LEGGE_40")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CodIurAtrDivVeic)
                    .HasColumnName("COD_IUR_ATR_DIV_VEIC")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceIur)
                    .HasColumnName("CODICE_IUR")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DtScadenzaPolPrec)
                    .HasColumnName("DT_SCADENZA_POL_PREC")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCartaVerdeSino)
                    .HasColumnName("FLG_CARTA_VERDE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgClasseCompagnia)
                    .HasColumnName("FLG_CLASSE_COMPAGNIA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFormaTariffaria)
                    .HasColumnName("FLG_FORMA_TARIFFARIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoAssicurazione)
                    .HasColumnName("FLG_MOTIVO_ASSICURAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPejus)
                    .HasColumnName("FLG_PEJUS")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoTargaAtr)
                    .HasColumnName("FLG_TIPO_TARGA_ATR")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoTargaLegge40)
                    .HasColumnName("FLG_TIPO_TARGA_LEGGE_40")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoVeicoloAtr)
                    .HasColumnName("FLG_TIPO_VEICOLO_ATR")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoVeicoloLegge40)
                    .HasColumnName("FLG_TIPO_VEICOLO_LEGGE_40")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNazioneImmAtr).HasColumnName("ID_NAZIONE_IMM_ATR");

                entity.Property(e => e.IdNazioneImmLegge40).HasColumnName("ID_NAZIONE_IMM_LEGGE_40");

                entity.Property(e => e.IdPolRca)
                    .HasColumnName("ID_POL_RCA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroPolizzaProv)
                    .HasColumnName("NUMERO_POLIZZA_PROV")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TargaAtr)
                    .HasColumnName("TARGA_ATR")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TargaLegge40)
                    .HasColumnName("TARGA_LEGGE_40")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolRca)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_RCA__ID_POLI__3513BDEB");
            });

            modelBuilder.Entity<PolRegPremio>(entity =>
            {
                entity.HasKey(e => e.KeyPolRegPremio)
                    .HasName("SYS_C0060510");

                entity.ToTable("POL_REG_PREMIO", "IAGENCY");

                entity.HasIndex(e => e.IdPolRegPremio)
                    .HasName("XX01POL_REG_PREMIO");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02POL_REG_PREMIO");

                entity.Property(e => e.KeyPolRegPremio)
                    .HasColumnName("KEY_POL_REG_PREMIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFineRegolazione)
                    .HasColumnName("DT_FINE_REGOLAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioRegolazione)
                    .HasColumnName("DT_INIZIO_REGOLAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoRegolazione)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_REGOLAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolRegPremio)
                    .HasColumnName("ID_POL_REG_PREMIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PrgRichieste)
                    .HasColumnName("PRG_RICHIESTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolRegPremio)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_REG_P__ID_PO__3607E224");
            });

            modelBuilder.Entity<PolRichiesteRegolazione>(entity =>
            {
                entity.HasKey(e => e.KeyPolRichiesteRegolazione)
                    .HasName("SYS_C0060513");

                entity.ToTable("POL_RICHIESTE_REGOLAZIONE", "IAGENCY");

                entity.HasIndex(e => e.IdPolRegPremio)
                    .HasName("XX01POL_RICHIESTE_REGOLAZIONE");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02POL_RICHIESTE_REGOLAZIONE");

                entity.HasIndex(e => new { e.IdPolRegPremio, e.DtInvioRichiesta })
                    .HasName("XIE1POL_RICHIESTE_REGOLAZIONE");

                entity.Property(e => e.KeyPolRichiesteRegolazione)
                    .HasColumnName("KEY_POL_RICHIESTE_REGOLAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtInvioRichiesta)
                    .HasColumnName("DT_INVIO_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysRichiesta)
                    .HasColumnName("DT_SYS_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoRichiestaRegolazione)
                    .HasColumnName("FLG_TIPO_RICHIESTA_REGOLAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdPolRegPremio)
                    .HasColumnName("ID_POL_REG_PREMIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolRichiesteRegolazione)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_RICHI__ID_PO__36FC065D");
            });

            modelBuilder.Entity<PolRischioImpiego>(entity =>
            {
                entity.HasKey(e => e.KeyPolRischioImpiego)
                    .HasName("POL_RISCHIO_IMPIEGO_PK");

                entity.ToTable("POL_RISCHIO_IMPIEGO", "IAGENCY");

                entity.HasIndex(e => new { e.IdAnagraficaDebitore, e.DtStoScadenzaFis })
                    .HasName("XX05POL_RISCHIO_IMPIEGO");

                entity.HasIndex(e => new { e.IdAnagraficaMand, e.DtStoScadenzaFis })
                    .HasName("XX04POL_RISCHIO_IMPIEGO");

                entity.HasIndex(e => new { e.IdAnagraficaPropCredito, e.DtStoScadenzaFis })
                    .HasName("XX06POL_RISCHIO_IMPIEGO");

                entity.HasIndex(e => new { e.IdPolRischioImpiego, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01POL_RISCHIO_IMPIEGO");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02POL_RISCHIO_IMPIEGO");

                entity.HasIndex(e => new { e.IdPolizza, e.IdPolAssicurato, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX03POL_RISCHIO_IMPIEGO");

                entity.Property(e => e.KeyPolRischioImpiego)
                    .HasColumnName("KEY_POL_RISCHIO_IMPIEGO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnzianitaServizio)
                    .HasColumnName("ANZIANITA_SERVIZIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAssunzione)
                    .HasColumnName("DT_ASSUNZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCoesistenza)
                    .HasColumnName("FLG_COESISTENZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDelegaSino)
                    .HasColumnName("FLG_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisitaMedicaSino)
                    .HasColumnName("FLG_VISITA_MEDICA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagraficaDebitore)
                    .HasColumnName("ID_ANAGRAFICA_DEBITORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagraficaMand)
                    .HasColumnName("ID_ANAGRAFICA_MAND")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagraficaPropCredito)
                    .HasColumnName("ID_ANAGRAFICA_PROP_CREDITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolAssicurato)
                    .HasColumnName("ID_POL_ASSICURATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolRischioImpiego)
                    .HasColumnName("ID_POL_RISCHIO_IMPIEGO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpCoesistenza)
                    .HasColumnName("IMP_COESISTENZA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpLordoMensile)
                    .HasColumnName("IMP_LORDO_MENSILE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpQuota)
                    .HasColumnName("IMP_QUOTA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTfr)
                    .HasColumnName("IMP_TFR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTfrFondo)
                    .HasColumnName("IMP_TFR_FONDO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NumeroQuote)
                    .HasColumnName("NUMERO_QUOTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolRischioImpiego)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_RISCH__ID_PO__37F02A96");
            });

            modelBuilder.Entity<PolRismat>(entity =>
            {
                entity.HasKey(e => e.IdPolRismat);

                entity.ToTable("POL_RISMAT", "IAGENCY");

                entity.HasIndex(e => e.IdPolGaranzia)
                    .HasName("XX01POL_RISMAT");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03POL_RISMAT");

                entity.HasIndex(e => new { e.AnnoElab, e.MeseElab })
                    .HasName("XX04POL_RISMAT");

                entity.Property(e => e.IdPolRismat)
                    .HasColumnName("ID_POL_RISMAT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoElab)
                    .HasColumnName("ANNO_ELAB")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.IdPolGaranzia)
                    .HasColumnName("ID_POL_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpCapitaleResiduo)
                    .HasColumnName("IMP_CAPITALE_RESIDUO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRatePremioFutRp)
                    .HasColumnName("IMP_RATE_PREMIO_FUT_RP")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRipPremioPuroAnnuo)
                    .HasColumnName("IMP_RIP_PREMIO_PURO_ANNUO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiservaMatBil)
                    .HasColumnName("IMP_RISERVA_MAT_BIL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiservaMatematica)
                    .HasColumnName("IMP_RISERVA_MATEMATICA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaMatematicaSpe)
                    .HasColumnName("IMP_RISERVA_MATEMATICA_SPE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MeseElab)
                    .HasColumnName("MESE_ELAB")
                    .HasColumnType("numeric(4, 0)");
            });

            modelBuilder.Entity<PolSegnalazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPolSegnalazione)
                    .HasName("SYS_C0060518");

                entity.ToTable("POL_SEGNALAZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdPolAutorizzazione)
                    .HasName("XX01POL_SEGNALAZIONI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XIE2POL_SEGNALAZIONI");

                entity.Property(e => e.KeyPolSegnalazione)
                    .HasColumnName("KEY_POL_SEGNALAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AltriDati)
                    .HasColumnName("ALTRI_DATI")
                    .IsUnicode(false);

                entity.Property(e => e.CodErrore)
                    .IsRequired()
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodLivelloDeroga).HasColumnName("COD_LIVELLO_DEROGA");

                entity.Property(e => e.IdPolAutorizzazione)
                    .HasColumnName("ID_POL_AUTORIZZAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolSegnalazioni)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_SEGNA__ID_PO__38E44ECF");
            });

            modelBuilder.Entity<PolSinistri>(entity =>
            {
                entity.HasKey(e => e.KeyPolSinistro)
                    .HasName("SYS_C0060521");

                entity.ToTable("POL_SINISTRI", "IAGENCY");

                entity.HasIndex(e => e.IdPolBene)
                    .HasName("XX03POL_SINISTRI");

                entity.HasIndex(e => e.IdPolSinistro)
                    .HasName("XX01POL_SINISTRI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02POL_SINISTRI");

                entity.Property(e => e.KeyPolSinistro)
                    .HasColumnName("KEY_POL_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoSinistro)
                    .HasColumnName("ANNO_SINISTRO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.ChiaveEsternaSinistro)
                    .HasColumnName("CHIAVE_ESTERNA_SINISTRO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtAccadimento)
                    .HasColumnName("DT_ACCADIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtConsideratoAttestato)
                    .HasColumnName("DT_CONSIDERATO_ATTESTATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtConsideratoCompagnia)
                    .HasColumnName("DT_CONSIDERATO_COMPAGNIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDenuncia)
                    .HasColumnName("DT_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLineaProdotto)
                    .HasColumnName("FLG_LINEA_PRODOTTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoStatoSinistro)
                    .HasColumnName("FLG_MOTIVO_STATO_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoSinistro)
                    .HasColumnName("FLG_STATO_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCard)
                    .HasColumnName("FLG_TIPO_CARD")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoDenuncia)
                    .HasColumnName("FLG_TIPO_DENUNCIA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdPolBene)
                    .HasColumnName("ID_POL_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolSinistro)
                    .HasColumnName("ID_POL_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TotRiservaCose)
                    .HasColumnName("TOT_RISERVA_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotRiservaPersone)
                    .HasColumnName("TOT_RISERVA_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TotRiservaSpese)
                    .HasColumnName("TOT_RISERVA_SPESE")
                    .HasColumnType("numeric(18, 2)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolSinistri)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_SINIS__ID_PO__39D87308");
            });

            modelBuilder.Entity<PolSinistriMalus>(entity =>
            {
                entity.HasKey(e => e.KeyPolSinistriMalus);

                entity.ToTable("POL_SINISTRI_MALUS", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolSinistriMalus, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1POL_SINISTRI_MALUS")
                    .IsUnique();

                entity.Property(e => e.KeyPolSinistriMalus)
                    .HasColumnName("KEY_POL_SINISTRI_MALUS")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolSinistriMalus).HasColumnName("ID_POL_SINISTRI_MALUS");

                entity.Property(e => e.IdPolTestata).HasColumnName("ID_POL_TESTATA");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PolSinistriMovimenti>(entity =>
            {
                entity.HasKey(e => e.KeyPolSinistroMovimento)
                    .HasName("SYS_C0060525");

                entity.ToTable("POL_SINISTRI_MOVIMENTI", "IAGENCY");

                entity.HasIndex(e => e.IdAnagraficaBeneficiario)
                    .HasName("XX08POL_SINISTRI_MOVIMENTI");

                entity.HasIndex(e => e.IdAnagraficaDebitore)
                    .HasName("XX07POL_SINISTRI_MOVIMENTI");

                entity.HasIndex(e => e.IdCntFogliocassa)
                    .HasName("XX06POL_SINISTRI_MOVIMENTI");

                entity.HasIndex(e => e.IdPolSinistro)
                    .HasName("XX04POL_SINISTRI_MOVIMENTI");

                entity.HasIndex(e => e.IdPolSinistroMovimento)
                    .HasName("XX05POL_SINISTRI_MOVIMENTI");

                entity.HasIndex(e => e.IdPolSinistroPagatore)
                    .HasName("XX01POL_SINISTRI_MOVIMENTI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03POL_SINISTRI_MOVIMENTI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX02POL_SINISTRI_MOVIMENTI");

                entity.Property(e => e.KeyPolSinistroMovimento)
                    .HasColumnName("KEY_POL_SINISTRO_MOVIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ChiaveEsternaMovimento)
                    .HasColumnName("CHIAVE_ESTERNA_MOVIMENTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtOrdine)
                    .HasColumnName("DT_ORDINE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysMovimento)
                    .HasColumnName("DT_SYS_MOVIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgConsentiIncassoSino)
                    .HasColumnName("FLG_CONSENTI_INCASSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMezzoPagamentoIncasso)
                    .HasColumnName("FLG_MEZZO_PAGAMENTO_INCASSO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoMovimento)
                    .HasColumnName("FLG_STATO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMovimentoSinistro)
                    .HasColumnName("FLG_TIPO_MOVIMENTO_SINISTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagraficaBeneficiario)
                    .HasColumnName("ID_ANAGRAFICA_BENEFICIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagraficaDebitore)
                    .HasColumnName("ID_ANAGRAFICA_DEBITORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCntFogliocassa)
                    .HasColumnName("ID_CNT_FOGLIOCASSA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolSinistro)
                    .HasColumnName("ID_POL_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolSinistroMovimento)
                    .HasColumnName("ID_POL_SINISTRO_MOVIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolSinistroPagatore)
                    .HasColumnName("ID_POL_SINISTRO_PAGATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpMovimento)
                    .HasColumnName("IMP_MOVIMENTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvvigioni)
                    .HasColumnName("IMP_PROVVIGIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolSinistriMovimenti)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_SINIS__ID_PO__3ACC9741");
            });

            modelBuilder.Entity<PolSinistriPagatore>(entity =>
            {
                entity.HasKey(e => e.KeyPolSinistroPagatore);

                entity.ToTable("POL_SINISTRI_PAGATORE", "IAGENCY");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02POL_SINISTRI_PAGATORE");

                entity.HasIndex(e => e.IdPolSinistroPagatore)
                    .HasName("XX01POL_SINISTRI_PAGATORE");

                entity.Property(e => e.KeyPolSinistroPagatore)
                    .HasColumnName("KEY_POL_SINISTRO_PAGATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLegameContraente)
                    .HasColumnName("FLG_LEGAME_CONTRAENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolSinistroPagatore)
                    .HasColumnName("ID_POL_SINISTRO_PAGATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PolSinistriParitari>(entity =>
            {
                entity.HasKey(e => e.KeyPolSinParitario);

                entity.ToTable("POL_SINISTRI_PARITARI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolSinParitario, e.IdPolTestata, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX01_POL_SINISTRI_PARITARI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPolSinParitario, e.IdPolTestata, e.IdPolizza, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX02_POL_SINISTRI_PARITARI");

                entity.Property(e => e.KeyPolSinParitario)
                    .HasColumnName("KEY_POL_SIN_PARITARIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoPagamento).HasColumnName("ANNO_PAGAMENTO");

                entity.Property(e => e.AnnoSinistro).HasColumnName("ANNO_SINISTRO");

                entity.Property(e => e.DtAccadimento)
                    .HasColumnName("DT_ACCADIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMalusSino)
                    .HasColumnName("FLG_MALUS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPenalizzanteSino)
                    .HasColumnName("FLG_PENALIZZANTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoDanno)
                    .HasColumnName("FLG_TIPO_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdPolSinParitario).HasColumnName("ID_POL_SIN_PARITARIO");

                entity.Property(e => e.IdPolTestata).HasColumnName("ID_POL_TESTATA");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PercResponsabilita)
                    .HasColumnName("PERC_RESPONSABILITA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PolSinistriSconti>(entity =>
            {
                entity.HasKey(e => e.KeyPolSinistriSconti);

                entity.ToTable("POL_SINISTRI_SCONTI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolSinistriSconti, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1POL_SINISTRI_SCONTI")
                    .IsUnique();

                entity.Property(e => e.KeyPolSinistriSconti)
                    .HasColumnName("KEY_POL_SINISTRI_SCONTI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolSinistriSconti).HasColumnName("ID_POL_SINISTRI_SCONTI");

                entity.Property(e => e.IdPolVeicolo).HasColumnName("ID_POL_VEICOLO");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PolSinistriTardivi>(entity =>
            {
                entity.HasKey(e => e.KeyPolSinTardivo);

                entity.ToTable("POL_SINISTRI_TARDIVI", "IAGENCY");

                entity.HasIndex(e => new { e.CodiceIur, e.TargaAnia, e.DtStoScadenzaFis })
                    .HasName("X01_POL_SINISTRI_TARDIVI");

                entity.HasIndex(e => new { e.IdPolSinTardivo, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1POL_SINISTRI_TARDIVI")
                    .IsUnique();

                entity.HasIndex(e => new { e.CodiceIur, e.IdPolizza, e.IdPolTestata, e.DtStoScadenzaFis })
                    .HasName("X02_POL_SINISTRI_TARDIVI");

                entity.Property(e => e.KeyPolSinTardivo)
                    .HasColumnName("KEY_POL_SIN_TARDIVO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagniaGestione)
                    .HasColumnName("COD_COMPAGNIA_GESTIONE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceIur)
                    .IsRequired()
                    .HasColumnName("CODICE_IUR")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineOsservazione)
                    .HasColumnName("DT_FINE_OSSERVAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioOsservazione)
                    .HasColumnName("DT_INIZIO_OSSERVAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamentoSin)
                    .HasColumnName("DT_PAGAMENTO_SIN")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMalusSino)
                    .HasColumnName("FLG_MALUS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAniaAtrdNotifTardivi).HasColumnName("ID_ANIA_ATRD_NOTIF_TARDIVI");

                entity.Property(e => e.IdPolSinTardivo).HasColumnName("ID_POL_SIN_TARDIVO");

                entity.Property(e => e.IdPolTestata).HasColumnName("ID_POL_TESTATA");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NSinistroGestione)
                    .HasColumnName("N_SINISTRO_GESTIONE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.PercResponsabilita).HasColumnName("PERC_RESPONSABILITA");

                entity.Property(e => e.TargaAnia)
                    .HasColumnName("TARGA_ANIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PolSostituite>(entity =>
            {
                entity.HasKey(e => e.KeyPolSostituita)
                    .HasName("SYS_C0060537");

                entity.ToTable("POL_SOSTITUITE", "IAGENCY");

                entity.HasIndex(e => e.IdPolSostituita)
                    .HasName("XX01POL_SOSTITUITE");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03POL_SOSTITUITE");

                entity.HasIndex(e => e.IdSostituita)
                    .HasName("XX02POL_SOSTITUITE");

                entity.Property(e => e.KeyPolSostituita)
                    .HasColumnName("KEY_POL_SOSTITUITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolSostituita)
                    .HasColumnName("ID_POL_SOSTITUITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSostituita)
                    .HasColumnName("ID_SOSTITUITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolSostituite)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_SOSTI__ID_PO__3BC0BB7A");
            });

            modelBuilder.Entity<PolStati>(entity =>
            {
                entity.HasKey(e => e.KeyPolStato)
                    .HasName("SYS_C0060546");

                entity.ToTable("POL_STATI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis })
                    .HasName("XX04POL_STATI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPolStato, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01POL_STATI");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02POL_STATI");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.FlgStatoContratto })
                    .HasName("XX03POL_STATI");

                entity.Property(e => e.KeyPolStato)
                    .HasColumnName("KEY_POL_STATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAnnullamento)
                    .HasColumnName("DT_ANNULLAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoContratto)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_CONTRATTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdPolStato)
                    .HasColumnName("ID_POL_STATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabMotivoStorno)
                    .HasColumnName("ID_TAB_MOTIVO_STORNO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.KeyPolAutorizzazione)
                    .HasColumnName("KEY_POL_AUTORIZZAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolStati)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_STATI__ID_PO__3CB4DFB3");
            });

            modelBuilder.Entity<PolTestataAttestati>(entity =>
            {
                entity.HasKey(e => e.KeyPolTestata);

                entity.ToTable("POL_TESTATA_ATTESTATI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolVeicolo, e.IdPolizza, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02_POL_TESTATA");

                entity.HasIndex(e => new { e.IdPolTestata, e.IdPolVeicolo, e.IdPolizza, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX01_POL_TESTATA")
                    .IsUnique();

                entity.Property(e => e.KeyPolTestata)
                    .HasColumnName("KEY_POL_TESTATA")
                    .ValueGeneratedNever();

                entity.Property(e => e.ClasseCompAssegnazione)
                    .HasColumnName("CLASSE_COMP_ASSEGNAZIONE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseCompProvenienza)
                    .HasColumnName("CLASSE_COMP_PROVENIENZA")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseCu)
                    .HasColumnName("CLASSE_CU")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseCuProvenienza)
                    .HasColumnName("CLASSE_CU_PROVENIENZA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceIur)
                    .HasColumnName("CODICE_IUR")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DataElaborazione)
                    .HasColumnName("DATA_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtElaborazioneWise)
                    .HasColumnName("DT_ELABORAZIONE_WISE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineOsservazione)
                    .HasColumnName("DT_FINE_OSSERVAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioOsservazione)
                    .HasColumnName("DT_INIZIO_OSSERVAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadPolEvoluzione)
                    .HasColumnName("DT_SCAD_POL_EVOLUZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLegge40Sino)
                    .HasColumnName("FLG_LEGGE40_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPejus)
                    .HasColumnName("FLG_PEJUS")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdPolTestata).HasColumnName("ID_POL_TESTATA");

                entity.Property(e => e.IdPolVeicolo).HasColumnName("ID_POL_VEICOLO");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpFrancNonCorrisposte)
                    .HasColumnName("IMP_FRANC_NON_CORRISPOSTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NFrancNonCorrisposte).HasColumnName("N_FRANC_NON_CORRISPOSTE");

                entity.Property(e => e.NumSinOsservati).HasColumnName("NUM_SIN_OSSERVATI");

                entity.Property(e => e.NumSinPenalizzanti).HasColumnName("NUM_SIN_PENALIZZANTI");
            });

            modelBuilder.Entity<PolUbicazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPolUbicazione)
                    .HasName("SYS_C0060549");

                entity.ToTable("POL_UBICAZIONI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolBene, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02POL_UBICAZIONI");

                entity.HasIndex(e => new { e.IdPolUbicazione, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01POL_UBICAZIONI");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX03POL_UBICAZIONI");

                entity.Property(e => e.KeyPolUbicazione)
                    .HasColumnName("KEY_POL_UBICAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoCostruzione)
                    .HasColumnName("ANNO_COSTRUZIONE")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAbitPrincSino)
                    .HasColumnName("FLG_ABIT_PRINC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAttivita)
                    .HasColumnName("FLG_ATTIVITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoFabbricato)
                    .HasColumnName("FLG_TIPO_FABBRICATO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRipartizione)
                    .HasColumnName("FLG_TIPO_RIPARTIZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolBene)
                    .HasColumnName("ID_POL_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolUbicazione)
                    .HasColumnName("ID_POL_UBICAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ValoreImmobile)
                    .HasColumnName("VALORE_IMMOBILE")
                    .HasColumnType("numeric(18, 2)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolUbicazioni)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_UBICA__ID_PO__3DA903EC");
            });

            modelBuilder.Entity<PolVariabili>(entity =>
            {
                entity.HasKey(e => e.KeyPolVariabile)
                    .HasName("SYS_C0060553");

                entity.ToTable("POL_VARIABILI", "IAGENCY");

                entity.HasIndex(e => e.IdElencoValore)
                    .HasName("XX03POL_VARIABILI");

                entity.HasIndex(e => e.IdPolBene)
                    .HasName("XX05POL_VARIABILI");

                entity.HasIndex(e => e.IdPolGaranzia)
                    .HasName("XX04POL_VARIABILI");

                entity.HasIndex(e => e.IdPolVariabile)
                    .HasName("XX01POL_VARIABILI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02POL_VARIABILI");

                entity.HasIndex(e => new { e.IdPolVariabile, e.IdPolizza, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX06POL_VARIABILI");

                entity.Property(e => e.KeyPolVariabile)
                    .HasColumnName("KEY_POL_VARIABILE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEntitaVar)
                    .HasColumnName("FLG_TIPO_ENTITA_VAR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdElencoValore)
                    .HasColumnName("ID_ELENCO_VALORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolBene)
                    .HasColumnName("ID_POL_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolGaranzia)
                    .HasColumnName("ID_POL_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolVariabile)
                    .HasColumnName("ID_POL_VARIABILE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ValoreData)
                    .HasColumnName("VALORE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ValoreNumerico)
                    .HasColumnName("VALORE_NUMERICO")
                    .HasColumnType("numeric(36, 18)");

                entity.Property(e => e.ValoreStringa)
                    .HasColumnName("VALORE_STRINGA")
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolVariabili)
                    .HasForeignKey(d => d.IdPolizza)
                    .HasConstraintName("FK__POL_VARIA__ID_PO__3E9D2825");
            });

            modelBuilder.Entity<PolVariapremi>(entity =>
            {
                entity.HasKey(e => e.KeyPolVariapremio)
                    .HasName("SYS_C0060556");

                entity.ToTable("POL_VARIAPREMI", "IAGENCY");

                entity.HasIndex(e => e.IdPolGaranzia)
                    .HasName("XX03POL_VARIAPREMI");

                entity.HasIndex(e => e.IdPolVariapremio)
                    .HasName("XX04POL_VARIAPREMI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX01POL_VARIAPREMI");

                entity.HasIndex(e => e.IdPrVariapremio)
                    .HasName("XX02POL_VARIAPREMI");

                entity.Property(e => e.KeyPolVariapremio)
                    .HasColumnName("KEY_POL_VARIAPREMIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CoefVariazione)
                    .HasColumnName("COEF_VARIAZIONE")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolGaranzia)
                    .HasColumnName("ID_POL_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolVariapremio)
                    .HasColumnName("ID_POL_VARIAPREMIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrVariapremio)
                    .HasColumnName("ID_PR_VARIAPREMIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpVariazione)
                    .HasColumnName("IMP_VARIAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PerVariazione)
                    .HasColumnName("PER_VARIAZIONE")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PuntiVariazione)
                    .HasColumnName("PUNTI_VARIAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolVariapremi)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_VARIA__ID_PO__3F914C5E");
            });

            modelBuilder.Entity<PolVeicoli>(entity =>
            {
                entity.HasKey(e => e.KeyPolVeicolo)
                    .HasName("SYS_C0060558");

                entity.ToTable("POL_VEICOLI", "IAGENCY");

                entity.HasIndex(e => e.IdAllestimento)
                    .HasName("XX04POL_VEICOLI");

                entity.HasIndex(e => e.IdClasse)
                    .HasName("XX06POL_VEICOLI");

                entity.HasIndex(e => e.IdPolBene)
                    .HasName("XX08POL_VEICOLI");

                entity.HasIndex(e => e.IdPolRca)
                    .HasName("XX03POL_VEICOLI");

                entity.HasIndex(e => e.IdPolVeicolo)
                    .HasName("XX01POL_VEICOLI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX09POL_VEICOLI");

                entity.HasIndex(e => e.IdSettore)
                    .HasName("XX07POL_VEICOLI");

                entity.HasIndex(e => e.IdUso)
                    .HasName("XX05POL_VEICOLI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX02POL_VEICOLI");

                entity.Property(e => e.KeyPolVeicolo)
                    .HasColumnName("KEY_POL_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodIvehicle)
                    .HasColumnName("COD_IVEHICLE")
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.CodOmologazione4ruote)
                    .HasColumnName("COD_OMOLOGAZIONE_4RUOTE")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.DtImmatricolazione)
                    .HasColumnName("DT_IMMATRICOLAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAbrogaSino)
                    .HasColumnName("FLG_ABROGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCoperturaAuto)
                    .HasColumnName("FLG_COPERTURA_AUTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSiglaTargaSpeciale)
                    .HasColumnName("FLG_SIGLA_TARGA_SPECIALE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoTarga)
                    .HasColumnName("FLG_TIPO_TARGA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoVeicoloMctc)
                    .HasColumnName("FLG_TIPO_VEICOLO_MCTC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAllestimento)
                    .HasColumnName("ID_ALLESTIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdClasse)
                    .HasColumnName("ID_CLASSE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNazione)
                    .HasColumnName("ID_NAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNazioneImm).HasColumnName("ID_NAZIONE_IMM");

                entity.Property(e => e.IdPolBene)
                    .HasColumnName("ID_POL_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolRca)
                    .HasColumnName("ID_POL_RCA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolVeicolo)
                    .HasColumnName("ID_POL_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSettore)
                    .HasColumnName("ID_SETTORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUso)
                    .HasColumnName("ID_USO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpValoreVeicolo)
                    .HasColumnName("IMP_VALORE_VEICOLO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NTesseraAssistenza)
                    .HasColumnName("N_TESSERA_ASSISTENZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Targa)
                    .HasColumnName("TARGA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TargaAnia)
                    .HasColumnName("TARGA_ANIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Telaio)
                    .HasColumnName("TELAIO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.XmlVisura)
                    .HasColumnName("XML_VISURA")
                    .HasColumnType("text");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolVeicoli)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_VEICO__ID_PO__40857097");
            });

            modelBuilder.Entity<PolVincoli>(entity =>
            {
                entity.HasKey(e => e.KeyPolVincolo)
                    .HasName("SYS_C0060561");

                entity.ToTable("POL_VINCOLI", "IAGENCY");

                entity.HasIndex(e => e.IdAllegato)
                    .HasName("XX05POL_VINCOLI");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03POL_VINCOLI");

                entity.HasIndex(e => e.IdPolBene)
                    .HasName("XX04POL_VINCOLI");

                entity.HasIndex(e => e.IdPolVincolo)
                    .HasName("XX01POL_VINCOLI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02POL_VINCOLI");

                entity.Property(e => e.KeyPolVincolo)
                    .HasColumnName("KEY_POL_VINCOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtScadVincolo)
                    .HasColumnName("DT_SCAD_VINCOLO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSvincolo)
                    .HasColumnName("DT_SVINCOLO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtVincolo)
                    .HasColumnName("DT_VINCOLO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTestoLiberoSino)
                    .HasColumnName("FLG_TESTO_LIBERO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTestoStandardSino)
                    .HasColumnName("FLG_TESTO_STANDARD_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVincolo)
                    .HasColumnName("FLG_TIPO_VINCOLO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato)
                    .HasColumnName("ID_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolBene)
                    .HasColumnName("ID_POL_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolVincolo)
                    .HasColumnName("ID_POL_VINCOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrVincolataria)
                    .HasColumnName("ID_PR_VINCOLATARIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteAllegato)
                    .HasColumnName("NOTE_ALLEGATO")
                    .IsUnicode(false);

                entity.Property(e => e.NrPratica)
                    .HasColumnName("NR_PRATICA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.PolVincoli)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__POL_VINCO__ID_PO__417994D0");
            });

            modelBuilder.Entity<PolVincoliTesti>(entity =>
            {
                entity.HasKey(e => e.KeyPolTestoVincolo)
                    .HasName("PK__POL_VINC__E8DC5AF0288A2D16");

                entity.ToTable("POL_VINCOLI_TESTI", "IAGENCY");

                entity.HasIndex(e => e.IdPolTestoVincolo)
                    .HasName("XX01POL_VINCOLI_TESTI");

                entity.HasIndex(e => e.IdPolVincolo)
                    .HasName("XX02POL_VINCOLI_TESTI");

                entity.HasIndex(e => e.KeyPolTestoVincolo)
                    .HasName("POL_VINCOLI_TESTI_PK")
                    .IsUnique();

                entity.Property(e => e.KeyPolTestoVincolo)
                    .HasColumnName("KEY_POL_TESTO_VINCOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAllegato)
                    .HasColumnName("ID_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdModVincolataria)
                    .HasColumnName("ID_MOD_VINCOLATARIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolTestoVincolo)
                    .HasColumnName("ID_POL_TESTO_VINCOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolVincolo)
                    .HasColumnName("ID_POL_VINCOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdModVincolatariaNavigation)
                    .WithMany(p => p.PolVincoliTesti)
                    .HasForeignKey(d => d.IdModVincolataria)
                    .HasConstraintName("FK03_pr_modelli_vincolatarie");
            });

            modelBuilder.Entity<PrAbbattimentiSconti>(entity =>
            {
                entity.HasKey(e => e.KeyPrAbbattimento)
                    .HasName("PK__PR_ABBAT__A7981E1578C686AD");

                entity.ToTable("PR_ABBATTIMENTI_SCONTI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrAbbattimento, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX02PR_ABBATTIMENTI_SCONTI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrProdotto, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX01PR_ABBATTIMENTI_SCONTI");

                entity.Property(e => e.KeyPrAbbattimento)
                    .HasColumnName("KEY_PR_ABBATTIMENTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DescAbbattimento)
                    .HasColumnName("DESC_ABBATTIMENTO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgNumeroSinistri)
                    .IsRequired()
                    .HasColumnName("FLG_NUMERO_SINISTRI")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAbbattimento)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ABBATTIMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescAbbattimento).HasColumnName("ID_DESC_ABBATTIMENTO");

                entity.Property(e => e.IdPrAbbattimento).HasColumnName("ID_PR_ABBATTIMENTO");

                entity.Property(e => e.IdPrProdotto).HasColumnName("ID_PR_PRODOTTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.PctAbbattimento).HasColumnName("PCT_ABBATTIMENTO");
            });

            modelBuilder.Entity<PrBeni>(entity =>
            {
                entity.HasKey(e => e.KeyPrBene)
                    .HasName("SYS_C0060573");

                entity.ToTable("PR_BENI", "IAGENCY");

                entity.HasIndex(e => e.IdPrBene)
                    .HasName("XX01PR_BENI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX02PR_BENI");

                entity.HasIndex(e => new { e.IdPrProdotto, e.DtStoScadenzaLog })
                    .HasName("XIE1PR_BENI");

                entity.HasIndex(e => new { e.IdPrBene, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_BENI")
                    .IsUnique();

                entity.Property(e => e.KeyPrBene)
                    .HasColumnName("KEY_PR_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDerogaEtaAssicurato)
                    .HasColumnName("COD_DEROGA_ETA_ASSICURATO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaMaxBeni)
                    .HasColumnName("COD_DEROGA_MAX_BENI")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.EtaMaxAssicurato).HasColumnName("ETA_MAX_ASSICURATO");

                entity.Property(e => e.EtaMaxRinnovo).HasColumnName("ETA_MAX_RINNOVO");

                entity.Property(e => e.EtaSegnalazioneAssicurato).HasColumnName("ETA_SEGNALAZIONE_ASSICURATO");

                entity.Property(e => e.FlgAbilMultiPrApertiSino)
                    .HasColumnName("FLG_ABIL_MULTI_PR_APERTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAssicuratoContraente)
                    .HasColumnName("FLG_ASSICURATO_CONTRAENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDatiRischioImpiegoSino)
                    .HasColumnName("FLG_DATI_RISCHIO_IMPIEGO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaEtaAssicurato)
                    .HasColumnName("FLG_DEROGA_ETA_ASSICURATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaMaxBeniSino)
                    .HasColumnName("FLG_DEROGA_MAX_BENI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDisabilEsclusioneSino)
                    .HasColumnName("FLG_DISABIL_ESCLUSIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDisabilInclusioneSino)
                    .HasColumnName("FLG_DISABIL_INCLUSIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGarObbSino)
                    .HasColumnName("FLG_GAR_OBB_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNoteSino)
                    .IsRequired()
                    .HasColumnName("FLG_NOTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNumeroCertificatoSino)
                    .HasColumnName("flg_numero_certificato_sino")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicGrTerContraSino)
                    .HasColumnName("FLG_RIC_GR_TER_CONTRA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiediDebitoreSino)
                    .HasColumnName("FLG_RICHIEDI_DEBITORE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiediMandatariaSino)
                    .HasColumnName("FLG_RICHIEDI_MANDATARIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoBene)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_BENE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrBene)
                    .HasColumnName("ID_PR_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NMaxBeni)
                    .HasColumnName("N_MAX_BENI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NMinBeni)
                    .HasColumnName("N_MIN_BENI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.TestoBeneGenerico)
                    .HasColumnName("TESTO_BENE_GENERICO")
                    .IsUnicode(false);

                entity.Property(e => e.TooltipInfo)
                    .HasColumnName("TOOLTIP_INFO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrCaricamenti>(entity =>
            {
                entity.HasKey(e => e.KeyPrCaricamento)
                    .HasName("SYS_C0060579");

                entity.ToTable("PR_CARICAMENTI", "IAGENCY");

                entity.HasIndex(e => e.IdPrCaricamento)
                    .HasName("XX01PR_CARICAMENTI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX02PR_CARICAMENTI");

                entity.Property(e => e.KeyPrCaricamento)
                    .HasColumnName("KEY_PR_CARICAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrCaricamento)
                    .HasColumnName("ID_PR_CARICAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpCapitaleA)
                    .HasColumnName("IMP_CAPITALE_A")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitaleDa)
                    .HasColumnName("IMP_CAPITALE_DA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PercCaricamento)
                    .HasColumnName("PERC_CARICAMENTO")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PrClassiRischio>(entity =>
            {
                entity.HasKey(e => e.IdPrClasseRischio)
                    .HasName("PK_ID_PR_CLASSE_RISCHIO");

                entity.ToTable("PR_CLASSI_RISCHIO", "IAGENCY");

                entity.HasIndex(e => e.IdPrClasseRischio)
                    .HasName("XX01PR_CLASSI_RISCHIO");

                entity.Property(e => e.IdPrClasseRischio)
                    .HasColumnName("ID_PR_CLASSE_RISCHIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Codice)
                    .IsRequired()
                    .HasColumnName("CODICE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .IsRequired()
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrClassiRischioDett>(entity =>
            {
                entity.HasKey(e => e.IdPrClasseRischioDett)
                    .HasName("PK_ID_PR_CLASSE_RISCHIO_DETT");

                entity.ToTable("PR_CLASSI_RISCHIO_DETT", "IAGENCY");

                entity.HasIndex(e => e.IdPrClasseRischioDett)
                    .HasName("XX01PR_CLASSI_RISCHIO_DETT");

                entity.Property(e => e.IdPrClasseRischioDett)
                    .HasColumnName("ID_PR_CLASSE_RISCHIO_DETT")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodAllestimento)
                    .IsRequired()
                    .HasColumnName("COD_ALLESTIMENTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodMarca)
                    .IsRequired()
                    .HasColumnName("COD_MARCA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodModello)
                    .IsRequired()
                    .HasColumnName("COD_MODELLO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrClasseRischio).HasColumnName("ID_PR_CLASSE_RISCHIO");
            });

            modelBuilder.Entity<PrCoefRisMatematica>(entity =>
            {
                entity.HasKey(e => e.KeyPrCoefRisMatematica)
                    .HasName("SYS_C0066125");

                entity.ToTable("PR_COEF_RIS_MATEMATICA", "IAGENCY");

                entity.HasIndex(e => e.IdPrCoefRisMatematica)
                    .HasName("XX01PR_COEF_RIS_MATEMATICA");

                entity.HasIndex(e => e.IdPrGarTariffa)
                    .HasName("XX02PR_COEF_RIS_MATEMATICA");

                entity.HasIndex(e => new { e.IdPrGarTariffa, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis, e.Antidurata, e.ValoreParametri })
                    .HasName("XX03PR_COEF_RIS_MATEMATICA");

                entity.Property(e => e.KeyPrCoefRisMatematica)
                    .HasColumnName("KEY_PR_COEF_RIS_MATEMATICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Antidurata)
                    .HasColumnName("ANTIDURATA")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrCoefRisMatematica)
                    .HasColumnName("ID_PR_COEF_RIS_MATEMATICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarTariffa)
                    .HasColumnName("ID_PR_GAR_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.TassoPremioPuro)
                    .HasColumnName("TASSO_PREMIO_PURO")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.TassoRisMatematica)
                    .HasColumnName("TASSO_RIS_MATEMATICA")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.TassoRisSpese)
                    .HasColumnName("TASSO_RIS_SPESE")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.ValoreParametri)
                    .HasColumnName("VALORE_PARAMETRI")
                    .HasMaxLength(90)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrCoeffIstat>(entity =>
            {
                entity.HasKey(e => e.KeyCoeffIstat);

                entity.ToTable("PR_COEFF_ISTAT", "IAGENCY");

                entity.HasIndex(e => e.IdCoeffIstat)
                    .HasName("XX01PR_COEFF_ISTAT");

                entity.HasIndex(e => e.IdIstat)
                    .HasName("XX02PR_COEFF_ISTAT");

                entity.Property(e => e.KeyCoeffIstat)
                    .HasColumnName("KEY_COEFF_ISTAT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCoeffIstat)
                    .HasColumnName("ID_COEFF_ISTAT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIstat)
                    .HasColumnName("ID_ISTAT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IndiceIndicizzazione)
                    .HasColumnName("INDICE_INDICIZZAZIONE")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.PercVariazione)
                    .HasColumnName("PERC_VARIAZIONE")
                    .HasColumnType("numeric(10, 5)");

                entity.HasOne(d => d.IdIstatNavigation)
                    .WithMany(p => p.PrCoeffIstat)
                    .HasForeignKey(d => d.IdIstat)
                    .HasConstraintName("FK__PR_COEFF___ID_IS__4361DD42");
            });

            modelBuilder.Entity<PrCombinazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrCombinazione)
                    .HasName("SYS_C0060589");

                entity.ToTable("PR_COMBINAZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdDescCombinazione)
                    .HasName("XX02PR_COMBINAZIONI");

                entity.HasIndex(e => e.IdPrBene)
                    .HasName("XX03PR_COMBINAZIONI");

                entity.HasIndex(e => e.IdPrCombinazione)
                    .HasName("XX01PR_COMBINAZIONI");

                entity.HasIndex(e => new { e.IdPrCombinazione, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_COMBINAZIONI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrBene, e.CodCombinazione, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK2PR_COMBINAZIONI")
                    .IsUnique();

                entity.Property(e => e.KeyPrCombinazione)
                    .HasColumnName("KEY_PR_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodCombinazione)
                    .HasColumnName("COD_COMBINAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescCombinazione)
                    .HasColumnName("DESC_COMBINAZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDescCombinazione)
                    .HasColumnName("ID_DESC_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrBene)
                    .HasColumnName("ID_PR_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrCombinazione)
                    .HasColumnName("ID_PR_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<PrCompagnie>(entity =>
            {
                entity.HasKey(e => e.KeyPrCompagnia)
                    .HasName("SYS_C0060597");

                entity.ToTable("PR_COMPAGNIE", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03PR_COMPAGNIE");

                entity.HasIndex(e => e.IdPrCompagnia)
                    .HasName("XX01PR_COMPAGNIE");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX04PR_COMPAGNIE");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX02PR_COMPAGNIE");

                entity.HasIndex(e => new { e.IdPrCompagnia, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_COMPAGNIE")
                    .IsUnique();

                entity.Property(e => e.KeyPrCompagnia)
                    .HasColumnName("KEY_PR_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrCompagnia)
                    .HasColumnName("ID_PR_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrCompatibili>(entity =>
            {
                entity.HasKey(e => e.KeyPrCompatibile)
                    .HasName("SYS_C0060599");

                entity.ToTable("PR_COMPATIBILI", "IAGENCY");

                entity.HasIndex(e => e.IdPrCompatibile)
                    .HasName("XX01PR_COMPATIBILI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX02PR_COMPATIBILI");

                entity.HasIndex(e => e.IdPrProdottoCompatibile)
                    .HasName("XX03PR_COMPATIBILI");

                entity.HasIndex(e => new { e.IdPrProdotto, e.DtStoScadenzaLog })
                    .HasName("XIE1PR_COMPATIBILI");

                entity.HasIndex(e => new { e.IdPrCompatibile, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_COMPATIBILI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrProdotto, e.IdPrProdottoCompatibile, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK2PR_COMPATIBILI")
                    .IsUnique();

                entity.Property(e => e.KeyPrCompatibile)
                    .HasColumnName("KEY_PR_COMPATIBILE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrCompatibile)
                    .HasColumnName("ID_PR_COMPATIBILE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdottoCompatibile)
                    .HasColumnName("ID_PR_PRODOTTO_COMPATIBILE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrComposizioneCapitale>(entity =>
            {
                entity.HasKey(e => e.KeyPrComposizioneCapitale);

                entity.ToTable("PR_COMPOSIZIONE_CAPITALE", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrComposizioneCapitale, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_COMPOSIZIONE_CAPITALE")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrGarTariffa, e.IdPrTarComposizione, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK2PR_COMPOSIZIONE_CAPITALE")
                    .IsUnique();

                entity.Property(e => e.KeyPrComposizioneCapitale)
                    .HasColumnName("KEY_PR_COMPOSIZIONE_CAPITALE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoComposizione)
                    .HasColumnName("FLG_TIPO_COMPOSIZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrComposizioneCapitale).HasColumnName("ID_PR_COMPOSIZIONE_CAPITALE");

                entity.Property(e => e.IdPrGarTariffa).HasColumnName("ID_PR_GAR_TARIFFA");

                entity.Property(e => e.IdPrTarComposizione).HasColumnName("ID_PR_TAR_COMPOSIZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.PercComposizione)
                    .HasColumnName("PERC_COMPOSIZIONE")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PrControlliIcontrol>(entity =>
            {
                entity.HasKey(e => e.KeyControlloIcontrol)
                    .HasName("PK_IAGENCY.PR_CONTROLLI_ICONTROL");

                entity.ToTable("PR_CONTROLLI_ICONTROL", "IAGENCY");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("IX_PR_CONTROLLI_ICONTROL");

                entity.Property(e => e.KeyControlloIcontrol)
                    .HasColumnName("KEY_CONTROLLO_ICONTROL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDerogaIcontrol).HasColumnName("COD_DEROGA_ICONTROL");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPaginaControllo)
                    .IsRequired()
                    .HasColumnName("FLG_PAGINA_CONTROLLO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdControlloIcontrol)
                    .HasColumnName("ID_CONTROLLO_ICONTROL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MetodoIcontrol)
                    .IsRequired()
                    .HasColumnName("METODO_ICONTROL")
                    .HasMaxLength(500)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrDatiPreventivi>(entity =>
            {
                entity.HasKey(e => e.KeyPrDatoPreventivo)
                    .HasName("PK_IAGENCY].[PR_DATI_PREVENTIVI");

                entity.ToTable("PR_DATI_PREVENTIVI", "IAGENCY");

                entity.Property(e => e.KeyPrDatoPreventivo)
                    .HasColumnName("KEY_PR_DATO_PREVENTIVO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdFlgvalue).HasColumnName("ID_FLGVALUE");

                entity.Property(e => e.IdPrDatoPreventivo).HasColumnName("ID_PR_DATO_PREVENTIVO");

                entity.Property(e => e.IdPrPreventivo).HasColumnName("ID_PR_PREVENTIVO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrDatiPreventiviMascdin>(entity =>
            {
                entity.HasKey(e => e.KeyPrDatoPreventivoMascdin)
                    .HasName("PK_IAGENCY].[[PR_DATI_PREVENTIVI_MASCDIN");

                entity.ToTable("PR_DATI_PREVENTIVI_MASCDIN", "IAGENCY");

                entity.Property(e => e.KeyPrDatoPreventivoMascdin)
                    .HasColumnName("KEY_PR_DATO_PREVENTIVO_MASCDIN")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdFrmVariabileEntita).HasColumnName("ID_FRM_VARIABILE_ENTITA");

                entity.Property(e => e.IdPrDatoPreventivoMascdin).HasColumnName("ID_PR_DATO_PREVENTIVO_MASCDIN");

                entity.Property(e => e.IdPrPreventivo).HasColumnName("ID_PR_PREVENTIVO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrDatiTecniciUbicazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrDatiTecniciUbicazione)
                    .HasName("PK__PR_DATI___C7A5750F31C1F28F");

                entity.ToTable("PR_DATI_TECNICI_UBICAZIONI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrDatiTecniciUbicazione, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_DATI_TECNICI_UBICAZIONI");

                entity.HasIndex(e => new { e.IdPrDatiUbicazione, e.FlgDatiTecniciUbicazione, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX02PR_DATI_TECNICI_UBICAZIONI")
                    .IsUnique();

                entity.Property(e => e.KeyPrDatiTecniciUbicazione)
                    .HasColumnName("KEY_PR_DATI_TECNICI_UBICAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodFlagSistema)
                    .HasColumnName("COD_FLAG_SISTEMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDatiTecniciUbicazione)
                    .HasColumnName("FLG_DATI_TECNICI_UBICAZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFormatoVariabile)
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligatorioSino)
                    .HasColumnName("FLG_OBBLIGATORIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrDatiTecniciUbicazione).HasColumnName("ID_PR_DATI_TECNICI_UBICAZIONE");

                entity.Property(e => e.IdPrDatiUbicazione).HasColumnName("ID_PR_DATI_UBICAZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrDatiTecniciVeicoli>(entity =>
            {
                entity.HasKey(e => e.KeyPrDatiTecniciVeicolo)
                    .HasName("PK__PR_DATI___DC2869ABF46D880D");

                entity.ToTable("PR_DATI_TECNICI_VEICOLI", "IAGENCY");

                entity.HasIndex(e => e.IdPrTipoVeicolo)
                    .HasName("XX02PR_DATI_TECNICI_VEICOLI");

                entity.HasIndex(e => new { e.IdPrTipoVeicolo, e.FlgDatiTecniciVeicolo, e.DtStoEffettoLog, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_DATI_TECNICI_VEICOLI")
                    .IsUnique();

                entity.Property(e => e.KeyPrDatiTecniciVeicolo)
                    .HasColumnName("KEY_PR_DATI_TECNICI_VEICOLO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodFlagSistema)
                    .HasColumnName("COD_FLAG_SISTEMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDatiTecniciVeicolo)
                    .HasColumnName("FLG_DATI_TECNICI_VEICOLO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFormatoVariabile)
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligatorioSino)
                    .HasColumnName("FLG_OBBLIGATORIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPrincipaleSino)
                    .HasColumnName("FLG_PRINCIPALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrDatiTecniciVeicolo).HasColumnName("ID_PR_DATI_TECNICI_VEICOLO");

                entity.Property(e => e.IdPrTipoVeicolo).HasColumnName("ID_PR_TIPO_VEICOLO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ProgressivoParametro).HasColumnName("PROGRESSIVO_PARAMETRO");
            });

            modelBuilder.Entity<PrDatiUbicazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrDatiUbicazione);

                entity.ToTable("PR_DATI_UBICAZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdPrBene)
                    .HasName("XX02PR_DATI_UBICAZIONI");

                entity.HasIndex(e => e.IdPrDatiUbicazione)
                    .HasName("XX01PR_DATI_UBICAZIONI");

                entity.Property(e => e.KeyPrDatiUbicazione)
                    .HasColumnName("KEY_PR_DATI_UBICAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAbitPrincSino)
                    .HasColumnName("FLG_ABIT_PRINC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCodeAttivita)
                    .HasColumnName("FLG_CODE_ATTIVITA")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGeolocalizzazioneSino)
                    .HasColumnName("FLG_GEOLOCALIZZAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgProprietariObbSino)
                    .HasColumnName("FLG_PROPRIETARI_OBB_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicAnnoSino)
                    .HasColumnName("FLG_RIC_ANNO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicAttivitaSino)
                    .HasColumnName("FLG_RIC_ATTIVITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicTipoFabbSino)
                    .HasColumnName("FLG_RIC_TIPO_FABB_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicTipoRipSino)
                    .HasColumnName("FLG_RIC_TIPO_RIP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichProprietariSino)
                    .HasColumnName("FLG_RICH_PROPRIETARI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiediValore)
                    .HasColumnName("FLG_RICHIEDI_VALORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaVincolo)
                    .HasColumnName("FLG_RICHIESTA_VINCOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCalcoloValore)
                    .HasColumnName("FLG_TIPO_CALCOLO_VALORE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoFabbObbSino)
                    .HasColumnName("FLG_TIPO_FABB_OBB_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRipObbSino)
                    .HasColumnName("FLG_TIPO_RIP_OBB_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrBene)
                    .HasColumnName("ID_PR_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrDatiUbicazione)
                    .HasColumnName("ID_PR_DATI_UBICAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrDatiVeicoli>(entity =>
            {
                entity.HasKey(e => e.KeyPrDatiVeicolo)
                    .HasName("SYS_C0060604");

                entity.ToTable("PR_DATI_VEICOLI", "IAGENCY");

                entity.HasIndex(e => e.IdPrBene)
                    .HasName("XX02PR_DATI_VEICOLI");

                entity.HasIndex(e => e.IdPrDatiVeicolo)
                    .HasName("XX01PR_DATI_VEICOLI");

                entity.Property(e => e.KeyPrDatiVeicolo)
                    .HasColumnName("KEY_PR_DATI_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDerogaNumSin)
                    .HasColumnName("COD_DEROGA_NUM_SIN")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgClasseSino)
                    .HasColumnName("FLG_CLASSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCoperturaArdSino)
                    .HasColumnName("FLG_COPERTURA_ARD_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCoperturaRcaArdSino)
                    .HasColumnName("FLG_COPERTURA_RCA_ARD_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCoperturaRcaSino)
                    .HasColumnName("FLG_COPERTURA_RCA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDataImmSino)
                    .HasColumnName("FLG_DATA_IMM_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaNumSinSino)
                    .HasColumnName("FLG_DEROGA_NUM_SIN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDisabCtrlIbdvSino)
                    .HasColumnName("FLG_DISAB_CTRL_IBDV_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFormaTarSino)
                    .HasColumnName("FLG_FORMA_TAR_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoAssicSino)
                    .HasColumnName("FLG_MOTIVO_ASSIC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSettoreSino)
                    .HasColumnName("FLG_SETTORE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgUsoSino)
                    .HasColumnName("FLG_USO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrBene)
                    .HasColumnName("ID_PR_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrDatiVeicolo)
                    .HasColumnName("ID_PR_DATI_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumAnniAssicurati).HasColumnName("NUM_ANNI_ASSICURATI");

                entity.Property(e => e.NumSinAmmessi).HasColumnName("NUM_SIN_AMMESSI");
            });

            modelBuilder.Entity<PrDettEvoluzioneBm>(entity =>
            {
                entity.HasKey(e => e.KeyPrDettEvoluzioneBm)
                    .HasName("SYS_C0060606");

                entity.ToTable("PR_DETT_EVOLUZIONE_BM", "IAGENCY");

                entity.HasIndex(e => e.DtStoScadenzaLog)
                    .HasName("XIE1PR_DETT_EVOLUZIONE_BM");

                entity.HasIndex(e => e.IdPrDettEvoluzioneBm)
                    .HasName("XX01PR_DETT_EVOLUZIONE_BM");

                entity.HasIndex(e => e.IdPrEvoluzioneBm)
                    .HasName("XX04PR_DETT_EVOLUZIONE_BM");

                entity.HasIndex(e => e.IdPrValParClasseMer)
                    .HasName("XX02PR_DETT_EVOLUZIONE_BM");

                entity.HasIndex(e => e.IdPrValParClasseMerAss)
                    .HasName("XX03PR_DETT_EVOLUZIONE_BM");

                entity.HasIndex(e => new { e.IdPrDettEvoluzioneBm, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_DETT_EVOLUZIONE_BM")
                    .IsUnique();

                entity.Property(e => e.KeyPrDettEvoluzioneBm)
                    .HasColumnName("KEY_PR_DETT_EVOLUZIONE_BM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrDettEvoluzioneBm)
                    .HasColumnName("ID_PR_DETT_EVOLUZIONE_BM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrEvoluzioneBm)
                    .HasColumnName("ID_PR_EVOLUZIONE_BM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrValParClasseMer)
                    .HasColumnName("ID_PR_VAL_PAR_CLASSE_MER")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrValParClasseMerAss)
                    .HasColumnName("ID_PR_VAL_PAR_CLASSE_MER_ASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumSinistriOsservatiA)
                    .HasColumnName("NUM_SINISTRI_OSSERVATI_A")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumSinistriOsservatiDa)
                    .HasColumnName("NUM_SINISTRI_OSSERVATI_DA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrDurate>(entity =>
            {
                entity.HasKey(e => e.KeyPrDurata)
                    .HasName("SYS_C0060615");

                entity.ToTable("PR_DURATE", "IAGENCY");

                entity.HasIndex(e => e.IdPrDurata)
                    .HasName("XX01PR_DURATE");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX02PR_DURATE");

                entity.HasIndex(e => new { e.IdPrProdotto, e.DtStoScadenzaLog })
                    .HasName("XIE1PR_DURATE");

                entity.HasIndex(e => new { e.IdPrDurata, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_DURATE")
                    .IsUnique();

                entity.Property(e => e.KeyPrDurata)
                    .HasColumnName("KEY_PR_DURATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAmmessoPolBaseSino)
                    .HasColumnName("FLG_AMMESSO_POL_BASE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDurata)
                    .IsRequired()
                    .HasColumnName("FLG_DURATA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrDurata)
                    .HasColumnName("ID_PR_DURATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrEleValVariabili>(entity =>
            {
                entity.HasKey(e => e.KeyPrElencoValori)
                    .HasName("SYS_C0060619");

                entity.ToTable("PR_ELE_VAL_VARIABILI", "IAGENCY");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02PR_ELE_VAL_VARIABILI");

                entity.HasIndex(e => e.IdPrElencoValori)
                    .HasName("XX01PR_ELE_VAL_VARIABILI");

                entity.HasIndex(e => e.IdPrElencoValoriPrin)
                    .HasName("XX04PR_ELE_VAL_VARIABILI");

                entity.HasIndex(e => e.IdPrVariabile)
                    .HasName("XX03PR_ELE_VAL_VARIABILI");

                entity.Property(e => e.KeyPrElencoValori)
                    .HasColumnName("KEY_PR_ELENCO_VALORI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodParametro)
                    .HasColumnName("COD_PARAMETRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFormatoVariabile)
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNonInElencoSino)
                    .HasColumnName("FLG_NON_IN_ELENCO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrElencoValori)
                    .HasColumnName("ID_PR_ELENCO_VALORI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrElencoValoriPrin)
                    .HasColumnName("ID_PR_ELENCO_VALORI_PRIN")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrVariabile)
                    .HasColumnName("ID_PR_VARIABILE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Ordine)
                    .HasColumnName("ORDINE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ValoreData)
                    .HasColumnName("VALORE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ValoreNumerico)
                    .HasColumnName("VALORE_NUMERICO")
                    .HasColumnType("numeric(36, 18)");

                entity.Property(e => e.ValoreStringa)
                    .HasColumnName("VALORE_STRINGA")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrEntiErogatori>(entity =>
            {
                entity.HasKey(e => e.KeyPrEnteErogatore)
                    .HasName("PK_IAGENCY.PR_ENTI_EROGATORI");

                entity.ToTable("PR_ENTI_EROGATORI", "IAGENCY");

                entity.HasIndex(e => e.IdPrEnteErogatore)
                    .HasName("PR_ENTI_EROGATORI_ID_PR_ENTE_EROGATORE");

                entity.HasIndex(e => new { e.IdPrEnteErogatore, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("PR_ENTI_EROGATORI_INDEX")
                    .IsUnique();

                entity.Property(e => e.KeyPrEnteErogatore)
                    .HasColumnName("KEY_PR_ENTE_EROGATORE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEnteErogatore)
                    .IsRequired()
                    .HasColumnName("FLG_ENTE_EROGATORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrEnteErogatore).HasColumnName("ID_PR_ENTE_EROGATORE");

                entity.Property(e => e.IdPrGaranzia).HasColumnName("ID_PR_GARANZIA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrEvoluzioneBm>(entity =>
            {
                entity.HasKey(e => e.KeyPrEvoluzioneBm)
                    .HasName("SYS_C0060621");

                entity.ToTable("PR_EVOLUZIONE_BM", "IAGENCY");

                entity.HasIndex(e => e.DtStoScadenzaLog)
                    .HasName("XIE1PR_EVOLUZIONE_BM");

                entity.HasIndex(e => e.IdPrEvoluzioneBm)
                    .HasName("XX01PR_EVOLUZIONE_BM");

                entity.HasIndex(e => new { e.IdPrEvoluzioneBm, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_EVOLUZIONE_BM")
                    .IsUnique();

                entity.Property(e => e.KeyPrEvoluzioneBm)
                    .HasColumnName("KEY_PR_EVOLUZIONE_BM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Codice)
                    .HasColumnName("CODICE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgSinistriPagSpeseSino)
                    .HasColumnName("FLG_SINISTRI_PAG_SPESE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistriRisCoseSino)
                    .HasColumnName("FLG_SINISTRI_RIS_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistriRisPersSino)
                    .HasColumnName("FLG_SINISTRI_RIS_PERS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistriRisSpeseSino)
                    .HasColumnName("FLG_SINISTRI_RIS_SPESE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GgLimiteOsservazione)
                    .HasColumnName("GG_LIMITE_OSSERVAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFormula).HasColumnName("ID_FORMULA");

                entity.Property(e => e.IdPrEvoluzioneBm)
                    .HasColumnName("ID_PR_EVOLUZIONE_BM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrParBonusProtetto).HasColumnName("ID_PR_PAR_BONUS_PROTETTO");

                entity.Property(e => e.IdPrParametroClasseMerito).HasColumnName("ID_PR_PARAMETRO_CLASSE_MERITO");

                entity.Property(e => e.IdPrValParBonusProtetto).HasColumnName("ID_PR_VAL_PAR_BONUS_PROTETTO");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumSinBonusProtetto).HasColumnName("NUM_SIN_BONUS_PROTETTO");
            });

            modelBuilder.Entity<PrFascicoliInformativi>(entity =>
            {
                entity.HasKey(e => e.KeyPrFascicoloInformativo)
                    .HasName("PK__PR_FASCI__DD6A3EDD79231C1E");

                entity.ToTable("PR_FASCICOLI_INFORMATIVI", "IAGENCY");

                entity.HasIndex(e => e.IdPrFascicoloInformativo)
                    .HasName("XX01PR_FASCICOLI_INFORMATIVI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX02PR_FASCICOLI_INFORMATIVI");

                entity.HasIndex(e => e.KeyPrFascicoloInformativo)
                    .HasName("SYS_C0035906")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrProdotto, e.IdAllegato, e.DtStoScadenzaLog })
                    .HasName("XIE1PR_FASCICOLI_INFORMATIVI");

                entity.HasIndex(e => new { e.IdPrFascicoloInformativo, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_FASCICOLI_INFORMATIVI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrProdotto, e.IdAllegato, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK2PR_FASCICOLI_INFORMATIVI")
                    .IsUnique();

                entity.Property(e => e.KeyPrFascicoloInformativo)
                    .HasColumnName("KEY_PR_FASCICOLO_INFORMATIVO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdPrFascicoloInformativo).HasColumnName("ID_PR_FASCICOLO_INFORMATIVO");

                entity.Property(e => e.IdPrProdotto).HasColumnName("ID_PR_PRODOTTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrFormuleSconti>(entity =>
            {
                entity.HasKey(e => e.KeyPrFormuleSconti);

                entity.ToTable("PR_FORMULE_SCONTI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrFormuleSconti, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01PR_FORMULE_SCONTI");

                entity.HasIndex(e => new { e.IdPrProdotto, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX02PR_FORMULE_SCONTI");

                entity.Property(e => e.KeyPrFormuleSconti)
                    .HasColumnName("KEY_PR_FORMULE_SCONTI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdFormula).HasColumnName("ID_FORMULA");

                entity.Property(e => e.IdPrFormuleSconti).HasColumnName("ID_PR_FORMULE_SCONTI");

                entity.Property(e => e.IdPrProdotto).HasColumnName("ID_PR_PRODOTTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrFrazAmmessi>(entity =>
            {
                entity.HasKey(e => e.KeyPrFrazAmmesso)
                    .HasName("SYS_C0060629");

                entity.ToTable("PR_FRAZ_AMMESSI", "IAGENCY");

                entity.HasIndex(e => e.IdPrFrazAmmesso)
                    .HasName("XX01PR_FRAZ_AMMESSI");

                entity.HasIndex(e => e.IdPrFrazionamento)
                    .HasName("XX04PR_FRAZ_AMMESSI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX03PR_FRAZ_AMMESSI");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX02PR_FRAZ_AMMESSI");

                entity.HasIndex(e => new { e.IdPrProdotto, e.DtStoScadenzaLog })
                    .HasName("XIE2PR_FRAZ_AMMESSI");

                entity.HasIndex(e => new { e.IdPrRamo, e.DtStoScadenzaLog })
                    .HasName("XIE1PR_FRAZ_AMMESSI");

                entity.HasIndex(e => new { e.IdPrFrazionamento, e.DtStoScadenzaLog, e.IdPrRamo, e.IdPrProdotto, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_FRAZ_AMMESSI")
                    .IsUnique();

                entity.Property(e => e.KeyPrFrazAmmesso)
                    .HasColumnName("KEY_PR_FRAZ_AMMESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAmmessoPolBaseSino)
                    .HasColumnName("FLG_AMMESSO_POL_BASE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEntitaProd)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ENTITA_PROD")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrFrazAmmesso)
                    .HasColumnName("ID_PR_FRAZ_AMMESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrFrazionamento)
                    .HasColumnName("ID_PR_FRAZIONAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PctInteressi)
                    .HasColumnName("PCT_INTERESSI")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PrFrazCombinazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrFrazCombinazione)
                    .HasName("SYS_C0060635");

                entity.ToTable("PR_FRAZ_COMBINAZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdPrCombinazione)
                    .HasName("XX02PR_FRAZ_COMBINAZIONI");

                entity.HasIndex(e => e.IdPrFrazAmmesso)
                    .HasName("XX03PR_FRAZ_COMBINAZIONI");

                entity.HasIndex(e => e.IdPrFrazCombinazione)
                    .HasName("XX01PR_FRAZ_COMBINAZIONI");

                entity.Property(e => e.KeyPrFrazCombinazione)
                    .HasColumnName("KEY_PR_FRAZ_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrCombinazione)
                    .HasColumnName("ID_PR_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrFrazAmmesso)
                    .HasColumnName("ID_PR_FRAZ_AMMESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrFrazCombinazione)
                    .HasColumnName("ID_PR_FRAZ_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrFrazionamenti>(entity =>
            {
                entity.HasKey(e => e.KeyPrFrazionamento)
                    .HasName("SYS_C0060641");

                entity.ToTable("PR_FRAZIONAMENTI", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02PR_FRAZIONAMENTI");

                entity.HasIndex(e => e.IdDescFrazionamento)
                    .HasName("XX03PR_FRAZIONAMENTI");

                entity.HasIndex(e => e.IdPrFrazionamento)
                    .HasName("XX01PR_FRAZIONAMENTI");

                entity.HasIndex(e => new { e.IdCompagnia, e.CodFraz, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_FRAZIONAMENTI")
                    .IsUnique();

                entity.Property(e => e.KeyPrFrazionamento)
                    .HasColumnName("KEY_PR_FRAZIONAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodFraz)
                    .HasColumnName("COD_FRAZ")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescFrazionamento)
                    .HasColumnName("DESC_FRAZIONAMENTO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDanniSino)
                    .HasColumnName("FLG_DANNI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVitaSino)
                    .HasColumnName("FLG_VITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescFrazionamento)
                    .HasColumnName("ID_DESC_FRAZIONAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrFrazionamento)
                    .HasColumnName("ID_PR_FRAZIONAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NRate)
                    .HasColumnName("N_RATE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PctInteressi)
                    .HasColumnName("PCT_INTERESSI")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctInteressiVita)
                    .HasColumnName("PCT_INTERESSI_VITA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PrGarCombinazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarCombinazione)
                    .HasName("SYS_C0060655");

                entity.ToTable("PR_GAR_COMBINAZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdPrCombinazione)
                    .HasName("XX03PR_GAR_COMBINAZIONI");

                entity.HasIndex(e => e.IdPrGarCombinazione)
                    .HasName("XX01PR_GAR_COMBINAZIONI");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX02PR_GAR_COMBINAZIONI");

                entity.Property(e => e.KeyPrGarCombinazione)
                    .HasColumnName("KEY_PR_GAR_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAccessoriSino)
                    .HasColumnName("FLG_ACCESSORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrCombinazione)
                    .HasColumnName("ID_PR_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarCombinazione)
                    .HasColumnName("ID_PR_GAR_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpCapitale1)
                    .HasColumnName("IMP_CAPITALE1")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitale2)
                    .HasColumnName("IMP_CAPITALE2")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigia)
                    .HasColumnName("IMP_FRANCHIGIA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxCose)
                    .HasColumnName("IMP_MAX_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxInterruzione)
                    .HasColumnName("IMP_MAX_INTERRUZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxPersone)
                    .HasColumnName("IMP_MAX_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxScoperto)
                    .HasColumnName("IMP_MAX_SCOPERTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxSinistro)
                    .HasColumnName("IMP_MAX_SINISTRO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PctScomposizione)
                    .HasColumnName("PCT_SCOMPOSIZIONE")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctScoperto)
                    .HasColumnName("PCT_SCOPERTO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.Tasso)
                    .HasColumnName("TASSO")
                    .HasColumnType("numeric(18, 9)");
            });

            modelBuilder.Entity<PrGarConvenzioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarConvenzioni);

                entity.ToTable("PR_GAR_CONVENZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdPrGarConvenzioni)
                    .HasName("XX01PR_GAR_CONVENZIONI");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX02PR_GAR_CONVENZIONI");

                entity.HasIndex(e => new { e.IdPrGarConvenzioni, e.DtStoEffettoLog, e.DtStoScadenzaLog })
                    .HasName("XX03PR_GAR_CONVENZIONI");

                entity.HasIndex(e => new { e.IdPrGaranzia, e.IdConvenzione, e.DtStoEffettoLog, e.DtStoScadenzaLog })
                    .HasName("XX04PR_GAR_CONVENZIONI");

                entity.Property(e => e.KeyPrGarConvenzioni)
                    .HasColumnName("KEY_PR_GAR_CONVENZIONI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogabileSino)
                    .HasColumnName("FLG_DEROGABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdConvenzione).HasColumnName("ID_CONVENZIONE");

                entity.Property(e => e.IdPrGarConvenzioni).HasColumnName("ID_PR_GAR_CONVENZIONI");

                entity.Property(e => e.IdPrGaranzia).HasColumnName("ID_PR_GARANZIA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrGarPacchetti>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarPacchetto)
                    .HasName("PK_IAGENCY.PR_GAR_PACCHETTI");

                entity.ToTable("PR_GAR_PACCHETTI", "IAGENCY");

                entity.HasIndex(e => e.IdPrPacchetto)
                    .HasName("XX01_PR_GAR_PACCHETTI");

                entity.HasIndex(e => new { e.IdPrGarPacchetto, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("AK01_PR_GAR_PACCHETTI")
                    .IsUnique();

                entity.Property(e => e.KeyPrGarPacchetto)
                    .HasColumnName("KEY_PR_GAR_PACCHETTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrGarPacchetto).HasColumnName("ID_PR_GAR_PACCHETTO");

                entity.Property(e => e.IdPrGaranzia).HasColumnName("ID_PR_GARANZIA");

                entity.Property(e => e.IdPrPacchetto).HasColumnName("ID_PR_PACCHETTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Ordine).HasColumnName("ORDINE");
            });

            modelBuilder.Entity<PrGarPrestazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarPrestazioni);

                entity.ToTable("PR_GAR_PRESTAZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdPrGarTariffa)
                    .HasName("XX01PR_GAR_PRESTAZIONI");

                entity.Property(e => e.KeyPrGarPrestazioni)
                    .HasColumnName("KEY_PR_GAR_PRESTAZIONI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodPrestazione)
                    .HasColumnName("COD_PRESTAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgBloccaPagRisSchedaSino)
                    .HasColumnName("FLG_BLOCCA_PAG_RIS_SCHEDA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCreaIncaricoSino)
                    .HasColumnName("FLG_CREA_INCARICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoIndennizzo)
                    .HasColumnName("FLG_TIPO_INDENNIZZO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoMassimalizzazione)
                    .HasColumnName("FLG_TIPO_MASSIMALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaDanno)
                    .HasColumnName("FLG_TIPOLOGIA_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaEvento)
                    .HasColumnName("FLG_TIPOLOGIA_EVENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdPrGarPrestazioni).HasColumnName("ID_PR_GAR_PRESTAZIONI");

                entity.Property(e => e.IdPrGarTariffa).HasColumnName("ID_PR_GAR_TARIFFA");

                entity.Property(e => e.IdPrValParametro).HasColumnName("ID_PR_VAL_PARAMETRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpFranchigia)
                    .HasColumnName("IMP_FRANCHIGIA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpMassimale)
                    .HasColumnName("IMP_MASSIMALE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PercScoperto)
                    .HasColumnName("PERC_SCOPERTO")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<PrGarRetiVendita>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarRetiVendita);

                entity.ToTable("PR_GAR_RETI_VENDITA", "IAGENCY");

                entity.HasIndex(e => e.IdPrGarRetiVendita)
                    .HasName("XX01PR_GAR_RETI_VENDITA");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX02PR_GAR_RETI_VENDITA");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03PR_GAR_RETI_VENDITA");

                entity.HasIndex(e => new { e.IdPrGarRetiVendita, e.DtStoEffettoLog, e.DtStoScadenzaLog })
                    .HasName("XX04PR_GAR_RETI_VENDITA");

                entity.Property(e => e.KeyPrGarRetiVendita)
                    .HasColumnName("KEY_PR_GAR_RETI_VENDITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogabileSino)
                    .HasColumnName("FLG_DEROGABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSottoreteSino)
                    .HasColumnName("FLG_SOTTORETE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrGarRetiVendita).HasColumnName("ID_PR_GAR_RETI_VENDITA");

                entity.Property(e => e.IdPrGaranzia).HasColumnName("ID_PR_GARANZIA");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrGarScomposizione>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarScomposizione)
                    .HasName("SYS_C0060657");

                entity.ToTable("PR_GAR_SCOMPOSIZIONE", "IAGENCY");

                entity.HasIndex(e => e.IdDescGaranzia)
                    .HasName("XX03PR_GAR_SCOMPOSIZIONE");

                entity.HasIndex(e => e.IdPrGarScomposizione)
                    .HasName("XX01PR_GAR_SCOMPOSIZIONE");

                entity.HasIndex(e => e.IdPrGarTariffa)
                    .HasName("XX04PR_GAR_SCOMPOSIZIONE");

                entity.HasIndex(e => e.IdPrGarTariffaRinnovo)
                    .HasName("XX02PR_GAR_SCOMPOSIZIONE");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX05PR_GAR_SCOMPOSIZIONE");

                entity.Property(e => e.KeyPrGarScomposizione)
                    .HasColumnName("KEY_PR_GAR_SCOMPOSIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGaranzia)
                    .HasColumnName("COD_GARANZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CoeffVarTariffa)
                    .HasColumnName("COEFF_VAR_TARIFFA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.CoeffVarTariffaRinnovo)
                    .HasColumnName("COEFF_VAR_TARIFFA_RINNOVO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.DescGaranzia)
                    .HasColumnName("DESC_GARANZIA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCreaIncaricoSino)
                    .HasColumnName("FLG_CREA_INCARICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPrincipaleSino)
                    .HasColumnName("FLG_PRINCIPALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescGaranzia)
                    .HasColumnName("ID_DESC_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarScomposizione)
                    .HasColumnName("ID_PR_GAR_SCOMPOSIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarTariffa)
                    .HasColumnName("ID_PR_GAR_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarTariffaRinnovo)
                    .HasColumnName("ID_PR_GAR_TARIFFA_RINNOVO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PctScomposizione)
                    .HasColumnName("PCT_SCOMPOSIZIONE")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PrGarSottoprestazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarSottoprestazioni);

                entity.ToTable("PR_GAR_SOTTOPRESTAZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdPrGarPrestazioni)
                    .HasName("XX01PR_GAR_SOTTOPRESTAZIONI");

                entity.Property(e => e.KeyPrGarSottoprestazioni)
                    .HasColumnName("KEY_PR_GAR_SOTTOPRESTAZIONI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodSottoprestazione)
                    .HasColumnName("COD_SOTTOPRESTAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCollegamentoSchedaDanno)
                    .HasColumnName("FLG_COLLEGAMENTO_SCHEDA_DANNO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSelezionabileSino)
                    .HasColumnName("FLG_SELEZIONABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoSottoprestazione)
                    .HasColumnName("FLG_TIPO_SOTTOPRESTAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaDanno)
                    .HasColumnName("FLG_TIPOLOGIA_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdPrGarPrestazioni).HasColumnName("ID_PR_GAR_PRESTAZIONI");

                entity.Property(e => e.IdPrGarSottoprestazioni).HasColumnName("ID_PR_GAR_SOTTOPRESTAZIONI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrGarTargetMarket>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarTargetMarket);

                entity.ToTable("PR_GAR_TARGET_MARKET", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrGarTargetMarket, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_GAR_TARGET_MARKET")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrGaranzia, e.FlgTargetMarket, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("X01PR_GAR_TARGET_MARKET");

                entity.Property(e => e.KeyPrGarTargetMarket)
                    .HasColumnName("KEY_PR_GAR_TARGET_MARKET")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTargetMarket)
                    .HasColumnName("FLG_TARGET_MARKET")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrGarTargetMarket).HasColumnName("ID_PR_GAR_TARGET_MARKET");

                entity.Property(e => e.IdPrGaranzia).HasColumnName("ID_PR_GARANZIA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrGarTariffe>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarTariffa)
                    .HasName("SYS_C0060662");

                entity.ToTable("PR_GAR_TARIFFE", "IAGENCY");

                entity.HasIndex(e => e.IdAntiracket)
                    .HasName("XX02PR_GAR_TARIFFE");

                entity.HasIndex(e => e.IdDescTariffa)
                    .HasName("XX07PR_GAR_TARIFFE");

                entity.HasIndex(e => e.IdFormula)
                    .HasName("XX06PR_GAR_TARIFFE");

                entity.HasIndex(e => e.IdFvs)
                    .HasName("XX03PR_GAR_TARIFFE");

                entity.HasIndex(e => e.IdPrGarTariffa)
                    .HasName("XX08PR_GAR_TARIFFE");

                entity.HasIndex(e => e.IdPrGarTariffaCollegata)
                    .HasName("XX04PR_GAR_TARIFFE");

                entity.HasIndex(e => e.IdSsn)
                    .HasName("XX01PR_GAR_TARIFFE");

                entity.HasIndex(e => e.IdTasse)
                    .HasName("XX05PR_GAR_TARIFFE");

                entity.Property(e => e.KeyPrGarTariffa)
                    .HasColumnName("KEY_PR_GAR_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodInterno)
                    .HasColumnName("COD_INTERNO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CodTariffa)
                    .HasColumnName("COD_TARIFFA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescTariffa)
                    .HasColumnName("DESC_TARIFFA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DivisoreBaseCalcolo)
                    .HasColumnName("DIVISORE_BASE_CALCOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAddettiSezioneSino)
                    .HasColumnName("FLG_ADDETTI_SEZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAzzeraRateSuccSino)
                    .HasColumnName("FLG_AZZERA_RATE_SUCC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgBeneficiarioAltroSino)
                    .HasColumnName("FLG_BENEFICIARIO_ALTRO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgBeneficiarioMorteSino)
                    .HasColumnName("FLG_BENEFICIARIO_MORTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgBeneficiarioVitaSino)
                    .HasColumnName("FLG_BENEFICIARIO_VITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCapitale1SezioneSino)
                    .HasColumnName("FLG_CAPITALE1_SEZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCatTariffa)
                    .HasColumnName("FLG_CAT_TARIFFA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgClRischioObbSino)
                    .HasColumnName("FLG_CL_RISCHIO_OBB_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgClassiRischioVeicSino)
                    .HasColumnName("FLG_CLASSI_RISCHIO_VEIC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCodTassaProvinciale)
                    .HasColumnName("FLG_COD_TASSA_PROVINCIALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgForzaCapitaleSino)
                    .HasColumnName("FLG_FORZA_CAPITALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFranchigiaAggSino)
                    .HasColumnName("FLG_FRANCHIGIA_AGG_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGaranziaRcaSino)
                    .HasColumnName("FLG_GARANZIA_RCA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGruppoObbSino)
                    .HasColumnName("FLG_GRUPPO_OBB_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInclPremioFissoSino)
                    .HasColumnName("FLG_INCL_PREMIO_FISSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLabelAddetti)
                    .HasColumnName("FLG_LABEL_ADDETTI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLabelCapitale1)
                    .HasColumnName("FLG_LABEL_CAPITALE1")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLabelCapitale2)
                    .HasColumnName("FLG_LABEL_CAPITALE2")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLineaProdotto)
                    .HasColumnName("FLG_LINEA_PRODOTTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNonSoggIntFrazSino)
                    .HasColumnName("FLG_NON_SOGG_INT_FRAZ_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPremioZeroSino)
                    .HasColumnName("FLG_PREMIO_ZERO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPresenzaGruppiTerSino)
                    .HasColumnName("FLG_PRESENZA_GRUPPI_TER_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPresenzaSexEtaSino)
                    .HasColumnName("FLG_PRESENZA_SEX_ETA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("FLG_RAMO_TECNICO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRegolaAnaBenefAltro)
                    .HasColumnName("FLG_REGOLA_ANA_BENEF_ALTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicAddettiSino)
                    .HasColumnName("FLG_RIC_ADDETTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicCapitale1Sino)
                    .HasColumnName("FLG_RIC_CAPITALE1_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicCapitale2Sino)
                    .HasColumnName("FLG_RIC_CAPITALE2_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicFrancSino)
                    .IsRequired()
                    .HasColumnName("FLG_RIC_FRANC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicGrTerContraSino)
                    .HasColumnName("FLG_RIC_GR_TER_CONTRA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicMaxCoseSino)
                    .HasColumnName("FLG_RIC_MAX_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicMaxIntSino)
                    .HasColumnName("FLG_RIC_MAX_INT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicMaxPersSino)
                    .HasColumnName("FLG_RIC_MAX_PERS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicMaxScopSino)
                    .IsRequired()
                    .HasColumnName("FLG_RIC_MAX_SCOP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicMaxSinSino)
                    .HasColumnName("FLG_RIC_MAX_SIN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicPctScopSino)
                    .IsRequired()
                    .HasColumnName("FLG_RIC_PCT_SCOP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicPremioSino)
                    .HasColumnName("FLG_RIC_PREMIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicScadGaranziaSino)
                    .HasColumnName("FLG_RIC_SCAD_GARANZIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicTassoSino)
                    .HasColumnName("FLG_RIC_TASSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTassoDirettoSino)
                    .HasColumnName("FLG_TASSO_DIRETTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTassoLordoSino)
                    .HasColumnName("FLG_TASSO_LORDO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTassoObbSino)
                    .HasColumnName("FLG_TASSO_OBB_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCapitale)
                    .HasColumnName("FLG_TIPO_CAPITALE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoFranchigiaAgg)
                    .HasColumnName("FLG_TIPO_FRANCHIGIA_AGG")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoFrazAntidurate)
                    .HasColumnName("FLG_TIPO_FRAZ_ANTIDURATE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPremio)
                    .HasColumnName("FLG_TIPO_PREMIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoSchedaDanno)
                    .HasColumnName("FLG_TIPO_SCHEDA_DANNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSinistro)
                    .HasColumnName("FLG_TIPO_SINISTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoTariffa)
                    .HasColumnName("FLG_TIPO_TARIFFA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoValScadenza)
                    .HasColumnName("FLG_TIPO_VAL_SCADENZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTuttiSettoriSino)
                    .HasColumnName("FLG_TUTTI_SETTORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVarAddettiSino)
                    .HasColumnName("FLG_VAR_ADDETTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVarCapitale1Sino)
                    .HasColumnName("FLG_VAR_CAPITALE1_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVarCapitale2Sino)
                    .HasColumnName("FLG_VAR_CAPITALE2_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVarFrancSino)
                    .HasColumnName("FLG_VAR_FRANC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVarMaxCoseSino)
                    .HasColumnName("FLG_VAR_MAX_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVarMaxIntSino)
                    .HasColumnName("FLG_VAR_MAX_INT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVarMaxPersSino)
                    .HasColumnName("FLG_VAR_MAX_PERS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVarMaxScopSino)
                    .HasColumnName("FLG_VAR_MAX_SCOP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVarMaxSinSino)
                    .HasColumnName("FLG_VAR_MAX_SIN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVarPctScopSino)
                    .HasColumnName("FLG_VAR_PCT_SCOP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVarPremioSino)
                    .HasColumnName("FLG_VAR_PREMIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVarTassoSino)
                    .HasColumnName("FLG_VAR_TASSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisAddettiSino)
                    .HasColumnName("FLG_VIS_ADDETTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisCapitale1Sino)
                    .HasColumnName("FLG_VIS_CAPITALE1_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisCapitale2Sino)
                    .HasColumnName("FLG_VIS_CAPITALE2_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisFrancSino)
                    .HasColumnName("FLG_VIS_FRANC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisMaxCoseSino)
                    .HasColumnName("FLG_VIS_MAX_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisMaxIntSino)
                    .HasColumnName("FLG_VIS_MAX_INT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisMaxPersSino)
                    .HasColumnName("FLG_VIS_MAX_PERS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisMaxScopSino)
                    .HasColumnName("FLG_VIS_MAX_SCOP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisMaxSinSino)
                    .HasColumnName("FLG_VIS_MAX_SIN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisPctScopSino)
                    .HasColumnName("FLG_VIS_PCT_SCOP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisPremioSino)
                    .HasColumnName("FLG_VIS_PREMIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisTassoSino)
                    .HasColumnName("FLG_VIS_TASSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAntiracket)
                    .HasColumnName("ID_ANTIRACKET")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescTariffa)
                    .HasColumnName("ID_DESC_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFormula)
                    .HasColumnName("ID_FORMULA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFormulaCapitale).HasColumnName("ID_FORMULA_CAPITALE");

                entity.Property(e => e.IdFormulaScadenza).HasColumnName("ID_FORMULA_SCADENZA");

                entity.Property(e => e.IdFvs)
                    .HasColumnName("ID_FVS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrEvoluzioneBm).HasColumnName("ID_PR_EVOLUZIONE_BM");

                entity.Property(e => e.IdPrGarTariffa)
                    .HasColumnName("ID_PR_GAR_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarTariffaCollegata)
                    .HasColumnName("ID_PR_GAR_TARIFFA_COLLEGATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSsn)
                    .HasColumnName("ID_SSN")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTasse)
                    .HasColumnName("ID_TASSE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpFranchigiaAgg)
                    .HasColumnName("IMP_FRANCHIGIA_AGG")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.PctFranchigiaAggregata)
                    .HasColumnName("PCT_FRANCHIGIA_AGGREGATA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctTariffaCollegata)
                    .HasColumnName("PCT_TARIFFA_COLLEGATA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.TassoSmontCapitale)
                    .HasColumnName("TASSO_SMONT_CAPITALE")
                    .HasColumnType("numeric(18, 9)");
            });

            modelBuilder.Entity<PrGarTipoFabbricato>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarTpFabbricato);

                entity.ToTable("PR_GAR_TIPO_FABBRICATO", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrGarTpFabbricato, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01PR_GAR_TIPO_FABBRICATO");

                entity.HasIndex(e => new { e.IdPrGaranzia, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX02PR_GAR_TIPO_FABBRICATO");

                entity.Property(e => e.KeyPrGarTpFabbricato)
                    .HasColumnName("KEY_PR_GAR_TP_FABBRICATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoFabbricato)
                    .HasColumnName("FLG_TIPO_FABBRICATO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrGarTpFabbricato).HasColumnName("ID_PR_GAR_TP_FABBRICATO");

                entity.Property(e => e.IdPrGaranzia).HasColumnName("ID_PR_GARANZIA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrGarTipoRetiVendita>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarTipoRetiVendita);

                entity.ToTable("PR_GAR_TIPO_RETI_VENDITA", "IAGENCY");

                entity.HasIndex(e => e.IdPrGarTipoRetiVendita)
                    .HasName("XX01PR_GAR_TIPO_RETI_VENDITA");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX02PR_GAR_TIPO_RETI_VENDITA");

                entity.HasIndex(e => new { e.IdPrGarTipoRetiVendita, e.DtStoEffettoLog, e.DtStoScadenzaLog })
                    .HasName("XX03PR_GAR_TIPO_RETI_VENDITA");

                entity.Property(e => e.KeyPrGarTipoRetiVendita)
                    .HasColumnName("KEY_PR_GAR_TIPO_RETI_VENDITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogabileSino)
                    .HasColumnName("FLG_DEROGABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoReteVendita)
                    .HasColumnName("FLG_TIPO_RETE_VENDITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrGarTipoRetiVendita).HasColumnName("ID_PR_GAR_TIPO_RETI_VENDITA");

                entity.Property(e => e.IdPrGaranzia).HasColumnName("ID_PR_GARANZIA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrGarTpRetiRegAlleg>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarTpRetiRegAlleg);

                entity.ToTable("PR_GAR_TP_RETI_REG_ALLEG", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrGarTpRetiRegAlleg, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PR_GAR_TP_RETI_REG_ALLEG")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrGarRegAllegati, e.FlgTipoReteVendita, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01PR_GAR_TP_RETI_REG_ALLEG");

                entity.Property(e => e.KeyPrGarTpRetiRegAlleg)
                    .HasColumnName("KEY_PR_GAR_TP_RETI_REG_ALLEG")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogaSino)
                    .HasColumnName("FLG_DEROGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoReteVendita)
                    .HasColumnName("FLG_TIPO_RETE_VENDITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrGarRegAllegati)
                    .HasColumnName("ID_PR_GAR_REG_ALLEGATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarTpRetiRegAlleg)
                    .HasColumnName("ID_PR_GAR_TP_RETI_REG_ALLEG")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrGaranzie>(entity =>
            {
                entity.HasKey(e => e.KeyPrGaranzia)
                    .HasName("SYS_C0060643");

                entity.ToTable("PR_GARANZIE", "IAGENCY");

                entity.HasIndex(e => e.IdDescGaranzia)
                    .HasName("XX04PR_GARANZIE");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX01PR_GARANZIE");

                entity.HasIndex(e => e.IdPrSezione)
                    .HasName("XX02PR_GARANZIE");

                entity.HasIndex(e => e.IdTabFondo)
                    .HasName("XX03PR_GARANZIE");

                entity.Property(e => e.KeyPrGaranzia)
                    .HasColumnName("KEY_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDerogaPremio)
                    .HasColumnName("COD_DEROGA_PREMIO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaRiservata)
                    .HasColumnName("COD_DEROGA_RISERVATA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodGaranzia)
                    .HasColumnName("COD_GARANZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodLivDerogaNote).HasColumnName("COD_LIV_DEROGA_NOTE");

                entity.Property(e => e.DescGaranzia)
                    .HasColumnName("DESC_GARANZIA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFinTv)
                    .HasColumnName("DT_FIN_TV")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniTv)
                    .HasColumnName("DT_INI_TV")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAccessoriSino)
                    .HasColumnName("FLG_ACCESSORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAppendiceIncorso)
                    .HasColumnName("FLG_APPENDICE_INCORSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAppendiceScadenza)
                    .HasColumnName("FLG_APPENDICE_SCADENZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgArrotondamentoSino)
                    .HasColumnName("FLG_ARROTONDAMENTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCreaGarDirAnnSino)
                    .HasColumnName("FLG_CREA_GAR_DIR_ANN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDerogaNoteSino)
                    .HasColumnName("FLG_DEROGA_NOTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDerogaPremioSino)
                    .HasColumnName("FLG_DEROGA_PREMIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaRiservataSino)
                    .HasColumnName("FLG_DEROGA_RISERVATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGarDirittiSino)
                    .HasColumnName("FLG_GAR_DIRITTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGarEsposizione)
                    .HasColumnName("FLG_GAR_ESPOSIZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgIndennitaRimborso)
                    .HasColumnName("FLG_INDENNITA_RIMBORSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNoteSino)
                    .HasColumnName("FLG_NOTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPacchettoSino)
                    .HasColumnName("FLG_PACCHETTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPlafondSino)
                    .HasColumnName("FLG_PLAFOND_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPrestUnicaRicorrente)
                    .HasColumnName("FLG_PREST_UNICA_RICORRENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRegPremioSino)
                    .HasColumnName("FLG_REG_PREMIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaCoinvolto)
                    .HasColumnName("FLG_RICHIESTA_COINVOLTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRimborsabileAnnSino)
                    .HasColumnName("FLG_RIMBORSABILE_ANN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRimborsabileAppSino)
                    .HasColumnName("FLG_RIMBORSABILE_APP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRimborsabileEsclSino)
                    .HasColumnName("FLG_RIMBORSABILE_ESCL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRimborsabileManSino)
                    .HasColumnName("FLG_RIMBORSABILE_MAN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRimborsabileSostSino)
                    .HasColumnName("FLG_RIMBORSABILE_SOST_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRinnovabileSino)
                    .HasColumnName("FLG_RINNOVABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRinnovo)
                    .HasColumnName("FLG_RINNOVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRiservaPremiSino)
                    .HasColumnName("FLG_RISERVA_PREMI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRiservataSino)
                    .HasColumnName("FLG_RISERVATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRivalutabileSino)
                    .HasColumnName("FLG_RIVALUTABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScontabileSino)
                    .HasColumnName("FLG_SCONTABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSelAperturaSxSino)
                    .HasColumnName("FLG_SEL_APERTURA_SX_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSostIncorso)
                    .HasColumnName("FLG_SOST_INCORSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSostScadenza)
                    .HasColumnName("FLG_SOST_SCADENZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTentataVenditaSino)
                    .HasColumnName("FLG_TENTATA_VENDITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoPreselezioneGaranzia)
                    .HasColumnName("FLG_TIPO_PRESELEZIONE_GARANZIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoScomposizione)
                    .HasColumnName("FLG_TIPO_SCOMPOSIZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTpAbilGarPreventivo)
                    .HasColumnName("FLG_TP_ABIL_GAR_PREVENTIVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescGaranzia)
                    .HasColumnName("ID_DESC_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFormulaVendibilita)
                    .HasColumnName("ID_FORMULA_VENDIBILITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrSezione)
                    .HasColumnName("ID_PR_SEZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabFondo)
                    .HasColumnName("ID_TAB_FONDO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpPremioMin)
                    .HasColumnName("IMP_PREMIO_MIN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.LivelloAutorAnnullamento)
                    .HasColumnName("LIVELLO_AUTOR_ANNULLAMENTO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.Ordine)
                    .HasColumnName("ORDINE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.TooltipInfo)
                    .HasColumnName("TOOLTIP_INFO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrGruppiClassiRischio>(entity =>
            {
                entity.HasKey(e => e.KeyPrGruppoClasseRischio)
                    .HasName("PK_KEY_PR_GRUPPO_CLASSE_RIS");

                entity.ToTable("PR_GRUPPI_CLASSI_RISCHIO", "IAGENCY");

                entity.HasIndex(e => e.IdPrGarTariffa)
                    .HasName("XX02PR_GRUPPI_CLASSI_RISCHIO");

                entity.HasIndex(e => e.IdPrGruppoClasseRischio)
                    .HasName("XX01PR_GRUPPI_CLASSI_RISCHIO");

                entity.Property(e => e.KeyPrGruppoClasseRischio)
                    .HasColumnName("KEY_PR_GRUPPO_CLASSE_RISCHIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CoefGruppo)
                    .HasColumnName("COEF_GRUPPO")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAmmessoSino)
                    .HasColumnName("FLG_AMMESSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTuttiSettoriSino)
                    .IsRequired()
                    .HasColumnName("FLG_TUTTI_SETTORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrClasseRischio).HasColumnName("ID_PR_CLASSE_RISCHIO");

                entity.Property(e => e.IdPrGarTariffa).HasColumnName("ID_PR_GAR_TARIFFA");

                entity.Property(e => e.IdPrGruppoClasseRischio).HasColumnName("ID_PR_GRUPPO_CLASSE_RISCHIO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpGruppo)
                    .HasColumnName("IMP_GRUPPO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PuntiGruppo)
                    .HasColumnName("PUNTI_GRUPPO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<PrGruppiTerritoriali>(entity =>
            {
                entity.HasKey(e => e.KeyPrGruppoTerritoriale)
                    .HasName("SYS_C0060673");

                entity.ToTable("PR_GRUPPI_TERRITORIALI", "IAGENCY");

                entity.HasIndex(e => e.IdDescGruppo)
                    .HasName("XX03PR_GRUPPI_TERRITORIALI");

                entity.HasIndex(e => e.IdPrGarTariffa)
                    .HasName("XX02PR_GRUPPI_TERRITORIALI");

                entity.HasIndex(e => e.IdPrGruppoTerritoriale)
                    .HasName("XX01PR_GRUPPI_TERRITORIALI");

                entity.Property(e => e.KeyPrGruppoTerritoriale)
                    .HasColumnName("KEY_PR_GRUPPO_TERRITORIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGruppo)
                    .IsRequired()
                    .HasColumnName("COD_GRUPPO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CoefGruppo)
                    .HasColumnName("COEF_GRUPPO")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.DescGruppo)
                    .HasColumnName("DESC_GRUPPO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAmmessoSino)
                    .HasColumnName("FLG_AMMESSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTargaSpecSino)
                    .HasColumnName("FLG_TARGA_SPEC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTuttiSettoriSino)
                    .IsRequired()
                    .HasColumnName("FLG_TUTTI_SETTORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescGruppo)
                    .HasColumnName("ID_DESC_GRUPPO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarTariffa)
                    .HasColumnName("ID_PR_GAR_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGruppoTerritoriale)
                    .HasColumnName("ID_PR_GRUPPO_TERRITORIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpGruppo)
                    .HasColumnName("IMP_GRUPPO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PuntiGruppo)
                    .HasColumnName("PUNTI_GRUPPO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<PrGruppiVariabili>(entity =>
            {
                entity.HasKey(e => e.KeyPrGruppoVariabili)
                    .HasName("SYS_C0060678");

                entity.ToTable("PR_GRUPPI_VARIABILI", "IAGENCY");

                entity.HasIndex(e => e.IdDescrizioneBottone)
                    .HasName("XX02PR_GRUPPI_VARIABILI");

                entity.HasIndex(e => e.IdDescrizioneGruppo)
                    .HasName("XX03PR_GRUPPI_VARIABILI");

                entity.HasIndex(e => e.IdPrGruppoVariabili)
                    .HasName("XX01PR_GRUPPI_VARIABILI");

                entity.Property(e => e.KeyPrGruppoVariabili)
                    .HasColumnName("KEY_PR_GRUPPO_VARIABILI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGruppo)
                    .IsRequired()
                    .HasColumnName("COD_GRUPPO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneBottone)
                    .HasColumnName("DESCRIZIONE_BOTTONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneGruppo)
                    .HasColumnName("DESCRIZIONE_GRUPPO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInPaginaSino)
                    .HasColumnName("FLG_IN_PAGINA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEntitaVar)
                    .HasColumnName("FLG_TIPO_ENTITA_VAR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizioneBottone)
                    .HasColumnName("ID_DESCRIZIONE_BOTTONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizioneGruppo)
                    .HasColumnName("ID_DESCRIZIONE_GRUPPO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGruppoVariabili)
                    .HasColumnName("ID_PR_GRUPPO_VARIABILI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrIstat>(entity =>
            {
                entity.HasKey(e => e.IdIstat);

                entity.ToTable("PR_ISTAT", "IAGENCY");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02PR_ISTAT");

                entity.Property(e => e.IdIstat)
                    .HasColumnName("ID_ISTAT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodiceIstat)
                    .HasColumnName("CODICE_ISTAT")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrLineeProdotto>(entity =>
            {
                entity.HasKey(e => e.KeyPrLineaProdotto)
                    .HasName("SYS_C0060686");

                entity.ToTable("PR_LINEE_PRODOTTO", "IAGENCY");

                entity.HasIndex(e => e.IdDescLinea)
                    .HasName("XX02PR_LINEE_PRODOTTO");

                entity.HasIndex(e => e.IdPrLineaProdotto)
                    .HasName("XX01PR_LINEE_PRODOTTO");

                entity.HasIndex(e => new { e.IdPrLineaProdotto, e.DtStoEffettoFis })
                    .HasName("K01_PR_LINEE_PRODOTTO")
                    .IsUnique();

                entity.HasIndex(e => new { e.CodLinea, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K03_PR_LINEE_PRODOTTO");

                entity.HasIndex(e => new { e.IdPrLineaProdotto, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K02_PR_LINEE_PRODOTTO")
                    .IsUnique();

                entity.Property(e => e.KeyPrLineaProdotto)
                    .HasColumnName("KEY_PR_LINEA_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodLinea)
                    .HasColumnName("COD_LINEA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescLinea)
                    .HasColumnName("DESC_LINEA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgLineaProdotto)
                    .HasColumnName("FLG_LINEA_PRODOTTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescLinea)
                    .HasColumnName("ID_DESC_LINEA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrLineaProdotto)
                    .HasColumnName("ID_PR_LINEA_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Immagine)
                    .HasColumnName("IMMAGINE")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrMezziPagamento>(entity =>
            {
                entity.HasKey(e => e.KeyPrMezzoPagamento);

                entity.ToTable("PR_MEZZI_PAGAMENTO", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrProdotto, e.IdPrMezzoPagamento, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01_PR_MEZZI_PAGAMENTO");

                entity.HasIndex(e => new { e.IdPrProdotto, e.IdPrMezzoPagamento, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_MEZZI_PAGAMENTO")
                    .IsUnique();

                entity.Property(e => e.KeyPrMezzoPagamento)
                    .HasColumnName("KEY_PR_MEZZO_PAGAMENTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMezzoIncasso)
                    .HasColumnName("FLG_MEZZO_INCASSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrMezzoPagamento).HasColumnName("ID_PR_MEZZO_PAGAMENTO");

                entity.Property(e => e.IdPrProdotto).HasColumnName("ID_PR_PRODOTTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrMezziSpedizione>(entity =>
            {
                entity.HasKey(e => e.KeyPrMezzoSpedizione);

                entity.ToTable("PR_MEZZI_SPEDIZIONE", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrProdotto, e.IdPrMezzoSpedizione, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01_PR_MEZZI_SPEDIZIONE");

                entity.HasIndex(e => new { e.IdPrProdotto, e.IdPrMezzoSpedizione, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_MEZZI_SPEDIZIONE")
                    .IsUnique();

                entity.Property(e => e.KeyPrMezzoSpedizione)
                    .HasColumnName("KEY_PR_MEZZO_SPEDIZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMezzoSpedizione)
                    .HasColumnName("FLG_MEZZO_SPEDIZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrMezzoSpedizione).HasColumnName("ID_PR_MEZZO_SPEDIZIONE");

                entity.Property(e => e.IdPrProdotto).HasColumnName("ID_PR_PRODOTTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrModelliAppendici>(entity =>
            {
                entity.HasKey(e => e.KeyPrModelloAppendice);

                entity.ToTable("PR_MODELLI_APPENDICI", "IAGENCY");

                entity.HasIndex(e => e.IdModello)
                    .HasName("XX02PR_MODELLI_APPENDICI");

                entity.HasIndex(e => e.IdPrModelloAppendice)
                    .HasName("XX01PR_MODELLI_APPENDICI");

                entity.HasIndex(e => e.IdTabParametriOperazione)
                    .HasName("XX03PR_MODELLI_APPENDICI");

                entity.HasIndex(e => new { e.IdTabParametriOperazione, e.IdModello, e.DtStoScadenzaLog, e.DtStoEffettoFis })
                    .HasName("K01_PR_MODELLI_APPENDICI")
                    .IsUnique();

                entity.Property(e => e.KeyPrModelloAppendice)
                    .HasColumnName("KEY_PR_MODELLO_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAltruiDelegaSino)
                    .IsRequired()
                    .HasColumnName("FLG_ALTRUI_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNostraDelegaSino)
                    .IsRequired()
                    .HasColumnName("FLG_NOSTRA_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligoStampaSino)
                    .IsRequired()
                    .HasColumnName("FLG_OBBLIGO_STAMPA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPropostaSino)
                    .IsRequired()
                    .HasColumnName("FLG_PROPOSTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrModelloAppendice)
                    .HasColumnName("ID_PR_MODELLO_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabParametriOperazione)
                    .HasColumnName("ID_TAB_PARAMETRI_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdModelloNavigation)
                    .WithMany(p => p.PrModelliAppendici)
                    .HasForeignKey(d => d.IdModello)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PR_MODELL__ID_MO__4456017B");
            });

            modelBuilder.Entity<PrModelliOperazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrModelloOperazione);

                entity.ToTable("PR_MODELLI_OPERAZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdModello)
                    .HasName("XX03PR_MODELLI_OPERAZIONI");

                entity.HasIndex(e => e.IdPrModelloOperazione)
                    .HasName("XX01PR_MODELLI_OPERAZIONI");

                entity.HasIndex(e => e.IdTabParametriOperazione)
                    .HasName("XX02PR_MODELLI_OPERAZIONI");

                entity.HasIndex(e => new { e.IdTabParametriOperazione, e.IdModello, e.DtStoScadenzaLog, e.DtStoEffettoFis })
                    .HasName("K01_PR_MODELLI_OPERAZIONI")
                    .IsUnique();

                entity.Property(e => e.KeyPrModelloOperazione)
                    .HasColumnName("KEY_PR_MODELLO_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAltruiDelegaSino)
                    .IsRequired()
                    .HasColumnName("FLG_ALTRUI_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEsclusivaSino)
                    .IsRequired()
                    .HasColumnName("FLG_ESCLUSIVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNostraDelegaSino)
                    .IsRequired()
                    .HasColumnName("FLG_NOSTRA_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligoStampaSino)
                    .IsRequired()
                    .HasColumnName("FLG_OBBLIGO_STAMPA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPropostaSino)
                    .IsRequired()
                    .HasColumnName("FLG_PROPOSTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrModelloOperazione)
                    .HasColumnName("ID_PR_MODELLO_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabParametriOperazione)
                    .HasColumnName("ID_TAB_PARAMETRI_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdModelloNavigation)
                    .WithMany(p => p.PrModelliOperazioni)
                    .HasForeignKey(d => d.IdModello)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PR_MODELL__ID_MO__454A25B4");
            });

            modelBuilder.Entity<PrModelliProdAppendici>(entity =>
            {
                entity.HasKey(e => e.KeyPrModelloProdAppendice);

                entity.ToTable("PR_MODELLI_PROD_APPENDICI", "IAGENCY");

                entity.HasIndex(e => e.IdModello)
                    .HasName("XX03PR_MODELLI_PROD_APPENDICI");

                entity.HasIndex(e => e.IdPrModelloProdAppendice)
                    .HasName("XX01PR_MODELLI_PROD_APPENDICI");

                entity.HasIndex(e => e.IdPrProdAppendice)
                    .HasName("XX02PR_MODELLI_PROD_APPENDICI");

                entity.HasIndex(e => new { e.IdPrProdAppendice, e.IdModello, e.DtStoScadenzaLog, e.DtStoEffettoFis })
                    .HasName("K01_PR_MODELLI_PROD_APPENDICI")
                    .IsUnique();

                entity.Property(e => e.KeyPrModelloProdAppendice)
                    .HasColumnName("KEY_PR_MODELLO_PROD_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAltruiDelegaSino)
                    .IsRequired()
                    .HasColumnName("FLG_ALTRUI_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNostraDelegaSino)
                    .IsRequired()
                    .HasColumnName("FLG_NOSTRA_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligoStampaSino)
                    .IsRequired()
                    .HasColumnName("FLG_OBBLIGO_STAMPA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPropostaSino)
                    .IsRequired()
                    .HasColumnName("FLG_PROPOSTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrModelloProdAppendice)
                    .HasColumnName("ID_PR_MODELLO_PROD_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdAppendice)
                    .HasColumnName("ID_PR_PROD_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdModelloNavigation)
                    .WithMany(p => p.PrModelliProdAppendici)
                    .HasForeignKey(d => d.IdModello)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PR_MODELL__ID_MO__463E49ED");
            });

            modelBuilder.Entity<PrModelliProdOperazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrModelloProdOperazione);

                entity.ToTable("PR_MODELLI_PROD_OPERAZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdModello)
                    .HasName("XX01PR_MODELLI_PROD_OPERAZION");

                entity.HasIndex(e => e.IdPrModelloProdOperazione)
                    .HasName("XX02PR_MODELLI_PROD_OPERAZION");

                entity.HasIndex(e => e.IdPrProdOperazione)
                    .HasName("XX03PR_MODELLI_PROD_OPERAZION");

                entity.HasIndex(e => new { e.IdPrProdOperazione, e.IdModello, e.DtStoScadenzaLog, e.DtStoEffettoFis })
                    .HasName("K01_PR_MODELLI_PROD_OPERAZIONI")
                    .IsUnique();

                entity.Property(e => e.KeyPrModelloProdOperazione)
                    .HasColumnName("KEY_PR_MODELLO_PROD_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAltruiDelegaSino)
                    .IsRequired()
                    .HasColumnName("FLG_ALTRUI_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDupWatermarkSino)
                    .HasColumnName("FLG_DUP_WATERMARK_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEsclusivaSino)
                    .HasColumnName("FLG_ESCLUSIVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNostraDelegaSino)
                    .IsRequired()
                    .HasColumnName("FLG_NOSTRA_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligoStampaSino)
                    .IsRequired()
                    .HasColumnName("FLG_OBBLIGO_STAMPA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPropostaSino)
                    .IsRequired()
                    .HasColumnName("FLG_PROPOSTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrModelloProdOperazione)
                    .HasColumnName("ID_PR_MODELLO_PROD_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdOperazione)
                    .HasColumnName("ID_PR_PROD_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrModelliProdotti>(entity =>
            {
                entity.HasKey(e => e.KeyPrModelloProdotto);

                entity.ToTable("PR_MODELLI_PRODOTTI", "IAGENCY");

                entity.HasIndex(e => e.IdModello)
                    .HasName("XX03PR_MODELLI_PRODOTTI");

                entity.HasIndex(e => e.IdPrModelloProdotto)
                    .HasName("XX01PR_MODELLI_PRODOTTI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX02PR_MODELLI_PRODOTTI");

                entity.HasIndex(e => new { e.IdPrProdotto, e.IdModello, e.DtStoScadenzaLog, e.DtStoEffettoFis })
                    .HasName("K01_PR_MODELLI_PRODOTTI")
                    .IsUnique();

                entity.Property(e => e.KeyPrModelloProdotto)
                    .HasColumnName("KEY_PR_MODELLO_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAltruiDelegaSino)
                    .IsRequired()
                    .HasColumnName("FLG_ALTRUI_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEsclusivaSino)
                    .IsRequired()
                    .HasColumnName("FLG_ESCLUSIVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNostraDelegaSino)
                    .IsRequired()
                    .HasColumnName("FLG_NOSTRA_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligoStampaSino)
                    .IsRequired()
                    .HasColumnName("FLG_OBBLIGO_STAMPA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPropostaSino)
                    .IsRequired()
                    .HasColumnName("FLG_PROPOSTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrModelloProdotto)
                    .HasColumnName("ID_PR_MODELLO_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdModelloNavigation)
                    .WithMany(p => p.PrModelliProdotti)
                    .HasForeignKey(d => d.IdModello)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PR_MODELL__ID_MO__47326E26");
            });

            modelBuilder.Entity<PrModelliVincolatarie>(entity =>
            {
                entity.HasKey(e => e.IdModVincolataria)
                    .HasName("PK__PR_MODEL__0D9080C5304BAFF9");

                entity.ToTable("PR_MODELLI_VINCOLATARIE", "IAGENCY");

                entity.Property(e => e.IdModVincolataria)
                    .HasColumnName("ID_MOD_VINCOLATARIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrVincolataria)
                    .HasColumnName("ID_PR_VINCOLATARIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPrVincolatariaNavigation)
                    .WithMany(p => p.PrModelliVincolatarie)
                    .HasForeignKey(d => d.IdPrVincolataria)
                    .HasConstraintName("FK02_PROD_VINCOLATARIE");
            });

            modelBuilder.Entity<PrPacchetti>(entity =>
            {
                entity.HasKey(e => e.KeyPrPacchetto)
                    .HasName("PK_IAGENCY.PR_PACCHETTI");

                entity.ToTable("PR_PACCHETTI", "IAGENCY");

                entity.HasIndex(e => e.IdPrPacchetto)
                    .HasName("XX01_PR_PACCHETTI");

                entity.HasIndex(e => new { e.IdPrPacchetto, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1_PR_PACCHETTI")
                    .IsUnique();

                entity.Property(e => e.KeyPrPacchetto)
                    .HasColumnName("KEY_PR_PACCHETTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodPacchetto)
                    .HasColumnName("COD_PACCHETTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescPacchetto)
                    .HasColumnName("DESC_PACCHETTO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDescPacchetto).HasColumnName("ID_DESC_PACCHETTO");

                entity.Property(e => e.IdPrPacchetto).HasColumnName("ID_PR_PACCHETTO");

                entity.Property(e => e.IdPrSezione).HasColumnName("ID_PR_SEZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Ordine).HasColumnName("ORDINE");

                entity.Property(e => e.TooltipInfo)
                    .HasColumnName("TOOLTIP_INFO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrParCombinazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrParCombinazione)
                    .HasName("SYS_C0060757");

                entity.ToTable("PR_PAR_COMBINAZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdPrGarCombinazione)
                    .HasName("XX03PR_PAR_COMBINAZIONI");

                entity.HasIndex(e => e.IdPrParCombinazione)
                    .HasName("XX01PR_PAR_COMBINAZIONI");

                entity.HasIndex(e => e.IdPrValParametro)
                    .HasName("XX02PR_PAR_COMBINAZIONI");

                entity.Property(e => e.KeyPrParCombinazione)
                    .HasColumnName("KEY_PR_PAR_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrGarCombinazione)
                    .HasColumnName("ID_PR_GAR_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrParCombinazione)
                    .HasColumnName("ID_PR_PAR_COMBINAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrValParametro)
                    .HasColumnName("ID_PR_VAL_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrParametri>(entity =>
            {
                entity.HasKey(e => e.KeyPrParametro)
                    .HasName("SYS_C0060755");

                entity.ToTable("PR_PARAMETRI", "IAGENCY");

                entity.HasIndex(e => e.IdDescAggiuntivaParametro)
                    .HasName("XX04PR_PARAMETRI");

                entity.HasIndex(e => e.IdDescParametro)
                    .HasName("XX03PR_PARAMETRI");

                entity.HasIndex(e => e.IdPrGarTariffa)
                    .HasName("XX02PR_PARAMETRI");

                entity.HasIndex(e => e.IdPrParametro)
                    .HasName("XX01PR_PARAMETRI");

                entity.HasIndex(e => e.IdPrParametroEreditato)
                    .HasName("XX05PR_PARAMETRI");

                entity.Property(e => e.KeyPrParametro)
                    .HasColumnName("KEY_PR_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodValoreDefault)
                    .HasColumnName("COD_VALORE_DEFAULT")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescAggiuntivaParametro)
                    .HasColumnName("DESC_AGGIUNTIVA_PARAMETRO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DescParametro)
                    .HasColumnName("DESC_PARAMETRO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAbilForzaturaSino)
                    .HasColumnName("FLG_ABIL_FORZATURA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCalcProvvSino)
                    .HasColumnName("FLG_CALC_PROVV_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCombinatoSino)
                    .HasColumnName("FLG_COMBINATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEditabileSino)
                    .HasColumnName("FLG_EDITABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEvolutivoSino)
                    .HasColumnName("FLG_EVOLUTIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFormatoVariabile)
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgParametroSezioneSino)
                    .HasColumnName("FLG_PARAMETRO_SEZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestoSino)
                    .HasColumnName("FLG_RICHIESTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStampaSino)
                    .HasColumnName("FLG_STAMPA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoValorizzazione)
                    .HasColumnName("FLG_TIPO_VALORIZZAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTuttiSettoriSino)
                    .HasColumnName("FLG_TUTTI_SETTORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisualizzaSino)
                    .HasColumnName("FLG_VISUALIZZA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescAggiuntivaParametro)
                    .HasColumnName("ID_DESC_AGGIUNTIVA_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescParametro)
                    .HasColumnName("ID_DESC_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFormulaAbilitazione).HasColumnName("ID_FORMULA_ABILITAZIONE");

                entity.Property(e => e.IdFormulaPrevalorizzazione)
                    .HasColumnName("ID_FORMULA_PREVALORIZZAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarTariffa)
                    .HasColumnName("ID_PR_GAR_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrParametro)
                    .HasColumnName("ID_PR_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrParametroEreditato)
                    .HasColumnName("ID_PR_PARAMETRO_EREDITATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ProgressivoParametro)
                    .HasColumnName("PROGRESSIVO_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.TooltipInfo)
                    .HasColumnName("TOOLTIP_INFO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrPctCaricamenti>(entity =>
            {
                entity.HasKey(e => e.KeyPrPctCaricamento)
                    .HasName("PK__PR_PCT_C__BE4A1C5D986DBF7B");

                entity.ToTable("PR_PCT_CARICAMENTI", "IAGENCY");

                entity.HasIndex(e => e.KeyPrPctCaricamento)
                    .HasName("PR_PCT_CARICAMENTI_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrPctCaricamento, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_PCT_CARICAMENTI")
                    .IsUnique();

                entity.Property(e => e.KeyPrPctCaricamento)
                    .HasColumnName("KEY_PR_PCT_CARICAMENTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrGarTariffa).HasColumnName("ID_PR_GAR_TARIFFA");

                entity.Property(e => e.IdPrPctCaricamento).HasColumnName("ID_PR_PCT_CARICAMENTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.PctCaricamento)
                    .HasColumnName("PCT_CARICAMENTO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.ValoreParametri)
                    .HasColumnName("VALORE_PARAMETRI")
                    .HasMaxLength(90)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrPerfezionamenti>(entity =>
            {
                entity.HasKey(e => e.IdPrPerfezionamento);

                entity.ToTable("PR_PERFEZIONAMENTI", "IAGENCY");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX02PR_PERFEZIONAMENTI");

                entity.Property(e => e.IdPrPerfezionamento)
                    .HasColumnName("ID_PR_PERFEZIONAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtPerfezionamento)
                    .HasColumnName("DT_PERFEZIONAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.GgPerfezionamento)
                    .HasColumnName("GG_PERFEZIONAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrPremiParametri>(entity =>
            {
                entity.HasKey(e => e.KeyPrPremiParametro)
                    .HasName("SYS_C0060761");

                entity.ToTable("PR_PREMI_PARAMETRI", "IAGENCY");

                entity.HasIndex(e => e.IdPrPremiParametro)
                    .HasName("XX01PR_PREMI_PARAMETRI");

                entity.Property(e => e.KeyPrPremiParametro)
                    .HasColumnName("KEY_PR_PREMI_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CoefParametro)
                    .HasColumnName("COEF_PARAMETRO")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrPremiParametro)
                    .HasColumnName("ID_PR_PREMI_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpParametro)
                    .HasColumnName("IMP_PARAMETRO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PuntiParametro)
                    .HasColumnName("PUNTI_PARAMETRO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<PrPreventivi>(entity =>
            {
                entity.HasKey(e => e.KeyPrPreventivo)
                    .HasName("PK_IAGENCY.PR_PREVENTIVI");

                entity.ToTable("PR_PREVENTIVI", "IAGENCY");

                entity.Property(e => e.KeyPrPreventivo)
                    .HasColumnName("KEY_PR_PREVENTIVO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdPrPreventivo).HasColumnName("ID_PR_PREVENTIVO");

                entity.Property(e => e.IdPrProdotto).HasColumnName("ID_PR_PRODOTTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrProdAppendici>(entity =>
            {
                entity.HasKey(e => e.KeyPrProdAppendice)
                    .HasName("SYS_C0065084");

                entity.ToTable("PR_PROD_APPENDICI", "IAGENCY");

                entity.Property(e => e.KeyPrProdAppendice)
                    .HasColumnName("KEY_PR_PROD_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrProdAppendice)
                    .HasColumnName("ID_PR_PROD_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabAppendice)
                    .HasColumnName("ID_TAB_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrProdModVincolatarie>(entity =>
            {
                entity.HasKey(e => e.KeyProdModVincolataria)
                    .HasName("PK__PR_PROD___2223F3662E67A682");

                entity.ToTable("PR_PROD_MOD_VINCOLATARIE", "IAGENCY");

                entity.HasIndex(e => e.IdProdModVincolataria)
                    .HasName("XX01PR_PROD_MOD_VINCOLATARIE");

                entity.HasIndex(e => e.KeyProdModVincolataria)
                    .HasName("PR_PROD_MOD_VINCOLATARIE_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdProdModVincolataria, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_PROD_MOD_VINCOLATARIE")
                    .IsUnique();

                entity.Property(e => e.KeyProdModVincolataria)
                    .HasColumnName("KEY_PROD_MOD_VINCOLATARIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdModVincolataria)
                    .HasColumnName("ID_MOD_VINCOLATARIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProdModVincolataria)
                    .HasColumnName("ID_PROD_MOD_VINCOLATARIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdModVincolatariaNavigation)
                    .WithMany(p => p.PrProdModVincolatarie)
                    .HasForeignKey(d => d.IdModVincolataria)
                    .HasConstraintName("FK01_PR_MODELLI_VINCOLATARIE");
            });

            modelBuilder.Entity<PrProdOperazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrProdOperazione)
                    .HasName("SYS_C0065117");

                entity.ToTable("PR_PROD_OPERAZIONI", "IAGENCY");

                entity.Property(e => e.KeyPrProdOperazione)
                    .HasColumnName("KEY_PR_PROD_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAutorizzazioneSino)
                    .HasColumnName("FLG_AUTORIZZAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCanaleEmissione)
                    .HasColumnName("FLG_CANALE_EMISSIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTemplateFeu)
                    .HasColumnName("FLG_TEMPLATE_FEU")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdOperazione)
                    .HasColumnName("ID_PR_PROD_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabParametriOperazione)
                    .HasColumnName("ID_TAB_PARAMETRI_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NGgEmisAntergata).HasColumnName("N_GG_EMIS_ANTERGATA");

                entity.Property(e => e.NGgEmisPostergata).HasColumnName("N_GG_EMIS_POSTERGATA");
            });

            modelBuilder.Entity<PrProdTpRetiRegAlleg>(entity =>
            {
                entity.HasKey(e => e.KeyPrProdTpRetiRegAlleg);

                entity.ToTable("PR_PROD_TP_RETI_REG_ALLEG", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrProdTpRetiRegAlleg, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PR_PROD_TP_RETI_REG_ALLEG")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrRegoleAllegati, e.FlgTipoReteVendita, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01PR_PROD_TP_RETI_REG_ALLEG");

                entity.Property(e => e.KeyPrProdTpRetiRegAlleg)
                    .HasColumnName("KEY_PR_PROD_TP_RETI_REG_ALLEG")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogaSino)
                    .HasColumnName("FLG_DEROGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoReteVendita)
                    .HasColumnName("FLG_TIPO_RETE_VENDITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrProdTpRetiRegAlleg)
                    .HasColumnName("ID_PR_PROD_TP_RETI_REG_ALLEG")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRegoleAllegati)
                    .HasColumnName("ID_PR_REGOLE_ALLEGATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrProdotti>(entity =>
            {
                entity.HasKey(e => e.KeyPrProdotto)
                    .HasName("SYS_C0060766");

                entity.ToTable("PR_PRODOTTI", "IAGENCY");

                entity.HasIndex(e => e.IdAntiracket)
                    .HasName("XX03PR_PRODOTTI");

                entity.HasIndex(e => e.IdDescProdotto)
                    .HasName("XX08PR_PRODOTTI");

                entity.HasIndex(e => e.IdFvs)
                    .HasName("XX07PR_PRODOTTI");

                entity.HasIndex(e => e.IdIstat)
                    .HasName("XX06PR_PRODOTTI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX05PR_PRODOTTI");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX04PR_PRODOTTI");

                entity.HasIndex(e => e.IdSsn)
                    .HasName("XX02PR_PRODOTTI");

                entity.HasIndex(e => e.IdTasse)
                    .HasName("XX01PR_PRODOTTI");

                entity.HasIndex(e => new { e.IdPrProdotto, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_PRODOTTI")
                    .IsUnique();

                entity.Property(e => e.KeyPrProdotto)
                    .HasColumnName("KEY_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AaMaxDurata)
                    .HasColumnName("AA_MAX_DURATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AaMinDurata)
                    .HasColumnName("AA_MIN_DURATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.BloccoQzNoTacRinnSino)
                    .HasColumnName("BLOCCO_QZ_NO_TAC_RINN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodDerogaAccessori)
                    .HasColumnName("COD_DEROGA_ACCESSORI")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaAllegati)
                    .HasColumnName("COD_DEROGA_ALLEGATI")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaAltruiDelega)
                    .HasColumnName("COD_DEROGA_ALTRUI_DELEGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaAnterPoster)
                    .HasColumnName("COD_DEROGA_ANTER_POSTER")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaNsDelega)
                    .HasColumnName("COD_DEROGA_NS_DELEGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaPolizza)
                    .HasColumnName("COD_DEROGA_POLIZZA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaPoster)
                    .HasColumnName("COD_DEROGA_POSTER")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaPremioMin)
                    .HasColumnName("COD_DEROGA_PREMIO_MIN")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaPremioMinLordo).HasColumnName("COD_DEROGA_PREMIO_MIN_LORDO");

                entity.Property(e => e.CodDerogaRiservato)
                    .HasColumnName("COD_DEROGA_RISERVATO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaTerrit).HasColumnName("COD_DEROGA_TERRIT");

                entity.Property(e => e.CodProdotto)
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescProdotto)
                    .HasColumnName("DESC_PRODOTTO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtTermineEmissione)
                    .HasColumnName("DT_TERMINE_EMISSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtTermineRinnovo)
                    .HasColumnName("DT_TERMINE_RINNOVO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAbilLimRateoSostSino)
                    .HasColumnName("FLG_ABIL_LIM_RATEO_SOST_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAbilModQuietSino)
                    .HasColumnName("FLG_ABIL_MOD_QUIET_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAbilScadPolCrusSino)
                    .HasColumnName("FLG_ABIL_SCAD_POL_CRUS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAltruiDelegaSino)
                    .HasColumnName("FLG_ALTRUI_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCatTariffa)
                    .HasColumnName("FLG_CAT_TARIFFA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCodTassaProvinciale)
                    .HasColumnName("FLG_COD_TASSA_PROVINCIALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCodfisAssFacSino)
                    .HasColumnName("FLG_CODFIS_ASS_FAC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCollContrSino)
                    .HasColumnName("FLG_COLL_CONTR_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCollettiveFlottaSino)
                    .HasColumnName("FLG_COLLETTIVE_FLOTTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCoobbligatoSino)
                    .HasColumnName("FLG_COOBBLIGATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCumuloCapitaleSino)
                    .HasColumnName("FLG_CUMULO_CAPITALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDataAccEventoSino)
                    .HasColumnName("FLG_DATA_ACC_EVENTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaAccessoriSino)
                    .HasColumnName("FLG_DEROGA_ACCESSORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaAllegatiSino)
                    .HasColumnName("FLG_DEROGA_ALLEGATI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaAltruiDelegaSino)
                    .HasColumnName("FLG_DEROGA_ALTRUI_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaAnterPosterSino)
                    .HasColumnName("FLG_DEROGA_ANTER_POSTER_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaNsDelegaSino)
                    .HasColumnName("FLG_DEROGA_NS_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaPolizzaSino)
                    .HasColumnName("FLG_DEROGA_POLIZZA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaPosterSino)
                    .HasColumnName("FLG_DEROGA_POSTER_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaPremioMinLordo)
                    .HasColumnName("FLG_DEROGA_PREMIO_MIN_LORDO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaPremioMinSino)
                    .HasColumnName("FLG_DEROGA_PREMIO_MIN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaRiservatoSino)
                    .HasColumnName("FLG_DEROGA_RISERVATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaTerritSino)
                    .HasColumnName("FLG_DEROGA_TERRIT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDigitaPolizzaSino)
                    .IsRequired()
                    .HasColumnName("FLG_DIGITA_POLIZZA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDigitaPropostaSino)
                    .IsRequired()
                    .HasColumnName("FLG_DIGITA_PROPOSTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDirAnnSoggProvvSino)
                    .HasColumnName("FLG_DIR_ANN_SOGG_PROVV_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDisabilTerritSino)
                    .HasColumnName("FLG_DISABIL_TERRIT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEsclusivaSino)
                    .HasColumnName("FLG_ESCLUSIVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgExtraCompSino)
                    .HasColumnName("FLG_EXTRA_COMP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFranchigiaAggSino)
                    .HasColumnName("FLG_FRANCHIGIA_AGG_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIncassoFuoriSeqSino)
                    .HasColumnName("FLG_INCASSO_FUORI_SEQ_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIndiceCompSino)
                    .HasColumnName("FLG_INDICE_COMP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIndiceIstatSino)
                    .HasColumnName("FLG_INDICE_ISTAT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInstantInsuranceSino)
                    .HasColumnName("FLG_INSTANT_INSURANCE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgModProv)
                    .HasColumnName("FLG_MOD_PROV")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgModProvPoli)
                    .HasColumnName("FLG_MOD_PROV_POLI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMultivalutaSino)
                    .HasColumnName("FLG_MULTIVALUTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNsDelegaSino)
                    .HasColumnName("FLG_NS_DELEGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbCompSino)
                    .HasColumnName("FLG_OBB_COMP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbIstatSino)
                    .HasColumnName("FLG_OBB_ISTAT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPeriodoPerfezionamento)
                    .HasColumnName("FLG_PERIODO_PERFEZIONAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPolizzaDaPreventivoSino)
                    .HasColumnName("FLG_POLIZZA_DA_PREVENTIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgProdottoApertoSino)
                    .HasColumnName("FLG_PRODOTTO_APERTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgProntaEmissioneSino)
                    .HasColumnName("FLG_PRONTA_EMISSIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPropostaRinnovoSino)
                    .HasColumnName("FLG_PROPOSTA_RINNOVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPuntiAbilSino)
                    .HasColumnName("FLG_PUNTI_ABIL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgQzInfrFissoSino)
                    .HasColumnName("FLG_QZ_INFR_FISSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRateizzazionePremioSino)
                    .HasColumnName("FLG_RATEIZZAZIONE_PREMIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRetiAbilSino)
                    .HasColumnName("FLG_RETI_ABIL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichNPropostaSino)
                    .HasColumnName("FLG_RICH_N_PROPOSTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRimbRegPremioSino)
                    .HasColumnName("FLG_RIMB_REG_PREMIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistroSuPropostaSino)
                    .HasColumnName("FLG_SINISTRO_SU_PROPOSTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStampaPolIncasSino)
                    .HasColumnName("FLG_STAMPA_POL_INCAS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoProdotto)
                    .HasColumnName("FLG_STATO_PRODOTTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStesseGaranzieSino)
                    .HasColumnName("FLG_STESSE_GARANZIE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStessiValoriSino)
                    .HasColumnName("FLG_STESSI_VALORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTacRinnovoDefaultSino)
                    .HasColumnName("FLG_TAC_RINNOVO_DEFAULT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTacRinnovoObbSino)
                    .HasColumnName("FLG_TAC_RINNOVO_OBB_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTacRinnovoSino)
                    .HasColumnName("FLG_TAC_RINNOVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTaglioFissoSino)
                    .HasColumnName("FLG_TAGLIO_FISSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTemplateWise)
                    .HasColumnName("FLG_TEMPLATE_WISE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAbbScRca)
                    .HasColumnName("FLG_TIPO_ABB_SC_RCA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAccessori)
                    .HasColumnName("FLG_TIPO_ACCESSORI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAllegati)
                    .HasColumnName("FLG_TIPO_ALLEGATI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoArrotondamento)
                    .HasColumnName("FLG_TIPO_ARROTONDAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCalendario)
                    .HasColumnName("FLG_TIPO_CALENDARIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRegolazione)
                    .HasColumnName("FLG_TIPO_REGOLAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaDocumentale)
                    .HasColumnName("FLG_TIPOLOGIA_DOCUMENTALE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTpAbilPrPreventivo)
                    .HasColumnName("FLG_TP_ABIL_PR_PREVENTIVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTrattazioneSino)
                    .HasColumnName("FLG_TRATTAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTuttiProdCollegatiSino)
                    .HasColumnName("FLG_TUTTI_PROD_COLLEGATI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTuttiTargetMarketSino)
                    .HasColumnName("FLG_TUTTI_TARGET_MARKET_SINO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.GgLimiteInclusione).HasColumnName("GG_LIMITE_INCLUSIONE");

                entity.Property(e => e.GgMaxPosterTrasfProp).HasColumnName("GG_MAX_POSTER_TRASF_PROP");

                entity.Property(e => e.GgPerfezionamento)
                    .HasColumnName("GG_PERFEZIONAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAntiracket)
                    .HasColumnName("ID_ANTIRACKET")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescProdotto)
                    .HasColumnName("ID_DESC_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFvs)
                    .HasColumnName("ID_FVS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIstat)
                    .HasColumnName("ID_ISTAT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSsn)
                    .HasColumnName("ID_SSN")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTasse)
                    .HasColumnName("ID_TASSE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccessoriDefault)
                    .HasColumnName("IMP_ACCESSORI_DEFAULT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccessoriMax)
                    .HasColumnName("IMP_ACCESSORI_MAX")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccessoriMin)
                    .HasColumnName("IMP_ACCESSORI_MIN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpArrotondamento)
                    .HasColumnName("IMP_ARROTONDAMENTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitaleMinResiduo)
                    .HasColumnName("IMP_CAPITALE_MIN_RESIDUO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpDirAnnullamento)
                    .HasColumnName("IMP_DIR_ANNULLAMENTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPremioMin)
                    .HasColumnName("IMP_PREMIO_MIN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPremioMinLordo)
                    .HasColumnName("IMP_PREMIO_MIN_LORDO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.LimiteGgRateoPrimaRata).HasColumnName("LIMITE_GG_RATEO_PRIMA_RATA");

                entity.Property(e => e.NGgDurataProposta)
                    .HasColumnName("N_GG_DURATA_PROPOSTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NGgEmisAntergata)
                    .HasColumnName("N_GG_EMIS_ANTERGATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NGgEmisPostergata)
                    .HasColumnName("N_GG_EMIS_POSTERGATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.NumGgMaxDurTemporanea).HasColumnName("NUM_GG_MAX_DUR_TEMPORANEA");

                entity.Property(e => e.NumGgMinDurTemporanea).HasColumnName("NUM_GG_MIN_DUR_TEMPORANEA");

                entity.Property(e => e.NumGgMora).HasColumnName("NUM_GG_MORA");

                entity.Property(e => e.PctDefaultAccessori)
                    .HasColumnName("PCT_DEFAULT_ACCESSORI")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctLimiteInclusione).HasColumnName("PCT_LIMITE_INCLUSIONE");

                entity.Property(e => e.PctMaxAccessori)
                    .HasColumnName("PCT_MAX_ACCESSORI")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctMinAccessori)
                    .HasColumnName("PCT_MIN_ACCESSORI")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.TooltipInfo)
                    .HasColumnName("TOOLTIP_INFO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrProdottiColl>(entity =>
            {
                entity.HasKey(e => e.KeyPrProdottoColl)
                    .HasName("PR_PROD_COLL_PK");

                entity.ToTable("PR_PRODOTTI_COLL", "IAGENCY");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX01PR_PRODOTTI_COLL");

                entity.HasIndex(e => e.IdPrProdottoColl)
                    .HasName("XX03PR_PRODOTTI_COLL");

                entity.HasIndex(e => e.IdProdottoColl)
                    .HasName("XX02PR_PRODOTTI_COLL");

                entity.Property(e => e.KeyPrProdottoColl)
                    .HasColumnName("KEY_PR_PRODOTTO_COLL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdottoColl)
                    .HasColumnName("ID_PR_PRODOTTO_COLL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProdottoColl)
                    .HasColumnName("ID_PRODOTTO_COLL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrProdottiConvenzioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrProdottoConvenzione);

                entity.ToTable("PR_PRODOTTI_CONVENZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdConvenzione)
                    .HasName("XX03PR_PRODOTTI_CONVENZIONI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX02PR_PRODOTTI_CONVENZIONI");

                entity.HasIndex(e => e.IdPrProdottoConvenzione)
                    .HasName("XX01PR_PRODOTTI_CONVENZIONI");

                entity.HasIndex(e => new { e.IdPrProdotto, e.IdConvenzione, e.DtStoScadenzaLog, e.DtStoEffettoFis })
                    .HasName("K01_PR_PRODOTTI_CONVENZIONI")
                    .IsUnique();

                entity.Property(e => e.KeyPrProdottoConvenzione)
                    .HasColumnName("KEY_PR_PRODOTTO_CONVENZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdConvenzione)
                    .HasColumnName("ID_CONVENZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdottoConvenzione)
                    .HasColumnName("ID_PR_PRODOTTO_CONVENZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdConvenzioneNavigation)
                    .WithMany(p => p.PrProdottiConvenzioni)
                    .HasForeignKey(d => d.IdConvenzione)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PR_PRODOT__ID_CO__4A0EDAD1");
            });

            modelBuilder.Entity<PrPunteggi>(entity =>
            {
                entity.HasKey(e => e.KeyPrPunteggio)
                    .HasName("SYS_C0060782");

                entity.ToTable("PR_PUNTEGGI", "IAGENCY");

                entity.HasIndex(e => e.IdPrGarTariffa)
                    .HasName("XX02PR_PUNTEGGI");

                entity.HasIndex(e => e.IdPrPunteggio)
                    .HasName("XX01PR_PUNTEGGI");

                entity.Property(e => e.KeyPrPunteggio)
                    .HasColumnName("KEY_PR_PUNTEGGIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTuttiSettoriSino)
                    .HasColumnName("FLG_TUTTI_SETTORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrGarTariffa)
                    .HasColumnName("ID_PR_GAR_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrPunteggio)
                    .HasColumnName("ID_PR_PUNTEGGIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Premio)
                    .HasColumnName("PREMIO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Punti)
                    .HasColumnName("PUNTI")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrRami>(entity =>
            {
                entity.HasKey(e => e.KeyPrRamo)
                    .HasName("SYS_C0060791");

                entity.ToTable("PR_RAMI", "IAGENCY");

                entity.HasIndex(e => e.IdDescRamo)
                    .HasName("XX02PR_RAMI");

                entity.HasIndex(e => e.IdPrLineaProdotto)
                    .HasName("XX04PR_RAMI");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX01PR_RAMI");

                entity.HasIndex(e => new { e.IdPrRamo, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_RAMI")
                    .IsUnique();

                entity.Property(e => e.KeyPrRamo)
                    .HasColumnName("KEY_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodRamo)
                    .IsRequired()
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescRamo)
                    .HasColumnName("DESC_RAMO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPuntiAbilSino)
                    .HasColumnName("FLG_PUNTI_ABIL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRetiAbilSino)
                    .HasColumnName("FLG_RETI_ABIL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRamo)
                    .HasColumnName("FLG_TIPO_RAMO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescRamo)
                    .HasColumnName("ID_DESC_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrLineaProdotto)
                    .HasColumnName("ID_PR_LINEA_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrRecessiRiscatti>(entity =>
            {
                entity.HasKey(e => e.KeyPrRecessoRiscatto)
                    .HasName("SYS_C0060797");

                entity.ToTable("PR_RECESSI_RISCATTI", "IAGENCY");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX02PR_RECESSI_RISCATTI");

                entity.HasIndex(e => e.IdPrRecessoRiscatto)
                    .HasName("XX01PR_RECESSI_RISCATTI");

                entity.Property(e => e.KeyPrRecessoRiscatto)
                    .HasColumnName("KEY_PR_RECESSO_RISCATTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AAa)
                    .HasColumnName("A_AA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AGg)
                    .HasColumnName("A_GG")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AMm)
                    .HasColumnName("A_MM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DaAa)
                    .HasColumnName("DA_AA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DaGg)
                    .HasColumnName("DA_GG")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DaMm)
                    .HasColumnName("DA_MM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRecessoSino)
                    .HasColumnName("FLG_RECESSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRecessoRiscatto)
                    .HasColumnName("ID_PR_RECESSO_RISCATTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpDiritti)
                    .HasColumnName("IMP_DIRITTI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PercValoreQuota)
                    .HasColumnName("PERC_VALORE_QUOTA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PrRegAllegatiGar>(entity =>
            {
                entity.HasKey(e => e.KeyPrGarRegAllegati)
                    .HasName("PK_PR_GAR_REG_ALLEGATI");

                entity.ToTable("PR_REG_ALLEGATI_GAR", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrGarRegAllegati, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PR_REG_ALLEGATI_GAR")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrGaranzia, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01PR_REG_ALLEGATI_GAR");

                entity.Property(e => e.KeyPrGarRegAllegati)
                    .HasColumnName("KEY_PR_GAR_REG_ALLEGATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogaSino)
                    .HasColumnName("FLG_DEROGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTuttiCanaliRete)
                    .HasColumnName("FLG_TUTTI_CANALI_RETE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrGarRegAllegati)
                    .HasColumnName("ID_PR_GAR_REG_ALLEGATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRegolaAllegato)
                    .HasColumnName("ID_REGOLA_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrRegAllegatiPrestaz>(entity =>
            {
                entity.HasKey(e => e.KeyPrRegAllegatiPrestaz);

                entity.ToTable("PR_REG_ALLEGATI_PRESTAZ", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrRegAllegatiPrestaz, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PR_REG_ALLEGATI_PRESTAZ")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrGarPrestazioni, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01PR_REG_ALLEGATI_PRESTAZ");

                entity.Property(e => e.KeyPrRegAllegatiPrestaz)
                    .HasColumnName("KEY_PR_REG_ALLEGATI_PRESTAZ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogaSino)
                    .HasColumnName("FLG_DEROGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrGarPrestazioni)
                    .HasColumnName("ID_PR_GAR_PRESTAZIONI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRegAllegatiPrestaz)
                    .HasColumnName("ID_PR_REG_ALLEGATI_PRESTAZ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRegolaAllegato)
                    .HasColumnName("ID_REGOLA_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrRegoleAllegati>(entity =>
            {
                entity.HasKey(e => e.KeyPrRegoleAllegati);

                entity.ToTable("PR_REGOLE_ALLEGATI", "IAGENCY");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX01PR_REGOLE_ALLEGATI");

                entity.HasIndex(e => new { e.IdPrRegoleAllegati, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PR_REGOLE_ALLEGATI")
                    .IsUnique();

                entity.Property(e => e.KeyPrRegoleAllegati)
                    .HasColumnName("KEY_PR_REGOLE_ALLEGATI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogaSino)
                    .HasColumnName("FLG_DEROGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTuttiCanaliRete)
                    .HasColumnName("FLG_TUTTI_CANALI_RETE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrProdotto).HasColumnName("ID_PR_PRODOTTO");

                entity.Property(e => e.IdPrRegoleAllegati).HasColumnName("ID_PR_REGOLE_ALLEGATI");

                entity.Property(e => e.IdRegolaAllegato).HasColumnName("ID_REGOLA_ALLEGATO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrRegoleVendibilitaGar>(entity =>
            {
                entity.HasKey(e => e.KeyPrRegolaVendibilitaGar)
                    .HasName("PK__PR_REGOL__63D0D90C457B22D9");

                entity.ToTable("PR_REGOLE_VENDIBILITA_GAR", "IAGENCY");

                entity.HasIndex(e => e.KeyPrRegolaVendibilitaGar)
                    .HasName("PR_REGOLE_VENDIBILITA_GAR_PK")
                    .IsUnique();

                entity.Property(e => e.KeyPrRegolaVendibilitaGar)
                    .HasColumnName("KEY_PR_REGOLA_VENDIBILITA_GAR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogabileSino)
                    .HasColumnName("FLG_DEROGABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIncludeEsclude)
                    .HasColumnName("FLG_INCLUDE_ESCLUDE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrGaranziaA)
                    .HasColumnName("ID_PR_GARANZIA_A")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranziaB)
                    .HasColumnName("ID_PR_GARANZIA_B")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrPacchettoA).HasColumnName("ID_PR_PACCHETTO_A");

                entity.Property(e => e.IdPrPacchettoB).HasColumnName("ID_PR_PACCHETTO_B");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRegolaVendibilitaGar)
                    .HasColumnName("ID_PR_REGOLA_VENDIBILITA_GAR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PrgOr)
                    .HasColumnName("PRG_OR")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrRegoleVendibilitaTar>(entity =>
            {
                entity.HasKey(e => e.KeyPrRegolaVendibilitaTar)
                    .HasName("PK_PR_REGOLA_VENDIBILITA_TAR");

                entity.ToTable("PR_REGOLE_VENDIBILITA_TAR", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrGarTariffa, e.DtStoScadenzaFis, e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("I2_PR_REGOLA_VENDIBILITA_TAR");

                entity.HasIndex(e => new { e.IdPrRegolaVendibilitaTar, e.DtStoScadenzaFis, e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("I1_PR_REGOLA_VENDIBILITA_TAR");

                entity.Property(e => e.KeyPrRegolaVendibilitaTar)
                    .HasColumnName("KEY_PR_REGOLA_VENDIBILITA_TAR")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCampoTariffa)
                    .HasColumnName("FLG_CAMPO_TARIFFA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCondizione)
                    .HasColumnName("FLG_CONDIZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogabileSino)
                    .HasColumnName("FLG_DEROGABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrGarTariffa).HasColumnName("ID_PR_GAR_TARIFFA");

                entity.Property(e => e.IdPrGarTariffaCompar).HasColumnName("ID_PR_GAR_TARIFFA_COMPAR");

                entity.Property(e => e.IdPrRegolaVendibilitaTar).HasColumnName("ID_PR_REGOLA_VENDIBILITA_TAR");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.PrgOr).HasColumnName("PRG_OR");
            });

            modelBuilder.Entity<PrRetiVendita>(entity =>
            {
                entity.HasKey(e => e.KeyPrReteVendita)
                    .HasName("SYS_C0060799");

                entity.ToTable("PR_RETI_VENDITA", "IAGENCY");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX04PR_RETI_VENDITA");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX02PR_RETI_VENDITA");

                entity.HasIndex(e => e.IdPrReteVendita)
                    .HasName("XX01PR_RETI_VENDITA");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03PR_RETI_VENDITA");

                entity.Property(e => e.KeyPrReteVendita)
                    .HasColumnName("KEY_PR_RETE_VENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaProposta)
                    .HasColumnName("COD_DEROGA_PROPOSTA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogabileSino)
                    .HasColumnName("FLG_DEROGABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPropostaDerogabileSino)
                    .HasColumnName("FLG_PROPOSTA_DEROGABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEntitaProd)
                    .HasColumnName("FLG_TIPO_ENTITA_PROD")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrReteVendita)
                    .HasColumnName("ID_PR_RETE_VENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrRischioRiass>(entity =>
            {
                entity.HasKey(e => e.KeyPrRischioRiass)
                    .HasName("SYS_C0064574");

                entity.ToTable("PR_RISCHIO_RIASS", "IAGENCY");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX02PR_RISCHIO_RIASS");

                entity.HasIndex(e => e.IdPrRischioRiass)
                    .HasName("XX01PR_RISCHIO_RIASS");

                entity.Property(e => e.KeyPrRischioRiass)
                    .HasColumnName("KEY_PR_RISCHIO_RIASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRischioRiass)
                    .HasColumnName("FLG_RISCHIO_RIASS")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRischioRiass)
                    .HasColumnName("ID_PR_RISCHIO_RIASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrSerieRiass>(entity =>
            {
                entity.HasKey(e => e.KeyPrSerieRiass)
                    .HasName("SYS_C0064578");

                entity.ToTable("PR_SERIE_RIASS", "IAGENCY");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX01PR_SERIE_RIASS");

                entity.HasIndex(e => e.IdPrSerieRiass)
                    .HasName("XX02PR_SERIE_RIASS");

                entity.Property(e => e.KeyPrSerieRiass)
                    .HasColumnName("KEY_PR_SERIE_RIASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoSerieRiass)
                    .HasColumnName("FLG_TIPO_SERIE_RIASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrSerieRiass)
                    .HasColumnName("ID_PR_SERIE_RIASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrSessoEta>(entity =>
            {
                entity.HasKey(e => e.KeyPrSessoEta)
                    .HasName("SYS_C0060807");

                entity.ToTable("PR_SESSO_ETA", "IAGENCY");

                entity.HasIndex(e => e.IdPrGarTariffa)
                    .HasName("XX02PR_SESSO_ETA");

                entity.HasIndex(e => e.IdPrSessoEta)
                    .HasName("XX01PR_SESSO_ETA");

                entity.HasIndex(e => new { e.IdPrGarTariffa, e.FlgTipoAnagrafica, e.FlgSesso, e.EtaDa, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_SESSO_ETA")
                    .IsUnique();

                entity.Property(e => e.KeyPrSessoEta)
                    .HasColumnName("KEY_PR_SESSO_ETA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CoefSessoEta)
                    .HasColumnName("COEF_SESSO_ETA")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.EtaA)
                    .HasColumnName("ETA_A")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.EtaDa)
                    .HasColumnName("ETA_DA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgAssumibileSino)
                    .HasColumnName("FLG_ASSUMIBILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSesso)
                    .HasColumnName("FLG_SESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAnagrafica)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ANAGRAFICA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTuttiSettoriSino)
                    .HasColumnName("FLG_TUTTI_SETTORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrGarTariffa)
                    .HasColumnName("ID_PR_GAR_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrSessoEta)
                    .HasColumnName("ID_PR_SESSO_ETA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpSessoEta)
                    .HasColumnName("IMP_SESSO_ETA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PuntiSessoEta)
                    .HasColumnName("PUNTI_SESSO_ETA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrSettoriTariffari>(entity =>
            {
                entity.HasKey(e => e.KeyPrSettoreTariffario)
                    .HasName("SYS_C0060814");

                entity.ToTable("PR_SETTORI_TARIFFARI", "IAGENCY");

                entity.HasIndex(e => e.IdClasse)
                    .HasName("XX05PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdFormula)
                    .HasName("XX03PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdPrClasseGruppoTer)
                    .HasName("XX12PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdPrEvoluzioneBm)
                    .HasName("XX14PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdPrGarTariffa)
                    .HasName("XX11PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdPrGruppoTerritoriale)
                    .HasName("XX13PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdPrParametro)
                    .HasName("XX02PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdPrParametroClasseMerito)
                    .HasName("XX15PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdPrPunteggio)
                    .HasName("XX07PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdPrSessoEta)
                    .HasName("XX08PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdPrSettoreTariffario)
                    .HasName("XX01PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdPrValParametro)
                    .HasName("XX10PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdPrVariapremio)
                    .HasName("XX09PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdSettore)
                    .HasName("XX06PR_SETTORI_TARIFFARI");

                entity.HasIndex(e => e.IdUso)
                    .HasName("XX04PR_SETTORI_TARIFFARI");

                entity.Property(e => e.KeyPrSettoreTariffario)
                    .HasColumnName("KEY_PR_SETTORE_TARIFFARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ATecnico)
                    .HasColumnName("A_TECNICO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CoefTecnico)
                    .HasColumnName("COEF_TECNICO")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.DaTecnico)
                    .HasColumnName("DA_TECNICO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAmmessoSino)
                    .HasColumnName("FLG_AMMESSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFormaTariffaria)
                    .HasColumnName("FLG_FORMA_TARIFFARIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdClasse)
                    .HasColumnName("ID_CLASSE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFormula)
                    .HasColumnName("ID_FORMULA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrClasseGruppoTer)
                    .HasColumnName("ID_PR_CLASSE_GRUPPO_TER")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrEvoluzioneBm)
                    .HasColumnName("ID_PR_EVOLUZIONE_BM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarTariffa)
                    .HasColumnName("ID_PR_GAR_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGruppoTerritoriale)
                    .HasColumnName("ID_PR_GRUPPO_TERRITORIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrParametro)
                    .HasColumnName("ID_PR_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrParametroClasseMerito)
                    .HasColumnName("ID_PR_PARAMETRO_CLASSE_MERITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrPunteggio)
                    .HasColumnName("ID_PR_PUNTEGGIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrSessoEta)
                    .HasColumnName("ID_PR_SESSO_ETA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrSettoreTariffario)
                    .HasColumnName("ID_PR_SETTORE_TARIFFARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrValParametro)
                    .HasColumnName("ID_PR_VAL_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrVariapremio)
                    .HasColumnName("ID_PR_VARIAPREMIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSettore)
                    .HasColumnName("ID_SETTORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUso)
                    .HasColumnName("ID_USO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpPremioBase)
                    .HasColumnName("IMP_PREMIO_BASE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PuntiBase)
                    .HasColumnName("PUNTI_BASE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdClasseNavigation)
                    .WithMany(p => p.PrSettoriTariffari)
                    .HasForeignKey(d => d.IdClasse)
                    .HasConstraintName("FK__PR_SETTOR__ID_CL__4B02FF0A");

                entity.HasOne(d => d.IdSettoreNavigation)
                    .WithMany(p => p.PrSettoriTariffari)
                    .HasForeignKey(d => d.IdSettore)
                    .HasConstraintName("FK__PR_SETTOR__ID_SE__4BF72343");

                entity.HasOne(d => d.IdUsoNavigation)
                    .WithMany(p => p.PrSettoriTariffari)
                    .HasForeignKey(d => d.IdUso)
                    .HasConstraintName("FK__PR_SETTOR__ID_US__4CEB477C");
            });

            modelBuilder.Entity<PrSezioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrSezione)
                    .HasName("SYS_C0060816");

                entity.ToTable("PR_SEZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdPrBene)
                    .HasName("XX02PR_SEZIONI");

                entity.HasIndex(e => e.IdPrSezione)
                    .HasName("XX01PR_SEZIONI");

                entity.HasIndex(e => new { e.IdPrSezione, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_SEZIONI")
                    .IsUnique();

                entity.Property(e => e.KeyPrSezione)
                    .HasColumnName("KEY_PR_SEZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodSezione)
                    .HasColumnName("COD_SEZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescSezione)
                    .HasColumnName("DESC_SEZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDescSezione)
                    .HasColumnName("ID_DESC_SEZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrBene)
                    .HasColumnName("ID_PR_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrSezione)
                    .HasColumnName("ID_PR_SEZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Ordine)
                    .HasColumnName("ORDINE")
                    .HasColumnType("numeric(2, 0)");
            });

            modelBuilder.Entity<PrTabImposte>(entity =>
            {
                entity.HasKey(e => e.KeyPrTabImposta)
                    .HasName("SYS_C0060822");

                entity.ToTable("PR_TAB_IMPOSTE", "IAGENCY");

                entity.HasIndex(e => e.IdPrTabImposta)
                    .HasName("XX01PR_TAB_IMPOSTE");

                entity.Property(e => e.KeyPrTabImposta)
                    .HasColumnName("KEY_PR_TAB_IMPOSTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoImposta)
                    .HasColumnName("FLG_TIPO_IMPOSTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrTabImposta)
                    .HasColumnName("ID_PR_TAB_IMPOSTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProvincia).HasColumnName("id_provincia");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PctImposta)
                    .HasColumnName("PCT_IMPOSTA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctVariazione)
                    .HasColumnName("PCT_VARIAZIONE")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PrTargetMarket>(entity =>
            {
                entity.HasKey(e => e.KeyPrTargetMarket);

                entity.ToTable("PR_TARGET_MARKET", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrTargetMarket, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_TARGET_MARKET")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrProdotto, e.FlgTargetMarket, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("X01PR_TARGET_MARKET");

                entity.Property(e => e.KeyPrTargetMarket)
                    .HasColumnName("KEY_PR_TARGET_MARKET")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTargetMarket)
                    .HasColumnName("FLG_TARGET_MARKET")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrProdotto).HasColumnName("ID_PR_PRODOTTO");

                entity.Property(e => e.IdPrTargetMarket).HasColumnName("ID_PR_TARGET_MARKET");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrTassi>(entity =>
            {
                entity.HasKey(e => e.KeyPrTasso)
                    .HasName("SYS_C0060844");

                entity.ToTable("PR_TASSI", "IAGENCY");

                entity.HasIndex(e => e.IdPrGarTariffa)
                    .HasName("XX02PR_TASSI");

                entity.HasIndex(e => e.IdPrTasso)
                    .HasName("XX01PR_TASSI");

                entity.Property(e => e.KeyPrTasso)
                    .HasColumnName("KEY_PR_TASSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDerogaCapitale1)
                    .HasColumnName("COD_DEROGA_CAPITALE1")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaCapitale2)
                    .HasColumnName("COD_DEROGA_CAPITALE2")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaFranchigia)
                    .HasColumnName("COD_DEROGA_FRANCHIGIA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaMaxScoperto)
                    .HasColumnName("COD_DEROGA_MAX_SCOPERTO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaPremio)
                    .HasColumnName("COD_DEROGA_PREMIO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaScoperto)
                    .HasColumnName("COD_DEROGA_SCOPERTO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaTasso)
                    .HasColumnName("COD_DEROGA_TASSO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogaCapitale1Sino)
                    .HasColumnName("FLG_DEROGA_CAPITALE1_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgDerogaCapitale2Sino)
                    .HasColumnName("FLG_DEROGA_CAPITALE2_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgDerogaFranchigiaSino)
                    .HasColumnName("FLG_DEROGA_FRANCHIGIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgDerogaMaxScopertoSino)
                    .HasColumnName("FLG_DEROGA_MAX_SCOPERTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgDerogaPremio)
                    .HasColumnName("FLG_DEROGA_PREMIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgDerogaScopertoSino)
                    .HasColumnName("FLG_DEROGA_SCOPERTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgDerogaTassoSino)
                    .HasColumnName("FLG_DEROGA_TASSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.IdPrGarTariffa)
                    .HasColumnName("ID_PR_GAR_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrTasso)
                    .HasColumnName("ID_PR_TASSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAddetto)
                    .HasColumnName("IMP_ADDETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitale1Lim)
                    .HasColumnName("IMP_CAPITALE1_LIM")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpCapitale1Max)
                    .HasColumnName("IMP_CAPITALE1_MAX")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitale1Min)
                    .HasColumnName("IMP_CAPITALE1_MIN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitale1Rif)
                    .HasColumnName("IMP_CAPITALE1_RIF")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitale2Lim)
                    .HasColumnName("IMP_CAPITALE2_LIM")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpCapitale2Max)
                    .HasColumnName("IMP_CAPITALE2_MAX")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitale2Min)
                    .HasColumnName("IMP_CAPITALE2_MIN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitale2Rif)
                    .HasColumnName("IMP_CAPITALE2_RIF")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigiaLim)
                    .HasColumnName("IMP_FRANCHIGIA_LIM")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpFranchigiaMax)
                    .HasColumnName("IMP_FRANCHIGIA_MAX")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigiaMin)
                    .HasColumnName("IMP_FRANCHIGIA_MIN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigiaRif)
                    .HasColumnName("IMP_FRANCHIGIA_RIF")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxCose)
                    .HasColumnName("IMP_MAX_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxInterruzione)
                    .HasColumnName("IMP_MAX_INTERRUZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxPersone)
                    .HasColumnName("IMP_MAX_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxScopertoLim)
                    .HasColumnName("IMP_MAX_SCOPERTO_LIM")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpMaxScopertoMax)
                    .HasColumnName("IMP_MAX_SCOPERTO_MAX")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxScopertoMin)
                    .HasColumnName("IMP_MAX_SCOPERTO_MIN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxScopertoRif)
                    .HasColumnName("IMP_MAX_SCOPERTO_RIF")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxSinistro)
                    .HasColumnName("IMP_MAX_SINISTRO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPremioLim)
                    .HasColumnName("IMP_PREMIO_LIM")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpPremioMax)
                    .HasColumnName("IMP_PREMIO_MAX")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPremioMin)
                    .HasColumnName("IMP_PREMIO_MIN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPremioRif)
                    .HasColumnName("IMP_PREMIO_RIF")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTassoLim)
                    .HasColumnName("IMP_TASSO_LIM")
                    .HasColumnType("decimal(18, 9)");

                entity.Property(e => e.NAddetti)
                    .HasColumnName("N_ADDETTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NMaxAddetti)
                    .HasColumnName("N_MAX_ADDETTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PctScopertoLim)
                    .HasColumnName("PCT_SCOPERTO_LIM")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PctScopertoMax)
                    .HasColumnName("PCT_SCOPERTO_MAX")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctScopertoMin)
                    .HasColumnName("PCT_SCOPERTO_MIN")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctScopertoRif)
                    .HasColumnName("PCT_SCOPERTO_RIF")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.Punti)
                    .HasColumnName("PUNTI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.TassoMax)
                    .HasColumnName("TASSO_MAX")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.TassoMin)
                    .HasColumnName("TASSO_MIN")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.TassoRif)
                    .HasColumnName("TASSO_RIF")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.ValoreParametri)
                    .HasColumnName("VALORE_PARAMETRI")
                    .HasMaxLength(90)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrTipiAnaAssicurati>(entity =>
            {
                entity.HasKey(e => e.KeyPrTipoAnaAssicurato);

                entity.ToTable("PR_TIPI_ANA_ASSICURATI", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrBene, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XIE1PR_TIPI_ANA_ASSICURATI");

                entity.HasIndex(e => new { e.IdPrTipoAnaAssicurato, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_TIPI_ANA_ASSICURATI")
                    .IsUnique();

                entity.Property(e => e.KeyPrTipoAnaAssicurato)
                    .HasColumnName("KEY_PR_TIPO_ANA_ASSICURATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoAnagrafica)
                    .HasColumnName("FLG_TIPO_ANAGRAFICA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrBene).HasColumnName("ID_PR_BENE");

                entity.Property(e => e.IdPrTipoAnaAssicurato).HasColumnName("ID_PR_TIPO_ANA_ASSICURATO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrTipoRetiVendita>(entity =>
            {
                entity.HasKey(e => e.KeyPrTipoReteVendita)
                    .HasName("SYS_C0060846");

                entity.ToTable("PR_TIPO_RETI_VENDITA", "IAGENCY");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX02PR_TIPO_RETI_VENDITA");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX03PR_TIPO_RETI_VENDITA");

                entity.HasIndex(e => e.IdPrTipoReteVendita)
                    .HasName("XX01PR_TIPO_RETI_VENDITA");

                entity.Property(e => e.KeyPrTipoReteVendita)
                    .HasColumnName("KEY_PR_TIPO_RETE_VENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoEntitaProd)
                    .HasColumnName("FLG_TIPO_ENTITA_PROD")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoReteVendita)
                    .HasColumnName("FLG_TIPO_RETE_VENDITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrTipoReteVendita)
                    .HasColumnName("ID_PR_TIPO_RETE_VENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrTipoVeicMotAss>(entity =>
            {
                entity.HasKey(e => e.KeyPrTipoVeicMotAss);

                entity.ToTable("PR_TIPO_VEIC_MOT_ASS", "IAGENCY");

                entity.HasIndex(e => new { e.IdPrTipoVeicMotAss, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK1_PR_TIPO_VEIC_MOT_ASS");

                entity.HasIndex(e => new { e.IdPrTipoVeicolo, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK2_PR_TIPO_VEIC_MOT_ASS");

                entity.Property(e => e.KeyPrTipoVeicMotAss)
                    .HasColumnName("KEY_PR_TIPO_VEIC_MOT_ASS")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMotivoAssicurazione)
                    .HasColumnName("FLG_MOTIVO_ASSICURAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrTipoVeicMotAss).HasColumnName("ID_PR_TIPO_VEIC_MOT_ASS");

                entity.Property(e => e.IdPrTipoVeicolo).HasColumnName("ID_PR_TIPO_VEICOLO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrTipoVeicoli>(entity =>
            {
                entity.HasKey(e => e.KeyPrTipoVeicolo)
                    .HasName("SYS_C0060850");

                entity.ToTable("PR_TIPO_VEICOLI", "IAGENCY");

                entity.HasIndex(e => e.IdClasse)
                    .HasName("XX04PR_TIPO_VEICOLI");

                entity.HasIndex(e => e.IdPrDatiVeicolo)
                    .HasName("XX03PR_TIPO_VEICOLI");

                entity.HasIndex(e => e.IdPrTipoVeicolo)
                    .HasName("XX01PR_TIPO_VEICOLI");

                entity.HasIndex(e => e.IdSettore)
                    .HasName("XX02PR_TIPO_VEICOLI");

                entity.HasIndex(e => e.IdUso)
                    .HasName("XX05PR_TIPO_VEICOLI");

                entity.HasIndex(e => new { e.IdPrDatiVeicolo, e.IdSettore, e.IdClasse, e.IdUso, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_TIPO_VEICOLI")
                    .IsUnique();

                entity.Property(e => e.KeyPrTipoVeicolo)
                    .HasColumnName("KEY_PR_TIPO_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogaSino)
                    .HasColumnName("FLG_DEROGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoAssicSino)
                    .HasColumnName("FLG_MOTIVO_ASSIC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaAbrogazione)
                    .HasColumnName("FLG_RICHIESTA_ABROGAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaCartaVerde)
                    .HasColumnName("FLG_RICHIESTA_CARTA_VERDE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaConducente)
                    .HasColumnName("FLG_RICHIESTA_CONDUCENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaDescVeicolo)
                    .HasColumnName("FLG_RICHIESTA_DESC_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaOptional)
                    .HasColumnName("FLG_RICHIESTA_OPTIONAL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaProprietario)
                    .HasColumnName("FLG_RICHIESTA_PROPRIETARIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaSoloTabella)
                    .HasColumnName("FLG_RICHIESTA_SOLO_TABELLA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaTabVeicoli)
                    .HasColumnName("FLG_RICHIESTA_TAB_VEICOLI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaTargaTelaio)
                    .HasColumnName("FLG_RICHIESTA_TARGA_TELAIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaTessera)
                    .HasColumnName("FLG_RICHIESTA_TESSERA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaTipoTarga)
                    .HasColumnName("FLG_RICHIESTA_TIPO_TARGA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaValore)
                    .HasColumnName("FLG_RICHIESTA_VALORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaVincolo)
                    .HasColumnName("FLG_RICHIESTA_VINCOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoValVeicolo)
                    .HasColumnName("FLG_TIPO_VAL_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdClasse)
                    .HasColumnName("ID_CLASSE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrDatiVeicolo)
                    .HasColumnName("ID_PR_DATI_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrTipoVeicolo)
                    .HasColumnName("ID_PR_TIPO_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSettore)
                    .HasColumnName("ID_SETTORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUso)
                    .HasColumnName("ID_USO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdClasseNavigation)
                    .WithMany(p => p.PrTipoVeicoli)
                    .HasForeignKey(d => d.IdClasse)
                    .HasConstraintName("FK__PR_TIPO_V__ID_CL__4FC7B427");

                entity.HasOne(d => d.IdSettoreNavigation)
                    .WithMany(p => p.PrTipoVeicoli)
                    .HasForeignKey(d => d.IdSettore)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PR_TIPO_V__ID_SE__4ED38FEE");

                entity.HasOne(d => d.IdUsoNavigation)
                    .WithMany(p => p.PrTipoVeicoli)
                    .HasForeignKey(d => d.IdUso)
                    .HasConstraintName("FK__PR_TIPO_V__ID_US__4DDF6BB5");
            });

            modelBuilder.Entity<PrTipoVeicoliFrazionamenti>(entity =>
            {
                entity.HasKey(e => e.KeyPrTipoVeicoliFraz)
                    .HasName("PK_PR_TIPO_VEICOLI_FRAZ");

                entity.ToTable("PR_TIPO_VEICOLI_FRAZIONAMENTI", "IAGENCY");

                entity.HasIndex(e => e.IdPrTipoVeicoliFraz)
                    .HasName("XAK1_PR_TIPO_VEICOLI_FRAZ");

                entity.Property(e => e.KeyPrTipoVeicoliFraz)
                    .HasColumnName("KEY_PR_TIPO_VEICOLI_FRAZ")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrFrazAmmessi).HasColumnName("ID_PR_FRAZ_AMMESSI");

                entity.Property(e => e.IdPrTipoVeicoliFraz).HasColumnName("ID_PR_TIPO_VEICOLI_FRAZ");

                entity.Property(e => e.IdPrTipoVeicolo).HasColumnName("ID_PR_TIPO_VEICOLO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PrValParametri>(entity =>
            {
                entity.HasKey(e => e.KeyPrValParametro)
                    .HasName("SYS_C0060862");

                entity.ToTable("PR_VAL_PARAMETRI", "IAGENCY");

                entity.HasIndex(e => e.IdDescValore)
                    .HasName("XX03PR_VAL_PARAMETRI");

                entity.HasIndex(e => e.IdPrParametro)
                    .HasName("XX04PR_VAL_PARAMETRI");

                entity.HasIndex(e => e.IdPrPremioParametro)
                    .HasName("XX02PR_VAL_PARAMETRI");

                entity.HasIndex(e => e.IdPrValParametro)
                    .HasName("XX01PR_VAL_PARAMETRI");

                entity.Property(e => e.KeyPrValParametro)
                    .HasColumnName("KEY_PR_VAL_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDerogaRiservato)
                    .HasColumnName("COD_DEROGA_RISERVATO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodValore)
                    .HasColumnName("COD_VALORE")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoefParametro)
                    .HasColumnName("COEF_PARAMETRO")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.DescValore)
                    .HasColumnName("DESC_VALORE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogaRiservatoSino)
                    .HasColumnName("FLG_DEROGA_RISERVATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFranchigiaSino)
                    .HasColumnName("FLG_FRANCHIGIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgImpCapitale1Sino)
                    .HasColumnName("FLG_IMP_CAPITALE1_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgImpCapitale2Sino)
                    .HasColumnName("FLG_IMP_CAPITALE2_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMaxCoseSino)
                    .HasColumnName("FLG_MAX_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMaxInterSino)
                    .HasColumnName("FLG_MAX_INTER_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMaxPersoneSino)
                    .HasColumnName("FLG_MAX_PERSONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMaxScopertoSino)
                    .HasColumnName("FLG_MAX_SCOPERTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMaxSinistroSino)
                    .HasColumnName("FLG_MAX_SINISTRO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNAddettiSino)
                    .HasColumnName("FLG_N_ADDETTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPctScopertoSino)
                    .HasColumnName("FLG_PCT_SCOPERTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicCoeffSino)
                    .HasColumnName("FLG_RIC_COEFF_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicFranchigiaSino)
                    .HasColumnName("FLG_RIC_FRANCHIGIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicImpCapitale1Sino)
                    .HasColumnName("FLG_RIC_IMP_CAPITALE1_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicImpCapitale2Sino)
                    .HasColumnName("FLG_RIC_IMP_CAPITALE2_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicImportoSino)
                    .HasColumnName("FLG_RIC_IMPORTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicMaxCoseSino)
                    .HasColumnName("FLG_RIC_MAX_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicMaxInterSino)
                    .HasColumnName("FLG_RIC_MAX_INTER_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicMaxPersoneSino)
                    .HasColumnName("FLG_RIC_MAX_PERSONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicMaxScopertoSino)
                    .HasColumnName("FLG_RIC_MAX_SCOPERTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicMaxSinistroSino)
                    .HasColumnName("FLG_RIC_MAX_SINISTRO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicNAddettiSino)
                    .HasColumnName("FLG_RIC_N_ADDETTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicPctScopertoSino)
                    .HasColumnName("FLG_RIC_PCT_SCOPERTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRiservatoSino)
                    .HasColumnName("FLG_RISERVATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTuttiSettoriSino)
                    .HasColumnName("FLG_TUTTI_SETTORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescValore)
                    .HasColumnName("ID_DESC_VALORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarTariffa).HasColumnName("ID_PR_GAR_TARIFFA");

                entity.Property(e => e.IdPrParametro)
                    .HasColumnName("ID_PR_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrPremioParametro)
                    .HasColumnName("ID_PR_PREMIO_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrValParametro)
                    .HasColumnName("ID_PR_VAL_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpCapitale1)
                    .HasColumnName("IMP_CAPITALE1")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitale2)
                    .HasColumnName("IMP_CAPITALE2")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigia)
                    .HasColumnName("IMP_FRANCHIGIA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxCose)
                    .HasColumnName("IMP_MAX_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxInterruzione)
                    .HasColumnName("IMP_MAX_INTERRUZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxPersone)
                    .HasColumnName("IMP_MAX_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxScoperto)
                    .HasColumnName("IMP_MAX_SCOPERTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxSinistro)
                    .HasColumnName("IMP_MAX_SINISTRO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpParametro)
                    .HasColumnName("IMP_PARAMETRO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NAddetti)
                    .HasColumnName("N_ADDETTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PctScoperto)
                    .HasColumnName("PCT_SCOPERTO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PuntiParametro)
                    .HasColumnName("PUNTI_PARAMETRO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<PrValute>(entity =>
            {
                entity.HasKey(e => e.KeyPrValuta)
                    .HasName("SYS_C0060872");

                entity.ToTable("PR_VALUTE", "IAGENCY");

                entity.HasIndex(e => e.DtStoScadenzaLog)
                    .HasName("XIE1PR_VALUTE");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX03PR_VALUTE");

                entity.HasIndex(e => e.IdPrValuta)
                    .HasName("XX01PR_VALUTE");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX02PR_VALUTE");

                entity.HasIndex(e => new { e.IdPrValuta, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1PR_VALUTE")
                    .IsUnique();

                entity.Property(e => e.KeyPrValuta)
                    .HasColumnName("KEY_PR_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrValuta)
                    .HasColumnName("ID_PR_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrVarDinamiche>(entity =>
            {
                entity.HasKey(e => e.KeyPrVarDinamica)
                    .HasName("SYS_C0065177");

                entity.ToTable("PR_VAR_DINAMICHE", "IAGENCY");

                entity.HasIndex(e => e.IdElencoValore)
                    .HasName("XX03PR_VAR_DINAMICHE");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX02PR_VAR_DINAMICHE");

                entity.HasIndex(e => e.IdPrVarDinamica)
                    .HasName("XX01PR_VAR_DINAMICHE");

                entity.Property(e => e.KeyPrVarDinamica)
                    .HasColumnName("KEY_PR_VAR_DINAMICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoEntitaVar)
                    .HasColumnName("FLG_TIPO_ENTITA_VAR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdElencoValore)
                    .HasColumnName("ID_ELENCO_VALORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrVarDinamica)
                    .HasColumnName("ID_PR_VAR_DINAMICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ValoreData)
                    .HasColumnName("VALORE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ValoreNumerico)
                    .HasColumnName("VALORE_NUMERICO")
                    .HasColumnType("numeric(36, 18)");

                entity.Property(e => e.ValoreStringa)
                    .HasColumnName("VALORE_STRINGA")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrVariaPercBm>(entity =>
            {
                entity.HasKey(e => e.KeyPrVariaPercBm);

                entity.ToTable("PR_VARIA_PERC_BM", "IAGENCY");

                entity.HasIndex(e => e.IdPrVariaPercBm)
                    .HasName("XAK1_PR_VARIA_PERC_BM");

                entity.Property(e => e.KeyPrVariaPercBm)
                    .HasColumnName("KEY_PR_VARIA_PERC_BM")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgClasseAssegnazione)
                    .HasColumnName("FLG_CLASSE_ASSEGNAZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgClasseProvenienza)
                    .HasColumnName("FLG_CLASSE_PROVENIENZA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrGarTariffa).HasColumnName("ID_PR_GAR_TARIFFA");

                entity.Property(e => e.IdPrVariaPercBm).HasColumnName("ID_PR_VARIA_PERC_BM");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.PercVariazione)
                    .HasColumnName("PERC_VARIAZIONE")
                    .HasColumnType("decimal(10, 5)");
            });

            modelBuilder.Entity<PrVariabili>(entity =>
            {
                entity.HasKey(e => e.KeyPrVariabile)
                    .HasName("SYS_C0060876");

                entity.ToTable("PR_VARIABILI", "IAGENCY");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02PR_VARIABILI");

                entity.HasIndex(e => e.IdParametroPrincipale)
                    .HasName("XX04PR_VARIABILI");

                entity.HasIndex(e => e.IdPrGruppoVariabili)
                    .HasName("XX03PR_VARIABILI");

                entity.HasIndex(e => e.IdPrVariabile)
                    .HasName("XX01PR_VARIABILI");

                entity.Property(e => e.KeyPrVariabile)
                    .HasColumnName("KEY_PR_VARIABILE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodParametro)
                    .HasColumnName("COD_PARAMETRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFormatoVariabile)
                    .IsRequired()
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligatorioSino)
                    .HasColumnName("FLG_OBBLIGATORIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSceltaMultiplaSino)
                    .HasColumnName("FLG_SCELTA_MULTIPLA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdParametroPrincipale)
                    .HasColumnName("ID_PARAMETRO_PRINCIPALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGruppoVariabili)
                    .HasColumnName("ID_PR_GRUPPO_VARIABILI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrVariabile)
                    .HasColumnName("ID_PR_VARIABILE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Lunghezza)
                    .HasColumnName("LUNGHEZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Precisione)
                    .HasColumnName("PRECISIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrVariabiliEntita>(entity =>
            {
                entity.HasKey(e => e.KeyPrVariabileEntita)
                    .HasName("SYS_C0060879");

                entity.ToTable("PR_VARIABILI_ENTITA", "IAGENCY");

                entity.HasIndex(e => e.IdPrBene)
                    .HasName("XX03PR_VARIABILI_ENTITA");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX04PR_VARIABILI_ENTITA");

                entity.HasIndex(e => e.IdPrGruppoVariabili)
                    .HasName("XX02PR_VARIABILI_ENTITA");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX05PR_VARIABILI_ENTITA");

                entity.HasIndex(e => e.IdPrVariabileEntita)
                    .HasName("XX01PR_VARIABILI_ENTITA");

                entity.Property(e => e.KeyPrVariabileEntita)
                    .HasColumnName("KEY_PR_VARIABILE_ENTITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRichiestaFinePolSino)
                    .HasColumnName("FLG_RICHIESTA_FINE_POL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrBene)
                    .HasColumnName("ID_PR_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGruppoVariabili)
                    .HasColumnName("ID_PR_GRUPPO_VARIABILI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrVariabileEntita)
                    .HasColumnName("ID_PR_VARIABILE_ENTITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Ordine)
                    .HasColumnName("ORDINE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrVariapremi>(entity =>
            {
                entity.HasKey(e => e.KeyPrVariapremio)
                    .HasName("SYS_C0060881");

                entity.ToTable("PR_VARIAPREMI", "IAGENCY");

                entity.HasIndex(e => e.IdDescVariapremio)
                    .HasName("XX03PR_VARIAPREMI");

                entity.HasIndex(e => e.IdPrGarTariffa)
                    .HasName("XX02PR_VARIAPREMI");

                entity.HasIndex(e => e.IdPrVariapremio)
                    .HasName("XX01PR_VARIAPREMI");

                entity.Property(e => e.KeyPrVariapremio)
                    .HasColumnName("KEY_PR_VARIAPREMIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodVariapremio)
                    .HasColumnName("COD_VARIAPREMIO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CoefVariazione)
                    .HasColumnName("COEF_VARIAZIONE")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.DescVariapremio)
                    .HasColumnName("DESC_VARIAPREMIO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgModificabileSino)
                    .HasColumnName("FLG_MODIFICABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoValore)
                    .HasColumnName("FLG_TIPO_VALORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTuttiSettoriSino)
                    .HasColumnName("FLG_TUTTI_SETTORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescVariapremio)
                    .HasColumnName("ID_DESC_VARIAPREMIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarTariffa)
                    .HasColumnName("ID_PR_GAR_TARIFFA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrVariapremio)
                    .HasColumnName("ID_PR_VARIAPREMIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpVariazione)
                    .HasColumnName("IMP_VARIAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PerVariazione)
                    .HasColumnName("PER_VARIAZIONE")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PuntiVariazione)
                    .HasColumnName("PUNTI_VARIAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ValoreParametri)
                    .HasColumnName("VALORE_PARAMETRI")
                    .HasMaxLength(90)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrVincolatarie>(entity =>
            {
                entity.HasKey(e => e.IdPrVincolataria)
                    .HasName("PK__PR_VINCO__8ABFDAAC6D8E6BFF");

                entity.ToTable("PR_VINCOLATARIE", "IAGENCY");

                entity.Property(e => e.IdPrVincolataria)
                    .HasColumnName("ID_PR_VINCOLATARIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrZoneTerritoriali>(entity =>
            {
                entity.HasKey(e => e.KeyPrZonaTerritoriale)
                    .HasName("SYS_C0060911");

                entity.ToTable("PR_ZONE_TERRITORIALI", "IAGENCY");

                entity.HasIndex(e => e.IdComune)
                    .HasName("XX03PR_ZONE_TERRITORIALI");

                entity.HasIndex(e => e.IdNazione)
                    .HasName("XX05PR_ZONE_TERRITORIALI");

                entity.HasIndex(e => e.IdPrGruppoTerritoriale)
                    .HasName("XX02PR_ZONE_TERRITORIALI");

                entity.HasIndex(e => e.IdPrZonaTerritoriale)
                    .HasName("XX01PR_ZONE_TERRITORIALI");

                entity.HasIndex(e => e.IdProvincia)
                    .HasName("XX04PR_ZONE_TERRITORIALI");

                entity.Property(e => e.KeyPrZonaTerritoriale)
                    .HasColumnName("KEY_PR_ZONA_TERRITORIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Cap)
                    .HasColumnName("CAP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgSiglaTargaSpec)
                    .HasColumnName("FLG_SIGLA_TARGA_SPEC")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdComune)
                    .HasColumnName("ID_COMUNE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNazione)
                    .HasColumnName("ID_NAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGruppoTerritoriale)
                    .HasColumnName("ID_PR_GRUPPO_TERRITORIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrZonaTerritoriale)
                    .HasColumnName("ID_PR_ZONA_TERRITORIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProvincia)
                    .HasColumnName("ID_PROVINCIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PregressoScopertoGaranzie>(entity =>
            {
                entity.HasNoKey();

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX01PregressoScopertoGaranzie");

                entity.HasIndex(e => new { e.IdCompagnia, e.NumPolizza })
                    .HasName("XX05PregressoScopertoGaranzie");

                entity.Property(e => e.CodCompagniaIvass)
                    .HasColumnName("CodCompagniaIVASS")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DtProdotto)
                    .HasColumnName("DT_PRODOTTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdGaranzia).HasColumnName("ID_GARANZIA");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.NumPolizza)
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PregressoTfr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PregressoTFR");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX01PregressoTFR");

                entity.HasIndex(e => new { e.IdCompagnia, e.Npolizza })
                    .HasName("XX02PregressoTFR");

                entity.Property(e => e.CodCompagniaIvass)
                    .HasColumnName("CodCompagniaIVASS")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.Npolizza)
                    .HasColumnName("NPolizza")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Npratica)
                    .HasColumnName("NPratica")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Nproposta)
                    .HasColumnName("NProposta")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Tfratc)
                    .HasColumnName("TFRAtc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Tfrfondo)
                    .HasColumnName("TFRFondo")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<PrevAnagrafiche>(entity =>
            {
                entity.HasKey(e => e.KeyPrevAnagrafica)
                    .HasName("PK__PREV_ANA__36083F3C91A51ACB");

                entity.ToTable("PREV_ANAGRAFICHE", "IAGENCY");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01_PREV_ANAGRAFICHE");

                entity.HasIndex(e => new { e.IdPrevAnagrafica, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02_PREV_ANAGRAFICHE");

                entity.Property(e => e.KeyPrevAnagrafica)
                    .HasColumnName("KEY_PREV_ANAGRAFICA")
                    .ValueGeneratedNever();

                entity.Property(e => e.CapResidenza)
                    .HasColumnName("CAP_RESIDENZA")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodiceFiscale)
                    .HasColumnName("CODICE_FISCALE")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cognome)
                    .HasColumnName("COGNOME")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagioneSociale)
                    .HasColumnName("COGNOME_RAGIONE_SOCIALE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DtNascita)
                    .HasColumnName("DT_NASCITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCodRuolo)
                    .IsRequired()
                    .HasColumnName("FLG_COD_RUOLO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgProfessione)
                    .HasColumnName("FLG_PROFESSIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPropContraenteSino)
                    .HasColumnName("FLG_PROP_CONTRAENTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSesso)
                    .HasColumnName("FLG_SESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAnagrafica)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ANAGRAFICA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRecapito1)
                    .HasColumnName("FLG_TIPO_RECAPITO1")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRecapito2)
                    .HasColumnName("FLG_TIPO_RECAPITO2")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdComuneNascita).HasColumnName("ID_COMUNE_NASCITA");

                entity.Property(e => e.IdComuneResidenza).HasColumnName("ID_COMUNE_RESIDENZA");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdPrevAnagrafica).HasColumnName("ID_PREV_ANAGRAFICA");

                entity.Property(e => e.IdProvinciaResidenza).HasColumnName("ID_PROVINCIA_RESIDENZA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Indirizzo)
                    .HasColumnName("INDIRIZZO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nome)
                    .HasColumnName("NOME")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.PartitaIva)
                    .HasColumnName("PARTITA_IVA")
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Recapito1)
                    .HasColumnName("RECAPITO1")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Recapito2)
                    .HasColumnName("RECAPITO2")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrevIvass>(entity =>
            {
                entity.HasKey(e => e.IdPrevIvass)
                    .HasName("PK__PREV_IVA__37F6F3133E649265");

                entity.ToTable("PREV_IVASS", "IAGENCY");

                entity.Property(e => e.IdPrevIvass)
                    .HasColumnName("ID_PREV_IVASS")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtSysRichiesta)
                    .HasColumnName("DT_SYS_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Errori)
                    .HasColumnName("ERRORI")
                    .IsUnicode(false);

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.XmlRichiesta)
                    .HasColumnName("XML_RICHIESTA")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Provv18Temp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PROVV18_TEMP", "IREGULATION");

                entity.Property(e => e.AnnoAvv).HasColumnName("ANNO_AVV");

                entity.Property(e => e.AnnoEsercizio).HasColumnName("ANNO_ESERCIZIO");

                entity.Property(e => e.DtRiapSin)
                    .HasColumnName("DT_RIAP_SIN")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiapertura)
                    .HasColumnName("DT_RIAPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoSin)
                    .HasColumnName("DT_STATO_SIN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStato)
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoSinistro)
                    .HasColumnName("FLG_STATO_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoVeicolo)
                    .HasColumnName("FLG_TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdEntitacoinvoltarca).HasColumnName("ID_ENTITACOINVOLTARCA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpVeicoli)
                    .HasColumnName("IMP_VEICOLI")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.StatoDanno)
                    .HasColumnName("STATO_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Tipo)
                    .HasColumnName("TIPO")
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PrvCapitolati>(entity =>
            {
                entity.HasKey(e => e.IdPrvCapitolato)
                    .HasName("SYS_C0060885");

                entity.ToTable("PRV_CAPITOLATI", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03PRV_CAPITOLATI");

                entity.HasIndex(e => e.IdDescCapitolato)
                    .HasName("XX04PRV_CAPITOLATI");

                entity.HasIndex(e => e.IdRetevenditaCreazione)
                    .HasName("XX02PRV_CAPITOLATI");

                entity.HasIndex(e => new { e.IdCompagnia, e.CodCapitolato, e.IdRetevenditaCreazione })
                    .HasName("XAK1PRV_CAPITOLATI")
                    .IsUnique();

                entity.Property(e => e.IdPrvCapitolato)
                    .HasColumnName("ID_PRV_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodCapitolato)
                    .IsRequired()
                    .HasColumnName("COD_CAPITOLATO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescCapitolato)
                    .HasColumnName("DESC_CAPITOLATO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescCapitolato)
                    .HasColumnName("ID_DESC_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaCreazione)
                    .HasColumnName("ID_RETEVENDITA_CREAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PrvCapitolatiBase>(entity =>
            {
                entity.HasKey(e => e.KeyPrvCapitolatoBase)
                    .HasName("SYS_C0060891");

                entity.ToTable("PRV_CAPITOLATI_BASE", "IAGENCY");

                entity.HasIndex(e => e.IdPrvCapitolato)
                    .HasName("XX03PRV_CAPITOLATI_BASE");

                entity.HasIndex(e => e.IdPrvCapitolatoBase)
                    .HasName("XX01PRV_CAPITOLATI_BASE");

                entity.HasIndex(e => e.IdRetevenditaSup)
                    .HasName("XX02PRV_CAPITOLATI_BASE");

                entity.Property(e => e.KeyPrvCapitolatoBase)
                    .HasColumnName("KEY_PRV_CAPITOLATO_BASE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoReteVendita)
                    .HasColumnName("FLG_TIPO_RETE_VENDITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrvCapitolato)
                    .HasColumnName("ID_PRV_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrvCapitolatoBase)
                    .HasColumnName("ID_PRV_CAPITOLATO_BASE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaSup)
                    .HasColumnName("ID_RETEVENDITA_SUP")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Livello)
                    .HasColumnName("LIVELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPrvCapitolatoNavigation)
                    .WithMany(p => p.PrvCapitolatiBase)
                    .HasForeignKey(d => d.IdPrvCapitolato)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__PRV_CAPIT__ID_PR__50BBD860");
            });

            modelBuilder.Entity<PrvCapitolatiSpecifici>(entity =>
            {
                entity.HasKey(e => e.KeyPrvCapitolatoSpecifico)
                    .HasName("SYS_C0060897");

                entity.ToTable("PRV_CAPITOLATI_SPECIFICI", "IAGENCY");

                entity.HasIndex(e => e.IdPrvCapitolato)
                    .HasName("XX03PRV_CAPITOLATI_SPECIFICI");

                entity.HasIndex(e => e.IdPrvCapitolatoSpecifico)
                    .HasName("XX01PRV_CAPITOLATI_SPECIFICI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02PRV_CAPITOLATI_SPECIFICI");

                entity.Property(e => e.KeyPrvCapitolatoSpecifico)
                    .HasColumnName("KEY_PRV_CAPITOLATO_SPECIFICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrvCapitolato)
                    .HasColumnName("ID_PRV_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrvCapitolatoSpecifico)
                    .HasColumnName("ID_PRV_CAPITOLATO_SPECIFICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaCorr)
                    .HasColumnName("ID_RETEVENDITA_CORR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPrvCapitolatoNavigation)
                    .WithMany(p => p.PrvCapitolatiSpecifici)
                    .HasForeignKey(d => d.IdPrvCapitolato)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__PRV_CAPIT__ID_PR__51AFFC99");
            });

            modelBuilder.Entity<PrvDatiCapitolati>(entity =>
            {
                entity.HasKey(e => e.KeyPrvDatiCapitolato)
                    .HasName("SYS_C0060903");

                entity.ToTable("PRV_DATI_CAPITOLATI", "IAGENCY");

                entity.HasIndex(e => e.IdFormula)
                    .HasName("XX03PRV_DATI_CAPITOLATI");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX04PRV_DATI_CAPITOLATI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX05PRV_DATI_CAPITOLATI");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX06PRV_DATI_CAPITOLATI");

                entity.HasIndex(e => e.IdPrvCapitolato)
                    .HasName("XX02PRV_DATI_CAPITOLATI");

                entity.HasIndex(e => e.IdPrvDatiCapitolato)
                    .HasName("XX01PRV_DATI_CAPITOLATI");

                entity.HasIndex(e => new { e.IdPrvCapitolato, e.IdPrRamo, e.IdPrProdotto, e.IdPrGaranzia })
                    .HasName("XIE1PRV_DATI_CAPITOLATI");

                entity.Property(e => e.KeyPrvDatiCapitolato)
                    .HasColumnName("KEY_PRV_DATI_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDerogaOperazione)
                    .HasColumnName("COD_DEROGA_OPERAZIONE")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaRateSucc)
                    .HasColumnName("COD_DEROGA_RATE_SUCC")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogaOperazioneSino)
                    .HasColumnName("FLG_DEROGA_OPERAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaRateSuccSino)
                    .HasColumnName("FLG_DEROGA_RATE_SUCC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgModProv)
                    .HasColumnName("FLG_MOD_PROV")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMomentoProv)
                    .HasColumnName("FLG_MOMENTO_PROV")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdFormula)
                    .HasColumnName("ID_FORMULA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrvCapitolato)
                    .HasColumnName("ID_PRV_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrvDatiCapitolato)
                    .HasColumnName("ID_PRV_DATI_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAcquisto)
                    .HasColumnName("IMP_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpIncasso)
                    .HasColumnName("IMP_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.PctAcquisto)
                    .HasColumnName("PCT_ACQUISTO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctAcquistoAccessori)
                    .HasColumnName("PCT_ACQUISTO_ACCESSORI")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctIncasso)
                    .HasColumnName("PCT_INCASSO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctIncassoAccessori)
                    .HasColumnName("PCT_INCASSO_ACCESSORI")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.ValoreParametri)
                    .HasColumnName("VALORE_PARAMETRI")
                    .HasMaxLength(90)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPrvCapitolatoNavigation)
                    .WithMany(p => p.PrvDatiCapitolati)
                    .HasForeignKey(d => d.IdPrvCapitolato)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__PRV_DATI___ID_PR__52A420D2");
            });

            modelBuilder.Entity<PrvRetrocessione>(entity =>
            {
                entity.HasKey(e => e.KeyPrvRetrocessione)
                    .HasName("SYS_C0060909");

                entity.ToTable("PRV_RETROCESSIONE", "IAGENCY");

                entity.HasIndex(e => e.IdProdotto)
                    .HasName("XX04PRV_RETROCESSIONE");

                entity.HasIndex(e => e.IdPrvRetrocessione)
                    .HasName("XX01PRV_RETROCESSIONE");

                entity.HasIndex(e => e.IdRamo)
                    .HasName("XX02PRV_RETROCESSIONE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03PRV_RETROCESSIONE");

                entity.Property(e => e.KeyPrvRetrocessione)
                    .HasColumnName("KEY_PRV_RETROCESSIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoRetrocessione)
                    .HasColumnName("FLG_TIPO_RETROCESSIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProdotto)
                    .HasColumnName("ID_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrvRetrocessione)
                    .HasColumnName("ID_PRV_RETROCESSIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRamo)
                    .HasColumnName("ID_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PctRetrocessione)
                    .HasColumnName("PCT_RETROCESSIONE")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PtfAgenzie>(entity =>
            {
                entity.HasKey(e => e.KeyPolAgenzia)
                    .HasName("PK__PTF_AGEN__D9A5251DA040A99B");

                entity.ToTable("PTF_AGENZIE", "ICLAIMS");

                entity.HasIndex(e => e.IdPolAgenzia)
                    .HasName("XX03PTF_AGENZIE");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX01PTF_AGENZIE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02PTF_AGENZIE");

                entity.HasIndex(e => e.KeyPolAgenzia)
                    .HasName("SYS_C0047452")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaLog })
                    .HasName("XIE2PTF_AGENZIE");

                entity.HasIndex(e => new { e.IdRetevendita, e.DtStoScadenzaLog })
                    .HasName("XIE1PTF_AGENZIE");

                entity.HasIndex(e => new { e.IdPolizza, e.IdPolAgenzia, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK1PTF_AGENZIE")
                    .IsUnique();

                entity.Property(e => e.KeyPolAgenzia)
                    .HasColumnName("KEY_POL_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPolAgenzia)
                    .HasColumnName("ID_POL_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Livello)
                    .HasColumnName("LIVELLO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PtfAssicurati>(entity =>
            {
                entity.HasKey(e => e.IdAssicurato)
                    .HasName("PK__PTF_ASSI__B470FFFAC631A24B");

                entity.ToTable("PTF_ASSICURATI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02PTF_ASSICURATI");

                entity.HasIndex(e => e.IdAssicurato)
                    .HasName("SYS_C0047454")
                    .IsUnique();

                entity.Property(e => e.IdAssicurato)
                    .HasColumnName("ID_ASSICURATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteAssicurato)
                    .HasColumnName("NOTE_ASSICURATO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfBeneficiari>(entity =>
            {
                entity.HasKey(e => e.KeyBeneficiario)
                    .HasName("PK__PTF_BENE__AB80E7105DF66F04");

                entity.ToTable("PTF_BENEFICIARI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03PTF_BENEFICIARI");

                entity.HasIndex(e => e.IdBene)
                    .HasName("XX01PTF_BENEFICIARI");

                entity.HasIndex(e => e.IdBeneficiario)
                    .HasName("XX02PTF_BENEFICIARI");

                entity.HasIndex(e => e.KeyBeneficiario)
                    .HasName("SYS_C0047456")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdBeneficiario, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_BENEFICIARI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyBeneficiario)
                    .HasColumnName("KEY_BENEFICIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdBene)
                    .HasColumnName("ID_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdBeneficiario)
                    .HasColumnName("ID_BENEFICIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteBeneficiario)
                    .HasColumnName("NOTE_BENEFICIARIO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfBeni>(entity =>
            {
                entity.HasKey(e => e.KeyBene)
                    .HasName("PK__PTF_BENI__165AF8083C5C3E89");

                entity.ToTable("PTF_BENI", "ICLAIMS");

                entity.HasIndex(e => e.IdAssicurato)
                    .HasName("XX04PTF_BENI");

                entity.HasIndex(e => e.IdBene)
                    .HasName("XX03PTF_BENI");

                entity.HasIndex(e => e.IdEsternoBene)
                    .HasName("XX02PTF_BENI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX01PTF_BENI");

                entity.HasIndex(e => e.IdUbicazione)
                    .HasName("XX05PTF_BENI");

                entity.HasIndex(e => e.IdVeicoloassicurato)
                    .HasName("XX06PTF_BENI");

                entity.HasIndex(e => e.KeyBene)
                    .HasName("SYS_C0047458")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX07PTF_BENI");

                entity.HasIndex(e => new { e.IdBene, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_BENI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyBene)
                    .HasColumnName("KEY_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAssicuratoDal)
                    .HasColumnName("DT_ASSICURATO_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEsclusione)
                    .HasColumnName("DT_ESCLUSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPartenzaViaggio)
                    .HasColumnName("DT_PARTENZA_VIAGGIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrenotazioneViaggio)
                    .HasColumnName("DT_PRENOTAZIONE_VIAGGIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRientroViaggio)
                    .HasColumnName("DT_RIENTRO_VIAGGIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoBene)
                    .HasColumnName("FLG_TIPO_BENE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagraficaCapoNucleo).HasColumnName("ID_ANAGRAFICA_CAPO_NUCLEO");

                entity.Property(e => e.IdAssicurato)
                    .HasColumnName("ID_ASSICURATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdBene)
                    .HasColumnName("ID_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDebitore)
                    .HasColumnName("ID_DEBITORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEsternoBene)
                    .HasColumnName("ID_ESTERNO_BENE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUbicazione)
                    .HasColumnName("ID_UBICAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdVeicoloassicurato)
                    .HasColumnName("ID_VEICOLOASSICURATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdentificativoNucleo)
                    .HasColumnName("IDENTIFICATIVO_NUCLEO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NoteBeneNc)
                    .HasColumnName("NOTE_BENE_NC")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfCoass>(entity =>
            {
                entity.HasKey(e => e.KeyCoasspolizza)
                    .HasName("PK__PTF_COAS__1FD04CE030E4CF9D");

                entity.ToTable("PTF_COASS", "ICLAIMS");

                entity.HasIndex(e => e.IdCoasspolizza)
                    .HasName("XX02PTF_COASS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03PTF_COASS");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX01PTF_COASS");

                entity.HasIndex(e => e.KeyCoasspolizza)
                    .HasName("SYS_C0047469")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCoasspolizza, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_COASS_STO")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCoasspolizza, e.IdCompagnia, e.DtStoEffettoLog, e.KeyCoasspolizza })
                    .HasName("PTF_COASS_STO_K01")
                    .IsUnique();

                entity.Property(e => e.KeyCoasspolizza)
                    .HasColumnName("KEY_COASSPOLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoCompagniaCoass)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_COMPAGNIA_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCoasspolizza)
                    .HasColumnName("ID_COASSPOLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PerQuotaCoass)
                    .HasColumnName("PER_QUOTA_COASS")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PtfCondizioniPart>(entity =>
            {
                entity.HasKey(e => e.KeyCondizionePart);

                entity.ToTable("PTF_CONDIZIONI_PART", "ICLAIMS");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX01PTF_CONDIZIONI_PART");

                entity.HasIndex(e => new { e.IdCondizionePart, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_CONDIZIONE_PART_STO")
                    .IsUnique();

                entity.Property(e => e.KeyCondizionePart)
                    .HasColumnName("KEY_CONDIZIONE_PART")
                    .ValueGeneratedNever();

                entity.Property(e => e.CondizionePart)
                    .HasColumnName("CONDIZIONE_PART")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdBene).HasColumnName("ID_BENE");

                entity.Property(e => e.IdCondizionePart).HasColumnName("ID_CONDIZIONE_PART");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<PtfContraenti>(entity =>
            {
                entity.HasKey(e => e.KeyContraentepolizza)
                    .HasName("PK__PTF_CONT__430DBAA7897BB1CC");

                entity.ToTable("PTF_CONTRAENTI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03PTF_CONTRAENTI");

                entity.HasIndex(e => e.IdContraentepolizza)
                    .HasName("XX02PTF_CONTRAENTI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX01PTF_CONTRAENTI");

                entity.HasIndex(e => e.KeyContraentepolizza)
                    .HasName("SYS_C0047472")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdContraentepolizza, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_CONTRAENTI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyContraentepolizza)
                    .HasColumnName("KEY_CONTRAENTEPOLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContraentepolizza)
                    .HasColumnName("ID_CONTRAENTEPOLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteContraente)
                    .HasColumnName("NOTE_CONTRAENTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfContrattiEmessi>(entity =>
            {
                entity.HasKey(e => e.IdContrattoEmesso)
                    .HasName("PK__PTF_CONT__C265BEEDFC72D5E3");

                entity.ToTable("PTF_CONTRATTI_EMESSI", "IREGULATION");

                entity.HasIndex(e => e.IdAgenzia)
                    .HasName("XX03PTF_CONTRATTI_EMESSI");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX06PTF_CONTRATTI_EMESSI");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02PTF_CONTRATTI_EMESSI");

                entity.HasIndex(e => e.IdContrattoEmesso)
                    .HasName("PK_PTF_CONTRATTI_EMESSI")
                    .IsUnique();

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX05PTF_CONTRATTI_EMESSI");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX04PTF_CONTRATTI_EMESSI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX07PTF_CONTRATTI_EMESSI");

                entity.HasIndex(e => new { e.IdCompagnia, e.AnnoCompetenza, e.MeseCompetenza, e.FlgTipoEmesso })
                    .HasName("K01_PTF_CONTRATTI_EMESSI");

                entity.Property(e => e.IdContrattoEmesso)
                    .HasColumnName("ID_CONTRATTO_EMESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoCompetenza)
                    .HasColumnName("ANNO_COMPETENZA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodAgenzia)
                    .IsRequired()
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProdotto)
                    .IsRequired()
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRamo)
                    .IsRequired()
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodValuta)
                    .IsRequired()
                    .HasColumnName("COD_VALUTA")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Contraente)
                    .IsRequired()
                    .HasColumnName("CONTRAENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoEmesso)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_EMESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEvento)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_EVENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoEventoStornato)
                    .HasColumnName("FLG_TIPO_EVENTO_STORNATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAgenzia)
                    .HasColumnName("ID_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.KeyPolEvento)
                    .HasColumnName("KEY_POL_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MeseCompetenza)
                    .HasColumnName("MESE_COMPETENZA")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NPolizza)
                    .IsRequired()
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfContrattiEmessi12Sez>(entity =>
            {
                entity.HasKey(e => e.IdContrattoEmesso);

                entity.ToTable("PTF_CONTRATTI_EMESSI_1_2_SEZ", "IREGULATION");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02_PTF_CONTRATTI_EMESSI");

                entity.HasIndex(e => new { e.IdCompagnia, e.AnnoCompetenza, e.MeseCompetenza })
                    .HasName("XX01_PTF_CONTRATTI_EMESSI");

                entity.Property(e => e.IdContrattoEmesso)
                    .HasColumnName("ID_CONTRATTO_EMESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnniDurataContratto)
                    .HasColumnName("ANNI_DURATA_CONTRATTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoCompetenza)
                    .HasColumnName("ANNO_COMPETENZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoCompetenzaEmesso).HasColumnName("ANNO_COMPETENZA_EMESSO");

                entity.Property(e => e.CodFrazionamento)
                    .HasColumnName("COD_FRAZIONAMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodProdotto)
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRamo)
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodTariffa)
                    .HasColumnName("COD_TARIFFA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodTipoTitolo)
                    .HasColumnName("COD_TIPO_TITOLO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodfiscPiva)
                    .HasColumnName("CODFISC_PIVA")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CodfiscPivaAss)
                    .HasColumnName("CODFISC_PIVA_ASS")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagioneSociale)
                    .HasColumnName("COGNOME_RAGIONE_SOCIALE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagioneSocialeAss)
                    .HasColumnName("COGNOME_RAGIONE_SOCIALE_ASS")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ContaInteri)
                    .HasColumnName("conta_interi")
                    .HasColumnType("numeric(5, 0)");

                entity.Property(e => e.ContaQuota)
                    .HasColumnName("conta_quota")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.DtAnnullamentoPolizza)
                    .HasColumnName("DT_ANNULLAMENTO_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoEvento)
                    .HasColumnName("DT_EFFETTO_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoPolizza)
                    .HasColumnName("DT_EFFETTO_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPervenimentoProposta)
                    .HasColumnName("DT_PERVENIMENTO_PROPOSTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazioneAnnullo)
                    .HasColumnName("DT_REGISTRAZIONE_ANNULLO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazioneEmesso)
                    .HasColumnName("DT_REGISTRAZIONE_EMESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPolizza)
                    .HasColumnName("DT_SCADENZA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysEvento)
                    .HasColumnName("DT_SYS_EVENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFormaPensioneSino)
                    .HasColumnName("FLG_FORMA_PENSIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIfrs4Sino)
                    .HasColumnName("FLG_IFRS4_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgOperazAnnullataSino)
                    .HasColumnName("FLG_OPERAZ_ANNULLATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPeriodicitaPagamenti)
                    .HasColumnName("FLG_PERIODICITA_PAGAMENTI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgQuietanzaPagataSino)
                    .HasColumnName("FLG_QUIETANZA_PAGATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoBilancioPolizza)
                    .HasColumnName("FLG_RAMO_BILANCIO_POLIZZA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDelega)
                    .HasColumnName("FLG_TIPO_DELEGA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEvento)
                    .HasColumnName("FLG_TIPO_EVENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOperazionePtf)
                    .HasColumnName("FLG_TIPO_OPERAZIONE_PTF")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpNettoAnnuoFirma)
                    .HasColumnName("IMP_NETTO_ANNUO_FIRMA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNettoAnnuoRateSucc)
                    .HasColumnName("IMP_NETTO_ANNUO_RATE_SUCC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNettoTitolo)
                    .HasColumnName("IMP_NETTO_TITOLO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeyEvento)
                    .HasColumnName("KEY_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.KeyTitolo)
                    .HasColumnName("KEY_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MatricolaRui)
                    .HasColumnName("MATRICOLA_RUI")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MeseCompetenza)
                    .HasColumnName("MESE_COMPETENZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MeseCompetenzaEmesso).HasColumnName("MESE_COMPETENZA_EMESSO");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NProposta)
                    .HasColumnName("N_PROPOSTA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroSezioneContratto)
                    .HasColumnName("NUMERO_SEZIONE_CONTRATTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PercQuota)
                    .HasColumnName("PERC_QUOTA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.ProgressivoBene)
                    .HasColumnName("PROGRESSIVO_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ProgressivoOrdine)
                    .HasColumnName("PROGRESSIVO_ORDINE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.TargaTelaio)
                    .HasColumnName("TARGA_TELAIO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfContrattiScaduti>(entity =>
            {
                entity.HasKey(e => e.IdRegistroScaduti)
                    .IsClustered(false);

                entity.ToTable("PTF_CONTRATTI_SCADUTI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.AnnoCompetenza, e.MeseCompetenza })
                    .HasName("XX01_PTF_CONTRATTI_SCADUTI")
                    .IsClustered();

                entity.Property(e => e.IdRegistroScaduti)
                    .HasColumnName("ID_REGISTRO_SCADUTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoCompetenza)
                    .HasColumnName("ANNO_COMPETENZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodfiscPiva)
                    .HasColumnName("CODFISC_PIVA")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.ContaInteri)
                    .HasColumnName("CONTA_INTERI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ContaQuota)
                    .HasColumnName("CONTA_QUOTA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.Contraente)
                    .HasColumnName("CONTRAENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtAnnullamento)
                    .HasColumnName("DT_ANNULLAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDelega)
                    .HasColumnName("FLG_TIPO_DELEGA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPrestazione)
                    .HasColumnName("FLG_TIPO_PRESTAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MeseCompetenza)
                    .HasColumnName("MESE_COMPETENZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PctQuota)
                    .HasColumnName("PCT_QUOTA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PtfContrattiStornati>(entity =>
            {
                entity.HasKey(e => e.IdRegistroStornati);

                entity.ToTable("PTF_CONTRATTI_STORNATI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.AnnoRegistro, e.MeseRegistro })
                    .HasName("IDX_01_STORNATI");

                entity.Property(e => e.IdRegistroStornati)
                    .HasColumnName("ID_REGISTRO_STORNATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoRegistro)
                    .HasColumnName("ANNO_REGISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodStorno)
                    .HasColumnName("COD_STORNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodfiscPiva)
                    .HasColumnName("CODFISC_PIVA")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagioneSociale)
                    .HasColumnName("COGNOME_RAGIONE_SOCIALE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompetenzaEmesso)
                    .HasColumnName("COMPETENZA_EMESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.ContaInteri)
                    .HasColumnName("CONTA_INTERI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ContaQuota)
                    .HasColumnName("CONTA_QUOTA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.DtEffettoPolizza)
                    .HasColumnName("DT_EFFETTO_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoStorno)
                    .HasColumnName("DT_EFFETTO_STORNO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegStornoOperazione)
                    .HasColumnName("DT_REG_STORNO_OPERAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazioneStorno)
                    .HasColumnName("DT_REGISTRAZIONE_STORNO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPolizza)
                    .HasColumnName("DT_SCADENZA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgOperazioneAnnullataSino)
                    .HasColumnName("FLG_OPERAZIONE_ANNULLATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoBene)
                    .HasColumnName("FLG_TIPO_BENE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImportoFirma)
                    .HasColumnName("IMPORTO_FIRMA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImportoOperazione)
                    .HasColumnName("IMPORTO_OPERAZIONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeyPolEvento)
                    .HasColumnName("KEY_POL_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MeseRegistro)
                    .HasColumnName("MESE_REGISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PercQuota)
                    .HasColumnName("PERC_QUOTA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.ProgressivoBene)
                    .HasColumnName("PROGRESSIVO_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.RamoBilancio)
                    .HasColumnName("RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.RamoBilancioPolizza)
                    .HasColumnName("RAMO_BILANCIO_POLIZZA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.TipoCoass)
                    .HasColumnName("TIPO_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfDebitori>(entity =>
            {
                entity.HasKey(e => e.KeyDebitore)
                    .HasName("PK__PTF_DEBI__EB8F2EB0AFED3336");

                entity.ToTable("PTF_DEBITORI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03PTF_DEBITORI");

                entity.HasIndex(e => e.IdDebitore)
                    .HasName("XX02PTF_DEBITORI");

                entity.HasIndex(e => e.KeyDebitore)
                    .HasName("SYS_C0048305")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdDebitore, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_DEBITORI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyDebitore)
                    .HasColumnName("KEY_DEBITORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDebitore)
                    .HasColumnName("ID_DEBITORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PtfEntiVincolanti>(entity =>
            {
                entity.HasKey(e => e.KeyEntevincolante)
                    .HasName("PK__PTF_ENTI__29653D2160AFFD0B");

                entity.ToTable("PTF_ENTI_VINCOLANTI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03PTF_ENTI_VINCOLANTI");

                entity.HasIndex(e => e.IdBene)
                    .HasName("XX01PTF_ENTI_VINCOLANTI");

                entity.HasIndex(e => e.IdEntevincolante)
                    .HasName("XX02PTF_ENTI_VINCOLANTI");

                entity.HasIndex(e => e.KeyEntevincolante)
                    .HasName("SYS_C0047474")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdEntevincolante, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_ENTI_VINCOLANTI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyEntevincolante)
                    .HasColumnName("KEY_ENTEVINCOLANTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEffettoVincolo)
                    .HasColumnName("DT_EFFETTO_VINCOLO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaVincolo)
                    .HasColumnName("DT_SCADENZA_VINCOLO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdBene)
                    .HasColumnName("ID_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntevincolante)
                    .HasColumnName("ID_ENTEVINCOLANTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PtfGaranzie>(entity =>
            {
                entity.HasKey(e => e.KeyGaranziaassicurata)
                    .HasName("PK__PTF_GARA__F0049ACA3CE0EE84");

                entity.ToTable("PTF_GARANZIE", "ICLAIMS");

                entity.HasIndex(e => e.IdBene)
                    .HasName("XX01PTF_GARANZIE");

                entity.HasIndex(e => e.IdGaranzia)
                    .HasName("XX03PTF_GARANZIE");

                entity.HasIndex(e => e.IdGaranziaassicurata)
                    .HasName("XX02PTF_GARANZIE");

                entity.HasIndex(e => e.IdValutaCapitaleAssicurato)
                    .HasName("XX04PTF_GARANZIE");

                entity.HasIndex(e => e.IdValutaFranchigia)
                    .HasName("XX08PTF_GARANZIE");

                entity.HasIndex(e => e.IdValutaMaxCose)
                    .HasName("XX06PTF_GARANZIE");

                entity.HasIndex(e => e.IdValutaMaxInterruzioneAtt)
                    .HasName("XX10PTF_GARANZIE");

                entity.HasIndex(e => e.IdValutaMaxPersona)
                    .HasName("XX07PTF_GARANZIE");

                entity.HasIndex(e => e.IdValutaMaxSinistro)
                    .HasName("XX05PTF_GARANZIE");

                entity.HasIndex(e => e.IdValutaMinScoperto)
                    .HasName("XX09PTF_GARANZIE");

                entity.HasIndex(e => e.KeyGaranziaassicurata)
                    .HasName("SYS_C0047482")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX11PTF_GARANZIE");

                entity.HasIndex(e => new { e.IdGaranziaassicurata, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_GARANZIE_STO")
                    .IsUnique();

                entity.Property(e => e.KeyGaranziaassicurata)
                    .HasColumnName("KEY_GARANZIAASSICURATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ClassificazioneGaranzia)
                    .HasColumnName("CLASSIFICAZIONE_GARANZIA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CodTariffa)
                    .HasColumnName("COD_TARIFFA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoMassimalizzazione)
                    .HasColumnName("FLG_TIPO_MASSIMALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdBene)
                    .HasColumnName("ID_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdGaranzia)
                    .HasColumnName("ID_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdGaranziaassicurata)
                    .HasColumnName("ID_GARANZIAASSICURATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaCapitaleAssicurato)
                    .HasColumnName("ID_VALUTA_CAPITALE_ASSICURATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaFranchigia)
                    .HasColumnName("ID_VALUTA_FRANCHIGIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaMaxCose)
                    .HasColumnName("ID_VALUTA_MAX_COSE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaMaxInterruzioneAtt)
                    .HasColumnName("ID_VALUTA_MAX_INTERRUZIONE_ATT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaMaxPersona)
                    .HasColumnName("ID_VALUTA_MAX_PERSONA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaMaxSinistro)
                    .HasColumnName("ID_VALUTA_MAX_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValutaMinScoperto)
                    .HasColumnName("ID_VALUTA_MIN_SCOPERTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpCapitaleAssicurato)
                    .HasColumnName("IMP_CAPITALE_ASSICURATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCapitaleAssicurato2)
                    .HasColumnName("IMP_CAPITALE_ASSICURATO2")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigia)
                    .HasColumnName("IMP_FRANCHIGIA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxCose)
                    .HasColumnName("IMP_MAX_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxInterruzioneAttivita)
                    .HasColumnName("IMP_MAX_INTERRUZIONE_ATTIVITA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxPersona)
                    .HasColumnName("IMP_MAX_PERSONA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxSinistro)
                    .HasColumnName("IMP_MAX_SINISTRO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMinScoperto)
                    .HasColumnName("IMP_MIN_SCOPERTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NPrestErogabiliPerAnnAss).HasColumnName("N_PREST_EROGABILI_PER_ANN_ASS");

                entity.Property(e => e.PerScoperto)
                    .HasColumnName("PER_SCOPERTO")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PtfPolizze>(entity =>
            {
                entity.HasKey(e => e.KeyPolizza)
                    .HasName("PK__PTF_POLI__D22980E9B4AB1AE0");

                entity.ToTable("PTF_POLIZZE", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX01PTF_POLIZZE");

                entity.HasIndex(e => e.IdEsternoPtf)
                    .HasName("XX03PTF_POLIZZE");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX04PTF_POLIZZE");

                entity.HasIndex(e => e.IdProdotto)
                    .HasName("XX05PTF_POLIZZE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02PTF_POLIZZE");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX06PTF_POLIZZE");

                entity.HasIndex(e => e.KeyPolizza)
                    .HasName("SYS_C0047496")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX07PTF_POLIZZE");

                entity.HasIndex(e => new { e.IdPolizza, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_POLIZZE_STO")
                    .IsUnique();

                entity.Property(e => e.KeyPolizza)
                    .HasColumnName("KEY_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.As400)
                    .HasColumnName("AS_400")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore)
                    .HasColumnName("COD_PRODUTTORE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DtAnnullamentoPolizza)
                    .HasColumnName("DT_ANNULLAMENTO_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoCopProvvisoria)
                    .HasColumnName("DT_EFFETTO_COP_PROVVISORIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoPolizza)
                    .HasColumnName("DT_EFFETTO_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoRataCopertura)
                    .HasColumnName("DT_EFFETTO_RATA_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFcRataCopertura)
                    .HasColumnName("DT_FC_RATA_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFcRataCoperturaMan)
                    .HasColumnName("DT_FC_RATA_COPERTURA_MAN")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFinAnnualAss)
                    .HasColumnName("DT_FIN_ANNUAL_ASS")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniAnnualAss)
                    .HasColumnName("DT_INI_ANNUAL_ASS")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagRataCopertura)
                    .HasColumnName("DT_PAG_RATA_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtProdotto)
                    .HasColumnName("DT_PRODOTTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaMora)
                    .HasColumnName("DT_SCA_MORA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaPolizza)
                    .HasColumnName("DT_SCA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaRata)
                    .HasColumnName("DT_SCA_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaRataCopertura)
                    .HasColumnName("DT_SCA_RATA_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSospensionePolizza)
                    .HasColumnName("DT_SOSPENSIONE_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.Edizione)
                    .HasColumnName("EDIZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFrazionamento)
                    .HasColumnName("FLG_FRAZIONAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoAnnullamento)
                    .HasColumnName("FLG_MOTIVO_ANNULLAMENTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPtfPolizza)
                    .IsRequired()
                    .HasColumnName("FLG_PTF_POLIZZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCoass)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoPtf)
                    .HasColumnName("FLG_TIPO_PTF")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgVisibilitaDipendentiSino)
                    .HasColumnName("FLG_VISIBILITA_DIPENDENTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEsternoPtf)
                    .HasColumnName("ID_ESTERNO_PTF")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizzaAltriDati)
                    .HasColumnName("ID_POLIZZA_ALTRI_DATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProdotto)
                    .HasColumnName("ID_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NFcRataCopertura)
                    .HasColumnName("N_FC_RATA_COPERTURA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NFcRataCoperturaMan)
                    .HasColumnName("N_FC_RATA_COPERTURA_MAN")
                    .HasMaxLength(30);

                entity.Property(e => e.NFlotta)
                    .HasColumnName("N_FLOTTA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizzaCoass)
                    .HasColumnName("N_POLIZZA_COASS")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizzaSostituente)
                    .HasColumnName("N_POLIZZA_SOSTITUENTE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizzaSostituita)
                    .HasColumnName("N_POLIZZA_SOSTITUITA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NProposta)
                    .HasColumnName("N_PROPOSTA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NoteForzaturaScoperto)
                    .HasColumnName("NOTE_FORZATURA_SCOPERTO")
                    .IsUnicode(false);

                entity.Property(e => e.NumPolEsteso)
                    .HasColumnName("NUM_POL_ESTESO")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfPolizzeAltriDati>(entity =>
            {
                entity.HasKey(e => e.KeyPolizzaAltriDati)
                    .HasName("PK__PTF_POLI__E3622E9C1EBE9A1B");

                entity.ToTable("PTF_POLIZZE_ALTRI_DATI", "ICLAIMS");

                entity.HasIndex(e => e.KeyPolizzaAltriDati)
                    .HasName("SYS_C0048337")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPolizzaAltriDati, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_POLIZZE_ALTRI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyPolizzaAltriDati)
                    .HasColumnName("KEY_POLIZZA_ALTRI_DATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodConvenzione)
                    .HasColumnName("COD_CONVENZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRiassicurazione1)
                    .HasColumnName("COD_RIASSICURAZIONE_1")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodRiassicurazione2)
                    .HasColumnName("COD_RIASSICURAZIONE_2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescConvenzione)
                    .HasColumnName("DESC_CONVENZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFinConvenzione)
                    .HasColumnName("DT_FIN_CONVENZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniConvenzione)
                    .HasColumnName("DT_INI_CONVENZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAppendiciDerogaSino)
                    .HasColumnName("FLG_APPENDICI_DEROGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAppendiciRegolazioneSino)
                    .HasColumnName("FLG_APPENDICI_REGOLAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgApplicazioniSino)
                    .HasColumnName("FLG_APPLICAZIONI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDelegaRisImpSino)
                    .HasColumnName("FLG_DELEGA_RIS_IMP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FranchigiaFrontale)
                    .HasColumnName("FRANCHIGIA_FRONTALE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IdPolizzaAltriDati)
                    .HasColumnName("ID_POLIZZA_ALTRI_DATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpTfr)
                    .HasColumnName("IMP_TFR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTfrFondo)
                    .HasColumnName("IMP_TFR_FONDO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Mesi1Esigib)
                    .HasColumnName("MESI1_ESIGIB")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Mesi2Esigib)
                    .HasColumnName("MESI2_ESIGIB")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Mesi3Esigib)
                    .HasColumnName("MESI3_ESIGIB")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Mesi4Esigib)
                    .HasColumnName("MESI4_ESIGIB")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.NumeroRate)
                    .HasColumnName("NUMERO_RATE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PercRiassicurazione1)
                    .HasColumnName("PERC_RIASSICURAZIONE_1")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PercRiassicurazione2)
                    .HasColumnName("PERC_RIASSICURAZIONE_2")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.TestoLiberoPolizza)
                    .HasColumnName("TESTO_LIBERO_POLIZZA")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfPremiEmessi>(entity =>
            {
                entity.HasKey(e => e.IdPremioEmesso)
                    .HasName("PK__PTF_PREM__9249C0308126C24A");

                entity.ToTable("PTF_PREMI_EMESSI", "IREGULATION");

                entity.HasIndex(e => e.IdAgenzia)
                    .HasName("XX06PTF_PREMI_EMESSI");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX10PTF_PREMI_EMESSI");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04PTF_PREMI_EMESSI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03PTF_PREMI_EMESSI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX07PTF_PREMI_EMESSI");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX08PTF_PREMI_EMESSI");

                entity.HasIndex(e => e.IdPremioEmesso)
                    .HasName("PK_PTF_PREMI_EMESSI")
                    .IsUnique();

                entity.HasIndex(e => e.IdTitTipoTitolo)
                    .HasName("XX05PTF_PREMI_EMESSI");

                entity.HasIndex(e => e.IdTitTitolo)
                    .HasName("XX02PTF_PREMI_EMESSI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX09PTF_PREMI_EMESSI");

                entity.HasIndex(e => new { e.IdCompagnia, e.AnnoCompetenza, e.MeseCompetenza })
                    .HasName("K01_PTF_PREMI_EMESSI");

                entity.Property(e => e.IdPremioEmesso)
                    .HasColumnName("ID_PREMIO_EMESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoCompetenza)
                    .HasColumnName("ANNO_COMPETENZA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodAgenzia)
                    .IsRequired()
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodFrazionamento)
                    .HasColumnName("COD_FRAZIONAMENTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProdotto)
                    .IsRequired()
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRamo)
                    .IsRequired()
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagenzia)
                    .HasColumnName("COD_SUBAGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodTipoTitolo)
                    .IsRequired()
                    .HasColumnName("COD_TIPO_TITOLO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodValuta)
                    .IsRequired()
                    .HasColumnName("COD_VALUTA")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CompagniaCoass)
                    .HasColumnName("COMPAGNIA_COASS")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Contraente)
                    .HasColumnName("CONTRAENTE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DtCopertura)
                    .HasColumnName("DT_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtProdotto)
                    .HasColumnName("DT_PRODOTTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCategoriaEmesso)
                    .IsRequired()
                    .HasColumnName("FLG_CATEGORIA_EMESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCoass)
                    .HasColumnName("FLG_TIPO_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAgenzia)
                    .HasColumnName("ID_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSubagenzia)
                    .HasColumnName("ID_SUBAGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTipoTitolo)
                    .HasColumnName("ID_TIT_TIPO_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTitolo)
                    .HasColumnName("ID_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccAcquisto)
                    .HasColumnName("IMP_ACC_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccIncasso)
                    .HasColumnName("IMP_ACC_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAntiracket)
                    .HasColumnName("IMP_ANTIRACKET")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarAcquisto)
                    .HasColumnName("IMP_GAR_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarIncasso)
                    .HasColumnName("IMP_GAR_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeyTitTitolo)
                    .HasColumnName("KEY_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MeseCompetenza)
                    .HasColumnName("MESE_COMPETENZA")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NPolizza)
                    .IsRequired()
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PctQuota)
                    .HasColumnName("PCT_QUOTA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PtfPremiEmessiGaranzie>(entity =>
            {
                entity.HasKey(e => e.IdPremioEmessoGaranzia)
                    .HasName("PK__PTF_PREM__5CCB923D0250BCAD");

                entity.ToTable("PTF_PREMI_EMESSI_GARANZIE", "IREGULATION");

                entity.HasIndex(e => e.IdPrGarScomposizione)
                    .HasName("XX04PTF_PREMI_EMESSI_GARANZIE");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX03PTF_PREMI_EMESSI_GARANZIE");

                entity.HasIndex(e => e.IdPremioEmesso)
                    .HasName("K01_PTF_PREMI_EMESSI_GARANZIE");

                entity.HasIndex(e => e.IdPremioEmessoGaranzia)
                    .HasName("PK_PTF_PREMI_EMESSI_GARANZIE")
                    .IsUnique();

                entity.Property(e => e.IdPremioEmessoGaranzia)
                    .HasColumnName("ID_PREMIO_EMESSO_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGaranzia)
                    .IsRequired()
                    .HasColumnName("COD_GARANZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtScadenzaGaranzia)
                    .HasColumnName("DT_SCADENZA_GARANZIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCatTariffa)
                    .IsRequired()
                    .HasColumnName("FLG_CAT_TARIFFA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoBilancio)
                    .IsRequired()
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrGarScomposizione)
                    .HasColumnName("ID_PR_GAR_SCOMPOSIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPremioEmesso)
                    .HasColumnName("ID_PREMIO_EMESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccAcquisto)
                    .HasColumnName("IMP_ACC_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccIncasso)
                    .HasColumnName("IMP_ACC_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAntiracket)
                    .HasColumnName("IMP_ANTIRACKET")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarAcquisto)
                    .HasColumnName("IMP_GAR_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarIncasso)
                    .HasColumnName("IMP_GAR_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PctAntiracket)
                    .HasColumnName("PCT_ANTIRACKET")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctFvs)
                    .HasColumnName("PCT_FVS")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctSsn)
                    .HasColumnName("PCT_SSN")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctTasse)
                    .HasColumnName("PCT_TASSE")
                    .HasColumnType("numeric(10, 5)");

                entity.HasOne(d => d.IdPremioEmessoNavigation)
                    .WithMany(p => p.PtfPremiEmessiGaranzie)
                    .HasForeignKey(d => d.IdPremioEmesso)
                    .HasConstraintName("FK__PTF_PREMI__ID_PR__6D58170E");
            });

            modelBuilder.Entity<PtfPremiIncassati>(entity =>
            {
                entity.HasKey(e => e.IdPremioIncassato)
                    .HasName("PK__PTF_PREM__CC1D204780435B5C");

                entity.ToTable("PTF_PREMI_INCASSATI", "IREGULATION");

                entity.HasIndex(e => e.IdAgenzia)
                    .HasName("XX06PTF_PREMI_INCASSATI");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX10PTF_PREMI_INCASSATI");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04PTF_PREMI_INCASSATI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03PTF_PREMI_INCASSATI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX07PTF_PREMI_INCASSATI");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX08PTF_PREMI_INCASSATI");

                entity.HasIndex(e => e.IdPremioIncassato)
                    .HasName("PK_PTF_PREMI_INCASSATI")
                    .IsUnique();

                entity.HasIndex(e => e.IdTitEsito)
                    .HasName("XX02PTF_PREMI_INCASSATI");

                entity.HasIndex(e => e.IdTitTipoTitolo)
                    .HasName("XX05PTF_PREMI_INCASSATI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX09PTF_PREMI_INCASSATI");

                entity.HasIndex(e => new { e.IdCompagnia, e.AnnoCompetenza, e.MeseCompetenza })
                    .HasName("K01_PTF_PREMI_INCASSATI");

                entity.Property(e => e.IdPremioIncassato)
                    .HasColumnName("ID_PREMIO_INCASSATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoCompetenza)
                    .HasColumnName("ANNO_COMPETENZA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodAgenzia)
                    .IsRequired()
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProdotto)
                    .IsRequired()
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRamo)
                    .IsRequired()
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodTipoTitolo)
                    .IsRequired()
                    .HasColumnName("COD_TIPO_TITOLO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodValuta)
                    .IsRequired()
                    .HasColumnName("COD_VALUTA")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Contraente)
                    .IsRequired()
                    .HasColumnName("CONTRAENTE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DtCopertura)
                    .HasColumnName("DT_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEsito)
                    .HasColumnName("DT_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysEsito)
                    .HasColumnName("DT_SYS_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEsentasseSino)
                    .IsRequired()
                    .HasColumnName("FLG_ESENTASSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEsito)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ESITO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAgenzia)
                    .HasColumnName("ID_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitEsito)
                    .HasColumnName("ID_TIT_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTipoTitolo)
                    .HasColumnName("ID_TIT_TIPO_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccAcquisto)
                    .HasColumnName("IMP_ACC_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccIncasso)
                    .HasColumnName("IMP_ACC_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAntiracket)
                    .HasColumnName("IMP_ANTIRACKET")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarAcquisto)
                    .HasColumnName("IMP_GAR_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarIncasso)
                    .HasColumnName("IMP_GAR_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpImponibileEsente)
                    .HasColumnName("IMP_IMPONIBILE_ESENTE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpImponibileNonSoggetto)
                    .HasColumnName("IMP_IMPONIBILE_NON_SOGGETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpImponibileSoggetto)
                    .HasColumnName("IMP_IMPONIBILE_SOGGETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeyTitEsito)
                    .HasColumnName("KEY_TIT_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MeseCompetenza)
                    .HasColumnName("MESE_COMPETENZA")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NPolizza)
                    .IsRequired()
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfPremiIncassatiGaranzie>(entity =>
            {
                entity.HasKey(e => e.IdPremioIncassatoGaranzia)
                    .HasName("PK__PTF_PREM__6C46581965D83617");

                entity.ToTable("PTF_PREMI_INCASSATI_GARANZIE", "IREGULATION");

                entity.HasIndex(e => e.IdPrGarScomposizione)
                    .HasName("XX04PTF_PREMI_INCASSATI_GARAN");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX03PTF_PREMI_INCASSATI_GARAN");

                entity.HasIndex(e => e.IdPremioIncassato)
                    .HasName("K01_PREMI_INCASSATI_GARANZIE");

                entity.HasIndex(e => e.IdPremioIncassatoGaranzia)
                    .HasName("PK_PREMI_INCASSATI_GARANZIE")
                    .IsUnique();

                entity.Property(e => e.IdPremioIncassatoGaranzia)
                    .HasColumnName("ID_PREMIO_INCASSATO_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGaranzia)
                    .IsRequired()
                    .HasColumnName("COD_GARANZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtScadenzaGaranzia)
                    .HasColumnName("DT_SCADENZA_GARANZIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCatTariffa)
                    .IsRequired()
                    .HasColumnName("FLG_CAT_TARIFFA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoBilancio)
                    .IsRequired()
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrGarScomposizione)
                    .HasColumnName("ID_PR_GAR_SCOMPOSIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPremioIncassato)
                    .HasColumnName("ID_PREMIO_INCASSATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccAcquisto)
                    .HasColumnName("IMP_ACC_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccIncasso)
                    .HasColumnName("IMP_ACC_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAntiracket)
                    .HasColumnName("IMP_ANTIRACKET")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarAcquisto)
                    .HasColumnName("IMP_GAR_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarIncasso)
                    .HasColumnName("IMP_GAR_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpImponibileEsente)
                    .HasColumnName("IMP_IMPONIBILE_ESENTE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpImponibileNonSoggetto)
                    .HasColumnName("IMP_IMPONIBILE_NON_SOGGETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpImponibileSoggetto)
                    .HasColumnName("IMP_IMPONIBILE_SOGGETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PctAntiracket)
                    .HasColumnName("PCT_ANTIRACKET")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctFvs)
                    .HasColumnName("PCT_FVS")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctSsn)
                    .HasColumnName("PCT_SSN")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctTasse)
                    .HasColumnName("PCT_TASSE")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.ProvTasseRca)
                    .HasColumnName("PROV_TASSE_RCA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPremioIncassatoNavigation)
                    .WithMany(p => p.PtfPremiIncassatiGaranzie)
                    .HasForeignKey(d => d.IdPremioIncassato)
                    .HasConstraintName("FK__PTF_PREMI__ID_PR__6E4C3B47");
            });

            modelBuilder.Entity<PtfPrestazioni>(entity =>
            {
                entity.HasKey(e => e.IdPrestAssicurata);

                entity.ToTable("PTF_PRESTAZIONI", "ICLAIMS");

                entity.HasIndex(e => e.IdBene)
                    .HasName("XX01_PTF_PRESTAZIONI");

                entity.HasIndex(e => e.IdGaranziaassicurata)
                    .HasName("XX02_PTF_PRESTAZIONI");

                entity.HasIndex(e => e.IdPrestazione)
                    .HasName("XX03_PTF_PRESTAZIONI");

                entity.Property(e => e.IdPrestAssicurata)
                    .HasColumnName("ID_PREST_ASSICURATA")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoMassimalizzazione)
                    .HasColumnName("FLG_TIPO_MASSIMALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdBene).HasColumnName("ID_BENE");

                entity.Property(e => e.IdGaranziaassicurata).HasColumnName("ID_GARANZIAASSICURATA");

                entity.Property(e => e.IdPrestAssicurataPadre).HasColumnName("ID_PREST_ASSICURATA_PADRE");

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.ImpFranchigia)
                    .HasColumnName("IMP_FRANCHIGIA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpFranchigiaNucleo)
                    .HasColumnName("IMP_FRANCHIGIA_NUCLEO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpMassimale)
                    .HasColumnName("IMP_MASSIMALE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpMassimaleNucleo)
                    .HasColumnName("IMP_MASSIMALE_NUCLEO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PercScoperto)
                    .HasColumnName("PERC_SCOPERTO")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PercScopertoNucleo)
                    .HasColumnName("PERC_SCOPERTO_NUCLEO")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<PtfProprietari>(entity =>
            {
                entity.HasKey(e => e.KeyProprietario)
                    .HasName("PK__PTF_PROP__26874A1F12DD4305");

                entity.ToTable("PTF_PROPRIETARI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03PTF_PROPRIETARI");

                entity.HasIndex(e => e.IdBene)
                    .HasName("XX01PTF_PROPRIETARI");

                entity.HasIndex(e => e.IdProprietario)
                    .HasName("XX02PTF_PROPRIETARI");

                entity.HasIndex(e => e.KeyProprietario)
                    .HasName("SYS_C0047456")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdProprietario, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_PROPRIETARI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyProprietario)
                    .HasColumnName("KEY_PROPRIETARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdBene)
                    .HasColumnName("ID_BENE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProprietario)
                    .HasColumnName("ID_PROPRIETARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteProprietario)
                    .HasColumnName("NOTE_PROPRIETARIO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfRiservePremi>(entity =>
            {
                entity.HasKey(e => e.IdRiservaPremi)
                    .HasName("PK__PTF_RISE__995914832D11CBCB");

                entity.ToTable("PTF_RISERVE_PREMI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.AnnoCompetenza, e.MeseCompetenza })
                    .HasName("K01_PTF_RISERVE_PREMI");

                entity.Property(e => e.IdRiservaPremi)
                    .HasColumnName("ID_RISERVA_PREMI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoCompetenza)
                    .HasColumnName("ANNO_COMPETENZA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.AnnoGenerazione)
                    .HasColumnName("ANNO_GENERAZIONE")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.AnnoGenerazioneXRiass)
                    .HasColumnName("ANNO_GENERAZIONE_X_RIASS")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodAgenzia)
                    .IsRequired()
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodFrazionamento)
                    .HasColumnName("COD_FRAZIONAMENTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodGaranzia)
                    .IsRequired()
                    .HasColumnName("COD_GARANZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProdotto)
                    .IsRequired()
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRamo)
                    .IsRequired()
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagenzia)
                    .HasColumnName("COD_SUBAGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodTipoTitolo)
                    .IsRequired()
                    .HasColumnName("COD_TIPO_TITOLO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodValuta)
                    .IsRequired()
                    .HasColumnName("COD_VALUTA")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CompagniaCoass)
                    .HasColumnName("COMPAGNIA_COASS")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Contraente)
                    .HasColumnName("CONTRAENTE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DtCopertura)
                    .HasColumnName("DT_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtProdotto)
                    .HasColumnName("DT_PRODOTTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCatTariffa)
                    .IsRequired()
                    .HasColumnName("FLG_CAT_TARIFFA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCategoriaEmesso)
                    .IsRequired()
                    .HasColumnName("FLG_CATEGORIA_EMESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .IsRequired()
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCoass)
                    .HasColumnName("FLG_TIPO_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAgenzia)
                    .HasColumnName("ID_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGarScomposizione)
                    .HasColumnName("ID_PR_GAR_SCOMPOSIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSubagenzia)
                    .HasColumnName("ID_SUBAGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTipoTitolo)
                    .HasColumnName("ID_TIT_TIPO_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTitolo)
                    .HasColumnName("ID_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpRisPreAccAcquisto)
                    .HasColumnName("IMP_RIS_PRE_ACC_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisPreAccessori)
                    .HasColumnName("IMP_RIS_PRE_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisPreGarAcquisto)
                    .HasColumnName("IMP_RIS_PRE_GAR_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisPreNetto)
                    .HasColumnName("IMP_RIS_PRE_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeyTitTitolo)
                    .HasColumnName("KEY_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MeseCompetenza)
                    .HasColumnName("MESE_COMPETENZA")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.NPolizza)
                    .IsRequired()
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PctQuota)
                    .HasColumnName("PCT_QUOTA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<PtfSostituenti>(entity =>
            {
                entity.HasKey(e => e.KeySostituente);

                entity.ToTable("PTF_SOSTITUENTI", "ICLAIMS");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX01PTF_SOSTITUENTI");

                entity.HasIndex(e => new { e.IdSostituente, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_SOSTITUENTE_STO")
                    .IsUnique();

                entity.Property(e => e.KeySostituente)
                    .HasColumnName("KEY_SOSTITUENTE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdSostituente).HasColumnName("ID_SOSTITUENTE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfSostituite>(entity =>
            {
                entity.HasKey(e => e.KeySostituita);

                entity.ToTable("PTF_SOSTITUITE", "ICLAIMS");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX01PTF_SOSTITUITE");

                entity.HasIndex(e => new { e.IdSostituita, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_PTF_SOSTITUITE_STO")
                    .IsUnique();

                entity.Property(e => e.KeySostituita)
                    .HasColumnName("KEY_SOSTITUITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdSostituita).HasColumnName("ID_SOSTITUITA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfStatoPolizze>(entity =>
            {
                entity.HasKey(e => e.IdStatoPolizza)
                    .HasName("PK__PTF_STAT__070A0AC0D8225CED");

                entity.ToTable("PTF_STATO_POLIZZE", "IREGULATION");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02PTF_STATO_POLIZZE");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03PTF_STATO_POLIZZE");

                entity.HasIndex(e => e.IdStatoPolizza)
                    .HasName("PK_PTF_STATO_POLIZZE")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCompagnia, e.AnnoCompetenza, e.MeseCompetenza })
                    .HasName("K01_PTF_STATO_POLIZZE");

                entity.HasIndex(e => new { e.IdPolizza, e.AnnoCompetenza, e.MeseCompetenza })
                    .HasName("K02_PTF_STATO_POLIZZE");

                entity.Property(e => e.IdStatoPolizza)
                    .HasColumnName("ID_STATO_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoCompetenza)
                    .HasColumnName("ANNO_COMPETENZA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DataCompetenza)
                    .HasColumnName("DATA_COMPETENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAnnSostSino)
                    .HasColumnName("FLG_ANN_SOST_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoContratto)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_CONTRATTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.KeyPolEvento)
                    .HasColumnName("KEY_POL_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MeseCompetenza)
                    .HasColumnName("MESE_COMPETENZA")
                    .HasColumnType("numeric(2, 0)");
            });

            modelBuilder.Entity<PtfTariffeBeni>(entity =>
            {
                entity.HasKey(e => e.IdTariffaBene);

                entity.ToTable("PTF_TARIFFE_BENI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdBene, e.IdPolizza })
                    .HasName("XX01PTF_TARIFFE_BENI");

                entity.Property(e => e.IdTariffaBene)
                    .HasColumnName("ID_TARIFFA_BENE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodTariffa)
                    .HasColumnName("COD_TARIFFA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdBene).HasColumnName("ID_BENE");

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");
            });

            modelBuilder.Entity<PtfUbicazioni>(entity =>
            {
                entity.HasKey(e => e.IdUbicazione)
                    .HasName("PK__PTF_UBIC__CCC382BBE693240B");

                entity.ToTable("PTF_UBICAZIONI", "ICLAIMS");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("XX02PTF_UBICAZIONI");

                entity.HasIndex(e => e.IdUbicazione)
                    .HasName("SYS_C0047498")
                    .IsUnique();

                entity.Property(e => e.IdUbicazione)
                    .HasColumnName("ID_UBICAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteUbicazione)
                    .HasColumnName("NOTE_UBICAZIONE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PtfVariapremi>(entity =>
            {
                entity.HasKey(e => e.KeyVariapremio)
                    .HasName("SYS_C0042527");

                entity.ToTable("PTF_VARIAPREMI", "ICLAIMS");

                entity.HasIndex(e => e.IdGaranziaassicurata)
                    .HasName("XX03PTF_VARIAPREMI");

                entity.HasIndex(e => e.IdVariapremio)
                    .HasName("XX02PTF_VARIAPREMI");

                entity.Property(e => e.KeyVariapremio)
                    .HasColumnName("KEY_VARIAPREMIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodVariapremio)
                    .HasColumnName("COD_VARIAPREMIO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescVariapremio)
                    .HasColumnName("DESC_VARIAPREMIO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdGaranziaassicurata).HasColumnName("ID_GARANZIAASSICURATA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdVariapremio).HasColumnName("ID_VARIAPREMIO");
            });

            modelBuilder.Entity<PtfVeicoli>(entity =>
            {
                entity.HasKey(e => e.IdVeicoloassicurato)
                    .HasName("PK__PTF_VEIC__4DB42EEB540A7F30");

                entity.ToTable("PTF_VEICOLI", "ICLAIMS");

                entity.HasIndex(e => e.IdVeicolo)
                    .HasName("XX02PTF_VEICOLI");

                entity.HasIndex(e => e.IdVeicoloassicurato)
                    .HasName("SYS_C0047500")
                    .IsUnique();

                entity.Property(e => e.IdVeicoloassicurato)
                    .HasColumnName("ID_VEICOLOASSICURATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdVeicolo)
                    .HasColumnName("ID_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteVeicolo)
                    .HasColumnName("NOTE_VEICOLO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PvCausali>(entity =>
            {
                entity.HasKey(e => e.IdPvCausale)
                    .HasName("SYS_C0060913");

                entity.ToTable("PV_CAUSALI", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04PV_CAUSALI");

                entity.HasIndex(e => e.IdDescCausale)
                    .HasName("XX03PV_CAUSALI");

                entity.HasIndex(e => e.IdPvCausaleStorno)
                    .HasName("XX02PV_CAUSALI");

                entity.HasIndex(e => new { e.IdCompagnia, e.CodCausale })
                    .HasName("XAK1PV_CAUSALI")
                    .IsUnique();

                entity.Property(e => e.IdPvCausale)
                    .HasColumnName("ID_PV_CAUSALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodCausale)
                    .HasColumnName("COD_CAUSALE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescCausale)
                    .HasColumnName("DESC_CAUSALE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgScaricoCogePv)
                    .HasColumnName("FLG_SCARICO_COGE_PV")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSegnoCausale)
                    .HasColumnName("FLG_SEGNO_CAUSALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSoggettaRitenutaSino)
                    .HasColumnName("FLG_SOGGETTA_RITENUTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCausale)
                    .HasColumnName("FLG_TIPO_CAUSALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescCausale)
                    .HasColumnName("ID_DESC_CAUSALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPvCausaleStorno)
                    .HasColumnName("ID_PV_CAUSALE_STORNO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PvCausaliAutomatiche>(entity =>
            {
                entity.HasKey(e => e.IdPvCausaleAutomatica)
                    .HasName("SYS_C0060915");

                entity.ToTable("PV_CAUSALI_AUTOMATICHE", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02PV_CAUSALI_AUTOMATICHE");

                entity.HasIndex(e => e.IdPvCausaleNegativa)
                    .HasName("XX04PV_CAUSALI_AUTOMATICHE");

                entity.HasIndex(e => e.IdPvCausalePositiva)
                    .HasName("XX03PV_CAUSALI_AUTOMATICHE");

                entity.HasIndex(e => new { e.IdCompagnia, e.FlgCodCauAutomatica })
                    .HasName("XAK1PV_CAUSALI_AUTOMATICHE")
                    .IsUnique();

                entity.Property(e => e.IdPvCausaleAutomatica)
                    .HasColumnName("ID_PV_CAUSALE_AUTOMATICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgCodCauAutomatica)
                    .HasColumnName("FLG_COD_CAU_AUTOMATICA")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPvCausaleNegativa)
                    .HasColumnName("ID_PV_CAUSALE_NEGATIVA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPvCausalePositiva)
                    .HasColumnName("ID_PV_CAUSALE_POSITIVA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<PvDati>(entity =>
            {
                entity.HasKey(e => e.KeyPvDato)
                    .HasName("SYS_C0060931");

                entity.ToTable("PV_DATI", "IAGENCY");

                entity.HasIndex(e => e.IdAgenzia)
                    .HasName("XX07PV_DATI");

                entity.HasIndex(e => e.IdCntRendiconto)
                    .HasName("XX02PV_DATI");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX06PV_DATI");

                entity.HasIndex(e => e.IdMfPvAbbinamento)
                    .HasName("XX08PV_DATI");

                entity.HasIndex(e => e.IdPvCausale)
                    .HasName("XX05PV_DATI");

                entity.HasIndex(e => e.IdPvDato)
                    .HasName("XX01PV_DATI");

                entity.HasIndex(e => e.IdTitEsito)
                    .HasName("XX04PV_DATI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX03PV_DATI");

                entity.Property(e => e.KeyPvDato)
                    .HasColumnName("KEY_PV_DATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoPartita)
                    .HasColumnName("ANNO_PARTITA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CompetenzaEmesso)
                    .HasColumnName("COMPETENZA_EMESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysRegistrazione)
                    .HasColumnName("DT_SYS_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoPv)
                    .HasColumnName("FLG_STATO_PV")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAgenzia)
                    .HasColumnName("ID_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCntRendiconto)
                    .HasColumnName("ID_CNT_RENDICONTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMfPvAbbinamento)
                    .HasColumnName("ID_MF_PV_ABBINAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPvCausale)
                    .HasColumnName("ID_PV_CAUSALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPvDato)
                    .HasColumnName("ID_PV_DATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitEsito)
                    .HasColumnName("ID_TIT_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAvere)
                    .HasColumnName("IMP_AVERE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpDare)
                    .HasColumnName("IMP_DARE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NPartita)
                    .HasColumnName("N_PARTITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.Versione)
                    .IsRequired()
                    .HasColumnName("VERSIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPvCausaleNavigation)
                    .WithMany(p => p.PvDati)
                    .HasForeignKey(d => d.IdPvCausale)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__PV_DATI__ID_PV_C__5398450B");
            });

            modelBuilder.Entity<PvEsiti>(entity =>
            {
                entity.HasKey(e => e.KeyPvEsito)
                    .HasName("SYS_C0060933");

                entity.ToTable("PV_ESITI", "IAGENCY");

                entity.HasIndex(e => new { e.DtStoScadenzaFis, e.IdMfPvAbbinamento })
                    .HasName("XX04PV_ESITI");

                entity.HasIndex(e => new { e.IdPvDato, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02PV_ESITI");

                entity.HasIndex(e => new { e.IdPvEsito, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01PV_ESITI");

                entity.HasIndex(e => new { e.IdPvDato, e.DtStoScadenzaFis, e.DtSysEsito, e.FlgTipoEsito, e.IdAgenziaEsito, e.IdCntFogliocassa })
                    .HasName("XX03PV_ESITI");

                entity.Property(e => e.KeyPvEsito)
                    .HasColumnName("KEY_PV_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CompetenzaEsito)
                    .HasColumnName("COMPETENZA_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEsito)
                    .HasColumnName("DT_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysEsito)
                    .HasColumnName("DT_SYS_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMezzoPagamento)
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEsito)
                    .HasColumnName("FLG_TIPO_ESITO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAgenziaEsito)
                    .HasColumnName("ID_AGENZIA_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCntFogliocassa)
                    .HasColumnName("ID_CNT_FOGLIOCASSA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMfPvAbbinamento)
                    .HasColumnName("ID_MF_PV_ABBINAMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPvDato)
                    .HasColumnName("ID_PV_DATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPvEsito)
                    .HasColumnName("ID_PV_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabMotivoStorno)
                    .HasColumnName("ID_TAB_MOTIVO_STORNO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpIncassatoAvere)
                    .HasColumnName("IMP_INCASSATO_AVERE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpIncassatoDare)
                    .HasColumnName("IMP_INCASSATO_DARE")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<QueFasi>(entity =>
            {
                entity.HasKey(e => e.KeyFase)
                    .HasName("PK_TAB_FASI");

                entity.ToTable("QUE_FASI", "ICLAIMS");

                entity.HasIndex(e => e.IdQuerela)
                    .HasName("XX02_QUE_FASI");

                entity.HasIndex(e => new { e.IdFase, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01_QUE_FASI")
                    .IsUnique();

                entity.Property(e => e.KeyFase)
                    .HasColumnName("KEY_FASE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFineFase)
                    .HasColumnName("DT_FINE_FASE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioFase)
                    .HasColumnName("DT_INIZIO_FASE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoFaseQuerela)
                    .HasColumnName("DT_STATO_FASE_QUERELA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgFaseQuerela)
                    .IsRequired()
                    .HasColumnName("FLG_FASE_QUERELA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRimborsoSpeseLegaliSino)
                    .HasColumnName("FLG_RIMBORSO_SPESE_LEGALI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoFaseQuerela)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_FASE_QUERELA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdFase).HasColumnName("ID_FASE");

                entity.Property(e => e.IdQuerela).HasColumnName("ID_QUERELA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpRisarcimento)
                    .HasColumnName("IMP_RISARCIMENTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSpeseProcessuali)
                    .HasColumnName("IMP_SPESE_PROCESSUALI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QueQuerele>(entity =>
            {
                entity.HasKey(e => e.KeyQuerela);

                entity.ToTable("QUE_QUERELE", "ICLAIMS");

                entity.HasIndex(e => e.IdFase)
                    .HasName("XX05_QUE_QUERELE");

                entity.HasIndex(e => e.IdLegale)
                    .HasName("XX03_QUE_QUERELE");

                entity.HasIndex(e => e.IdQuerela)
                    .HasName("XX02_QUE_QUERELE");

                entity.HasIndex(e => e.NRepertorio)
                    .HasName("XX04_QUE_QUERELE");

                entity.HasIndex(e => new { e.IdQuerela, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01_QUE_QUERELE")
                    .IsUnique();

                entity.Property(e => e.KeyQuerela)
                    .HasColumnName("KEY_QUERELA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtCostituzioneParteCivile)
                    .HasColumnName("DT_COSTITUZIONE_PARTE_CIVILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDeposito)
                    .HasColumnName("DT_DEPOSITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgGradoCuria)
                    .HasColumnName("FLG_GRADO_CURIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMultisinistroSino)
                    .HasColumnName("FLG_MULTISINISTRO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgParteCivileSino)
                    .HasColumnName("FLG_PARTE_CIVILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgParteOffesaSino)
                    .HasColumnName("FLG_PARTE_OFFESA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCuria)
                    .HasColumnName("FLG_TIPO_CURIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdFase).HasColumnName("ID_FASE");

                entity.Property(e => e.IdIndirizzo).HasColumnName("ID_INDIRIZZO");

                entity.Property(e => e.IdLegale).HasColumnName("ID_LEGALE");

                entity.Property(e => e.IdQuerela).HasColumnName("ID_QUERELA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NRepertorio)
                    .IsRequired()
                    .HasColumnName("N_REPERTORIO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QueSinistriCoinvolti>(entity =>
            {
                entity.HasKey(e => e.IdSinistrocoinvolto);

                entity.ToTable("QUE_SINISTRI_COINVOLTI", "ICLAIMS");

                entity.HasIndex(e => e.IdQuerela)
                    .HasName("XX02_QUE_SINISTRI_COINVOLTI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03_QUE_SINISTRI_COINVOLTI");

                entity.HasIndex(e => new { e.IdQuerela, e.IdSinistro })
                    .HasName("XX01_QUE_SINISTRI_COINVOLTI")
                    .IsUnique();

                entity.Property(e => e.IdSinistrocoinvolto)
                    .HasColumnName("ID_SINISTROCOINVOLTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgPrincipaleSino)
                    .HasColumnName("FLG_PRINCIPALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdQuerela).HasColumnName("ID_QUERELA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");
            });

            modelBuilder.Entity<QuiArretrate>(entity =>
            {
                entity.HasKey(e => e.IdQuiArretrata);

                entity.ToTable("QUI_ARRETRATE", "IREGULATION");

                entity.Property(e => e.IdQuiArretrata)
                    .HasColumnName("id_qui_arretrata")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoCompetenza).HasColumnName("anno_competenza");

                entity.Property(e => e.AnnoCompetenzaEmesso).HasColumnName("ANNO_COMPETENZA_EMESSO");

                entity.Property(e => e.DtEffettoQuietanza)
                    .HasColumnName("dt_effetto_quietanza")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("flg_ramo_bilancio")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("id_compagnia");

                entity.Property(e => e.IdPolizza).HasColumnName("id_polizza");

                entity.Property(e => e.ImportoQuietanza)
                    .HasColumnName("importo_quietanza")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.MeseCompetenza).HasColumnName("mese_competenza");

                entity.Property(e => e.MeseCompetenzaEmesso).HasColumnName("MESE_COMPETENZA_EMESSO");
            });

            modelBuilder.Entity<QuiLinee>(entity =>
            {
                entity.HasKey(e => e.IdQuiLinea);

                entity.ToTable("QUI_LINEE", "IAGENCY");

                entity.HasIndex(e => e.IdPrLineaProdotto)
                    .HasName("XX02QUI_LINEE");

                entity.HasIndex(e => e.IdQuiLogQuietanza)
                    .HasName("K01_QUI_LINEE");

                entity.Property(e => e.IdQuiLinea)
                    .HasColumnName("ID_QUI_LINEA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrLineaProdotto)
                    .HasColumnName("ID_PR_LINEA_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdQuiLogQuietanza)
                    .HasColumnName("ID_QUI_LOG_QUIETANZA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdQuiLogQuietanzaNavigation)
                    .WithMany(p => p.QuiLinee)
                    .HasForeignKey(d => d.IdQuiLogQuietanza)
                    .HasConstraintName("FK__QUI_LINEE__ID_QU__548C6944");
            });

            modelBuilder.Entity<QuiLogQuietanze>(entity =>
            {
                entity.HasKey(e => e.IdQuiLogQuietanza);

                entity.ToTable("QUI_LOG_QUIETANZE", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02QUI_LOG_QUIETANZE");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtQuietanzamento })
                    .HasName("K02_QUI_LOG_QUETANZE");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtSysElaborazione })
                    .HasName("K01_QUI_LOG_QUIETANZE");

                entity.Property(e => e.IdQuiLogQuietanza)
                    .HasColumnName("ID_QUI_LOG_QUIETANZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtQuietanzamento)
                    .HasColumnName("DT_QUIETANZAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysElaborazione)
                    .HasColumnName("DT_SYS_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgInfrannualiSino)
                    .IsRequired()
                    .HasColumnName("FLG_INFRANNUALI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRinnovoSino)
                    .IsRequired()
                    .HasColumnName("FLG_RINNOVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStampatoBatchSino)
                    .HasColumnName("FLG_STAMPATO_BATCH_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoElaborazione)
                    .HasColumnName("FLG_STATO_ELABORAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoElaborazione)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ELABORAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoQuietanzamento)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_QUIETANZAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdCompagniaNavigation)
                    .WithMany(p => p.QuiLogQuietanze)
                    .HasForeignKey(d => d.IdCompagnia)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__QUI_LOG_Q__ID_CO__55808D7D");
            });

            modelBuilder.Entity<QuiProdotti>(entity =>
            {
                entity.HasKey(e => e.IdQuiProdotto);

                entity.ToTable("QUI_PRODOTTI", "IAGENCY");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX03QUI_PRODOTTI");

                entity.HasIndex(e => e.IdQuiLogQuietanza)
                    .HasName("K01_QUI_PRODOTTI");

                entity.Property(e => e.IdQuiProdotto)
                    .HasColumnName("ID_QUI_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtVersione)
                    .HasColumnName("DT_VERSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdQuiLogQuietanza)
                    .HasColumnName("ID_QUI_LOG_QUIETANZA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdQuiLogQuietanzaNavigation)
                    .WithMany(p => p.QuiProdotti)
                    .HasForeignKey(d => d.IdQuiLogQuietanza)
                    .HasConstraintName("FK__QUI_PRODO__ID_QU__5674B1B6");
            });

            modelBuilder.Entity<QuiRami>(entity =>
            {
                entity.HasKey(e => e.IdQuiRamo);

                entity.ToTable("QUI_RAMI", "IAGENCY");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX02QUI_RAMI");

                entity.HasIndex(e => e.IdQuiLogQuietanza)
                    .HasName("K01_QUI_RAMI");

                entity.Property(e => e.IdQuiRamo)
                    .HasColumnName("ID_QUI_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdQuiLogQuietanza)
                    .HasColumnName("ID_QUI_LOG_QUIETANZA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdQuiLogQuietanzaNavigation)
                    .WithMany(p => p.QuiRami)
                    .HasForeignKey(d => d.IdQuiLogQuietanza)
                    .HasConstraintName("FK__QUI_RAMI__ID_QUI__5768D5EF");
            });

            modelBuilder.Entity<QuiReteVendita>(entity =>
            {
                entity.HasKey(e => e.IdQuiReteVendita);

                entity.ToTable("QUI_RETE_VENDITA", "IAGENCY");

                entity.HasIndex(e => e.IdQuiLogQuietanza)
                    .HasName("K01_QUI_RETE_VENDITA");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03QUI_RETE_VENDITA");

                entity.Property(e => e.IdQuiReteVendita)
                    .HasColumnName("ID_QUI_RETE_VENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdQuiLogQuietanza)
                    .HasColumnName("ID_QUI_LOG_QUIETANZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdQuiLogQuietanzaNavigation)
                    .WithMany(p => p.QuiReteVendita)
                    .HasForeignKey(d => d.IdQuiLogQuietanza)
                    .HasConstraintName("FK__QUI_RETE___ID_QU__585CFA28");
            });

            modelBuilder.Entity<RaccCatastrofaliProvince>(entity =>
            {
                entity.HasKey(e => e.IdEventoProvincia)
                    .HasName("ID_EVENTO_PROVINCIA");

                entity.ToTable("RACC_CATASTROFALI_PROVINCE", "ICLAIMS");

                entity.HasIndex(e => e.IdEventoProvincia)
                    .HasName("XX01_RACC_CATASTROFALI_PROVINCE");

                entity.Property(e => e.IdEventoProvincia)
                    .HasColumnName("ID_EVENTO_PROVINCIA")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdEventoCatastrofale).HasColumnName("ID_EVENTO_CATASTROFALE");

                entity.Property(e => e.IdProvincia).HasColumnName("ID_PROVINCIA");
            });

            modelBuilder.Entity<RegAgenzie>(entity =>
            {
                entity.HasKey(e => e.KeyRegAgenzia)
                    .HasName("SYS_C0060966");

                entity.ToTable("REG_AGENZIE", "IAGENCY");

                entity.HasIndex(e => e.IdRegAgenzia)
                    .HasName("XX01REG_AGENZIE");

                entity.HasIndex(e => e.IdRegTitolo)
                    .HasName("XX02REG_AGENZIE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03REG_AGENZIE");

                entity.Property(e => e.KeyRegAgenzia)
                    .HasColumnName("KEY_REG_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRegAgenzia)
                    .HasColumnName("ID_REG_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRegTitolo)
                    .HasColumnName("ID_REG_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Livello)
                    .HasColumnName("LIVELLO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<RegGaranzie>(entity =>
            {
                entity.HasKey(e => e.KeyRegGaranzia)
                    .HasName("SYS_C0060968");

                entity.ToTable("REG_GARANZIE", "IAGENCY");

                entity.HasIndex(e => e.IdPrGarScomposizione)
                    .HasName("XX02REG_GARANZIE");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX03REG_GARANZIE");

                entity.HasIndex(e => e.IdRegGaranzia)
                    .HasName("XX01REG_GARANZIE");

                entity.HasIndex(e => e.IdRegTitolo)
                    .HasName("XX04REG_GARANZIE");

                entity.Property(e => e.KeyRegGaranzia)
                    .HasColumnName("KEY_REG_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCatTariffa)
                    .HasColumnName("FLG_CAT_TARIFFA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrGarScomposizione)
                    .HasColumnName("ID_PR_GAR_SCOMPOSIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRegGaranzia)
                    .HasColumnName("ID_REG_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRegTitolo)
                    .HasColumnName("ID_REG_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAntiracket)
                    .HasColumnName("IMP_ANTIRACKET")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigiaAgg)
                    .HasColumnName("IMP_FRANCHIGIA_AGG")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PctAntiracket)
                    .HasColumnName("PCT_ANTIRACKET")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctFvs)
                    .HasColumnName("PCT_FVS")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctSsn)
                    .HasColumnName("PCT_SSN")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctTasse)
                    .HasColumnName("PCT_TASSE")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<RegProvvigioni>(entity =>
            {
                entity.HasKey(e => e.KeyRegProvvigione)
                    .HasName("SYS_C0060970");

                entity.ToTable("REG_PROVVIGIONI", "IAGENCY");

                entity.HasIndex(e => e.IdRegGaranzia)
                    .HasName("XX02REG_PROVVIGIONI");

                entity.HasIndex(e => e.IdRegProvvigione)
                    .HasName("XX01REG_PROVVIGIONI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03REG_PROVVIGIONI");

                entity.Property(e => e.KeyRegProvvigione)
                    .HasColumnName("KEY_REG_PROVVIGIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRegGaranzia)
                    .HasColumnName("ID_REG_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRegProvvigione)
                    .HasColumnName("ID_REG_PROVVIGIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccAcquisto)
                    .HasColumnName("IMP_ACC_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccIncasso)
                    .HasColumnName("IMP_ACC_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarAcquisto)
                    .HasColumnName("IMP_GAR_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarIncasso)
                    .HasColumnName("IMP_GAR_INCASSO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<RegStatoBollati>(entity =>
            {
                entity.HasKey(e => e.IdStatoBollato)
                    .HasName("PK__REG_STAT__8DB386C3E382A80F");

                entity.ToTable("REG_STATO_BOLLATI", "IREGULATION");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02REG_STATO_BOLLATI");

                entity.HasIndex(e => e.IdStatoBollato)
                    .HasName("SYS_C0047898")
                    .IsUnique();

                entity.HasIndex(e => new { e.MeseBollato, e.FlgTipoBollato, e.AnnoBollato, e.IdCompagnia })
                    .HasName("XREG_STATO_BOLLATI")
                    .IsUnique();

                entity.Property(e => e.IdStatoBollato)
                    .HasColumnName("ID_STATO_BOLLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoBollato)
                    .HasColumnName("ANNO_BOLLATO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtBollatoCompleta)
                    .HasColumnName("DT_BOLLATO_COMPLETA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStampaRistampaBollato)
                    .HasColumnName("DT_STAMPA_RISTAMPA_BOLLATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAreaPremiSino)
                    .HasColumnName("FLG_AREA_PREMI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAreaSinistriSino)
                    .HasColumnName("FLG_AREA_SINISTRI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoBollato)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_BOLLATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoBollato)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_BOLLATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MeseBollato)
                    .HasColumnName("MESE_BOLLATO")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RegStatoScaCoge>(entity =>
            {
                entity.HasKey(e => e.IdStatoScaricoCoge)
                    .HasName("PK__REG_STATO_SCA_CO__2BE97B0D");

                entity.ToTable("REG_STATO_SCA_COGE", "IREGULATION");

                entity.Property(e => e.IdStatoScaricoCoge)
                    .HasColumnName("ID_STATO_SCARICO_COGE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DataPeriodoA)
                    .HasColumnName("DATA_PERIODO_A")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataPeriodoDa)
                    .HasColumnName("DATA_PERIODO_DA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataScarico)
                    .HasColumnName("DATA_SCARICO ")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoScarico)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_SCARICO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoScaricoCoge)
                    .HasColumnName("FLG_TIPO_SCARICO_COGE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(36, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RegTitoli>(entity =>
            {
                entity.HasKey(e => e.KeyRegTitolo)
                    .HasName("SYS_C0060973");

                entity.ToTable("REG_TITOLI", "IAGENCY");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02REG_TITOLI");

                entity.HasIndex(e => e.IdRegTitolo)
                    .HasName("XX01REG_TITOLI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX03REG_TITOLI");

                entity.HasIndex(e => new { e.IdPolizza, e.FlgStatoRegolazione, e.DtEffetto })
                    .HasName("XIE1REG_TITOLI");

                entity.Property(e => e.KeyRegTitolo)
                    .HasColumnName("KEY_REG_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CompetenzaEmesso)
                    .HasColumnName("COMPETENZA_EMESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysEmesso)
                    .HasColumnName("DT_SYS_EMESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgModProv)
                    .HasColumnName("FLG_MOD_PROV")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoRegolazione)
                    .HasColumnName("FLG_STATO_REGOLAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolBene).HasColumnName("ID_POL_BENE");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRegTitolo)
                    .HasColumnName("ID_REG_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpFranchigiaAgg)
                    .HasColumnName("IMP_FRANCHIGIA_AGG")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpLordo)
                    .HasColumnName("IMP_LORDO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvAcquisto)
                    .HasColumnName("IMP_PROV_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvIncasso)
                    .HasColumnName("IMP_PROV_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeyPolEvento)
                    .HasColumnName("KEY_POL_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PrgAppendice)
                    .HasColumnName("PRG_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.RegTitoli)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__REG_TITOL__ID_PO__59511E61");

                entity.HasOne(d => d.KeyPolEventoNavigation)
                    .WithMany(p => p.RegTitoli)
                    .HasForeignKey(d => d.KeyPolEvento)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__REG_TITOL__KEY_P__5A45429A");
            });

            modelBuilder.Entity<RepArchivioReports>(entity =>
            {
                entity.HasKey(e => e.IdArchivioReport)
                    .HasName("PK__REP_ARCH__5F4D3EFD355E6BF4");

                entity.ToTable("REP_ARCHIVIO_REPORTS", "ISUITE");

                entity.HasIndex(e => e.IdArchivioReport)
                    .HasName("PK_REP_ARCHIVIO_REPORTS")
                    .IsUnique();

                entity.HasIndex(e => e.IdFormatoReport)
                    .HasName("XX03REP_ARCHIVIO_REPORTS");

                entity.HasIndex(e => e.IdModello)
                    .HasName("XX04REP_ARCHIVIO_REPORTS");

                entity.HasIndex(e => e.IdUtenteCreatore)
                    .HasName("XX02REP_ARCHIVIO_REPORTS");

                entity.Property(e => e.IdArchivioReport)
                    .HasColumnName("ID_ARCHIVIO_REPORT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DimensioneReport)
                    .HasColumnName("DIMENSIONE_REPORT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtProduzione)
                    .HasColumnName("DT_PRODUZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.EtichettaDocumento)
                    .HasColumnName("ETICHETTA_DOCUMENTO")
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato)
                    .HasColumnName("ID_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFormatoReport)
                    .HasColumnName("ID_FORMATO_REPORT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteCreatore)
                    .HasColumnName("ID_UTENTE_CREATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.UrlDocumento)
                    .HasColumnName("URL_DOCUMENTO")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RepAreeDati>(entity =>
            {
                entity.HasKey(e => e.IdAreaDati)
                    .HasName("PK__REP_AREE__C45FC9A43CD99B2A");

                entity.ToTable("REP_AREE_DATI", "ISUITE");

                entity.HasIndex(e => e.IdAreaDati)
                    .HasName("PK_REP_AREE_DATI")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX03REP_AREE_DATI");

                entity.HasIndex(e => e.IdLingua)
                    .HasName("XX02REP_AREE_DATI");

                entity.HasIndex(e => new { e.Codice, e.IdLingua })
                    .HasName("K01_REP_AREE_DATI");

                entity.Property(e => e.IdAreaDati)
                    .HasColumnName("ID_AREA_DATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Codice)
                    .IsRequired()
                    .HasColumnName("CODICE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCartaIntestataSino)
                    .HasColumnName("FLG_CARTA_INTESTATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMultiindirizzoSino)
                    .HasColumnName("FLG_MULTIINDIRIZZO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLingua)
                    .HasColumnName("ID_LINGUA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.UrlXsd)
                    .IsRequired()
                    .HasColumnName("URL_XSD")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RepAttivazioneReport>(entity =>
            {
                entity.HasKey(e => e.KeyRepAttivazioneReport);

                entity.ToTable("REP_ATTIVAZIONE_REPORT", "ISUITE");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX01REP_ATTIVAZIONE_REPORT");

                entity.Property(e => e.KeyRepAttivazioneReport)
                    .HasColumnName("KEY_REP_ATTIVAZIONE_REPORT")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAperturaSinistro)
                    .HasColumnName("FLG_APERTURA_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAssicurato)
                    .HasColumnName("FLG_ASSICURATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAttivato)
                    .HasColumnName("FLG_ATTIVATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCodiceStampaUnivoco)
                    .HasColumnName("FLG_CODICE_STAMPA_UNIVOCO")
                    .IsUnicode(false);

                entity.Property(e => e.FlgContraente)
                    .HasColumnName("FLG_CONTRAENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgControparte)
                    .HasColumnName("FLG_CONTROPARTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogabileSino)
                    .HasColumnName("FLG_DEROGABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDichiarazioneRicevuta)
                    .HasColumnName("FLG_DICHIARAZIONE_RICEVUTA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEntitaDaAnia)
                    .HasColumnName("FLG_ENTITA_DA_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFirmaCai)
                    .HasColumnName("FLG_FIRMA_CAI")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgIndennizzoDaQuietanza)
                    .HasColumnName("FLG_INDENNIZZO_DA_QUIETANZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIndennizzoTotContabil)
                    .HasColumnName("FLG_INDENNIZZO_TOT_CONTABIL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIndirizzoIndennizzo)
                    .HasColumnName("FLG_INDIRIZZO_INDENNIZZO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInibizioneStampaEredi)
                    .HasColumnName("FLG_INIBIZIONE_STAMPA_EREDI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInibizioneStampaSurr)
                    .HasColumnName("FLG_INIBIZIONE_STAMPA_SURR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLetteraEredi)
                    .HasColumnName("FLG_LETTERA_EREDI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLetteraSurr)
                    .HasColumnName("FLG_LETTERA_SURR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgModifica)
                    .HasColumnName("FLG_MODIFICA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgOmettiIndAgeSino)
                    .HasColumnName("FLG_OMETTI_IND_AGE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("FLG_RAMO_TECNICO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRecuperiDaContabil)
                    .HasColumnName("FLG_RECUPERI_DA_CONTABIL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRecuperiRateali)
                    .HasColumnName("FLG_RECUPERI_RATEALI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistroMalattia)
                    .HasColumnName("FLG_SINISTRO_MALATTIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoRecupero)
                    .HasColumnName("FLG_STATO_RECUPERO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCard)
                    .HasColumnName("FLG_TIPO_CARD")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoIncarico)
                    .HasColumnName("FLG_TIPO_INCARICO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggettoStampa)
                    .HasColumnName("FLG_TIPO_OGGETTO_STAMPA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRecupero)
                    .HasColumnName("FLG_TIPO_RECUPERO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRuoloUtente)
                    .HasColumnName("FLG_TIPO_RUOLO_UTENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTrattamentoIndennizzo)
                    .HasColumnName("FLG_TRATTAMENTO_INDENNIZZO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTrattamentoQuietanza)
                    .HasColumnName("FLG_TRATTAMENTO_QUIETANZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisualizzazione)
                    .HasColumnName("FLG_VISUALIZZAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdModello).HasColumnName("ID_MODELLO");

                entity.Property(e => e.IdRepAttivazioneReport).HasColumnName("ID_REP_ATTIVAZIONE_REPORT");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.LivelloAutorizzazione).HasColumnName("LIVELLO_AUTORIZZAZIONE");

                entity.Property(e => e.LivelloVisibilita).HasColumnName("LIVELLO_VISIBILITA");
            });

            modelBuilder.Entity<RepAttivazioneReportCc>(entity =>
            {
                entity.HasKey(e => e.IdRepAttivazioneReportCc);

                entity.ToTable("REP_ATTIVAZIONE_REPORT_CC", "ISUITE");

                entity.HasIndex(e => e.IdRepAttivazioneReport)
                    .HasName("XX02REP_ATTIVAZIONE_REPORT_CC");

                entity.HasIndex(e => new { e.FlgRuolo, e.FlgImportanza, e.FlgTipoRecapitoPreselezione })
                    .HasName("XX01REP_ATTIVAZIONE_REPORT_CC");

                entity.Property(e => e.IdRepAttivazioneReportCc)
                    .HasColumnName("ID_REP_ATTIVAZIONE_REPORT_CC")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgImportanza).HasColumnName("FLG_IMPORTANZA");

                entity.Property(e => e.FlgRuolo)
                    .IsRequired()
                    .HasColumnName("FLG_RUOLO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRecapitoPreselezione)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_RECAPITO_PRESELEZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdRepAttivazioneReport).HasColumnName("ID_REP_ATTIVAZIONE_REPORT");
            });

            modelBuilder.Entity<RepAttivazioneReportDest>(entity =>
            {
                entity.HasKey(e => e.IdRepAttivazioneReportDest);

                entity.ToTable("REP_ATTIVAZIONE_REPORT_DEST", "ISUITE");

                entity.HasIndex(e => e.IdRepAttivazioneReport)
                    .HasName("XX02REP_ATTIVAZIONE_REP_DEST");

                entity.HasIndex(e => new { e.FlgRuolo, e.FlgImportanza, e.FlgTipoRecapitoPreselezione })
                    .HasName("XX01REP_ATTIVAZIONE_REP_DEST");

                entity.Property(e => e.IdRepAttivazioneReportDest)
                    .HasColumnName("ID_REP_ATTIVAZIONE_REPORT_DEST")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgImportanza).HasColumnName("FLG_IMPORTANZA");

                entity.Property(e => e.FlgRuolo)
                    .IsRequired()
                    .HasColumnName("FLG_RUOLO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRecapitoPreselezione)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_RECAPITO_PRESELEZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdRepAttivazioneReport).HasColumnName("ID_REP_ATTIVAZIONE_REPORT");
            });

            modelBuilder.Entity<RepCarteIntestate>(entity =>
            {
                entity.HasKey(e => e.IdCartaIntestata)
                    .HasName("PK__REP_CART__D3DC3A1D4678FC4E");

                entity.ToTable("REP_CARTE_INTESTATE", "ISUITE");

                entity.Property(e => e.IdCartaIntestata)
                    .HasColumnName("ID_CARTA_INTESTATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NomeFileImmPiepagina)
                    .IsRequired()
                    .HasColumnName("NOME_FILE_IMM_PIEPAGINA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NomeFileImmTestata)
                    .IsRequired()
                    .HasColumnName("NOME_FILE_IMM_TESTATA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RepDistribuzioneReports>(entity =>
            {
                entity.HasKey(e => e.IdDistribuzioneReport)
                    .HasName("PK__REP_DIST__D04C12F2520739DC");

                entity.ToTable("REP_DISTRIBUZIONE_REPORTS", "ISUITE");

                entity.HasIndex(e => e.IdArchivioReport)
                    .HasName("XX02REP_DISTRIBUZIONE_REPORTS");

                entity.HasIndex(e => e.IdDistribuzioneReport)
                    .HasName("PK_REP_DISTRIBUZIONE_REPORTS")
                    .IsUnique();

                entity.HasIndex(e => e.IdUtente)
                    .HasName("K01_REP_DISTRIBUZIONE_REPORTS");

                entity.Property(e => e.IdDistribuzioneReport)
                    .HasColumnName("ID_DISTRIBUZIONE_REPORT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdArchivioReport)
                    .HasColumnName("ID_ARCHIVIO_REPORT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdArchivioReportNavigation)
                    .WithMany(p => p.RepDistribuzioneReports)
                    .HasForeignKey(d => d.IdArchivioReport)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__REP_DISTR__ID_AR__7405149D");
            });

            modelBuilder.Entity<RepFormatiReport>(entity =>
            {
                entity.HasKey(e => e.IdFormatoReport)
                    .HasName("PK__REP_FORM__D77AF6E454545D89");

                entity.ToTable("REP_FORMATI_REPORT", "ISUITE");

                entity.HasIndex(e => e.Codice)
                    .HasName("SYS_C0045818")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02REP_FORMATI_REPORT");

                entity.HasIndex(e => e.IdFormatoReport)
                    .HasName("PK_REP_TIPI_REPORT")
                    .IsUnique();

                entity.Property(e => e.IdFormatoReport)
                    .HasColumnName("ID_FORMATO_REPORT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Codice)
                    .IsRequired()
                    .HasColumnName("CODICE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAttivaMenuBrowserSino)
                    .HasColumnName("FLG_ATTIVA_MENU_BROWSER_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Icona)
                    .IsRequired()
                    .HasColumnName("ICONA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ResponseType)
                    .IsRequired()
                    .HasColumnName("RESPONSE_TYPE")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RepLetterePostel>(entity =>
            {
                entity.HasKey(e => e.IdLettera)
                    .HasName("SYS_C0039830");

                entity.ToTable("REP_LETTERE_POSTEL", "ISUITE");

                entity.HasIndex(e => e.DataCreazione)
                    .HasName("K03_REP_LETTERE_POSTEL");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("K02_REP_LETTERE_POSTEL");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("K01_REP_LETTERE_POSTEL");

                entity.Property(e => e.IdLettera)
                    .HasColumnName("ID_LETTERA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodErrore)
                    .HasColumnName("COD_ERRORE")
                    .IsUnicode(false);

                entity.Property(e => e.DataCreazione)
                    .HasColumnName("DATA_CREAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgErroreSino)
                    .HasColumnName("FLG_ERRORE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoPostel)
                    .HasColumnName("FLG_STATO_POSTEL")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDocumento)
                    .HasColumnName("FLG_TIPO_DOCUMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoInvio)
                    .HasColumnName("FLG_TIPO_INVIO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagDestinatario)
                    .HasColumnName("ID_ANAG_DESTINATARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdModello).HasColumnName("ID_MODELLO");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IndirizzoDestinatario)
                    .HasColumnName("INDIRIZZO_DESTINATARIO")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.MetodoCreazioneDataset)
                    .HasColumnName("METODO_CREAZIONE_DATASET")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.RagSocialeDestinatario)
                    .HasColumnName("RAG_SOCIALE_DESTINATARIO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RuoloDestinatario)
                    .HasColumnName("RUOLO_DESTINATARIO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TestoInviato)
                    .HasColumnName("TESTO_INVIATO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RepModelli>(entity =>
            {
                entity.HasKey(e => e.IdModello)
                    .HasName("PK__REP_MODE__3C70611480EA9C4B");

                entity.ToTable("REP_MODELLI", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02REP_MODELLI");

                entity.HasIndex(e => e.IdModello)
                    .HasName("PK_REP_MODELLI")
                    .IsUnique();

                entity.HasIndex(e => new { e.Codice, e.Versione })
                    .HasName("K01_REP_MODELLI")
                    .IsUnique();

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Codice)
                    .IsRequired()
                    .HasColumnName("CODICE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceEsteso)
                    .HasColumnName("CODICE_ESTESO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAnteprimaSino)
                    .HasColumnName("FLG_ANTEPRIMA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAppRistampaSino)
                    .HasColumnName("FLG_APP_RISTAMPA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgArchiviabileSino)
                    .HasColumnName("FLG_ARCHIVIABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCancellabileAutSino)
                    .HasColumnName("FLG_CANCELLABILE_AUT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCartaIntestataSino)
                    .HasColumnName("FLG_CARTA_INTESTATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgConsentiBozzaSino)
                    .HasColumnName("FLG_CONSENTI_BOZZA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCopiaPdfSino)
                    .HasColumnName("FLG_COPIA_PDF_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgElencoIndirizziSino)
                    .HasColumnName("FLG_ELENCO_INDIRIZZI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFascicoloElettronico)
                    .HasColumnName("FLG_FASCICOLO_ELETTRONICO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFirmaGrafoSino)
                    .HasColumnName("FLG_FIRMA_GRAFO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInvioCcAgenzia)
                    .HasColumnName("FLG_INVIO_CC_AGENZIA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLivelloCodificaPdf)
                    .HasColumnName("FLG_LIVELLO_CODIFICA_PDF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMacroTipologiaModello)
                    .HasColumnName("FLG_MACRO_TIPOLOGIA_MODELLO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgModificaPdfSino)
                    .HasColumnName("FLG_MODIFICA_PDF_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPostAColoriSino)
                    .HasColumnName("FLG_POST_A_COLORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPostFronteRetroSino)
                    .HasColumnName("FLG_POST_FRONTE_RETRO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgQrcodeSino)
                    .HasColumnName("FLG_QRCODE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiediFirmaSino)
                    .HasColumnName("FLG_RICHIEDI_FIRMA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSceltaMultiplaSino)
                    .HasColumnName("FLG_SCELTA_MULTIPLA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSistemaPostalizzazione)
                    .HasColumnName("FLG_SISTEMA_POSTALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSoloBackgroundSino)
                    .HasColumnName("FLG_SOLO_BACKGROUND_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStampaPdfSino)
                    .HasColumnName("FLG_STAMPA_PDF_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStampaWsSino)
                    .HasColumnName("FLG_STAMPA_WS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoPostalizzazione)
                    .HasColumnName("FLG_TIPO_POSTALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaModello)
                    .HasColumnName("FLG_TIPOLOGIA_MODELLO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgVersionePdf)
                    .HasColumnName("FLG_VERSIONE_PDF")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisHomeInsIncassSino)
                    .HasColumnName("FLG_VIS_HOME_INS_INCASS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisHomeinsuranceSino)
                    .HasColumnName("FLG_VIS_HOMEINSURANCE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.LivelloVisibilita).HasColumnName("LIVELLO_VISIBILITA");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.Parametri)
                    .HasColumnName("PARAMETRI")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.PasswordPdf)
                    .HasColumnName("PASSWORD_PDF")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PercorsoCreadataset)
                    .HasColumnName("PERCORSO_CREADATASET")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.UrlRdlcRs)
                    .HasColumnName("URL_RDLC_RS")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.UrlRptCrystalReport)
                    .HasColumnName("URL_RPT_CRYSTAL_REPORT")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Versione)
                    .IsRequired()
                    .HasColumnName("VERSIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RepModelliAttivita>(entity =>
            {
                entity.HasKey(e => e.IdModelloAttivita);

                entity.ToTable("REP_MODELLI_ATTIVITA", "ISUITE");

                entity.HasIndex(e => e.IdModello)
                    .HasName("XX02_REP_MODELLI_ATTIVITA");

                entity.Property(e => e.IdModelloAttivita)
                    .HasColumnName("ID_MODELLO_ATTIVITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoAttivita)
                    .HasColumnName("FLG_TIPO_ATTIVITA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdModello).HasColumnName("ID_MODELLO");
            });

            modelBuilder.Entity<RepModelliFormati>(entity =>
            {
                entity.HasKey(e => e.IdModelloFormato)
                    .HasName("PK__REP_MODE__8D955D2E5D681F29");

                entity.ToTable("REP_MODELLI_FORMATI", "ISUITE");

                entity.HasIndex(e => e.IdFormatoReport)
                    .HasName("XX03REP_MODELLI_FORMATI");

                entity.HasIndex(e => e.IdModello)
                    .HasName("XX02REP_MODELLI_FORMATI");

                entity.HasIndex(e => e.IdModelloFormato)
                    .HasName("PK_REP_MODELLI_TIPI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdModello, e.IdFormatoReport })
                    .HasName("K01_REP_MODELLI_TIPI")
                    .IsUnique();

                entity.Property(e => e.IdModelloFormato)
                    .HasColumnName("ID_MODELLO_FORMATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFormatoReport)
                    .HasColumnName("ID_FORMATO_REPORT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<RepModelliLingue>(entity =>
            {
                entity.HasKey(e => e.IdModelloLingua)
                    .HasName("PK__REP_MODE__27129ED6EF1E2D0E");

                entity.ToTable("REP_MODELLI_LINGUE", "ISUITE");

                entity.HasIndex(e => e.IdAreaDati)
                    .HasName("XX03REP_MODELLI_LINGUE");

                entity.HasIndex(e => e.IdLingua)
                    .HasName("XX04REP_MODELLI_LINGUE");

                entity.HasIndex(e => e.IdModello)
                    .HasName("XX02REP_MODELLI_LINGUE");

                entity.HasIndex(e => e.IdModelloLingua)
                    .HasName("PK_REP_MODELLI_LINGUE")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdModello, e.IdModelloLingua })
                    .HasName("K01_REP_MODELLI_LINGUE")
                    .IsUnique();

                entity.Property(e => e.IdModelloLingua)
                    .HasColumnName("ID_MODELLO_LINGUA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAreaDati)
                    .HasColumnName("ID_AREA_DATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLingua)
                    .HasColumnName("ID_LINGUA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdLinguaNavigation)
                    .WithMany(p => p.RepModelliLingue)
                    .HasForeignKey(d => d.IdLingua)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__REP_MODEL__ID_LI__74F938D6");

                entity.HasOne(d => d.IdModelloNavigation)
                    .WithMany(p => p.RepModelliLingue)
                    .HasForeignKey(d => d.IdModello)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__REP_MODEL__ID_MO__75ED5D0F");
            });

            modelBuilder.Entity<RepModelliPostalizzatori>(entity =>
            {
                entity.HasKey(e => e.IdModellopostalizzatore);

                entity.ToTable("REP_MODELLI_POSTALIZZATORI", "ISUITE");

                entity.HasIndex(e => new { e.IdModello, e.FlgSistemaPostalizzazione, e.FlgTipoPostalizzazione })
                    .HasName("XX01_REP_MODELLIPOSTALIZZATORI")
                    .IsUnique();

                entity.Property(e => e.IdModellopostalizzatore)
                    .HasColumnName("ID_MODELLOPOSTALIZZATORE")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgSistemaDefaultSino)
                    .HasColumnName("FLG_SISTEMA_DEFAULT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSistemaPostalizzazione)
                    .HasColumnName("FLG_SISTEMA_POSTALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPostalizzazione)
                    .HasColumnName("FLG_TIPO_POSTALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdModello).HasColumnName("ID_MODELLO");
            });

            modelBuilder.Entity<RepModelliProcessi>(entity =>
            {
                entity.HasKey(e => e.IdModelloprocesso);

                entity.ToTable("REP_MODELLI_PROCESSI", "ISUITE");

                entity.HasIndex(e => new { e.IdModello, e.IdProcesso, e.ParametroOutput })
                    .HasName("XX01_REP_MODELLI_PROCESSI")
                    .IsUnique();

                entity.Property(e => e.IdModelloprocesso)
                    .HasColumnName("ID_MODELLOPROCESSO")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgIgnoraErrStampaSino)
                    .HasColumnName("FLG_IGNORA_ERR_STAMPA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdModello).HasColumnName("ID_MODELLO");

                entity.Property(e => e.IdProcesso).HasColumnName("ID_PROCESSO");

                entity.Property(e => e.OrdineEsecuzione).HasColumnName("ORDINE_ESECUZIONE");

                entity.Property(e => e.ParametroOutput)
                    .HasColumnName("PARAMETRO_OUTPUT")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RepWorkprocessidPostel>(entity =>
            {
                entity.HasKey(e => e.IdWorkprocessidPostel)
                    .HasName("PK__REP_WORK__FA6AAE928E4408D1");

                entity.ToTable("REP_WORKPROCESSID_POSTEL", "ISUITE");

                entity.HasIndex(e => new { e.FlgTipoPostalizzazione, e.FlgPostFronteRetroSino, e.FlgPostAColoriSino })
                    .HasName("K01_REP_WORKPROCESSID_POSTEL")
                    .IsUnique();

                entity.Property(e => e.IdWorkprocessidPostel)
                    .HasColumnName("ID_WORKPROCESSID_POSTEL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodWorkprocessidPostel)
                    .HasColumnName("COD_WORKPROCESSID_POSTEL")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPostAColoriSino)
                    .HasColumnName("FLG_POST_A_COLORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPostFronteRetroSino)
                    .HasColumnName("FLG_POST_FRONTE_RETRO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoPostalizzazione)
                    .HasColumnName("FLG_TIPO_POSTALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RicercaAnagrafica>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("RICERCA_ANAGRAFICA", "ISUITE");

                entity.Property(e => e.Cap)
                    .HasColumnName("CAP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CodProvincia)
                    .HasColumnName("COD_PROVINCIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceFiscale)
                    .HasColumnName("codice_fiscale")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cognome)
                    .HasColumnName("cognome")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CognomeRagioneSociale)
                    .HasColumnName("cognome_ragione_sociale")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtCostituzione)
                    .HasColumnName("dt_costituzione")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDecesso)
                    .HasColumnName("dt_decesso")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtNascita)
                    .HasColumnName("dt_nascita")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("dt_sto_effetto_fis")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("dt_sto_effetto_log")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("dt_sto_scadenza_fis")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("dt_sto_scadenza_log")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgBloccataSino)
                    .HasColumnName("flg_bloccata_sino")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPubblicaSino)
                    .HasColumnName("flg_pubblica_sino")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoAttivita)
                    .HasColumnName("flg_ramo_attivita")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSesso)
                    .HasColumnName("flg_sesso")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSettorizzazioneSintetica)
                    .HasColumnName("flg_settorizzazione_sintetica")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAnagrafica)
                    .IsRequired()
                    .HasColumnName("flg_tipo_anagrafica")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTitoloOnorifico)
                    .HasColumnName("flg_titolo_onorifico")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("id_anagrafica")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdComune)
                    .HasColumnName("id_comune")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDatiaggpersfisica)
                    .HasColumnName("id_datiaggpersfisica")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDatiaggpersgiuri)
                    .HasColumnName("id_datiaggpersgiuri")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDatiprivacy)
                    .HasColumnName("id_datiprivacy")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEsternoAnagrafica)
                    .HasColumnName("id_esterno_anagrafica")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLingua)
                    .HasColumnName("id_lingua")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProvincia)
                    .HasColumnName("ID_PROVINCIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdResidenza)
                    .HasColumnName("id_residenza")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSottogruppo)
                    .HasColumnName("id_sottogruppo")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("id_utente")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Indirizzo)
                    .HasColumnName("INDIRIZZO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.KeyAnagrafica)
                    .HasColumnName("key_anagrafica")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.KeyIndirizzo)
                    .HasColumnName("KEY_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Localita)
                    .HasColumnName("LOCALITA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nome)
                    .HasColumnName("nome")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("note")
                    .IsUnicode(false);

                entity.Property(e => e.NoteBlocco)
                    .HasColumnName("note_blocco")
                    .IsUnicode(false);

                entity.Property(e => e.PartitaIva)
                    .HasColumnName("partita_iva")
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<RiepSinImportiSpese>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RIEP_SIN_IMPORTI_SPESE", "IREGULATION");

                entity.HasIndex(e => e.KeyRiepSinImportiSpese)
                    .HasName("XX01TAB_RETE_VENDITA_PROV");

                entity.Property(e => e.AnnoAccadimento).HasColumnName("ANNO_ACCADIMENTO");

                entity.Property(e => e.AnnoEsercizio).HasColumnName("ANNO_ESERCIZIO");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRamoBilancio)
                    .IsRequired()
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSpesa)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_SPESA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdRiepSinImportiSpese).HasColumnName("ID_RIEP_SIN_IMPORTI_SPESE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImportoSpeseEsterne)
                    .HasColumnName("IMPORTO_SPESE_ESTERNE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImportoSpeseInterne)
                    .HasColumnName("IMPORTO_SPESE_INTERNE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeyRiepSinImportiSpese).HasColumnName("KEY_RIEP_SIN_IMPORTI_SPESE");

                entity.Property(e => e.MeseEsercizio).HasColumnName("MESE_ESERCIZIO");
            });

            modelBuilder.Entity<RiepSinListaMovimenti>(entity =>
            {
                entity.HasKey(e => e.IdListaMovimenti)
                    .HasName("PK__RIEP_SIN__CC9DD09320A4DA61");

                entity.ToTable("RIEP_SIN_LISTA_MOVIMENTI", "IREGULATION");

                entity.HasIndex(e => e.IdBeneficiario)
                    .HasName("XX06RIEP_SIN_LISTA_MOVIMENTI");

                entity.HasIndex(e => e.IdEntitacoinvoltaOrigine)
                    .HasName("XX08RIEP_SIN_LISTA_MOVIMENTI");

                entity.HasIndex(e => e.IdListaMovimenti)
                    .HasName("SYS_C0047900")
                    .IsUnique();

                entity.HasIndex(e => e.IdMovimento)
                    .HasName("XX02RIEP_SIN_LISTA_MOVIMENTI");

                entity.HasIndex(e => e.IdStatoFinale)
                    .HasName("XX04RIEP_SIN_LISTA_MOVIMENTI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX07RIEP_SIN_LISTA_MOVIMENTI");

                entity.HasIndex(e => new { e.IdSinistroOrigine, e.FlgTipologiaGestione, e.DtRiferimento })
                    .HasName("XX10RIEP_SIN_LISTA_MOVIMENTI");

                entity.Property(e => e.IdListaMovimenti)
                    .HasColumnName("ID_LISTA_MOVIMENTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Beneficiario)
                    .HasColumnName("BENEFICIARIO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Danno)
                    .HasColumnName("danno")
                    .HasMaxLength(21)
                    .IsUnicode(false);

                entity.Property(e => e.DtMovimento)
                    .HasColumnName("DT_MOVIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiferimento)
                    .HasColumnName("DT_RIFERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCausaSino)
                    .HasColumnName("FLG_CAUSA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudeSinistroSino)
                    .HasColumnName("FLG_CHIUDE_SINISTRO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudeTipoCardSino)
                    .HasColumnName("FLG_CHIUDE_TIPO_CARD_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudeTipoDannoSino)
                    .HasColumnName("FLG_CHIUDE_TIPO_DANNO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDefinitivoSino)
                    .HasColumnName("FLG_DEFINITIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMezzoPagamento)
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasComment("[CHAR1]Flag mezzo pagamento");

                entity.Property(e => e.FlgQuietanzaSeparataSino)
                    .HasColumnName("FLG_QUIETANZA_SEPARATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStornoContabileSino)
                    .HasColumnName("FLG_STORNO_CONTABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStornoSino)
                    .HasColumnName("FLG_STORNO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoDanno)
                    .HasColumnName("FLG_TIPO_DANNO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoMovimento)
                    .HasColumnName("FLG_TIPO_MOVIMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoMovimento2)
                    .HasColumnName("FLG_TIPO_MOVIMENTO2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRiserva)
                    .HasColumnName("FLG_TIPO_RISERVA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRiserva2)
                    .HasColumnName("FLG_TIPO_RISERVA2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaGestione)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IbanCompagnia)
                    .HasColumnName("IBAN_COMPAGNIA")
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.IdBeneficiario)
                    .HasColumnName("ID_BENEFICIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvoltaOrigine)
                    .HasColumnName("ID_ENTITACOINVOLTA_ORIGINE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEsternoMovimento)
                    .HasColumnName("ID_ESTERNO_MOVIMENTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdMovimento)
                    .HasColumnName("ID_MOVIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMovimentoStornato)
                    .HasColumnName("ID_MOVIMENTO_STORNATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistroOrigine)
                    .HasColumnName("ID_SINISTRO_ORIGINE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdStatoFinale)
                    .HasColumnName("ID_STATO_FINALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpIndennizziCose)
                    .HasColumnName("IMP_INDENNIZZI_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpIndennizziPassF)
                    .HasColumnName("IMP_INDENNIZZI_PASS_F")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpIndennizziPassM)
                    .HasColumnName("IMP_INDENNIZZI_PASS_M")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpIndennizziTrasF)
                    .HasColumnName("IMP_INDENNIZZI_TRAS_F")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpIndennizziTrasM)
                    .HasColumnName("IMP_INDENNIZZI_TRAS_M")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpIndennizziVeicoli)
                    .HasColumnName("IMP_INDENNIZZI_VEICOLI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaCadutaCose)
                    .HasColumnName("IMP_RISERVA_CADUTA_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaCadutaPers)
                    .HasColumnName("IMP_RISERVA_CADUTA_PERS")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImportoForfaitCard)
                    .HasColumnName("IMPORTO_FORFAIT_CARD")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImportoRecuperi)
                    .HasColumnName("IMPORTO_RECUPERI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImportoSpese)
                    .HasColumnName("IMPORTO_SPESE")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<RiepSinStatiDettImp>(entity =>
            {
                entity.HasKey(e => e.IdDettaglio)
                    .HasName("PK__RIEP_SIN__E572D231CA87FCC0");

                entity.ToTable("RIEP_SIN_STATI_DETT_IMP", "IREGULATION");

                entity.HasIndex(e => e.IdDettaglio)
                    .HasName("SYS_C0047902")
                    .IsUnique();

                entity.HasIndex(e => e.IdStato)
                    .HasName("XX01RIEP_SIN_STATI_DETT_IMP");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX03RIEP_SIN_STATI_DETT_IMP");

                entity.Property(e => e.IdDettaglio)
                    .HasColumnName("ID_DETTAGLIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgTipoMovimento)
                    .HasColumnName("FLG_TIPO_MOVIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMovimento2)
                    .HasColumnName("FLG_TIPO_MOVIMENTO2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRiserva)
                    .HasColumnName("FLG_TIPO_RISERVA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRiserva2)
                    .HasColumnName("FLG_TIPO_RISERVA2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoStatoRiepilogo)
                    .HasColumnName("FLG_TIPO_STATO_RIEPILOGO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdStato)
                    .HasColumnName("ID_STATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<RiepSinStatiFinali>(entity =>
            {
                entity.HasKey(e => e.KeyStatoFinale)
                    .HasName("PK__RIEP_SIN__1666635FA06F5C39");

                entity.ToTable("RIEP_SIN_STATI_FINALI", "IREGULATION");

                entity.HasIndex(e => e.DtRiferimento)
                    .HasName("XX06RIEP_SIN_STATI_FINALI");

                entity.HasIndex(e => e.IdEntitacoinvoltaOrigine)
                    .HasName("XX05RIEP_SIN_STATI_FINALI");

                entity.HasIndex(e => e.IdStatoFinale)
                    .HasName("XX02RIEP_SIN_STATI_FINALI");

                entity.HasIndex(e => e.IdStatoIniziale)
                    .HasName("XX03RIEP_SIN_STATI_FINALI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX04RIEP_SIN_STATI_FINALI");

                entity.HasIndex(e => e.KeyStatoFinale)
                    .HasName("SYS_C0047904")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdSinistroOrigine, e.FlgTipologiaGestione, e.DtRiferimento })
                    .HasName("XX07RIEP_SIN_STATI_FINALI");

                entity.Property(e => e.KeyStatoFinale)
                    .HasColumnName("KEY_STATO_FINALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtRiattivazione)
                    .HasColumnName("DT_RIATTIVAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiferimento)
                    .HasColumnName("DT_RIFERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCausaAnnoSino)
                    .HasColumnName("FLG_CAUSA_ANNO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCausaSino)
                    .HasColumnName("FLG_CAUSA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudeSinistroSino)
                    .HasColumnName("FLG_CHIUDE_SINISTRO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudeTipoCardSino)
                    .HasColumnName("FLG_CHIUDE_TIPO_CARD_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudeTipoDannoSino)
                    .HasColumnName("FLG_CHIUDE_TIPO_DANNO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiusoPtSino)
                    .HasColumnName("FLG_CHIUSO_PT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiusoSsSino)
                    .HasColumnName("FLG_CHIUSO_SS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiusoSsirSino)
                    .HasColumnName("FLG_CHIUSO_SSIR_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDefinitivoSino)
                    .HasColumnName("FLG_DEFINITIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIndennizziSino)
                    .HasColumnName("FLG_INDENNIZZI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPartitaFittiziaSino)
                    .HasColumnName("FLG_PARTITA_FITTIZIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRecuperiSino)
                    .HasColumnName("FLG_RECUPERI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRiattivatoSino)
                    .HasColumnName("FLG_RIATTIVATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRiservaForfaitSino)
                    .HasColumnName("FLG_RISERVA_FORFAIT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRiservaIndennizziSino)
                    .HasColumnName("FLG_RISERVA_INDENNIZZI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRiservaRecuperiSino)
                    .HasColumnName("FLG_RISERVA_RECUPERI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRiservaSpeseSino)
                    .HasColumnName("FLG_RISERVA_SPESE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSpeseSino)
                    .HasColumnName("FLG_SPESE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStornoSsSino)
                    .HasColumnName("FLG_STORNO_SS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDanno)
                    .HasColumnName("FLG_TIPO_DANNO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaGestione)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaGestioneNuova)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE_NUOVA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvoltaOrigine)
                    .HasColumnName("ID_ENTITACOINVOLTA_ORIGINE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistroOrigine)
                    .HasColumnName("ID_SINISTRO_ORIGINE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdStatoFinale)
                    .HasColumnName("ID_STATO_FINALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdStatoIniziale)
                    .HasColumnName("ID_STATO_INIZIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpForfait)
                    .HasColumnName("IMP_FORFAIT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpIndennizzi)
                    .HasColumnName("IMP_INDENNIZZI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRecuperi)
                    .HasColumnName("IMP_RECUPERI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaBilancio)
                    .HasColumnName("IMP_RISERVA_BILANCIO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaCaduta)
                    .HasColumnName("IMP_RISERVA_CADUTA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaCadutaForfait)
                    .HasColumnName("IMP_RISERVA_CADUTA_FORFAIT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaCadutaForfaitP)
                    .HasColumnName("IMP_RISERVA_CADUTA_FORFAIT_P")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaCadutaSpese)
                    .HasColumnName("IMP_RISERVA_CADUTA_SPESE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaForfait)
                    .HasColumnName("IMP_RISERVA_FORFAIT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaIndennizzi)
                    .HasColumnName("IMP_RISERVA_INDENNIZZI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaRecuperi)
                    .HasColumnName("IMP_RISERVA_RECUPERI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaRes)
                    .HasColumnName("IMP_RISERVA_RES")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaSpese)
                    .HasColumnName("IMP_RISERVA_SPESE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSpese)
                    .HasColumnName("IMP_SPESE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSpeseRes)
                    .HasColumnName("IMP_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<RiepSinStatiIniziali>(entity =>
            {
                entity.HasKey(e => e.KeyStatoIniziale)
                    .HasName("PK__RIEP_SIN_STATI_I__6D2D2E85");

                entity.ToTable("RIEP_SIN_STATI_INIZIALI", "IREGULATION");

                entity.HasIndex(e => e.DtRiferimento)
                    .HasName("XX10RIEP_SIN_STATI_INIZIALI");

                entity.HasIndex(e => e.IdAssicurato)
                    .HasName("XX04RIEP_SIN_STATI_INIZIALI");

                entity.HasIndex(e => e.IdContraente)
                    .HasName("XX05RIEP_SIN_STATI_INIZIALI");

                entity.HasIndex(e => e.IdEntitacoinvoltaOrigine)
                    .HasName("XX09RIEP_SIN_STATI_INIZIALI");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX02RIEP_SIN_STATI_INIZIALI");

                entity.HasIndex(e => e.IdProvAccadimento)
                    .HasName("XX03RIEP_SIN_STATI_INIZIALI");

                entity.HasIndex(e => e.IdSinistroOrigine)
                    .HasName("XX06RIEP_SIN_STATI_INIZIALI");

                entity.HasIndex(e => e.IdStatoIniziale)
                    .HasName("XX07RIEP_SIN_STATI_INIZIALI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX01RIEP_SIN_STATI_INIZIALI");

                entity.HasIndex(e => e.KeyStatoIniziale)
                    .HasName("SYS_C0047906")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdSinistroOrigine, e.FlgTipologiaGestione, e.DtRiferimento })
                    .HasName("XX11RIEP_SIN_STATI_INIZIALI");

                entity.Property(e => e.KeyStatoIniziale)
                    .HasColumnName("KEY_STATO_INIZIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoEsercizio)
                    .HasColumnName("ANNO_ESERCIZIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoRegistrazione)
                    .HasColumnName("ANNO_REGISTRAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Assicurato)
                    .HasColumnName("ASSICURATO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Classe)
                    .HasColumnName("CLASSE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodCompagniaAniaCtp)
                    .HasColumnName("COD_COMPAGNIA_ANIA_CTP")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodProdotto)
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CodSottoprodotto)
                    .HasColumnName("COD_SOTTOPRODOTTO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Conta)
                    .HasColumnName("CONTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Contraente)
                    .HasColumnName("CONTRAENTE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ContraenteCfPiva)
                    .HasColumnName("CONTRAENTE_CF_PIVA")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.ContraenteSesso)
                    .HasColumnName("CONTRAENTE_SESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Danneggiato)
                    .HasColumnName("DANNEGGIATO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.DtAvvenimento)
                    .HasColumnName("DT_AVVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDenuncia)
                    .HasColumnName("DT_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffPolizza)
                    .HasColumnName("DT_EFF_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoRiapertura)
                    .HasColumnName("DT_EFFETTO_RIAPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPervenimento)
                    .HasColumnName("DT_PERVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiapertura)
                    .HasColumnName("DT_RIAPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiferimento)
                    .HasColumnName("DT_RIFERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAssicuratoSino)
                    .HasColumnName("FLG_ASSICURATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDefinitivoSino)
                    .HasColumnName("FLG_DEFINITIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDenunciatoSino)
                    .HasColumnName("FLG_DENUNCIATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMandatarioSino)
                    .HasColumnName("FLG_MANDATARIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRiapertoSino)
                    .HasColumnName("FLG_RIAPERTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRiapreCardSino)
                    .HasColumnName("FLG_RIAPRE_CARD_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRiservaForfaitSino)
                    .HasColumnName("FLG_RISERVA_FORFAIT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRiservaIndennizziSino)
                    .HasColumnName("FLG_RISERVA_INDENNIZZI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRiservaRecuperiSino)
                    .HasColumnName("FLG_RISERVA_RECUPERI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRiservaSpeseSino)
                    .HasColumnName("FLG_RISERVA_SPESE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTardivoSino)
                    .HasColumnName("FLG_TARDIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoDanno)
                    .HasColumnName("FLG_TIPO_DANNO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDelega)
                    .HasColumnName("FLG_TIPO_DELEGA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaGestione)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaGestioneVecchia)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE_VECCHIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAssicurato)
                    .HasColumnName("ID_ASSICURATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContraente)
                    .HasColumnName("ID_CONTRAENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdControparte)
                    .HasColumnName("ID_CONTROPARTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvoltaOrigine)
                    .HasColumnName("ID_ENTITACOINVOLTA_ORIGINE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProvAccadimento)
                    .HasColumnName("ID_PROV_ACCADIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProvEmissione).HasColumnName("ID_PROV_EMISSIONE");

                entity.Property(e => e.IdSinistroOrigine)
                    .HasColumnName("ID_SINISTRO_ORIGINE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdStatoIniziale)
                    .HasColumnName("ID_STATO_INIZIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpRiservaForfait)
                    .HasColumnName("IMP_RISERVA_FORFAIT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaIndennizzi)
                    .HasColumnName("IMP_RISERVA_INDENNIZZI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaRecuperi)
                    .HasColumnName("IMP_RISERVA_RECUPERI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaSpese)
                    .HasColumnName("IMP_RISERVA_SPESE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NFlotta)
                    .HasColumnName("N_FLOTTA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PercNostraQuota)
                    .HasColumnName("PERC_NOSTRA_QUOTA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.Settore)
                    .HasColumnName("SETTORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.TargaTelaioAss)
                    .HasColumnName("TARGA_TELAIO_ASS")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.TargaTelaioCtp)
                    .HasColumnName("TARGA_TELAIO_CTP")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.TargaTelaioDanneggiato)
                    .HasColumnName("TARGA_TELAIO_DANNEGGIATO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Uso)
                    .HasColumnName("USO")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RiepSinStatoBollati>(entity =>
            {
                entity.HasKey(e => e.IdStatoBollato)
                    .HasName("PK__RIEP_SIN__8DB386C38F356123");

                entity.ToTable("RIEP_SIN_STATO_BOLLATI", "IREGULATION");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02RIEP_SIN_STATO_BOLLATI");

                entity.HasIndex(e => e.IdStatoBollato)
                    .HasName("SYS_C0047915")
                    .IsUnique();

                entity.HasIndex(e => new { e.MeseBollato, e.FlgTipoBollato, e.AnnoBollato, e.IdCompagnia })
                    .HasName("XRIEP_SIN_STATO_BOLLATI")
                    .IsUnique();

                entity.Property(e => e.IdStatoBollato)
                    .HasColumnName("ID_STATO_BOLLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoBollato)
                    .HasColumnName("ANNO_BOLLATO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtBollatoCompleta)
                    .HasColumnName("DT_BOLLATO_COMPLETA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStampaRistampaBollato)
                    .HasColumnName("DT_STAMPA_RISTAMPA_BOLLATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoBollato)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_BOLLATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoBollato)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_BOLLATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.MeseBollato)
                    .HasColumnName("MESE_BOLLATO")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RispostaSic>(entity =>
            {
                entity.HasKey(e => e.IdRispostaSic)
                    .HasName("SYS_C0016357");

                entity.ToTable("RISPOSTA_SIC", "ICLAIMS");

                entity.HasIndex(e => e.IdDatiVeicDebitrice)
                    .HasName("XX03RISPOSTA_SIC");

                entity.HasIndex(e => e.IdDatiVeicMandataria)
                    .HasName("XX02RISPOSTA_SIC");

                entity.Property(e => e.IdRispostaSic)
                    .HasColumnName("ID_RISPOSTA_SIC")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErrore).HasColumnName("COD_ERRORE");

                entity.Property(e => e.DatiInput)
                    .HasColumnName("DATI_INPUT")
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneImpresaDebitrice)
                    .HasColumnName("DESCRIZIONE_IMPRESA_DEBITRICE")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneImpresaMandataria)
                    .HasColumnName("DESCRIZIONE_IMPRESA_MANDATARIA")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneTipoVeicDeb)
                    .HasColumnName("DESCRIZIONE_TIPO_VEIC_DEB")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneTipoVeicMandat)
                    .HasColumnName("DESCRIZIONE_TIPO_VEIC_MANDAT")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.FlagSinCardDeb)
                    .HasColumnName("FLAG_SIN_CARD_DEB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagSinCardMandat)
                    .HasColumnName("FLAG_SIN_CARD_MANDAT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDatiVeicDebitrice).HasColumnName("ID_DATI_VEIC_DEBITRICE");

                entity.Property(e => e.IdDatiVeicMandataria).HasColumnName("ID_DATI_VEIC_MANDATARIA");

                entity.Property(e => e.MessaggioErrore)
                    .HasColumnName("MESSAGGIO_ERRORE")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.MessaggioRispostaOffline)
                    .HasColumnName("MESSAGGIO_RISPOSTA_OFFLINE")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.MessaggioRispostaOnline)
                    .HasColumnName("MESSAGGIO_RISPOSTA_ONLINE")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.NumSinCardVeicDeb).HasColumnName("NUM_SIN_CARD_VEIC_DEB");

                entity.Property(e => e.NumSinCardVeicMand).HasColumnName("NUM_SIN_CARD_VEIC_MAND");

                entity.Property(e => e.ProtocolloSic)
                    .IsRequired()
                    .HasColumnName("PROTOCOLLO_SIC")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.RispostaOffline)
                    .HasColumnName("RISPOSTA_OFFLINE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.RispostaOnline)
                    .HasColumnName("RISPOSTA_ONLINE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TipoErrore)
                    .HasColumnName("TIPO_ERRORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RispostaSicDatiVeicolo>(entity =>
            {
                entity.HasKey(e => e.IdSicDatiVeicolo);

                entity.ToTable("RISPOSTA_SIC_DATI_VEICOLO", "ICLAIMS");

                entity.HasIndex(e => e.IdSicDatiVeicolo)
                    .HasName("XX01RISPOSTA_SIC_DATI_VEICOLO");

                entity.Property(e => e.IdSicDatiVeicolo)
                    .HasColumnName("ID_SIC_DATI_VEICOLO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cc).HasColumnName("CC");

                entity.Property(e => e.Classe)
                    .HasColumnName("CLASSE")
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceOmologazione)
                    .HasColumnName("CODICE_OMOLOGAZIONE")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneVeicolo)
                    .HasColumnName("DESCRIZIONE_VEICOLO")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroPosti).HasColumnName("NUMERO_POSTI");

                entity.Property(e => e.PortataKg).HasColumnName("PORTATA_KG");

                entity.Property(e => e.PotenzaCv).HasColumnName("POTENZA_CV");

                entity.Property(e => e.PotenzaKw)
                    .HasColumnName("POTENZA_KW")
                    .HasColumnType("numeric(9, 2)");

                entity.Property(e => e.Telaio)
                    .HasColumnName("TELAIO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Uso)
                    .HasColumnName("USO")
                    .HasMaxLength(80)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RispostaSicPosAss>(entity =>
            {
                entity.HasKey(e => e.IdPosAssicurativaSic);

                entity.ToTable("RISPOSTA_SIC_POS_ASS", "ICLAIMS");

                entity.HasIndex(e => e.IdRispostaSic)
                    .HasName("XX02RISPOSTA_SIC_POS_ASS");

                entity.Property(e => e.IdPosAssicurativaSic)
                    .HasColumnName("ID_POS_ASSICURATIVA_SIC")
                    .ValueGeneratedNever();

                entity.Property(e => e.Classe)
                    .HasColumnName("CLASSE")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodiceCausale)
                    .HasColumnName("CODICE_CAUSALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodiceCompagnia).HasColumnName("CODICE_COMPAGNIA");

                entity.Property(e => e.CodiceComunicazione)
                    .HasColumnName("CODICE_COMUNICAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DataEffetto)
                    .HasColumnName("DATA_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataScadenza)
                    .HasColumnName("DATA_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlagCopertura)
                    .HasColumnName("FLAG_COPERTURA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlagUtilizzo)
                    .HasColumnName("FLAG_UTILIZZO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMandatarioDebitore)
                    .HasColumnName("FLG_MANDATARIO_DEBITORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRispostaSic).HasColumnName("ID_RISPOSTA_SIC");

                entity.Property(e => e.Settore)
                    .HasColumnName("SETTORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoComunicazione)
                    .HasColumnName("TIPO_COMUNICAZIONE")
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.Uso)
                    .HasColumnName("USO")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<RispostaSicSinistri>(entity =>
            {
                entity.HasKey(e => e.IdSinistroSic);

                entity.ToTable("RISPOSTA_SIC_SINISTRI", "ICLAIMS");

                entity.HasIndex(e => e.IdRispostaSic)
                    .HasName("XX01RISPOSTA_SIC_SINISTRI");

                entity.Property(e => e.IdSinistroSic)
                    .HasColumnName("ID_SINISTRO_SIC")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceCompagnia).HasColumnName("CODICE_COMPAGNIA");

                entity.Property(e => e.CodiceCompagniaDebitrice).HasColumnName("CODICE_COMPAGNIA_DEBITRICE");

                entity.Property(e => e.CodiceImpresaControparte).HasColumnName("CODICE_IMPRESA_CONTROPARTE");

                entity.Property(e => e.CodiceUfficio).HasColumnName("CODICE_UFFICIO");

                entity.Property(e => e.CodiceUfficioControparte).HasColumnName("CODICE_UFFICIO_CONTROPARTE");

                entity.Property(e => e.DataPagamento)
                    .HasColumnName("DATA_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataSinistro)
                    .HasColumnName("DATA_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DenuncianteControparte)
                    .HasColumnName("DENUNCIANTE_CONTROPARTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMandatarioDebitore)
                    .HasColumnName("FLG_MANDATARIO_DEBITORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRispostaSic).HasColumnName("ID_RISPOSTA_SIC");

                entity.Property(e => e.NumeroSinistro)
                    .HasColumnName("NUMERO_SINISTRO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.TargaControparte)
                    .HasColumnName("TARGA_CONTROPARTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TipoResponsabilita)
                    .HasColumnName("TIPO_RESPONSABILITA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoTargaControparte)
                    .HasColumnName("TIPO_TARGA_CONTROPARTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoVeicolo)
                    .HasColumnName("TIPO_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoVeicoloControparte)
                    .HasColumnName("TIPO_VEICOLO_CONTROPARTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<RuoliRete>(entity =>
            {
                entity.HasKey(e => e.KeyRuoloRete);

                entity.ToTable("RUOLI_RETE", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX01RUOLI_RETE");

                entity.HasIndex(e => e.IdRuoloRete)
                    .HasName("XX03RUOLI_RETE");

                entity.HasIndex(e => e.IdSegnalatore)
                    .HasName("XX02RUOLI_RETE");

                entity.HasIndex(e => new { e.IdRuoloRete, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_RUOLI_RETE")
                    .IsUnique();

                entity.Property(e => e.KeyRuoloRete)
                    .HasColumnName("KEY_RUOLO_RETE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAxaCampus)
                    .HasColumnName("DT_AXA_CAMPUS")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFinRapporto)
                    .HasColumnName("DT_FIN_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniRapporto)
                    .HasColumnName("DT_INI_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAxaCampus)
                    .HasColumnName("FLG_AXA_CAMPUS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCanaleReclutamentoDp2)
                    .HasColumnName("FLG_CANALE_RECLUTAMENTO_DP2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVenditore)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_VENDITORE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgValutazionePraxi)
                    .HasColumnName("FLG_VALUTAZIONE_PRAXI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdRuoloRete).HasColumnName("ID_RUOLO_RETE");

                entity.Property(e => e.IdSegnalatore).HasColumnName("ID_SEGNALATORE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RuoliReteAgePag>(entity =>
            {
                entity.HasKey(e => e.IdRuoloReteAgePag)
                    .HasName("SYS_C0014262");

                entity.ToTable("RUOLI_RETE_AGE_PAG", "ISUITE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX01RUOLI_RETE_AGE_PAG");

                entity.HasIndex(e => e.IdRuoloRete)
                    .HasName("XX03RUOLI_RETE_AGE_PAG");

                entity.Property(e => e.IdRuoloReteAgePag)
                    .HasColumnName("ID_RUOLO_RETE_AGE_PAG")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAl)
                    .HasColumnName("DT_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDal)
                    .HasColumnName("DT_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdRuoloRete).HasColumnName("ID_RUOLO_RETE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<RuoliReteCarriera>(entity =>
            {
                entity.HasKey(e => e.IdRuoloReteCarriera)
                    .HasName("SYS_C0014269");

                entity.ToTable("RUOLI_RETE_CARRIERA", "ISUITE");

                entity.HasIndex(e => e.IdCausale)
                    .HasName("XX01RUOLI_RETE_CARRIERA");

                entity.HasIndex(e => e.IdLivelloCarriera)
                    .HasName("XX02RUOLI_RETE_CARRIERA");

                entity.HasIndex(e => e.IdRuoloRete)
                    .HasName("XX03RUOLI_RETE_CARRIERA");

                entity.Property(e => e.IdRuoloReteCarriera)
                    .HasColumnName("ID_RUOLO_RETE_CARRIERA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAl)
                    .HasColumnName("DT_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDal)
                    .HasColumnName("DT_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioPiano)
                    .HasColumnName("DT_INIZIO_PIANO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCausale).HasColumnName("ID_CAUSALE");

                entity.Property(e => e.IdLivelloCarriera).HasColumnName("ID_LIVELLO_CARRIERA");

                entity.Property(e => e.IdRuoloRete).HasColumnName("ID_RUOLO_RETE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.HasOne(d => d.IdLivelloCarrieraNavigation)
                    .WithMany(p => p.RuoliReteCarriera)
                    .HasForeignKey(d => d.IdLivelloCarriera)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RUOLI_RET__ID_LI__76E18148");
            });

            modelBuilder.Entity<RuoliReteCarrieraProp>(entity =>
            {
                entity.HasKey(e => e.IdRuoloReteCarrieraProp);

                entity.ToTable("RUOLI_RETE_CARRIERA_PROP", "ISUITE");

                entity.HasIndex(e => e.IdCarrieraRif)
                    .HasName("XX03RUOLI_RETE_CARRIERA_PROP");

                entity.HasIndex(e => e.IdCausale)
                    .HasName("XX04RUOLI_RETE_CARRIERA_PROP");

                entity.HasIndex(e => e.IdRuoloReteFlussiCarrProp)
                    .HasName("XX05RUOLI_RETE_CARRIERA_PROP");

                entity.HasIndex(e => e.IdRuoloReteRif)
                    .HasName("XX02RUOLI_RETE_CARRIERA_PROP");

                entity.HasIndex(e => new { e.DtLivello, e.CodiceFiscaleDp2 })
                    .HasName("XX01RUOLI_RETE_CARRIERA_PROP")
                    .IsUnique();

                entity.Property(e => e.IdRuoloReteCarrieraProp)
                    .HasColumnName("ID_RUOLO_RETE_CARRIERA_PROP")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodLivello)
                    .IsRequired()
                    .HasColumnName("COD_LIVELLO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceFiscaleDp2)
                    .HasColumnName("CODICE_FISCALE_DP2")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.DtInizioPiano)
                    .HasColumnName("DT_INIZIO_PIANO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtLivello)
                    .HasColumnName("DT_LIVELLO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStampaLettera)
                    .HasColumnName("DT_STAMPA_LETTERA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoPropostaMovCar)
                    .HasColumnName("FLG_STATO_PROPOSTA_MOV_CAR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCarrieraRif).HasColumnName("ID_CARRIERA_RIF");

                entity.Property(e => e.IdCausale).HasColumnName("ID_CAUSALE");

                entity.Property(e => e.IdRuoloReteFlussiCarrProp).HasColumnName("ID_RUOLO_RETE_FLUSSI_CARR_PROP");

                entity.Property(e => e.IdRuoloReteRif).HasColumnName("ID_RUOLO_RETE_RIF");
            });

            modelBuilder.Entity<RuoliReteFlussiCarrProp>(entity =>
            {
                entity.HasKey(e => e.IdRuoloReteFlussiCarrProp);

                entity.ToTable("RUOLI_RETE_FLUSSI_CARR_PROP", "ISUITE");

                entity.Property(e => e.IdRuoloReteFlussiCarrProp)
                    .HasColumnName("ID_RUOLO_RETE_FLUSSI_CARR_PROP")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFlusso)
                    .HasColumnName("DT_FLUSSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPresenzaErroriSino)
                    .HasColumnName("FLG_PRESENZA_ERRORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NomeFile)
                    .HasColumnName("NOME_FILE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Progressivo).HasColumnName("PROGRESSIVO");
            });

            modelBuilder.Entity<RuoliReteStato>(entity =>
            {
                entity.HasKey(e => e.IdRuoloReteStato)
                    .HasName("SYS_C0014281");

                entity.ToTable("RUOLI_RETE_STATO", "ISUITE");

                entity.HasIndex(e => e.IdCausale)
                    .HasName("XX03RUOLI_RETE_STATO");

                entity.HasIndex(e => e.IdRuoloRete)
                    .HasName("XX04RUOLI_RETE_STATO");

                entity.HasIndex(e => e.IdTipoStatoRuoli)
                    .HasName("XX01RUOLI_RETE_STATO");

                entity.Property(e => e.IdRuoloReteStato)
                    .HasColumnName("ID_RUOLO_RETE_STATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAl)
                    .HasColumnName("DT_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDal)
                    .HasColumnName("DT_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCausale).HasColumnName("ID_CAUSALE");

                entity.Property(e => e.IdRuoloRete).HasColumnName("ID_RUOLO_RETE");

                entity.Property(e => e.IdTipoStatoRuoli).HasColumnName("ID_TIPO_STATO_RUOLI");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.HasOne(d => d.IdCausaleNavigation)
                    .WithMany(p => p.RuoliReteStato)
                    .HasForeignKey(d => d.IdCausale)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RUOLI_RET__ID_CA__78C9C9BA");

                entity.HasOne(d => d.IdTipoStatoRuoliNavigation)
                    .WithMany(p => p.RuoliReteStato)
                    .HasForeignKey(d => d.IdTipoStatoRuoli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__RUOLI_RET__ID_TI__77D5A581");
            });

            modelBuilder.Entity<Sagex3CorrIban>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SAGEX3_CORR_IBAN", "ISUITE");

                entity.HasIndex(e => e.KeyCorrIban)
                    .HasName("PK_SAGEX3_CORR_IBAN")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCorrIban, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_SAGEX3_CORR_IBAN")
                    .IsUnique();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.Iban)
                    .IsRequired()
                    .HasColumnName("IBAN")
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.IdCorrIban).HasColumnName("ID_CORR_IBAN");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.KeyCorrIban).HasColumnName("KEY_CORR_IBAN");

                entity.Property(e => e.Tipopag)
                    .IsRequired()
                    .HasColumnName("TIPOPAG")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Sagex3ScaMovfin>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SAGEX3_SCA_MOVFIN", "ISUITE");

                entity.HasIndex(e => e.KeyScaMovfin)
                    .HasName("PK_SAGEX3_SCA_MOVFIN")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdScaMovfin, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_SAGEX3_SCA_MOVFIN")
                    .IsUnique();

                entity.Property(e => e.Caufin)
                    .HasColumnName("CAUFIN")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Causcon)
                    .HasColumnName("CAUSCON")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.Codcomp)
                    .HasColumnName("CODCOMP")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Contropar1)
                    .HasColumnName("CONTROPAR1")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Contropar2)
                    .HasColumnName("CONTROPAR2")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Descaus)
                    .HasColumnName("DESCAUS")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descausagg)
                    .HasColumnName("DESCAUSAGG")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.IdScaMovfin).HasColumnName("ID_SCA_MOVFIN");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Identif)
                    .HasColumnName("IDENTIF")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Identif2)
                    .HasColumnName("IDENTIF2")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Indiconto)
                    .HasColumnName("INDICONTO")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Indiconto2)
                    .HasColumnName("INDICONTO2")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Indimp)
                    .HasColumnName("INDIMP")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.KeyScaMovfin).HasColumnName("KEY_SCA_MOVFIN");

                entity.Property(e => e.Livpdc)
                    .HasColumnName("LIVPDC")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Livpdc2)
                    .HasColumnName("LIVPDC2")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Nazione)
                    .HasColumnName("NAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Partita1)
                    .HasColumnName("PARTITA1")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Partita2)
                    .HasColumnName("PARTITA2")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Progr)
                    .HasColumnName("PROGR")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Prov)
                    .HasColumnName("PROV")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Ridagg)
                    .HasColumnName("RIDAGG")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Segnopar)
                    .HasColumnName("SEGNOPAR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tipoagg)
                    .HasColumnName("TIPOAGG")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Tiporeg)
                    .HasColumnName("TIPOREG")
                    .HasColumnType("numeric(2, 0)");
            });

            modelBuilder.Entity<Sagex3ScaPna>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SAGEX3_SCA_PNA", "ISUITE");

                entity.HasIndex(e => e.KeyScaPna)
                    .HasName("PK_SAGEX3_SCA_PNA")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdScaPna, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_SAGEX3_SCA_PNA")
                    .IsUnique();

                entity.Property(e => e.Causcon)
                    .HasColumnName("CAUSCON")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.Codcomp)
                    .HasColumnName("CODCOMP")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Codice)
                    .HasColumnName("CODICE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Contropar1)
                    .HasColumnName("CONTROPAR1")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Contropar2)
                    .HasColumnName("CONTROPAR2")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Descaus)
                    .HasColumnName("DESCAUS")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descausagg)
                    .HasColumnName("DESCAUSAGG")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.IdScaPna).HasColumnName("ID_SCA_PNA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Identif)
                    .HasColumnName("IDENTIF")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Identif2)
                    .HasColumnName("IDENTIF2")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Indiconto)
                    .HasColumnName("INDICONTO")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Indiconto2)
                    .HasColumnName("INDICONTO2")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Indimp)
                    .HasColumnName("INDIMP")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.KeyScaPna).HasColumnName("KEY_SCA_PNA");

                entity.Property(e => e.Livpdc)
                    .HasColumnName("LIVPDC")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Livpdc2)
                    .HasColumnName("LIVPDC2")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Nazione)
                    .HasColumnName("NAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Partita1)
                    .HasColumnName("PARTITA1")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Partita2)
                    .HasColumnName("PARTITA2")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Progr)
                    .HasColumnName("PROGR")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Segnopar)
                    .HasColumnName("SEGNOPAR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tipopag)
                    .HasColumnName("TIPOPAG")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tiporeg)
                    .HasColumnName("TIPOREG")
                    .HasColumnType("numeric(2, 0)");
            });

            modelBuilder.Entity<Sagex3ScaPremi>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SAGEX3_SCA_PREMI", "ISUITE");

                entity.HasIndex(e => e.KeyScaPremi)
                    .HasName("PK_SAGEX3_SCA_PREMI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdScaPremi, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_SAGEX3_SCA_PREMI")
                    .IsUnique();

                entity.Property(e => e.Causcon)
                    .HasColumnName("CAUSCON")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.Codcomp)
                    .HasColumnName("CODCOMP")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Contropar1)
                    .HasColumnName("CONTROPAR1")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Contropar2)
                    .HasColumnName("CONTROPAR2")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Descaus)
                    .HasColumnName("DESCAUS")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descausagg)
                    .HasColumnName("DESCAUSAGG")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.IdScaPremi).HasColumnName("ID_SCA_PREMI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Identif)
                    .HasColumnName("IDENTIF")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Identif2)
                    .HasColumnName("IDENTIF2")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Indiconto)
                    .HasColumnName("INDICONTO")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Indiconto2)
                    .HasColumnName("INDICONTO2")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Indimp)
                    .HasColumnName("INDIMP")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.KeyScaPremi).HasColumnName("KEY_SCA_PREMI");

                entity.Property(e => e.Livpdc)
                    .HasColumnName("LIVPDC")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Livpdc2)
                    .HasColumnName("LIVPDC2")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Nazione)
                    .HasColumnName("NAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Partita1)
                    .HasColumnName("PARTITA1")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Partita2)
                    .HasColumnName("PARTITA2")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Progr)
                    .HasColumnName("PROGR")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Ramo)
                    .HasColumnName("RAMO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Rimborso)
                    .HasColumnName("RIMBORSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Segnopar)
                    .HasColumnName("SEGNOPAR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tipoanno)
                    .HasColumnName("TIPOANNO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tipoannul)
                    .HasColumnName("TIPOANNUL")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tipocoas)
                    .HasColumnName("TIPOCOAS")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tipodoc)
                    .HasColumnName("TIPODOC")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tipoemis)
                    .HasColumnName("TIPOEMIS")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tipopag)
                    .HasColumnName("TIPOPAG")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tipoprem)
                    .HasColumnName("TIPOPREM")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tiporeg)
                    .HasColumnName("TIPOREG")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Sagex3ScaSinistri>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SAGEX3_SCA_SINISTRI", "ISUITE");

                entity.HasIndex(e => e.KeyScaSinistri)
                    .HasName("PK_SAGEX3_SCA_SINISTRI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdScaSinistri, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_SAGEX3_SCA_SINISTRI")
                    .IsUnique();

                entity.Property(e => e.Causcon)
                    .HasColumnName("CAUSCON")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.Codcomp)
                    .HasColumnName("CODCOMP")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Contropar1)
                    .HasColumnName("CONTROPAR1")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Contropar2)
                    .HasColumnName("CONTROPAR2")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Descaus)
                    .HasColumnName("DESCAUS")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descausagg)
                    .HasColumnName("DESCAUSAGG")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.IdScaSinistri).HasColumnName("ID_SCA_SINISTRI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Identif)
                    .HasColumnName("IDENTIF")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Identif2)
                    .HasColumnName("IDENTIF2")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Indiconto)
                    .HasColumnName("INDICONTO")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Indiconto2)
                    .HasColumnName("INDICONTO2")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Indimp)
                    .HasColumnName("INDIMP")
                    .HasColumnType("numeric(3, 0)");

                entity.Property(e => e.KeyScaSinistri).HasColumnName("KEY_SCA_SINISTRI");

                entity.Property(e => e.Livpdc)
                    .HasColumnName("LIVPDC")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Livpdc2)
                    .HasColumnName("LIVPDC2")
                    .HasColumnType("numeric(1, 0)");

                entity.Property(e => e.Nazione)
                    .HasColumnName("NAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Partita1)
                    .HasColumnName("PARTITA1")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Partita2)
                    .HasColumnName("PARTITA2")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Progr)
                    .HasColumnName("PROGR")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.Ramo)
                    .HasColumnName("RAMO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Segnopar)
                    .HasColumnName("SEGNOPAR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Tipoanno)
                    .HasColumnName("TIPOANNO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tipoannul)
                    .HasColumnName("TIPOANNUL")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tipocoas)
                    .HasColumnName("TIPOCOAS")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tipodoc)
                    .HasColumnName("TIPODOC")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tipoemis)
                    .HasColumnName("TIPOEMIS")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tipopag)
                    .HasColumnName("TIPOPAG")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tipoprem)
                    .HasColumnName("TIPOPREM")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Tiporeg)
                    .HasColumnName("TIPOREG")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ScaDatiAgenzie>(entity =>
            {
                entity.HasKey(e => e.IdRetevendita)
                    .HasName("ID_RETEVENDITA");

                entity.ToTable("SCA_DATI_AGENZIE", "IAGENCY");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtUltimaEstrazione)
                    .HasColumnName("DT_ULTIMA_ESTRAZIONE")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<ScaDettScarichi>(entity =>
            {
                entity.HasKey(e => e.IdDettaglioscarico)
                    .HasName("PK__SCA_DETT__7D6EEB1C3DD1ABE3");

                entity.ToTable("SCA_DETT_SCARICHI", "ISUITE");

                entity.HasIndex(e => e.IdDettaglioscarico)
                    .HasName("SYS_C0045837")
                    .IsUnique();

                entity.HasIndex(e => e.IdEntitaScaricata)
                    .HasName("XX03SCA_DETT_SCARICHI");

                entity.HasIndex(e => e.IdScarico)
                    .HasName("XX02SCA_DETT_SCARICHI");

                entity.HasIndex(e => e.IdStoricoEntitaScaricata)
                    .HasName("XX04SCA_DETT_SCARICHI");

                entity.HasIndex(e => new { e.IdScarico, e.IdStoricoEntitaScaricata })
                    .HasName("XSCA_DETT_SCARICHI");

                entity.Property(e => e.IdDettaglioscarico)
                    .HasColumnName("ID_DETTAGLIOSCARICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitaScaricata)
                    .HasColumnName("ID_ENTITA_SCARICATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdScarico)
                    .HasColumnName("ID_SCARICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdStoricoEntitaScaricata)
                    .HasColumnName("ID_STORICO_ENTITA_SCARICATA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdScaricoNavigation)
                    .WithMany(p => p.ScaDettScarichi)
                    .HasForeignKey(d => d.IdScarico)
                    .HasConstraintName("FK__SCA_DETT___ID_SC__79BDEDF3");
            });

            modelBuilder.Entity<ScaPeriodiScaricatiPtf>(entity =>
            {
                entity.HasKey(e => e.IdScaPeriodiscaricati)
                    .HasName("PK__SCA_PERI__DB78454C3539AD58");

                entity.ToTable("SCA_PERIODI_SCARICATI_PTF", "IAGENCY");

                entity.HasIndex(e => e.IdScaPeriodiscaricati)
                    .HasName("SYS_C0033879")
                    .IsUnique();

                entity.Property(e => e.IdScaPeriodiscaricati)
                    .HasColumnName("ID_SCA_PERIODISCARICATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtCompetenza)
                    .HasColumnName("DT_COMPETENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ScaPeriodiScaricatiSin>(entity =>
            {
                entity.HasKey(e => e.IdScaPeriodiscaricati)
                    .HasName("PK__SCA_PERI__DB78454CC20CD2A6");

                entity.ToTable("SCA_PERIODI_SCARICATI_SIN", "ICLAIMS");

                entity.HasIndex(e => e.IdScaPeriodiscaricati)
                    .HasName("SYS_C0033878")
                    .IsUnique();

                entity.Property(e => e.IdScaPeriodiscaricati)
                    .HasColumnName("ID_SCA_PERIODISCARICATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtLimiteOperazioni)
                    .HasColumnName("DT_LIMITE_OPERAZIONI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ScaPeriodoPortafoglio>(entity =>
            {
                entity.HasKey(e => e.IdPeriodoPortafoglio)
                    .HasName("PK__SCA_PERI__4146283D0CBC6089");

                entity.ToTable("SCA_PERIODO_PORTAFOGLIO", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02SCA_PERIODO_PORTAFOGLIO");

                entity.HasIndex(e => e.IdPeriodoPortafoglio)
                    .HasName("SYS_C0045839")
                    .IsUnique();

                entity.Property(e => e.IdPeriodoPortafoglio)
                    .HasColumnName("ID_PERIODO_PORTAFOGLIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtCompetenza)
                    .HasColumnName("DT_COMPETENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoVal)
                    .HasColumnName("DT_EFFETTO_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaVal)
                    .HasColumnName("DT_SCADENZA_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysRegistrazione)
                    .HasColumnName("DT_SYS_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ScaPeriodoSinistri>(entity =>
            {
                entity.HasKey(e => e.IdPeriodoSinistri)
                    .HasName("PK__SCA_PERI__E918A078B2A15329");

                entity.ToTable("SCA_PERIODO_SINISTRI", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02SCA_PERIODO_SINISTRI");

                entity.HasIndex(e => e.IdPeriodoSinistri)
                    .HasName("SYS_C0045846")
                    .IsUnique();

                entity.Property(e => e.IdPeriodoSinistri)
                    .HasColumnName("ID_PERIODO_SINISTRI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFineValiditaDtLimite)
                    .HasColumnName("DT_FINE_VALIDITA_DT_LIMITE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValiditaDtLimite)
                    .HasColumnName("DT_INIZIO_VALIDITA_DT_LIMITE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtLimiteOperazioni)
                    .HasColumnName("DT_LIMITE_OPERAZIONI")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteMotivoVariazione)
                    .HasColumnName("NOTE_MOTIVO_VARIAZIONE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ScaScarichi>(entity =>
            {
                entity.HasKey(e => e.IdScarico)
                    .HasName("PK__SCA_SCAR__28FB168BDCEF7CA9");

                entity.ToTable("SCA_SCARICHI", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02SCA_SCARICHI");

                entity.HasIndex(e => e.IdScarico)
                    .HasName("SYS_C0045855")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtScaricoAl, e.FlgTipoEntitaScaricata, e.FlgTipoScarico, e.IdCompagnia })
                    .HasName("SYS_C09999")
                    .IsUnique();

                entity.Property(e => e.IdScarico)
                    .HasColumnName("ID_SCARICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoAl)
                    .HasColumnName("DT_SCARICO_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoDal)
                    .HasColumnName("DT_SCARICO_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAreaPremiSino)
                    .HasColumnName("FLG_AREA_PREMI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAreaSinistriSino)
                    .HasColumnName("FLG_AREA_SINISTRI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoScarico)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_SCARICO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEntitaScaricata)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ENTITA_SCARICATA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoScarico)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_SCARICO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteScarico)
                    .HasColumnName("NOTE_SCARICO")
                    .IsUnicode(false);

                entity.Property(e => e.NumeroElementi)
                    .HasColumnName("NUMERO_ELEMENTI")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<ScadenzeStati>(entity =>
            {
                entity.HasKey(e => e.IdScadenzaStato)
                    .HasName("PK_STATI_SCADENZE");

                entity.ToTable("SCADENZE_STATI", "ISUITE");

                entity.HasIndex(e => e.IdStato)
                    .HasName("XX02_STATI_SCADENZE");

                entity.HasIndex(e => e.KeyStato)
                    .HasName("XX01_STATI_SCADENZE");

                entity.Property(e => e.IdScadenzaStato)
                    .HasColumnName("ID_SCADENZA_STATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtChiusura)
                    .HasColumnName("DT_CHIUSURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtLavorazione)
                    .HasColumnName("DT_LAVORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgSpuntaManualeSino)
                    .HasColumnName("FLG_SPUNTA_MANUALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoChiusura)
                    .HasColumnName("FLG_TIPO_CHIUSURA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaCruscotto)
                    .HasColumnName("FLG_TIPOLOGIA_CRUSCOTTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdStato).HasColumnName("ID_STATO");

                entity.Property(e => e.IdUtenteChiusura).HasColumnName("ID_UTENTE_CHIUSURA");

                entity.Property(e => e.IdUtenteLavorazione).HasColumnName("ID_UTENTE_LAVORAZIONE");

                entity.Property(e => e.KeyStato).HasColumnName("KEY_STATO");
            });

            modelBuilder.Entity<ScadenzeVisionateUtenti>(entity =>
            {
                entity.HasKey(e => e.IdScadenzaVisionataUtente);

                entity.ToTable("SCADENZE_VISIONATE_UTENTI", "ISUITE");

                entity.HasIndex(e => e.IdScadenzaStato)
                    .HasName("XX01_SCADENZE_VISIONATE_UTENTI");

                entity.HasIndex(e => new { e.IdUtente, e.DtPresaVisione })
                    .HasName("XX02_SCADENZE_VISIONATE_UTENTI");

                entity.Property(e => e.IdScadenzaVisionataUtente)
                    .HasColumnName("ID_SCADENZA_VISIONATA_UTENTE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAnnullamento)
                    .HasColumnName("DT_ANNULLAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPresaVisione)
                    .HasColumnName("DT_PRESA_VISIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdScadenzaStato).HasColumnName("ID_SCADENZA_STATO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<SctCapitolati>(entity =>
            {
                entity.HasKey(e => e.IdSctCapitolato)
                    .HasName("SYS_C0060983");

                entity.ToTable("SCT_CAPITOLATI", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03SCT_CAPITOLATI");

                entity.HasIndex(e => e.IdDescCapitolato)
                    .HasName("XX02SCT_CAPITOLATI");

                entity.HasIndex(e => new { e.IdCompagnia, e.CodCapitolato })
                    .HasName("XAK1SCT_CAPITOLATI")
                    .IsUnique();

                entity.Property(e => e.IdSctCapitolato)
                    .HasColumnName("ID_SCT_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodCapitolato)
                    .IsRequired()
                    .HasColumnName("COD_CAPITOLATO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescCapitolato)
                    .HasColumnName("DESC_CAPITOLATO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAppendiceSino)
                    .IsRequired()
                    .HasColumnName("FLG_APPENDICE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEmissioneSino)
                    .IsRequired()
                    .HasColumnName("FLG_EMISSIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRateFirmaSino)
                    .IsRequired()
                    .HasColumnName("FLG_RATE_FIRMA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRateSuccessiveAutSino)
                    .HasColumnName("FLG_RATE_SUCCESSIVE_AUT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRateSuccessiveSino)
                    .IsRequired()
                    .HasColumnName("FLG_RATE_SUCCESSIVE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSostituzioneSino)
                    .IsRequired()
                    .HasColumnName("FLG_SOSTITUZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescCapitolato)
                    .HasColumnName("ID_DESC_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SctCapitolatiAgenzie>(entity =>
            {
                entity.HasKey(e => e.KeySctCapitolatoAgenzia)
                    .HasName("SYS_C0060990");

                entity.ToTable("SCT_CAPITOLATI_AGENZIE", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04SCT_CAPITOLATI_AGENZIE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02SCT_CAPITOLATI_AGENZIE");

                entity.HasIndex(e => e.IdSctCapitolato)
                    .HasName("XX03SCT_CAPITOLATI_AGENZIE");

                entity.HasIndex(e => e.IdSctCapitolatoAgenzia)
                    .HasName("XX01SCT_CAPITOLATI_AGENZIE");

                entity.HasIndex(e => new { e.IdRetevendita, e.IdSctCapitolato, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.OrdineRicerca, e.IdCompagnia })
                    .HasName("XAK1SCT_CAPITOLATI_AGENZIE")
                    .IsUnique();

                entity.Property(e => e.KeySctCapitolatoAgenzia)
                    .HasColumnName("KEY_SCT_CAPITOLATO_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSctCapitolato)
                    .HasColumnName("ID_SCT_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSctCapitolatoAgenzia)
                    .HasColumnName("ID_SCT_CAPITOLATO_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.OrdineRicerca)
                    .HasColumnName("ORDINE_RICERCA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdSctCapitolatoNavigation)
                    .WithMany(p => p.SctCapitolatiAgenzie)
                    .HasForeignKey(d => d.IdSctCapitolato)
                    .HasConstraintName("FK__SCT_CAPIT__ID_SC__5B3966D3");
            });

            modelBuilder.Entity<SctDatiCapitolati>(entity =>
            {
                entity.HasKey(e => e.KeySctDatiCapitolato)
                    .HasName("SYS_C0061000");

                entity.ToTable("SCT_DATI_CAPITOLATI", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02SCT_DATI_CAPITOLATI");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX04SCT_DATI_CAPITOLATI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX03SCT_DATI_CAPITOLATI");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX06SCT_DATI_CAPITOLATI");

                entity.HasIndex(e => e.IdPrSezione)
                    .HasName("XX05SCT_DATI_CAPITOLATI");

                entity.HasIndex(e => e.IdSctCapitolato)
                    .HasName("XX07SCT_DATI_CAPITOLATI");

                entity.HasIndex(e => e.IdSctDatiCapitolato)
                    .HasName("XX01SCT_DATI_CAPITOLATI");

                entity.HasIndex(e => new { e.IdSctCapitolato, e.IdPrRamo, e.IdPrProdotto, e.IdPrGaranzia, e.IdCompagnia, e.IdPrSezione })
                    .HasName("XIE1SCT_DATI_CAPITOLATI");

                entity.Property(e => e.KeySctDatiCapitolato)
                    .HasColumnName("KEY_SCT_DATI_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaAumento)
                    .HasColumnName("COD_DEROGA_AUMENTO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDerogaAumentoSino)
                    .HasColumnName("FLG_DEROGA_AUMENTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaSino)
                    .HasColumnName("FLG_DEROGA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMomentoSconto)
                    .HasColumnName("FLG_MOMENTO_SCONTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFormulaPremioConsigliato).HasColumnName("ID_FORMULA_PREMIO_CONSIGLIATO");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrSezione)
                    .HasColumnName("ID_PR_SEZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSctCapitolato)
                    .HasColumnName("ID_SCT_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSctDatiCapitolato)
                    .HasColumnName("ID_SCT_DATI_CAPITOLATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpMaxAumento)
                    .HasColumnName("IMP_MAX_AUMENTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpMaxSconto)
                    .HasColumnName("IMP_MAX_SCONTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PctMaxAumento)
                    .HasColumnName("PCT_MAX_AUMENTO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctMaxSconto)
                    .HasColumnName("PCT_MAX_SCONTO")
                    .HasColumnType("numeric(10, 5)");

                entity.HasOne(d => d.IdSctCapitolatoNavigation)
                    .WithMany(p => p.SctDatiCapitolati)
                    .HasForeignKey(d => d.IdSctCapitolato)
                    .HasConstraintName("FK__SCT_DATI___ID_SC__5C2D8B0C");
            });

            modelBuilder.Entity<SctMaturato>(entity =>
            {
                entity.HasKey(e => e.KeySctMaturato)
                    .HasName("SYS_C0061006");

                entity.ToTable("SCT_MATURATO", "IAGENCY");

                entity.HasIndex(e => e.IdSctMaturato)
                    .HasName("XX01SCT_MATURATO");

                entity.HasIndex(e => e.IdSctPlafond)
                    .HasName("XIE1SCT_MATURATO");

                entity.Property(e => e.KeySctMaturato)
                    .HasColumnName("KEY_SCT_MATURATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdSctMaturato)
                    .HasColumnName("ID_SCT_MATURATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSctPlafond)
                    .HasColumnName("ID_SCT_PLAFOND")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpMaturato)
                    .HasColumnName("IMP_MATURATO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SctPlafond>(entity =>
            {
                entity.HasKey(e => e.KeySctPlafond)
                    .HasName("SYS_C0061012");

                entity.ToTable("SCT_PLAFOND", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX05SCT_PLAFOND");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX03SCT_PLAFOND");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX02SCT_PLAFOND");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX04SCT_PLAFOND");

                entity.HasIndex(e => e.IdSctPlafond)
                    .HasName("XX01SCT_PLAFOND");

                entity.HasIndex(e => new { e.IdRetevendita, e.IdCompagnia, e.IdPrRamo, e.IdPrProdotto })
                    .HasName("XIE1SCT_PLAFOND");

                entity.Property(e => e.KeySctPlafond)
                    .HasColumnName("KEY_SCT_PLAFOND")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMomentoSconto)
                    .HasColumnName("FLG_MOMENTO_SCONTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSctPlafond)
                    .HasColumnName("ID_SCT_PLAFOND")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpPlafond)
                    .HasColumnName("IMP_PLAFOND")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SctRetrocessione>(entity =>
            {
                entity.HasKey(e => e.KeySctRetrocessione)
                    .HasName("SYS_C0061018");

                entity.ToTable("SCT_RETROCESSIONE", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02SCT_RETROCESSIONE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03SCT_RETROCESSIONE");

                entity.HasIndex(e => e.IdSctRetrocessione)
                    .HasName("XX01SCT_RETROCESSIONE");

                entity.Property(e => e.KeySctRetrocessione)
                    .HasColumnName("KEY_SCT_RETROCESSIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSctRetrocessione)
                    .HasColumnName("ID_SCT_RETROCESSIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PctRetrocessione)
                    .HasColumnName("PCT_RETROCESSIONE")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<SimRinnovoGaranzie>(entity =>
            {
                entity.HasKey(e => e.KeySimRinnovoGar)
                    .HasName("PK_KEY_SIM_RINNOVO_GAR");

                entity.ToTable("SIM_RINNOVO_GARANZIE", "IAGENCY");

                entity.HasIndex(e => e.IdSimRinnovoGar)
                    .HasName("XX01SIM_RINNOVO_GARANZIE");

                entity.HasIndex(e => e.IdSimRinnovoPol)
                    .HasName("XX02SIM_RINNOVO_GARANZIE");

                entity.Property(e => e.KeySimRinnovoGar)
                    .HasColumnName("KEY_SIM_RINNOVO_GAR")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGaranzia)
                    .HasColumnName("COD_GARANZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescGaranzia)
                    .HasColumnName("DESC_GARANZIA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdPrGarScomposizione).HasColumnName("ID_PR_GAR_SCOMPOSIZIONE");

                entity.Property(e => e.IdPrGaranzia).HasColumnName("ID_PR_GARANZIA");

                entity.Property(e => e.IdSimRinnovoGar).HasColumnName("ID_SIM_RINNOVO_GAR");

                entity.Property(e => e.IdSimRinnovoPol).HasColumnName("ID_SIM_RINNOVO_POL");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigiaAgg)
                    .HasColumnName("IMP_FRANCHIGIA_AGG")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpLordo)
                    .HasColumnName("IMP_LORDO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNettoAnnuo)
                    .HasColumnName("IMP_NETTO_ANNUO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpScontabileRinnovo)
                    .HasColumnName("IMP_SCONTABILE_RINNOVO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SimRinnovoPolizze>(entity =>
            {
                entity.HasKey(e => e.KeySimRinnovoPol)
                    .HasName("PK_KEY_SIM_RINNOVO_POL");

                entity.ToTable("SIM_RINNOVO_POLIZZE", "IAGENCY");

                entity.HasIndex(e => e.IdSimRinnovoPol)
                    .HasName("XX01SIM_RINNOVO_POLIZZE");

                entity.Property(e => e.KeySimRinnovoPol)
                    .HasColumnName("KEY_SIM_RINNOVO_POL")
                    .ValueGeneratedNever();

                entity.Property(e => e.ClasseCompAssegnazione)
                    .HasColumnName("CLASSE_COMP_ASSEGNAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseCompProvenienza)
                    .HasColumnName("CLASSE_COMP_PROVENIENZA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseCuAssegnazione)
                    .HasColumnName("CLASSE_CU_ASSEGNAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ClasseCuProvenienza)
                    .HasColumnName("CLASSE_CU_PROVENIENZA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffettoPolizza)
                    .HasColumnName("DT_EFFETTO_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffettoRata)
                    .HasColumnName("DT_EFFETTO_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPolizza)
                    .HasColumnName("DT_SCADENZA_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaRata)
                    .HasColumnName("DT_SCADENZA_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoRinnovo)
                    .HasColumnName("FLG_STATO_RINNOVO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoPejus)
                    .HasColumnName("FLG_TIPO_PEJUS")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdPrProdotto).HasColumnName("ID_PR_PRODOTTO");

                entity.Property(e => e.IdSimRinnovoPol).HasColumnName("ID_SIM_RINNOVO_POL");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigiaAgg)
                    .HasColumnName("IMP_FRANCHIGIA_AGG")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpLordo)
                    .HasColumnName("IMP_LORDO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SimRinnovoProvvigioni>(entity =>
            {
                entity.HasKey(e => e.KeySimRinnovoProvv)
                    .HasName("PK_KEY_SIM_RINNOVO_PROVV");

                entity.ToTable("SIM_RINNOVO_PROVVIGIONI", "IAGENCY");

                entity.HasIndex(e => e.IdSimRinnovoGar)
                    .HasName("XX02SIM_RINNOVO_PROVVIGIONI");

                entity.HasIndex(e => e.IdSimRinnovoProvv)
                    .HasName("XX01SIM_RINNOVO_PROVVIGIONI");

                entity.Property(e => e.KeySimRinnovoProvv)
                    .HasColumnName("KEY_SIM_RINNOVO_PROVV")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPolizza).HasColumnName("ID_POLIZZA");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdSimRinnovoGar).HasColumnName("ID_SIM_RINNOVO_GAR");

                entity.Property(e => e.IdSimRinnovoProvv).HasColumnName("ID_SIM_RINNOVO_PROVV");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpProvvAcquistoAcc)
                    .HasColumnName("IMP_PROVV_ACQUISTO_ACC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvvAcquistoGar)
                    .HasColumnName("IMP_PROVV_ACQUISTO_GAR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvvIncassoAcc)
                    .HasColumnName("IMP_PROVV_INCASSO_ACC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvvIncassoGar)
                    .HasColumnName("IMP_PROVV_INCASSO_GAR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Livello).HasColumnName("LIVELLO");
            });

            modelBuilder.Entity<Sin680Dettagli>(entity =>
            {
                entity.HasKey(e => e.KeySin680Dettagli);

                entity.ToTable("SIN_680_DETTAGLI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.CodSettore, e.CodProvIvass, e.IdSinistro })
                    .HasName("XX01SIN_680_DETTAGLI");

                entity.Property(e => e.KeySin680Dettagli)
                    .HasColumnName("KEY_SIN_680_DETTAGLI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodProvIvass)
                    .HasColumnName("COD_PROV_IVASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodSettore)
                    .HasColumnName("COD_SETTORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgComprendeUlaeSino)
                    .HasColumnName("FLG_COMPRENDE_ULAE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRiservaRegulation)
                    .HasColumnName("FLG_TIPO_RISERVA_REGULATION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpPremiLordiContab)
                    .HasColumnName("IMP_PREMI_LORDI_CONTAB")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxCgPagatiLesioni)
                    .HasColumnName("IMP_SX_CG_PAGATI_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxCgPagatiLesioniPar)
                    .HasColumnName("IMP_SX_CG_PAGATI_LESIONI_PAR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxCgPagatiVeic)
                    .HasColumnName("IMP_SX_CG_PAGATI_VEIC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxCgPagatiVeicPar)
                    .HasColumnName("IMP_SX_CG_PAGATI_VEIC_PAR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxCgRiservaLesioni)
                    .HasColumnName("IMP_SX_CG_RISERVA_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxCgRiservaVeic)
                    .HasColumnName("IMP_SX_CG_RISERVA_VEIC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxNcPagatiLesioni)
                    .HasColumnName("IMP_SX_NC_PAGATI_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxNcPagatiVeic)
                    .HasColumnName("IMP_SX_NC_PAGATI_VEIC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxNcRiservaLesioni)
                    .HasColumnName("IMP_SX_NC_RISERVA_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxNcRiservaVeic)
                    .HasColumnName("IMP_SX_NC_RISERVA_VEIC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxCgPagati)
                    .HasColumnName("IMP_TOT_SX_CG_PAGATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxCgRiservaIbnr)
                    .HasColumnName("IMP_TOT_SX_CG_RISERVA_IBNR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxCgRiservati)
                    .HasColumnName("IMP_TOT_SX_CG_RISERVATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxGestitiPagati)
                    .HasColumnName("IMP_TOT_SX_GESTITI_PAGATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxGestitiRiseIbnr)
                    .HasColumnName("IMP_TOT_SX_GESTITI_RISE_IBNR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxGestitiRiservati)
                    .HasColumnName("IMP_TOT_SX_GESTITI_RISERVATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxNcPagati)
                    .HasColumnName("IMP_TOT_SX_NC_PAGATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxNcRiservaIbnr)
                    .HasColumnName("IMP_TOT_SX_NC_RISERVA_IBNR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxNcRiservati)
                    .HasColumnName("IMP_TOT_SX_NC_RISERVATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NumSxARischio)
                    .HasColumnName("NUM_SX_A_RISCHIO")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgPagati)
                    .HasColumnName("NUM_SX_CG_PAGATI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgPagatiLesioni)
                    .HasColumnName("NUM_SX_CG_PAGATI_LESIONI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgPagatiVeic)
                    .HasColumnName("NUM_SX_CG_PAGATI_VEIC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgRiserva)
                    .HasColumnName("NUM_SX_CG_RISERVA")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgRiservaIbnr)
                    .HasColumnName("NUM_SX_CG_RISERVA_IBNR")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgRiservaLesioni)
                    .HasColumnName("NUM_SX_CG_RISERVA_LESIONI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgRiservaVeic)
                    .HasColumnName("NUM_SX_CG_RISERVA_VEIC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiPagati)
                    .HasColumnName("NUM_SX_GESTITI_PAGATI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiPagatiLesioni)
                    .HasColumnName("NUM_SX_GESTITI_PAGATI_LESIONI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiPagatiVeic)
                    .HasColumnName("NUM_SX_GESTITI_PAGATI_VEIC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiRiservaIbnr)
                    .HasColumnName("NUM_SX_GESTITI_RISERVA_IBNR")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiRiservaLesioni)
                    .HasColumnName("NUM_SX_GESTITI_RISERVA_LESIONI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiRiservaVeic)
                    .HasColumnName("NUM_SX_GESTITI_RISERVA_VEIC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiRiservati)
                    .HasColumnName("NUM_SX_GESTITI_RISERVATI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcPagati)
                    .HasColumnName("NUM_SX_NC_PAGATI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcPagatiLesioni)
                    .HasColumnName("NUM_SX_NC_PAGATI_LESIONI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcPagatiVeic)
                    .HasColumnName("NUM_SX_NC_PAGATI_VEIC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcRiservaIbnr)
                    .HasColumnName("NUM_SX_NC_RISERVA_IBNR")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcRiservaLesioni)
                    .HasColumnName("NUM_SX_NC_RISERVA_LESIONI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcRiservaVeic)
                    .HasColumnName("NUM_SX_NC_RISERVA_VEIC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcRiservati)
                    .HasColumnName("NUM_SX_NC_RISERVATI")
                    .HasColumnType("numeric(18, 5)");
            });

            modelBuilder.Entity<Sin680Totali>(entity =>
            {
                entity.HasKey(e => e.KeySin680Totali);

                entity.ToTable("SIN_680_TOTALI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.CodSettore, e.CodProvIvass })
                    .HasName("XX01SIN_680_TOTALI");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.CodSettore, e.CodProvIvass, e.FlgComprendeUlaeSino, e.FlgTipoRiservaRegulation })
                    .HasName("XX02SIN_680_TOTALI")
                    .IsUnique();

                entity.Property(e => e.KeySin680Totali)
                    .HasColumnName("KEY_SIN_680_TOTALI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodProvIvass)
                    .HasColumnName("COD_PROV_IVASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodSettore)
                    .HasColumnName("COD_SETTORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgComprendeUlaeSino)
                    .HasColumnName("FLG_COMPRENDE_ULAE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRiservaRegulation)
                    .HasColumnName("FLG_TIPO_RISERVA_REGULATION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.ImpPremiLordiContab)
                    .HasColumnName("IMP_PREMI_LORDI_CONTAB")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxCgPagatiLesioni)
                    .HasColumnName("IMP_SX_CG_PAGATI_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxCgPagatiLesioniPar)
                    .HasColumnName("IMP_SX_CG_PAGATI_LESIONI_PAR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxCgPagatiVeic)
                    .HasColumnName("IMP_SX_CG_PAGATI_VEIC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxCgPagatiVeicPar)
                    .HasColumnName("IMP_SX_CG_PAGATI_VEIC_PAR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxCgRiservaLesioni)
                    .HasColumnName("IMP_SX_CG_RISERVA_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxCgRiservaVeic)
                    .HasColumnName("IMP_SX_CG_RISERVA_VEIC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxNcPagatiLesioni)
                    .HasColumnName("IMP_SX_NC_PAGATI_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxNcPagatiVeic)
                    .HasColumnName("IMP_SX_NC_PAGATI_VEIC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxNcRiservaLesioni)
                    .HasColumnName("IMP_SX_NC_RISERVA_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSxNcRiservaVeic)
                    .HasColumnName("IMP_SX_NC_RISERVA_VEIC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxCgPagati)
                    .HasColumnName("IMP_TOT_SX_CG_PAGATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxCgRiservaIbnr)
                    .HasColumnName("IMP_TOT_SX_CG_RISERVA_IBNR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxCgRiservati)
                    .HasColumnName("IMP_TOT_SX_CG_RISERVATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxGestitiPagati)
                    .HasColumnName("IMP_TOT_SX_GESTITI_PAGATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxGestitiRiseIbnr)
                    .HasColumnName("IMP_TOT_SX_GESTITI_RISE_IBNR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxGestitiRiservati)
                    .HasColumnName("IMP_TOT_SX_GESTITI_RISERVATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxNcPagati)
                    .HasColumnName("IMP_TOT_SX_NC_PAGATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxNcRiservaIbnr)
                    .HasColumnName("IMP_TOT_SX_NC_RISERVA_IBNR")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSxNcRiservati)
                    .HasColumnName("IMP_TOT_SX_NC_RISERVATI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NumSxARischio)
                    .HasColumnName("NUM_SX_A_RISCHIO")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgPagati)
                    .HasColumnName("NUM_SX_CG_PAGATI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgPagatiLesioni)
                    .HasColumnName("NUM_SX_CG_PAGATI_LESIONI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgPagatiVeic)
                    .HasColumnName("NUM_SX_CG_PAGATI_VEIC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgRiserva)
                    .HasColumnName("NUM_SX_CG_RISERVA")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgRiservaIbnr)
                    .HasColumnName("NUM_SX_CG_RISERVA_IBNR")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgRiservaLesioni)
                    .HasColumnName("NUM_SX_CG_RISERVA_LESIONI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxCgRiservaVeic)
                    .HasColumnName("NUM_SX_CG_RISERVA_VEIC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiPagati)
                    .HasColumnName("NUM_SX_GESTITI_PAGATI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiPagatiLesioni)
                    .HasColumnName("NUM_SX_GESTITI_PAGATI_LESIONI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiPagatiVeic)
                    .HasColumnName("NUM_SX_GESTITI_PAGATI_VEIC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiRiservaIbnr)
                    .HasColumnName("NUM_SX_GESTITI_RISERVA_IBNR")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiRiservaLesioni)
                    .HasColumnName("NUM_SX_GESTITI_RISERVA_LESIONI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiRiservaVeic)
                    .HasColumnName("NUM_SX_GESTITI_RISERVA_VEIC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxGestitiRiservati)
                    .HasColumnName("NUM_SX_GESTITI_RISERVATI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcPagati)
                    .HasColumnName("NUM_SX_NC_PAGATI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcPagatiLesioni)
                    .HasColumnName("NUM_SX_NC_PAGATI_LESIONI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcPagatiVeic)
                    .HasColumnName("NUM_SX_NC_PAGATI_VEIC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcRiservaIbnr)
                    .HasColumnName("NUM_SX_NC_RISERVA_IBNR")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcRiservaLesioni)
                    .HasColumnName("NUM_SX_NC_RISERVA_LESIONI")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcRiservaVeic)
                    .HasColumnName("NUM_SX_NC_RISERVA_VEIC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumSxNcRiservati)
                    .HasColumnName("NUM_SX_NC_RISERVATI")
                    .HasColumnType("numeric(18, 5)");
            });

            modelBuilder.Entity<SinAllegati>(entity =>
            {
                entity.HasKey(e => e.KeySinAllegato)
                    .HasName("PK__SIN_ALLE__8E3F5D0B3FB22A4B");

                entity.ToTable("SIN_ALLEGATI", "ICLAIMS");

                entity.HasIndex(e => e.IdAllegato)
                    .HasName("XX03SIN_ALLEGATI");

                entity.HasIndex(e => e.IdEntita)
                    .HasName("XX02SIN_ALLEGATI");

                entity.HasIndex(e => e.IdSinAllegato)
                    .HasName("XX01SIN_ALLEGATI");

                entity.HasIndex(e => e.KeySinAllegato)
                    .HasName("PK_SIN_ALLEGATI")
                    .IsUnique();

                entity.Property(e => e.KeySinAllegato)
                    .HasColumnName("KEY_SIN_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoOggetto)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato)
                    .HasColumnName("ID_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntita)
                    .HasColumnName("ID_ENTITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinAllegato)
                    .HasColumnName("ID_SIN_ALLEGATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinAltriDati>(entity =>
            {
                entity.HasKey(e => e.KeyAltriDati)
                    .HasName("PK__SIN_ALTR__E283E36E13ACD058");

                entity.ToTable("SIN_ALTRI_DATI", "ICLAIMS");

                entity.HasIndex(e => e.KeyAltriDati)
                    .HasName("PK_SIN_ALTRI_DATI")
                    .IsUnique();

                entity.Property(e => e.KeyAltriDati)
                    .HasColumnName("KEY_ALTRI_DATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtDocumentiCompleti)
                    .HasColumnName("DT_DOCUMENTI_COMPLETI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvioLetteraFantasma)
                    .HasColumnName("DT_INVIO_LETTERA_FANTASMA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPervenimentoDocumentazione)
                    .HasColumnName("DT_PERVENIMENTO_DOCUMENTAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPresaInCarico)
                    .HasColumnName("DT_PRESA_IN_CARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaDanniFittizia)
                    .HasColumnName("DT_RICHIESTA_DANNI_FITTIZIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaDocumenti)
                    .HasColumnName("DT_RICHIESTA_DOCUMENTI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaProbatori)
                    .HasColumnName("DT_RICHIESTA_PROBATORI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStipulaPrestito)
                    .HasColumnName("DT_STIPULA_PRESTITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAltoValoreSino)
                    .HasColumnName("FLG_ALTO_VALORE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCausaleScartoAia)
                    .HasColumnName("FLG_CAUSALE_SCARTO_AIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDatiCompletiSino)
                    .HasColumnName("FLG_DATI_COMPLETI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDenunciaIntSino)
                    .HasColumnName("FLG_DENUNCIA_INT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDocumentazioneSino)
                    .HasColumnName("FLG_DOCUMENTAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgInibizStampaErediSino)
                    .HasColumnName("FLG_INIBIZ_STAMPA_EREDI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgParereAreeSpecialiSino)
                    .HasColumnName("FLG_PARERE_AREE_SPECIALI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRecuperatoDaAgenteSino)
                    .HasColumnName("FLG_RECUPERATO_DA_AGENTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaRisarcimento)
                    .HasColumnName("FLG_TIPOLOGIA_RISARCIMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAltriDati)
                    .HasColumnName("ID_ALTRI_DATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNetwork).HasColumnName("ID_NETWORK");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NPrestito)
                    .HasColumnName("N_PRESTITO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NRatePagate)
                    .HasColumnName("N_RATE_PAGATE")
                    .HasColumnType("numeric(5, 0)");

                entity.Property(e => e.PerTan)
                    .HasColumnName("PER_TAN")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.Proposta)
                    .HasColumnName("PROPOSTA")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.PunteggioCompagnia).HasColumnName("PUNTEGGIO_COMPAGNIA");

                entity.Property(e => e.RegionePolizza)
                    .HasColumnName("REGIONE_POLIZZA")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Riassicurazione)
                    .HasColumnName("RIASSICURAZIONE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ScoreAia).HasColumnName("SCORE_AIA");

                entity.Property(e => e.TerzeParti)
                    .HasColumnName("TERZE_PARTI")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.TipoNotificaAia)
                    .HasColumnName("TIPO_NOTIFICA_AIA")
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinAntifrodeErgo>(entity =>
            {
                entity.HasKey(e => e.KeyAntifrodeErgo)
                    .HasName("PK__SIN_ANTI__068BAE178CBB417B");

                entity.ToTable("SIN_ANTIFRODE_ERGO", "ICLAIMS");

                entity.HasIndex(e => e.DtPrimaSegnalazione)
                    .HasName("XX02SIN_ANTIFRODE_ERGO");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01SIN_ANTIFRODE_ERGO");

                entity.HasIndex(e => e.NSinistro)
                    .HasName("XX03SIN_ANTIFRODE_ERGO");

                entity.HasIndex(e => new { e.Targa, e.DtEvento })
                    .HasName("XX04SIN_ANTIFRODE_ERGO");

                entity.HasIndex(e => new { e.IdAntifrodeErgo, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_ANTIFRODE_ERGO")
                    .IsUnique();

                entity.Property(e => e.KeyAntifrodeErgo)
                    .HasColumnName("KEY_ANTIFRODE_ERGO")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoRegistrazione).HasColumnName("ANNO_REGISTRAZIONE");

                entity.Property(e => e.DtEvento)
                    .HasColumnName("DT_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIncaricoDenunciaQuerela)
                    .HasColumnName("DT_INCARICO_DENUNCIA_QUERELA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvestigazione)
                    .HasColumnName("DT_INVESTIGAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrimaSegnalazione)
                    .HasColumnName("DT_PRIMA_SEGNALAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAreaTerritoriale)
                    .HasColumnName("FLG_AREA_TERRITORIALE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCardPrimaSpecifica)
                    .HasColumnName("FLG_CARD_PRIMA_SPECIFICA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCardSecondaSpecifica)
                    .HasColumnName("FLG_CARD_SECONDA_SPECIFICA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEntePrimaSegnalazione)
                    .HasColumnName("FLG_ENTE_PRIMA_SEGNALAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEsitoAltro).HasColumnName("FLG_ESITO_ALTRO");

                entity.Property(e => e.FlgEsitoArchiviazione).HasColumnName("FLG_ESITO_ARCHIVIAZIONE");

                entity.Property(e => e.FlgEsitoAssoluzione).HasColumnName("FLG_ESITO_ASSOLUZIONE");

                entity.Property(e => e.FlgEsitoCondanna).HasColumnName("FLG_ESITO_CONDANNA");

                entity.Property(e => e.FlgMotoCiclomotoriSino)
                    .HasColumnName("FLG_MOTO_CICLOMOTORI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNoSinistroSino)
                    .HasColumnName("FLG_NO_SINISTRO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgParteCivile)
                    .HasColumnName("FLG_PARTE_CIVILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgParteOffesa)
                    .HasColumnName("FLG_PARTE_OFFESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSinistroFantasmaSino)
                    .HasColumnName("FLG_SINISTRO_FANTASMA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistroSerialeSino)
                    .HasColumnName("FLG_SINISTRO_SERIALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTriage)
                    .HasColumnName("FLG_TRIAGE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAntifrodeErgo).HasColumnName("ID_ANTIFRODE_ERGO");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdCslRadicamento).HasColumnName("ID_CSL_RADICAMENTO");

                entity.Property(e => e.IdFiduciarioCivilista).HasColumnName("ID_FIDUCIARIO_CIVILISTA");

                entity.Property(e => e.IdFiduciarioPenale).HasColumnName("ID_FIDUCIARIO_PENALE");

                entity.Property(e => e.IdProvResidenzaProprietario).HasColumnName("ID_PROV_RESIDENZA_PROPRIETARIO");

                entity.Property(e => e.IdRegResidenzaProprietario).HasColumnName("ID_REG_RESIDENZA_PROPRIETARIO");

                entity.Property(e => e.IdReteVendita).HasColumnName("ID_RETE_VENDITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpAfm)
                    .HasColumnName("IMP_AFM")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpCostiUlteriori)
                    .HasColumnName("IMP_COSTI_ULTERIORI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpCostoCivilista)
                    .HasColumnName("IMP_COSTO_CIVILISTA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpCostoPenalista)
                    .HasColumnName("IMP_COSTO_PENALISTA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDifferenzialeRiserve)
                    .HasColumnName("IMP_DIFFERENZIALE_RISERVE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpIndennizziTrasferimento)
                    .HasColumnName("IMP_INDENNIZZI_TRASFERIMENTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpInvestigazioni)
                    .HasColumnName("IMP_INVESTIGAZIONI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiservaTrasferimento)
                    .HasColumnName("IMP_RISERVA_TRASFERIMENTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NoteEsitoAltro)
                    .HasColumnName("NOTE_ESITO_ALTRO")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.NoteInvestigazioni)
                    .HasColumnName("NOTE_INVESTIGAZIONI")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroParti).HasColumnName("NUMERO_PARTI");

                entity.Property(e => e.SinistroSerialeNote)
                    .HasColumnName("SINISTRO_SERIALE_NOTE")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.Targa)
                    .HasColumnName("TARGA")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinArbitratiCard>(entity =>
            {
                entity.HasKey(e => e.IdArbitratoCard)
                    .HasName("PK__SIN_ARBI__FA21F73C3E8B33BA");

                entity.ToTable("SIN_ARBITRATI_CARD", "ICLAIMS");

                entity.HasIndex(e => new { e.IdSinistro, e.RadiceSic })
                    .HasName("XAK1SIN_ARBITRATI_CARD");

                entity.Property(e => e.IdArbitratoCard)
                    .HasColumnName("ID_ARBITRATO_CARD")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodAniaImpMit)
                    .IsRequired()
                    .HasColumnName("COD_ANIA_IMP_MIT")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DtChiusura)
                    .HasColumnName("DT_CHIUSURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtComunicazione)
                    .HasColumnName("DT_COMUNICAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoArb)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_ARB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoComunicazioniArb)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_COMUNICAZIONI_ARB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEsitoArb)
                    .HasColumnName("FLG_TIPO_ESITO_ARB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEsitoDettArb)
                    .HasColumnName("FLG_TIPO_ESITO_DETT_ARB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.RadiceSic)
                    .IsRequired()
                    .HasColumnName("RADICE_SIC")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RigaCsvRespOnLineAnia)
                    .IsRequired()
                    .HasColumnName("RIGA_CSV_RESP_ON_LINE_ANIA")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinAutoritaIntervenute>(entity =>
            {
                entity.HasKey(e => e.KeyAutoritaintervenuta)
                    .HasName("PK__SIN_AUTO__1098FF531A8BEB6F");

                entity.ToTable("SIN_AUTORITA_INTERVENUTE", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02SIN_AUTORITA_INTERVENUTE");

                entity.HasIndex(e => e.IdAutoritaintervenuta)
                    .HasName("XX01SIN_AUTORITA_INTERVENUTE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03SIN_AUTORITA_INTERVENUTE");

                entity.HasIndex(e => e.KeyAutoritaintervenuta)
                    .HasName("SYS_C0047514")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdAutoritaintervenuta, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_AUTORITA_INTERVENUTE_S")
                    .IsUnique();

                entity.Property(e => e.KeyAutoritaintervenuta)
                    .HasColumnName("KEY_AUTORITAINTERVENUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoAutorita)
                    .HasColumnName("FLG_TIPO_AUTORITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgVerbaleSino)
                    .HasColumnName("FLG_VERBALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAutoritaintervenuta)
                    .HasColumnName("ID_AUTORITAINTERVENUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdComune)
                    .HasColumnName("ID_COMUNE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .HasMaxLength(4000);
            });

            modelBuilder.Entity<SinCanalCarrozzeria>(entity =>
            {
                entity.HasKey(e => e.IdCanalCarrozzeria);

                entity.ToTable("SIN_CANAL_CARROZZERIA", "ICLAIMS");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("X02_SIN_CANAL_CARROZZERIA");

                entity.HasIndex(e => new { e.IdRetevendita, e.DtScarico })
                    .HasName("X01_SIN_CANAL_CARROZZERIA");

                entity.Property(e => e.IdCanalCarrozzeria)
                    .HasColumnName("ID_CANAL_CARROZZERIA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtPagamentoIndennizzo)
                    .HasColumnName("DT_PAGAMENTO_INDENNIZZO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCanalizzabileSino)
                    .HasColumnName("FLG_CANALIZZABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCanalizzatoSino)
                    .HasColumnName("FLG_CANALIZZATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIncentivoAgenziaSino)
                    .HasColumnName("FLG_INCENTIVO_AGENZIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCarrozzeriaConvenzionata).HasColumnName("ID_CARROZZERIA_CONVENZIONATA");

                entity.Property(e => e.IdNetwork).HasColumnName("ID_NETWORK");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");
            });

            modelBuilder.Entity<SinCinquineCard>(entity =>
            {
                entity.HasKey(e => e.KeyCinquinaCard)
                    .HasName("PK__SIN_CINQ__E70AF7719CAB8AED");

                entity.ToTable("SIN_CINQUINE_CARD", "ICLAIMS");

                entity.HasIndex(e => e.IdCinquinaCard)
                    .HasName("XX01SIN_CINQUINE_CARD");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03SIN_CINQUINE_CARD");

                entity.HasIndex(e => e.KeyCinquinaCard)
                    .HasName("SYS_C0036458")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX02SIN_CINQUINE_CARD");

                entity.HasIndex(e => new { e.IdCinquinaCard, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_CINQUINE_CARD_STO")
                    .IsUnique();

                entity.HasIndex(e => new { e.CodiceCompPolizza, e.TargaAniaPolizza, e.CodiceCompCtp, e.TargaAniaCtp, e.DtAccadimento })
                    .HasName("XX05SIN_CINQUINE_CARD")
                    .IsUnique();

                entity.HasIndex(e => new { e.CodiceCompPolizza, e.TargaPolizza, e.CodiceCompCtp, e.TargaCtp, e.DtAccadimento })
                    .HasName("XX04SIN_CINQUINE_CARD")
                    .IsUnique();

                entity.Property(e => e.KeyCinquinaCard)
                    .HasColumnName("KEY_CINQUINA_CARD")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodiceCompCtp)
                    .HasColumnName("CODICE_COMP_CTP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceCompPolizza)
                    .HasColumnName("CODICE_COMP_POLIZZA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DtAccadimento)
                    .HasColumnName("DT_ACCADIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCinquinaCard)
                    .HasColumnName("ID_CINQUINA_CARD")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.TargaAniaCtp)
                    .IsRequired()
                    .HasColumnName("TARGA_ANIA_CTP")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TargaAniaPolizza)
                    .IsRequired()
                    .HasColumnName("TARGA_ANIA_POLIZZA")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TargaCtp)
                    .IsRequired()
                    .HasColumnName("TARGA_CTP")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.TargaPolizza)
                    .IsRequired()
                    .HasColumnName("TARGA_POLIZZA")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinCollegamentoSinistri>(entity =>
            {
                entity.HasKey(e => e.KeyCollegamentoSinistri)
                    .HasName("PK_TAB_COLLEGAMENTO");

                entity.ToTable("SIN_COLLEGAMENTO_SINISTRI", "ICLAIMS");

                entity.Property(e => e.KeyCollegamentoSinistri)
                    .HasColumnName("KEY_COLLEGAMENTO_SINISTRI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCollegamentoSinistri).HasColumnName("ID_COLLEGAMENTO_SINISTRI");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSinistroCollegato).HasColumnName("ID_SINISTRO_COLLEGATO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinCollegati>(entity =>
            {
                entity.HasKey(e => e.KeySinCollegato);

                entity.ToTable("SIN_COLLEGATI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdCollegato, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("IX_SIN_COLLEGATI_3");

                entity.HasIndex(e => new { e.IdSinCollegato, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("IX_SIN_COLLEGATI_1");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("IX_SIN_COLLEGATI_2");

                entity.Property(e => e.KeySinCollegato)
                    .HasColumnName("KEY_SIN_COLLEGATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCollegato).HasColumnName("ID_COLLEGATO");

                entity.Property(e => e.IdSinCollegato).HasColumnName("ID_SIN_COLLEGATO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<SinCompletezzaDati>(entity =>
            {
                entity.HasKey(e => e.KeySinCompletezzaDati);

                entity.ToTable("SIN_COMPLETEZZA_DATI", "ICLAIMS");

                entity.HasIndex(e => new { e.DtVerificaDati, e.DtStoScadenzaLog })
                    .HasName("XX03SIN_COMPLETEZZA_DATI");

                entity.HasIndex(e => new { e.IdSinVerificaDati, e.DtStoScadenzaLog })
                    .HasName("XX02SIN_COMPLETEZZA_DATI");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaLog })
                    .HasName("XX01SIN_COMPLETEZZA_DATI");

                entity.Property(e => e.KeySinCompletezzaDati)
                    .HasColumnName("KEY_SIN_COMPLETEZZA_DATI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtVerificaDati)
                    .HasColumnName("DT_VERIFICA_DATI")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgInfoValutate)
                    .HasColumnName("FLG_INFO_VALUTATE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoInfoValutate)
                    .HasColumnName("FLG_STATO_INFO_VALUTATE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdSinCompletezzaDati).HasColumnName("ID_SIN_COMPLETEZZA_DATI");

                entity.Property(e => e.IdSinVerificaDati).HasColumnName("ID_SIN_VERIFICA_DATI");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteVerifica).HasColumnName("ID_UTENTE_VERIFICA");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinConducenti>(entity =>
            {
                entity.HasKey(e => e.IdConducente)
                    .HasName("PK__SIN_COND__C22A62DEBD1B30FB");

                entity.ToTable("SIN_CONDUCENTI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02SIN_CONDUCENTI");

                entity.HasIndex(e => e.IdConducente)
                    .HasName("SYS_C0047517")
                    .IsUnique();

                entity.Property(e => e.IdConducente)
                    .HasColumnName("ID_CONDUCENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinContenziosoDettagli>(entity =>
            {
                entity.HasKey(e => e.KeySinContenziosoDettagli);

                entity.ToTable("SIN_CONTENZIOSO_DETTAGLI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.FlgTipoProspetto })
                    .HasName("XX02SIN_CONTENZIOSO_DETTAGLI");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.FlgTipoProspetto, e.CodProvIvass, e.AnnoAccadimento })
                    .HasName("XX01SIN_CONTENZIOSO_DETTAGLI");

                entity.Property(e => e.KeySinContenziosoDettagli)
                    .HasColumnName("KEY_SIN_CONTENZIOSO_DETTAGLI")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoAccadimento).HasColumnName("ANNO_ACCADIMENTO");

                entity.Property(e => e.CodProvIvass)
                    .HasColumnName("COD_PROV_IVASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoProspetto)
                    .HasColumnName("FLG_TIPO_PROSPETTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCausa).HasColumnName("ID_CAUSA");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdPartita).HasColumnName("ID_PARTITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpCcdeRinCol11)
                    .HasColumnName("IMP_CCDE_RIN_COL_11")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCcdeSocCol13)
                    .HasColumnName("IMP_CCDE_SOC_COL_13")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCcdeTransCol9)
                    .HasColumnName("IMP_CCDE_TRANS_COL_9")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeArisCol22)
                    .HasColumnName("IMP_CPFE_ARIS_COL_22")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeCa)
                    .HasColumnName("IMP_CPFE_CA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeCas)
                    .HasColumnName("IMP_CPFE_CAS")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeCol20)
                    .HasColumnName("IMP_CPFE_COL_20")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeGp)
                    .HasColumnName("IMP_CPFE_GP")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeLes)
                    .HasColumnName("IMP_CPFE_LES")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeT)
                    .HasColumnName("IMP_CPFE_T")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpieCol6)
                    .HasColumnName("IMP_CPIE_COL_6")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImppagCcdeFavCol16)
                    .HasColumnName("IMPPAG_CCDE_FAV_COL_16")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImprisCcdeFavCol15)
                    .HasColumnName("IMPRIS_CCDE_FAV_COL_15")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NumCcdeCa)
                    .HasColumnName("NUM_CCDE_CA")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeCas)
                    .HasColumnName("NUM_CCDE_CAS")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeFavCol14)
                    .HasColumnName("NUM_CCDE_FAV_COL_14")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeGp)
                    .HasColumnName("NUM_CCDE_GP")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeRinCol10)
                    .HasColumnName("NUM_CCDE_RIN_COL_10")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeSocCol12)
                    .HasColumnName("NUM_CCDE_SOC_COL_12")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeT)
                    .HasColumnName("NUM_CCDE_T")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeTransCol8)
                    .HasColumnName("NUM_CCDE_TRANS_COL_8")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpdeCa)
                    .HasColumnName("NUM_CPDE_CA")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpdeCas)
                    .HasColumnName("NUM_CPDE_CAS")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpdeCol7)
                    .HasColumnName("NUM_CPDE_COL_7")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpdeGp)
                    .HasColumnName("NUM_CPDE_GP")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpdeT)
                    .HasColumnName("NUM_CPDE_T")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeArisCol19)
                    .HasColumnName("NUM_CPFE_ARIS_COL_19")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeCa)
                    .HasColumnName("NUM_CPFE_CA")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeCas)
                    .HasColumnName("NUM_CPFE_CAS")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeCol17)
                    .HasColumnName("NUM_CPFE_COL_17")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeGp)
                    .HasColumnName("NUM_CPFE_GP")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeLes)
                    .HasColumnName("NUM_CPFE_LES")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeT)
                    .HasColumnName("NUM_CPFE_T")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpieCa)
                    .HasColumnName("NUM_CPIE_CA")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpieCas)
                    .HasColumnName("NUM_CPIE_CAS")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpieCol5)
                    .HasColumnName("NUM_CPIE_COL_5")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpieGp)
                    .HasColumnName("NUM_CPIE_GP")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpieT)
                    .HasColumnName("NUM_CPIE_T")
                    .HasColumnType("numeric(18, 5)");
            });

            modelBuilder.Entity<SinContenziosoTotali>(entity =>
            {
                entity.HasKey(e => e.KeySinContenziosoTotali);

                entity.ToTable("SIN_CONTENZIOSO_TOTALI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.FlgTipoProspetto })
                    .HasName("XX02SIN_CONTENZIOSO_TOTALI");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.FlgTipoProspetto, e.CodProvIvass, e.AnnoAccadimento })
                    .HasName("XX01SIN_CONTENZIOSO_TOTALI");

                entity.Property(e => e.KeySinContenziosoTotali)
                    .HasColumnName("KEY_SIN_CONTENZIOSO_TOTALI")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoAccadimento).HasColumnName("ANNO_ACCADIMENTO");

                entity.Property(e => e.CodProvIvass)
                    .HasColumnName("COD_PROV_IVASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoProspetto)
                    .HasColumnName("FLG_TIPO_PROSPETTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpCcdeRinCol11)
                    .HasColumnName("IMP_CCDE_RIN_COL_11")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCcdeSocCol13)
                    .HasColumnName("IMP_CCDE_SOC_COL_13")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCcdeTransCol9)
                    .HasColumnName("IMP_CCDE_TRANS_COL_9")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeArisCol22)
                    .HasColumnName("IMP_CPFE_ARIS_COL_22")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeCa)
                    .HasColumnName("IMP_CPFE_CA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeCas)
                    .HasColumnName("IMP_CPFE_CAS")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeCol20)
                    .HasColumnName("IMP_CPFE_COL_20")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeGp)
                    .HasColumnName("IMP_CPFE_GP")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeLes)
                    .HasColumnName("IMP_CPFE_LES")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpfeT)
                    .HasColumnName("IMP_CPFE_T")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCpieCol6)
                    .HasColumnName("IMP_CPIE_COL_6")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImppagCcdeFavCol16)
                    .HasColumnName("IMPPAG_CCDE_FAV_COL_16")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImprisCcdeFavCol15)
                    .HasColumnName("IMPRIS_CCDE_FAV_COL_15")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NumCcdeCa)
                    .HasColumnName("NUM_CCDE_CA")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeCas)
                    .HasColumnName("NUM_CCDE_CAS")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeFavCol14)
                    .HasColumnName("NUM_CCDE_FAV_COL_14")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeGp)
                    .HasColumnName("NUM_CCDE_GP")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeRinCol10)
                    .HasColumnName("NUM_CCDE_RIN_COL_10")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeSocCol12)
                    .HasColumnName("NUM_CCDE_SOC_COL_12")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeT)
                    .HasColumnName("NUM_CCDE_T")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCcdeTransCol8)
                    .HasColumnName("NUM_CCDE_TRANS_COL_8")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpdeCa)
                    .HasColumnName("NUM_CPDE_CA")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpdeCas)
                    .HasColumnName("NUM_CPDE_CAS")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpdeCol7)
                    .HasColumnName("NUM_CPDE_COL_7")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpdeGp)
                    .HasColumnName("NUM_CPDE_GP")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpdeT)
                    .HasColumnName("NUM_CPDE_T")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeArisCol19)
                    .HasColumnName("NUM_CPFE_ARIS_COL_19")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeCa)
                    .HasColumnName("NUM_CPFE_CA")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeCas)
                    .HasColumnName("NUM_CPFE_CAS")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeCol17)
                    .HasColumnName("NUM_CPFE_COL_17")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeGp)
                    .HasColumnName("NUM_CPFE_GP")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeLes)
                    .HasColumnName("NUM_CPFE_LES")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpfeT)
                    .HasColumnName("NUM_CPFE_T")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpieCa)
                    .HasColumnName("NUM_CPIE_CA")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpieCas)
                    .HasColumnName("NUM_CPIE_CAS")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpieCol5)
                    .HasColumnName("NUM_CPIE_COL_5")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpieGp)
                    .HasColumnName("NUM_CPIE_GP")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumCpieT)
                    .HasColumnName("NUM_CPIE_T")
                    .HasColumnType("numeric(18, 5)");
            });

            modelBuilder.Entity<SinContoEstintivo>(entity =>
            {
                entity.HasKey(e => e.KeyContoEstintivo);

                entity.ToTable("SIN_CONTO_ESTINTIVO", "ICLAIMS");

                entity.HasIndex(e => e.IdContoEstintivo)
                    .HasName("XX01_SIN_CONTO_ESTINTIVO");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02_SIN_CONTO_ESTINTIVO");

                entity.Property(e => e.KeyContoEstintivo)
                    .HasColumnName("KEY_CONTO_ESTINTIVO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DurataAnni).HasColumnName("DURATA_ANNI");

                entity.Property(e => e.IdContoEstintivo).HasColumnName("ID_CONTO_ESTINTIVO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpAltriIncassi)
                    .HasColumnName("IMP_ALTRI_INCASSI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpCapitaleAssicurato)
                    .HasColumnName("IMP_CAPITALE_ASSICURATO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpCorrettivo)
                    .HasColumnName("IMP_CORRETTIVO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDebitoResiduo)
                    .HasColumnName("IMP_DEBITO_RESIDUO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpMontanteLordo)
                    .HasColumnName("IMP_MONTANTE_LORDO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpQuoteRiconosciute)
                    .HasColumnName("IMP_QUOTE_RICONOSCIUTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRata)
                    .HasColumnName("IMP_RATA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRimbCommissioni)
                    .HasColumnName("IMP_RIMB_COMMISSIONI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpTfrAmministrazione)
                    .HasColumnName("IMP_TFR_AMMINISTRAZIONE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpTfrFondo)
                    .HasColumnName("IMP_TFR_FONDO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpTfrVersato)
                    .HasColumnName("IMP_TFR_VERSATO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpTotDebitoResiduo)
                    .HasColumnName("IMP_TOT_DEBITO_RESIDUO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpTotNettoScoperto)
                    .HasColumnName("IMP_TOT_NETTO_SCOPERTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpTotNettoScopertoCon)
                    .HasColumnName("IMP_TOT_NETTO_SCOPERTO_CON")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.NumRate).HasColumnName("NUM_RATE");

                entity.Property(e => e.NumRateInsolute).HasColumnName("NUM_RATE_INSOLUTE");

                entity.Property(e => e.NumRatePagate).HasColumnName("NUM_RATE_PAGATE");

                entity.Property(e => e.NumRateScaduteInsolute).HasColumnName("NUM_RATE_SCADUTE_INSOLUTE");

                entity.Property(e => e.PctScoperto)
                    .HasColumnName("PCT_SCOPERTO")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PctTan)
                    .HasColumnName("PCT_TAN")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.TassoMensile)
                    .HasColumnName("TASSO_MENSILE")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<SinContraenti>(entity =>
            {
                entity.HasKey(e => e.IdContraente)
                    .HasName("PK__SIN_CONT__A5E36ABF7DBB82A0");

                entity.ToTable("SIN_CONTRAENTI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02SIN_CONTRAENTI");

                entity.HasIndex(e => e.IdContraente)
                    .HasName("SYS_C0047520")
                    .IsUnique();

                entity.Property(e => e.IdContraente)
                    .HasColumnName("ID_CONTRAENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinDanni>(entity =>
            {
                entity.HasKey(e => e.KeyDanno);

                entity.ToTable("SIN_DANNI", "ICLAIMS");

                entity.HasComment("Tabella che include i danni del' entità coinvolta (storica)");

                entity.HasIndex(e => new { e.DtApertura, e.DtStoScadenzaLog })
                    .HasName("XX06SIN_DANNI");

                entity.HasIndex(e => new { e.DtRichiestaDanni, e.DtStoScadenzaLog })
                    .HasName("XX05SIN_DANNI");

                entity.HasIndex(e => new { e.FlgStatoGestionale, e.DtStatoGestionale })
                    .HasName("XX04SIN_DANNI");

                entity.HasIndex(e => new { e.DtStato, e.FlgStato, e.DtStoScadenzaLog })
                    .HasName("XX02SIN_DANNI");

                entity.HasIndex(e => new { e.DtStatoGestionale, e.FlgStatoGestionale, e.DtStoScadenzaLog })
                    .HasName("XX03SIN_DANNI");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.DtStoScadenzaLog })
                    .HasName("XX01SIN_DANNI");

                entity.Property(e => e.KeyDanno)
                    .HasColumnName("KEY_DANNO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtApertura)
                    .HasColumnName("DT_APERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaDanni)
                    .HasColumnName("DT_RICHIESTA_DANNI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoGestionale)
                    .HasColumnName("DT_STATO_GESTIONALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCauDanno)
                    .HasColumnName("FLG_CAU_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCausaleChiusura)
                    .HasColumnName("FLG_CAUSALE_CHIUSURA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFittizioSino)
                    .HasColumnName("FLG_FITTIZIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgForzaturaRcaSino)
                    .HasColumnName("FLG_FORZATURA_RCA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStato)
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasComment("Stato del danno (Aperto,chiuso,riaperto,riattivato)");

                entity.Property(e => e.FlgStatoGestionale)
                    .HasColumnName("FLG_STATO_GESTIONALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasComment("Stato gestionale del danno");

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoConvenzione)
                    .HasColumnName("FLG_TIPO_CONVENZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaDanno)
                    .HasColumnName("FLG_TIPOLOGIA_DANNO")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasComment("Flag  tipologia danno(V, C, P)");

                entity.Property(e => e.FlgTipologiaGestioneCard)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE_CARD")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasComment("CM , NC , CD (anche CTT DEB e CTT ?)");

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpRiservaGestionale)
                    .HasColumnName("IMP_RISERVA_GESTIONALE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NoteStato)
                    .HasColumnName("NOTE_STATO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinDanniCause>(entity =>
            {
                entity.HasKey(e => e.KeyDanniCausa);

                entity.ToTable("SIN_DANNI_CAUSE", "ICLAIMS");

                entity.HasIndex(e => e.IdDannoCausa)
                    .HasName("XX04_SIN_DANNI_CAUSE");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02_SIN_DANNI_CAUSE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01_SIN_DANNI_CAUSE");

                entity.HasIndex(e => new { e.IdDannoCausa, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_DANNI_CAUSE")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdDanno, e.IdCausa, e.DtStoEffettoLog, e.DtStoScadenzaLog })
                    .HasName("XX03_SIN_DANNI_CAUSE");

                entity.Property(e => e.KeyDanniCausa)
                    .HasColumnName("KEY_DANNI_CAUSA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCausaSino)
                    .HasColumnName("FLG_CAUSA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCausa).HasColumnName("ID_CAUSA");

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdDannoCausa).HasColumnName("ID_DANNO_CAUSA");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<SinDanniCorporali>(entity =>
            {
                entity.HasKey(e => e.KeyDannocorporale)
                    .HasName("PK__SIN_DANN__A3BFC1C847CE0789");

                entity.ToTable("SIN_DANNI_CORPORALI", "ICLAIMS");

                entity.HasIndex(e => e.IdDannocorporale)
                    .HasName("XX02SIN_DANNI_CORPORALI");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX01SIN_DANNI_CORPORALI");

                entity.HasIndex(e => e.KeyDannocorporale)
                    .HasName("SYS_C0047523")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdDannocorporale, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_DANNI_CORPORALI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyDannocorporale)
                    .HasColumnName("KEY_DANNOCORPORALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDannoCorporale)
                    .HasColumnName("FLG_DANNO_CORPORALE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdDannocorporale)
                    .HasColumnName("ID_DANNOCORPORALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinDanniSpeseResistenza>(entity =>
            {
                entity.HasKey(e => e.KeyDannoSpesaResistenza);

                entity.ToTable("SIN_DANNI_SPESE_RESISTENZA", "ICLAIMS");

                entity.HasIndex(e => new { e.IdDanno, e.DtStoScadenzaLog })
                    .HasName("XX02_SIN_DANNI_SPESE_RESISTENZA");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01_SIN_DANNI_SPESE_RESISTENZA");

                entity.Property(e => e.KeyDannoSpesaResistenza)
                    .HasColumnName("KEY_DANNO_SPESA_RESISTENZA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtApertura)
                    .HasColumnName("DT_APERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStato)
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdDannoSpesaResistenza).HasColumnName("ID_DANNO_SPESA_RESISTENZA");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteApertura).HasColumnName("ID_UTENTE_APERTURA");
            });

            modelBuilder.Entity<SinDanniVeicolo>(entity =>
            {
                entity.HasKey(e => e.KeyDannoveicolo)
                    .HasName("PK__SIN_DANN__C4F60E689779274C");

                entity.ToTable("SIN_DANNI_VEICOLO", "ICLAIMS");

                entity.HasIndex(e => e.IdDannoveicolo)
                    .HasName("XX02SIN_DANNI_VEICOLO");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX01SIN_DANNI_VEICOLO");

                entity.HasIndex(e => e.KeyDannoveicolo)
                    .HasName("SYS_C0047526")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdDannoveicolo, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_DANNI_VEICOLO_STO")
                    .IsUnique();

                entity.Property(e => e.KeyDannoveicolo)
                    .HasColumnName("KEY_DANNOVEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDannoVeicolo)
                    .HasColumnName("FLG_DANNO_VEICOLO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdDannoveicolo)
                    .HasColumnName("ID_DANNOVEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinDatiComuni>(entity =>
            {
                entity.HasKey(e => e.KeySinDatiComuni);

                entity.ToTable("SIN_DATI_COMUNI", "IREGULATION");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaLog })
                    .HasName("XX02SIN_DATI_COMUNI");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdSinistro, e.DtStoEffettoLog, e.DtStoScadenzaLog })
                    .HasName("XX01SIN_DATI_COMUNI");

                entity.Property(e => e.KeySinDatiComuni)
                    .HasColumnName("KEY_SIN_DATI_COMUNI")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoEsercizio).HasColumnName("ANNO_ESERCIZIO");

                entity.Property(e => e.Classe)
                    .HasColumnName("CLASSE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodAgenzia)
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProdotto)
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProvIvass)
                    .HasColumnName("COD_PROV_IVASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodRamo)
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRegioneIvass)
                    .HasColumnName("COD_REGIONE_IVASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodSettoreIvass)
                    .HasColumnName("COD_SETTORE_IVASS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodTariffa)
                    .HasColumnName("COD_TARIFFA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtAccadimento)
                    .HasColumnName("DT_ACCADIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffPolizza)
                    .HasColumnName("DT_EFF_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.EstremiAssicurato)
                    .HasColumnName("ESTREMI_ASSICURATO")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EstremiContraente)
                    .HasColumnName("ESTREMI_CONTRAENTE")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCardNaturale)
                    .HasColumnName("FLG_CARD_NATURALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDirezioneEsteroSino)
                    .HasColumnName("FLG_DIREZIONE_ESTERO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("FLG_RAMO_TECNICO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTardivoSino)
                    .HasColumnName("FLG_TARDIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoDelega)
                    .HasColumnName("FLG_TIPO_DELEGA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoVeicolo)
                    .HasColumnName("FLG_TIPO_VEICOLO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdSinDatiComuni).HasColumnName("ID_SIN_DATI_COMUNI");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NFlotta)
                    .HasColumnName("N_FLOTTA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PercNostraQuota)
                    .HasColumnName("PERC_NOSTRA_QUOTA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PercRespRca)
                    .HasColumnName("PERC_RESP_RCA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.Settore)
                    .HasColumnName("SETTORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Uso)
                    .HasColumnName("USO")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinDenuncianti>(entity =>
            {
                entity.HasKey(e => e.IdDenunciante)
                    .HasName("PK__SIN_DENU__2EE0236CA291354D");

                entity.ToTable("SIN_DENUNCIANTI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02SIN_DENUNCIANTI");

                entity.HasIndex(e => e.IdDenunciante)
                    .HasName("SYS_C0047529")
                    .IsUnique();

                entity.Property(e => e.IdDenunciante)
                    .HasColumnName("ID_DENUNCIANTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinDettSintesiGestioni>(entity =>
            {
                entity.HasKey(e => e.KeySinDettSintesiGestioni);

                entity.ToTable("SIN_DETT_SINTESI_GESTIONI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.FlgTpMovimento, e.DtMovimento })
                    .HasName("XX02SIN_DETT_SINTESI_GESTIONI");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.IdSinistro, e.FlgTipoGestione, e.FlgTpMovimento, e.FlgCausa })
                    .HasName("XX03SIN_DETT_SINTESI_GESTIONI");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.IdSinistro, e.IdPartita, e.IdDanno, e.FlgTipoGestione })
                    .HasName("XX01SIN_DETT_SINTESI_GESTIONI");

                entity.Property(e => e.KeySinDettSintesiGestioni)
                    .HasColumnName("KEY_SIN_DETT_SINTESI_GESTIONI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagniaCtp)
                    .HasColumnName("COD_COMPAGNIA_CTP")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtMovimento)
                    .HasColumnName("DT_MOVIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EstremiBeneficiario)
                    .HasColumnName("ESTREMI_BENEFICIARIO")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EstremiPartita)
                    .HasColumnName("ESTREMI_PARTITA")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCausa)
                    .HasColumnName("FLG_CAUSA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudeGestione)
                    .HasColumnName("FLG_CHIUDE_GESTIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudeSinistro)
                    .HasColumnName("FLG_CHIUDE_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgContaPezzoSino)
                    .HasColumnName("FLG_CONTA_PEZZO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStorno)
                    .HasColumnName("FLG_STORNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestioneNuova)
                    .HasColumnName("FLG_TIPO_GESTIONE_NUOVA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestioneOld)
                    .HasColumnName("FLG_TIPO_GESTIONE_OLD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSpesa)
                    .HasColumnName("FLG_TIPO_SPESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTpMovimento)
                    .HasColumnName("FLG_TP_MOVIMENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdPartita).HasColumnName("ID_PARTITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpMovimento)
                    .HasColumnName("IMP_MOVIMENTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisCadutaBil)
                    .HasColumnName("IMP_RIS_CADUTA_BIL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisCadutaBilUlae)
                    .HasColumnName("IMP_RIS_CADUTA_BIL_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisCadutaTecUlae)
                    .HasColumnName("IMP_RIS_CADUTA_TEC_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisEntrataIntegBil)
                    .HasColumnName("IMP_RIS_ENTRATA_INTEG_BIL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisEntrataSpeseUlae)
                    .HasColumnName("IMP_RIS_ENTRATA_SPESE_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiservaCaduta)
                    .HasColumnName("IMP_RISERVA_CADUTA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ProgMovimento)
                    .HasColumnName("PROG_MOVIMENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinDettSintesiPartite>(entity =>
            {
                entity.HasKey(e => e.KeySinDettSintesiPartite);

                entity.ToTable("SIN_DETT_SINTESI_PARTITE", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.FlgTpMovimento, e.DtMovimento })
                    .HasName("XX02SIN_DETT_SINTESI_PARTITE");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.IdSinistro, e.IdPartita, e.IdDanno, e.FlgTipoGestione })
                    .HasName("XX01SIN_DETT_SINTESI_PARTITE");

                entity.Property(e => e.KeySinDettSintesiPartite)
                    .HasColumnName("KEY_SIN_DETT_SINTESI_PARTITE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagniaCtp)
                    .HasColumnName("COD_COMPAGNIA_CTP")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtMovimento)
                    .HasColumnName("DT_MOVIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EstremiBeneficiario)
                    .HasColumnName("ESTREMI_BENEFICIARIO")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EstremiPartita)
                    .HasColumnName("ESTREMI_PARTITA")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCausa)
                    .HasColumnName("FLG_CAUSA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudeGestione)
                    .HasColumnName("FLG_CHIUDE_GESTIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudePartita)
                    .HasColumnName("FLG_CHIUDE_PARTITA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudeSinistro)
                    .HasColumnName("FLG_CHIUDE_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgContaPezzoSino)
                    .HasColumnName("FLG_CONTA_PEZZO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStorno)
                    .HasColumnName("FLG_STORNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestioneNuova)
                    .HasColumnName("FLG_TIPO_GESTIONE_NUOVA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestioneOld)
                    .HasColumnName("FLG_TIPO_GESTIONE_OLD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSpesa)
                    .HasColumnName("FLG_TIPO_SPESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTpMovimento)
                    .HasColumnName("FLG_TP_MOVIMENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdPartita).HasColumnName("ID_PARTITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpMovimento)
                    .HasColumnName("IMP_MOVIMENTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisCadutaBil)
                    .HasColumnName("IMP_RIS_CADUTA_BIL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisCadutaBilUlae)
                    .HasColumnName("IMP_RIS_CADUTA_BIL_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisCadutaTecUlae)
                    .HasColumnName("IMP_RIS_CADUTA_TEC_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisEntrataIntegBil)
                    .HasColumnName("IMP_RIS_ENTRATA_INTEG_BIL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisEntrataSpeseUlae)
                    .HasColumnName("IMP_RIS_ENTRATA_SPESE_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiservaCaduta)
                    .HasColumnName("IMP_RISERVA_CADUTA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ProgMovimento)
                    .HasColumnName("PROG_MOVIMENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinEcAltridati>(entity =>
            {
                entity.HasKey(e => e.KeyEcAltridati)
                    .HasName("PK__SIN_EC_A__04C3BFC96335BFB4");

                entity.ToTable("SIN_EC_ALTRIDATI", "ICLAIMS");

                entity.HasIndex(e => e.IdEcAltridati)
                    .HasName("XX02SIN_EC_ALTRIDATI");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX01SIN_EC_ALTRIDATI");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX11SIN_EC_ALTRIDATI");

                entity.HasIndex(e => new { e.IdEcAltridati, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_EC_ALTRIDATI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyEcAltridati)
                    .HasColumnName("KEY_EC_ALTRIDATI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgParticolaritaDannoCose)
                    .IsRequired()
                    .HasColumnName("FLG_PARTICOLARITA_DANNO_COSE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdEcAltridati).HasColumnName("ID_EC_ALTRIDATI");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<SinEcRichiesteDanni>(entity =>
            {
                entity.HasKey(e => e.KeyEcRichiesteDanni);

                entity.ToTable("SIN_EC_RICHIESTE_DANNI", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("IDX01_SIN_EC_RICHIESTE_DANNI");

                entity.HasIndex(e => new { e.IdEcRichiesteDanni, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("STO_SIN_EC_RICHIESTE_DANNI")
                    .IsUnique();

                entity.Property(e => e.KeyEcRichiesteDanni)
                    .HasColumnName("KEY_EC_RICHIESTE_DANNI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtDenunciaDannoCose)
                    .HasColumnName("DT_DENUNCIA_DANNO_COSE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDenunciaDannoLesioni)
                    .HasColumnName("DT_DENUNCIA_DANNO_LESIONI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDenunciaDannoVeicoli)
                    .HasColumnName("DT_DENUNCIA_DANNO_VEICOLI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaDannoCose)
                    .HasColumnName("DT_RICHIESTA_DANNO_COSE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaDannoLesioni)
                    .HasColumnName("DT_RICHIESTA_DANNO_LESIONI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaDannoVeicoli)
                    .HasColumnName("DT_RICHIESTA_DANNO_VEICOLI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdEcRichiesteDanni).HasColumnName("ID_EC_RICHIESTE_DANNI");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<SinEntiIntervenuti>(entity =>
            {
                entity.HasKey(e => e.KeyEnteintervenuto)
                    .HasName("PK__SIN_ENTI__67BA2462283A1829");

                entity.ToTable("SIN_ENTI_INTERVENUTI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03SIN_ENTI_INTERVENUTI");

                entity.HasIndex(e => e.IdEnteintervenuto)
                    .HasName("XX01SIN_ENTI_INTERVENUTI");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02SIN_ENTI_INTERVENUTI");

                entity.HasIndex(e => e.KeyEnteintervenuto)
                    .HasName("SYS_C0047532")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdEnteintervenuto, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_ENTI_INTERVENUTI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyEnteintervenuto)
                    .HasColumnName("KEY_ENTEINTERVENUTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoEnte)
                    .HasColumnName("FLG_TIPO_ENTE")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCarrozzeriaConvenzionata).HasColumnName("ID_CARROZZERIA_CONVENZIONATA");

                entity.Property(e => e.IdEnteintervenuto)
                    .HasColumnName("ID_ENTEINTERVENUTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinEntitaCoinvolte>(entity =>
            {
                entity.HasKey(e => e.KeyEntitacoinvolta)
                    .HasName("PK__SIN_ENTITA_COINV__33F4B129");

                entity.ToTable("SIN_ENTITA_COINVOLTE", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX10SIN_ENTITA_COINVOLTE");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02SIN_ENTITA_COINVOLTE");

                entity.HasIndex(e => e.IdEntitacoinvoltarca)
                    .HasName("XX09SIN_ENTITA_COINVOLTE");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX03SIN_ENTITA_COINVOLTE");

                entity.HasIndex(e => e.IdLiquidatore)
                    .HasName("XX08SIN_ENTITA_COINVOLTE");

                entity.HasIndex(e => e.IdMedico)
                    .HasName("XX05SIN_ENTITA_COINVOLTE");

                entity.HasIndex(e => e.IdOspedale)
                    .HasName("XX04SIN_ENTITA_COINVOLTE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01SIN_ENTITA_COINVOLTE");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX07SIN_ENTITA_COINVOLTE");

                entity.HasIndex(e => e.KeyEntitacoinvolta)
                    .HasName("SYS_C0047543")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX11SIN_ENTITA_COINVOLTE");

                entity.HasIndex(e => new { e.IdEntitacoinvolta, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_ENTITA_COINVOLTE_STO")
                    .IsUnique();

                entity.Property(e => e.KeyEntitacoinvolta)
                    .HasColumnName("KEY_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtInvioLetteraCortesia)
                    .HasColumnName("DT_INVIO_LETTERA_CORTESIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiapertura)
                    .HasColumnName("DT_RIAPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoRecupero)
                    .HasColumnName("DT_STATO_RECUPERO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAttesaRecupero)
                    .HasColumnName("FLG_ATTESA_RECUPERO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCausaleChiusuraCose)
                    .HasColumnName("FLG_CAUSALE_CHIUSURA_COSE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCausaleChiusuraSpeRes)
                    .HasColumnName("FLG_CAUSALE_CHIUSURA_SPE_RES")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgContraenteSino)
                    .HasColumnName("FLG_CONTRAENTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDannoReCoseSino)
                    .HasColumnName("FLG_DANNO_RE_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFurtoTotaleSino)
                    .HasColumnName("FLG_FURTO_TOTALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMortoSino)
                    .HasColumnName("FLG_MORTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoRiapertura)
                    .HasColumnName("FLG_MOTIVO_RIAPERTURA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPartitaPasSino)
                    .HasColumnName("FLG_PARTITA_PAS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPresaCaricoIspetSino)
                    .HasColumnName("FLG_PRESA_CARICO_ISPET_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRecordAnnullatoSino)
                    .HasColumnName("FLG_RECORD_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgStato)
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoDannoReCose)
                    .HasColumnName("FLG_STATO_DANNO_RE_COSE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoRecupero)
                    .HasColumnName("FLG_STATO_RECUPERO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoSpeseResistenza)
                    .HasColumnName("FLG_STATO_SPESE_RESISTENZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgValidataSino)
                    .HasColumnName("FLG_VALIDATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GgInvTemporanea)
                    .HasColumnName("GG_INV_TEMPORANEA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEcAltridati).HasColumnName("ID_EC_ALTRIDATI");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvoltaAnt).HasColumnName("ID_ENTITACOINVOLTA_ANT");

                entity.Property(e => e.IdEntitacoinvoltacci)
                    .HasColumnName("ID_ENTITACOINVOLTACCI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvoltarca)
                    .HasColumnName("ID_ENTITACOINVOLTARCA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo).HasColumnName("ID_INDIRIZZO");

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdLiquidatore)
                    .HasColumnName("ID_LIQUIDATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMedico)
                    .HasColumnName("ID_MEDICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdOspedale)
                    .HasColumnName("ID_OSPEDALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPerito)
                    .HasColumnName("ID_PERITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdentificativoAnia)
                    .HasColumnName("IDENTIFICATIVO_ANIA")
                    .IsUnicode(false);

                entity.Property(e => e.ImpPreIniReCose)
                    .HasColumnName("IMP_PRE_INI_RE_COSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NoteDannoReCose)
                    .HasColumnName("NOTE_DANNO_RE_COSE")
                    .IsUnicode(false);

                entity.Property(e => e.NoteEntitaCoinvolta)
                    .HasColumnName("NOTE_ENTITA_COINVOLTA")
                    .IsUnicode(false);

                entity.Property(e => e.NoteStatoReCose)
                    .HasColumnName("NOTE_STATO_RE_COSE")
                    .IsUnicode(false);

                entity.Property(e => e.PerInvPermanente)
                    .HasColumnName("PER_INV_PERMANENTE")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PrgEntitaCoinvolta).HasColumnName("PRG_ENTITA_COINVOLTA");

                entity.Property(e => e.ProgressivoEntitaCoinvolta)
                    .HasColumnName("PROGRESSIVO_ENTITA_COINVOLTA")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinEntitaCoinvolte148>(entity =>
            {
                entity.HasKey(e => e.KeyEntitacoinvolta148)
                    .HasName("SIN_ENTITA_COINVOLTE_148_PK");

                entity.ToTable("SIN_ENTITA_COINVOLTE_148", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02SIN_ENTITA_COINVOLTE_148");

                entity.HasIndex(e => e.IdEntitacoinvolta148)
                    .HasName("XX01SIN_ENTITA_COINVOLTE_148");

                entity.HasIndex(e => e.IdEntitacoinvoltarca)
                    .HasName("XX03SIN_ENTITA_COINVOLTE_148");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX04SIN_ENTITA_COINVOLTE_148");

                entity.Property(e => e.KeyEntitacoinvolta148)
                    .HasColumnName("KEY_ENTITACOINVOLTA148")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtReiezione)
                    .HasColumnName("DT_REIEZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicezioneDocCompl)
                    .HasColumnName("DT_RICEZIONE_DOC_COMPL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaIntDoc)
                    .HasColumnName("DT_RICHIESTA_INT_DOC")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaRisarcimento)
                    .HasColumnName("DT_RICHIESTA_RISARCIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaRicRis)
                    .HasColumnName("DT_SCADENZA_RIC_RIS")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgFirmaCai)
                    .HasColumnName("FLG_FIRMA_CAI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgReiezioneSino)
                    .HasColumnName("FLG_REIEZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaDanno)
                    .HasColumnName("FLG_TIPOLOGIA_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdEntitacoinvolta148).HasColumnName("ID_ENTITACOINVOLTA148");

                entity.Property(e => e.IdEntitacoinvoltarca).HasColumnName("ID_ENTITACOINVOLTARCA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NoteEc148)
                    .HasColumnName("NOTE_EC_148")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinEntitaCoinvolteAnt>(entity =>
            {
                entity.HasKey(e => e.KeyEntitacoinvoltaAnt);

                entity.ToTable("SIN_ENTITA_COINVOLTE_ANT", "ICLAIMS");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01SIN_ENTITA_COINVOLTE_ANT");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX02SIN_ENTITA_COINVOLTE_ANT");

                entity.Property(e => e.KeyEntitacoinvoltaAnt)
                    .HasColumnName("KEY_ENTITACOINVOLTA_ANT")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdEntitacoinvoltaAnt).HasColumnName("ID_ENTITACOINVOLTA_ANT");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpLiquidazioneAlMeglio)
                    .HasColumnName("IMP_LIQUIDAZIONE_AL_MEGLIO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRichiestaRisarcitoria)
                    .HasColumnName("IMP_RICHIESTA_RISARCITORIA")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<SinEntitaCoinvolteCci>(entity =>
            {
                entity.HasKey(e => e.KeyEntitacoinvoltacci);

                entity.ToTable("SIN_ENTITA_COINVOLTE_CCI", "ICLAIMS");

                entity.HasIndex(e => e.IdentificativoPartDannoMigr)
                    .HasName("XX02SIN_ENTITA_COINVOLTE_CCI");

                entity.HasIndex(e => e.IdentificativoSinistroMigr)
                    .HasName("XX01SIN_ENTITA_COINVOLTE_CCI");

                entity.HasIndex(e => new { e.IdEntitacoinvoltacci, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_ENTITA_COINVOLTE_CCI_S");

                entity.Property(e => e.KeyEntitacoinvoltacci)
                    .HasColumnName("KEY_ENTITACOINVOLTACCI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAccertamentiPostumi)
                    .HasColumnName("DT_ACCERTAMENTI_POSTUMI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDecesso)
                    .HasColumnName("DT_DECESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAzioneCci)
                    .HasColumnName("FLG_AZIONE_CCI")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCategoriaAgenteMateriale)
                    .HasColumnName("FLG_CATEGORIA_AGENTE_MATERIALE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCausaInfortunio)
                    .HasColumnName("FLG_CAUSA_INFORTUNIO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDannoBiologicoSino)
                    .HasColumnName("FLG_DANNO_BIOLOGICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgGruppoAgenteMateriale)
                    .HasColumnName("FLG_GRUPPO_AGENTE_MATERIALE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMotivoAnnullamento)
                    .HasColumnName("FLG_MOTIVO_ANNULLAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgNaturaLesione1)
                    .HasColumnName("FLG_NATURA_LESIONE_1")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgNaturaLesione2)
                    .HasColumnName("FLG_NATURA_LESIONE_2")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgNaturaLesione3)
                    .HasColumnName("FLG_NATURA_LESIONE_3")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgProfessione)
                    .HasColumnName("FLG_PROFESSIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSedeLesione1)
                    .HasColumnName("FLG_SEDE_LESIONE_1")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSedeLesione2)
                    .HasColumnName("FLG_SEDE_LESIONE_2")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSedeLesione3)
                    .HasColumnName("FLG_SEDE_LESIONE_3")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgUlterioriLesioniSino)
                    .HasColumnName("FLG_ULTERIORI_LESIONI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvoltacci)
                    .HasColumnName("ID_ENTITACOINVOLTACCI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdentificativoPartDannoMigr)
                    .HasColumnName("IDENTIFICATIVO_PART_DANNO_MIGR")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdentificativoSinistroMigr)
                    .HasColumnName("IDENTIFICATIVO_SINISTRO_MIGR")
                    .HasMaxLength(25)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinEntitaCoinvolteRca>(entity =>
            {
                entity.HasKey(e => e.KeyEntitacoinvoltarca)
                    .HasName("PK__SIN_ENTI__FD008F0B702A2E27");

                entity.ToTable("SIN_ENTITA_COINVOLTE_RCA", "ICLAIMS");

                entity.HasIndex(e => e.IdConducente)
                    .HasName("XX04SIN_ENTITA_COINVOLTE_RCA");

                entity.HasIndex(e => e.IdContraente)
                    .HasName("XX01SIN_ENTITA_COINVOLTE_RCA");

                entity.HasIndex(e => e.IdEntitacoinvoltarca)
                    .HasName("XX07SIN_ENTITA_COINVOLTE_RCA");

                entity.HasIndex(e => e.IdProprietario)
                    .HasName("XX05SIN_ENTITA_COINVOLTE_RCA");

                entity.HasIndex(e => e.IdRimessa)
                    .HasName("XX06SIN_ENTITA_COINVOLTE_RCA");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX08SIN_ENTITA_COINVOLTE_RCA");

                entity.HasIndex(e => e.IdVeicolo)
                    .HasName("XX02SIN_ENTITA_COINVOLTE_RCA");

                entity.HasIndex(e => e.KeyEntitacoinvoltarca)
                    .HasName("SYS_C0047551")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX09SIN_ENTITA_COINVOLTE_RCA");

                entity.HasIndex(e => new { e.IdEntitacoinvoltarca, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_ENTITA_COINVOLTE_RCA_S")
                    .IsUnique();

                entity.Property(e => e.KeyEntitacoinvoltarca)
                    .HasColumnName("KEY_ENTITACOINVOLTARCA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodRuoloAnia)
                    .HasColumnName("COD_RUOLO_ANIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodRuoloIsvap)
                    .HasColumnName("COD_RUOLO_ISVAP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DtForzaturaRuoloAnia)
                    .HasColumnName("DT_FORZATURA_RUOLO_ANIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoCard)
                    .HasColumnName("DT_STATO_CARD")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAttesaIntegr57Sino)
                    .HasColumnName("FLG_ATTESA_INTEGR57_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCauDannoCoseIsvap)
                    .HasColumnName("FLG_CAU_DANNO_COSE_ISVAP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCauDannoPersIsvap)
                    .HasColumnName("FLG_CAU_DANNO_PERS_ISVAP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCauDannoVeicIsvap)
                    .HasColumnName("FLG_CAU_DANNO_VEIC_ISVAP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCausaleChiusuraPers)
                    .HasColumnName("FLG_CAUSALE_CHIUSURA_PERS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCausaleChiusuraVeic)
                    .HasColumnName("FLG_CAUSALE_CHIUSURA_VEIC")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCdInGestioneSino)
                    .HasColumnName("FLG_CD_IN_GESTIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDannoCorporaleSino)
                    .IsRequired()
                    .HasColumnName("FLG_DANNO_CORPORALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDannoVeicoliSino)
                    .HasColumnName("FLG_DANNO_VEICOLI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgForzaturaRcaSino)
                    .HasColumnName("FLG_FORZATURA_RCA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgInviareAnia)
                    .HasColumnName("FLG_INVIARE_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgInvioInps)
                    .HasColumnName("flg_invio_inps")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPartitaFittiziaSino)
                    .HasColumnName("FLG_PARTITA_FITTIZIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPresenteSulVeicoloSino)
                    .HasColumnName("FLG_PRESENTE_SUL_VEICOLO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRecordAnnullatoSino)
                    .HasColumnName("FLG_RECORD_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgResponsabileSino)
                    .HasColumnName("FLG_RESPONSABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRuoloCoinvolto)
                    .HasColumnName("FLG_RUOLO_COINVOLTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStanza)
                    .HasColumnName("FLG_STANZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoDannoPers)
                    .HasColumnName("FLG_STATO_DANNO_PERS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoDannoVeic)
                    .HasColumnName("FLG_STATO_DANNO_VEIC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCtt)
                    .HasColumnName("FLG_TIPO_CTT")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDanno)
                    .HasColumnName("FLG_TIPO_DANNO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaGestioneCose)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE_COSE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaGestionePers)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE_PERS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaGestioneVeic)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE_VEIC")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdConducente)
                    .HasColumnName("ID_CONDUCENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContraente)
                    .HasColumnName("ID_CONTRAENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta148)
                    .HasColumnName("ID_ENTITACOINVOLTA148")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvoltarca)
                    .HasColumnName("ID_ENTITACOINVOLTARCA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProprietario)
                    .HasColumnName("ID_PROPRIETARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRimessa)
                    .HasColumnName("ID_RIMESSA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdVeicolo)
                    .HasColumnName("ID_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpPreIniPersone)
                    .HasColumnName("IMP_PRE_INI_PERSONE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPreIniVeicoli)
                    .HasColumnName("IMP_PRE_INI_VEICOLI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NoteDannoCorporale)
                    .HasColumnName("NOTE_DANNO_CORPORALE")
                    .IsUnicode(false);

                entity.Property(e => e.NoteDannoVeicoli)
                    .HasColumnName("NOTE_DANNO_VEICOLI")
                    .IsUnicode(false);

                entity.Property(e => e.NoteStatoPers)
                    .HasColumnName("NOTE_STATO_PERS")
                    .IsUnicode(false);

                entity.Property(e => e.NoteStatoVeic)
                    .HasColumnName("NOTE_STATO_VEIC")
                    .IsUnicode(false);

                entity.Property(e => e.PerResponsabilita)
                    .HasColumnName("PER_RESPONSABILITA")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PercRespCivile)
                    .HasColumnName("PERC_RESP_CIVILE")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PercRespForzaturaCtt)
                    .HasColumnName("PERC_RESP_FORZATURA_CTT")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.TrasportatoFuoriCttSino)
                    .HasColumnName("TRASPORTATO_FUORI_CTT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<SinEntitaDiario>(entity =>
            {
                entity.HasKey(e => e.KeyEntitaDiario)
                    .HasName("PK__SIN_ENTI__8C261AD3C76D0F06");

                entity.ToTable("SIN_ENTITA_DIARIO", "ICLAIMS");

                entity.HasIndex(e => e.IdAttivita)
                    .HasName("XX04SIN_ENTITA_DIARIO");

                entity.HasIndex(e => e.IdEntitaDiario)
                    .HasName("K01_SIN_ENTITA_DIARIO");

                entity.HasIndex(e => e.KeyEntitaDiario)
                    .HasName("PK_SIN_ENTITA_DIARIO")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdOggetto, e.FlgTipoOggetto })
                    .HasName("XX03SIN_ENTITA_DIARIO");

                entity.Property(e => e.KeyEntitaDiario)
                    .HasColumnName("KEY_ENTITA_DIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtNota)
                    .HasColumnName("DT_NOTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtNotaPubblica)
                    .HasColumnName("DT_NOTA_PUBBLICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAutomaticaSino)
                    .HasColumnName("FLG_AUTOMATICA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAzioneDiarioAntifrode)
                    .HasColumnName("FLG_AZIONE_DIARIO_ANTIFRODE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCausaleNota)
                    .HasColumnName("FLG_CAUSALE_NOTA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEvidenzaSollecitoSino)
                    .HasColumnName("FLG_EVIDENZA_SOLLECITO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoNota)
                    .HasColumnName("FLG_STATO_NOTA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAttivita).HasColumnName("ID_ATTIVITA");

                entity.Property(e => e.IdCompagniaMand).HasColumnName("ID_COMPAGNIA_MAND");

                entity.Property(e => e.IdEntitaDiario)
                    .HasColumnName("ID_ENTITA_DIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitaDiarioPadre).HasColumnName("ID_ENTITA_DIARIO_PADRE");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteInserimento).HasColumnName("ID_UTENTE_INSERIMENTO");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinEntitaSchedaDannoMorte>(entity =>
            {
                entity.HasKey(e => e.KeyEntitaschedadannomorte)
                    .HasName("PK_SIN_ENTITA_SCHEDA_DANNO_MOR");

                entity.ToTable("SIN_ENTITA_SCHEDA_DANNO_MORTE", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02SIN_ENTITA_SCHEDA_DANNO_MO");

                entity.HasIndex(e => e.IdEntitaschedadannomorte)
                    .HasName("XX05SIN_ENTITA_SCHEDA_DANNO_MO");

                entity.HasIndex(e => e.IdEntitaschedalesioni)
                    .HasName("XX04SIN_ENTITA_SCHEDA_DANNO_MO");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03SIN_ENTITA_SCHEDA_DANNO_MO");

                entity.HasIndex(e => new { e.IdEntitaschedadannomorte, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01SIN_ENTITA_SCHEDA_DANNO_MO")
                    .IsUnique();

                entity.Property(e => e.KeyEntitaschedadannomorte)
                    .HasColumnName("KEY_ENTITASCHEDADANNOMORTE")
                    .ValueGeneratedNever();

                entity.Property(e => e.AventiDiritto).HasColumnName("AVENTI_DIRITTO");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoRelazioneParentela)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_RELAZIONE_PARENTELA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdEntitaschedadannomorte).HasColumnName("ID_ENTITASCHEDADANNOMORTE");

                entity.Property(e => e.IdEntitaschedalesioni).HasColumnName("ID_ENTITASCHEDALESIONI");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpDanno)
                    .HasColumnName("IMP_DANNO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDannoParte)
                    .HasColumnName("IMP_DANNO_PARTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpPersona)
                    .HasColumnName("IMP_PERSONA")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<SinEntitaSchedaDannoTemp>(entity =>
            {
                entity.HasKey(e => e.KeyEntitaschedadannotemp);

                entity.ToTable("SIN_ENTITA_SCHEDA_DANNO_TEMP", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02SIN_ENTITA_SCHEDA_DANNO_TEMP");

                entity.HasIndex(e => e.IdEntitaschedadannotemp)
                    .HasName("XX05SIN_ENTITA_SCHEDA_DANNO_TEMP");

                entity.HasIndex(e => e.IdEntitaschedalesioni)
                    .HasName("XX06SIN_ENTITA_SCHEDA_DANNO_TEMP");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03SIN_ENTITA_SCHEDA_DANNO_TEMP");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX04SIN_ENTITA_SCHEDA_DANNO_TEMP");

                entity.HasIndex(e => new { e.IdEntitaschedadannotemp, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01SIN_ENTITA_SCHEDA_DANNO_TEMP");

                entity.Property(e => e.KeyEntitaschedadannotemp)
                    .HasColumnName("KEY_ENTITASCHEDADANNOTEMP")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdEntitaschedadannotemp).HasColumnName("ID_ENTITASCHEDADANNOTEMP");

                entity.Property(e => e.IdEntitaschedalesioni).HasColumnName("ID_ENTITASCHEDALESIONI");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpDanno)
                    .HasColumnName("IMP_DANNO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NumeroGiorni).HasColumnName("NUMERO_GIORNI");

                entity.Property(e => e.PercInabilita)
                    .HasColumnName("PERC_INABILITA")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<SinEntitaSchedaDannoVal>(entity =>
            {
                entity.HasKey(e => e.KeyEntitaschedadannoval);

                entity.ToTable("SIN_ENTITA_SCHEDA_DANNO_VAL", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02SIN_ENTITA_SCHEDA_DANNO_VA");

                entity.HasIndex(e => e.IdEntitaschedadannoval)
                    .HasName("XX05SIN_ENTITA_SCHEDA_DANNO_VA");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03SIN_ENTITA_SCHEDA_DANNO_VA");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX04SIN_ENTITA_SCHEDA_DANNO_VA");

                entity.HasIndex(e => new { e.IdEntitaschedadannoval, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01SIN_ENTITA_SCHEDA_DANNO_VA")
                    .IsUnique();

                entity.Property(e => e.KeyEntitaschedadannoval)
                    .HasColumnName("KEY_ENTITASCHEDADANNOVAL")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdEntitaschedadannoval).HasColumnName("ID_ENTITASCHEDADANNOVAL");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpAltriOneri)
                    .HasColumnName("IMP_ALTRI_ONERI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDanniCose)
                    .HasColumnName("IMP_DANNI_COSE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDannoPermanente)
                    .HasColumnName("IMP_DANNO_PERMANENTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpOnorari)
                    .HasColumnName("IMP_ONORARI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpPersonalizzazionePerm)
                    .HasColumnName("IMP_PERSONALIZZAZIONE_PERM")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpPersonalizzazioneTemp)
                    .HasColumnName("IMP_PERSONALIZZAZIONE_TEMP")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRivalse)
                    .HasColumnName("IMP_RIVALSE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSpeseMediche)
                    .HasColumnName("IMP_SPESE_MEDICHE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PctPersonalizzazionePerm)
                    .HasColumnName("PCT_PERSONALIZZAZIONE_PERM")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PctPersonalizzazioneTemp)
                    .HasColumnName("PCT_PERSONALIZZAZIONE_TEMP")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PuntiInvalidita)
                    .HasColumnName("PUNTI_INVALIDITA")
                    .HasColumnType("decimal(10, 5)");
            });

            modelBuilder.Entity<SinEntitaSchedaInfDati>(entity =>
            {
                entity.HasKey(e => e.KeyEntitaschedainfdati);

                entity.ToTable("SIN_ENTITA_SCHEDA_INF_DATI", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX04SIN_ENTITA_SCHEDA_INF_DATI");

                entity.HasIndex(e => e.IdEntitaschedainfgar)
                    .HasName("XX03SIN_ENTITA_SCHEDA_INF_DATI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX05SIN_ENTITA_SCHEDA_INF_DATI");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX02SIN_ENTITA_SCHEDA_INF_DATI");

                entity.HasIndex(e => new { e.IdEntitaschedainfdati, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01SIN_ENTITA_SCHEDA_INF_DATI");

                entity.Property(e => e.KeyEntitaschedainfdati)
                    .HasColumnName("KEY_ENTITASCHEDAINFDATI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdEntitaschedainfdati).HasColumnName("ID_ENTITASCHEDAINFDATI");

                entity.Property(e => e.IdEntitaschedainfgar).HasColumnName("ID_ENTITASCHEDAINFGAR");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpCampo)
                    .HasColumnName("IMP_CAMPO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpCampoParte)
                    .HasColumnName("IMP_CAMPO_PARTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDanno)
                    .HasColumnName("IMP_DANNO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDannoParte)
                    .HasColumnName("IMP_DANNO_PARTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSommaAss)
                    .HasColumnName("IMP_SOMMA_ASS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSommaAssParte)
                    .HasColumnName("IMP_SOMMA_ASS_PARTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IndiceCampo).HasColumnName("INDICE_CAMPO");

                entity.Property(e => e.NGiorni).HasColumnName("N_GIORNI");

                entity.Property(e => e.NGiorniParte).HasColumnName("N_GIORNI_PARTE");

                entity.Property(e => e.PctCampo)
                    .HasColumnName("PCT_CAMPO")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PctCampoParte)
                    .HasColumnName("PCT_CAMPO_PARTE")
                    .HasColumnType("decimal(10, 5)");
            });

            modelBuilder.Entity<SinEntitaSchedaInfGar>(entity =>
            {
                entity.HasKey(e => e.KeyEntitaschedainfgar);

                entity.ToTable("SIN_ENTITA_SCHEDA_INF_GAR", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02SIN_ENTITA_SCHEDA_INF_GAR");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03SIN_ENTITA_SCHEDA_INF_GAR");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX04SIN_ENTITA_SCHEDA_INF_GAR");

                entity.HasIndex(e => new { e.IdEntitaschedainfgar, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01SIN_ENTITA_SCHEDA_INF_GAR");

                entity.Property(e => e.KeyEntitaschedainfgar)
                    .HasColumnName("KEY_ENTITASCHEDAINFGAR")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoSchedaDanno)
                    .HasColumnName("FLG_TIPO_SCHEDA_DANNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdEntitaschedainfgar).HasColumnName("ID_ENTITASCHEDAINFGAR");

                entity.Property(e => e.IdEntitaschedainfortuni).HasColumnName("ID_ENTITASCHEDAINFORTUNI");

                entity.Property(e => e.IdGaranziacolpita).HasColumnName("ID_GARANZIACOLPITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<SinEntitaSchedaInfortuni>(entity =>
            {
                entity.HasKey(e => e.KeyEntitaschedainfortuni);

                entity.ToTable("SIN_ENTITA_SCHEDA_INFORTUNI", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02SIN_ENTITA_SCHEDA_INFORTUNI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03SIN_ENTITA_SCHEDA_INFORTUNI");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX04SIN_ENTITA_SCHEDA_INFORTUNI");

                entity.HasIndex(e => new { e.IdEntitaschedainfortuni, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01SIN_ENTITA_SCHEDA_INFORTUNI");

                entity.Property(e => e.KeyEntitaschedainfortuni)
                    .HasColumnName("KEY_ENTITASCHEDAINFORTUNI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdEntitaschedainfortuni).HasColumnName("ID_ENTITASCHEDAINFORTUNI");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpArrotondamento)
                    .HasColumnName("IMP_ARROTONDAMENTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinEntitaSchedaLesioni>(entity =>
            {
                entity.HasKey(e => e.KeyEntitaschedalesioni);

                entity.ToTable("SIN_ENTITA_SCHEDA_LESIONI", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02SIN_ENTITA_SCHEDA_LESIONI");

                entity.HasIndex(e => e.IdEntitaschedalesioni)
                    .HasName("XX05SIN_ENTITA_SCHEDA_LESIONI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03SIN_ENTITA_SCHEDA_LESIONI");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX04SIN_ENTITA_SCHEDA_LESIONI");

                entity.HasIndex(e => new { e.IdEntitaschedalesioni, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01SIN_ENTITA_SCHEDA_LESIONI");

                entity.Property(e => e.KeyEntitaschedalesioni)
                    .HasColumnName("KEY_ENTITASCHEDALESIONI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CoeffDannoPatrimIpsParte)
                    .HasColumnName("COEFF_DANNO_PATRIM_IPS_PARTE")
                    .HasColumnType("decimal(18, 9)");

                entity.Property(e => e.CoeffDannoPatrimonialeIps)
                    .HasColumnName("COEFF_DANNO_PATRIMONIALE_IPS")
                    .HasColumnType("decimal(18, 9)");

                entity.Property(e => e.DtAvvenimento)
                    .HasColumnName("DT_AVVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.Eta).HasColumnName("ETA");

                entity.Property(e => e.FlgOnorariPercRespSino)
                    .HasColumnName("FLG_ONORARI_PERC_RESP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPercResponsabilitaSino)
                    .HasColumnName("FLG_PERC_RESPONSABILITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoTabellaLesioni)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_TABELLA_LESIONI")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdEntitaschedadannoval).HasColumnName("ID_ENTITASCHEDADANNOVAL");

                entity.Property(e => e.IdEntitaschedalesioni).HasColumnName("ID_ENTITASCHEDALESIONI");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpAltriOneri)
                    .HasColumnName("IMP_ALTRI_ONERI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpArrotondamento)
                    .HasColumnName("IMP_ARROTONDAMENTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDanniCose)
                    .HasColumnName("IMP_DANNI_COSE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDannoPatrimIpsParte)
                    .HasColumnName("IMP_DANNO_PATRIM_IPS_PARTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDannoPatrimoniale)
                    .HasColumnName("IMP_DANNO_PATRIMONIALE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDannoPatrimonialeIps)
                    .HasColumnName("IMP_DANNO_PATRIMONIALE_IPS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDannoPatrimonialeParte)
                    .HasColumnName("IMP_DANNO_PATRIMONIALE_PARTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDannoPermanente)
                    .HasColumnName("IMP_DANNO_PERMANENTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpGuadagnoAnnuo)
                    .HasColumnName("IMP_GUADAGNO_ANNUO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpMancatoGuadagno)
                    .HasColumnName("IMP_MANCATO_GUADAGNO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpMancatoGuadagnoParte)
                    .HasColumnName("IMP_MANCATO_GUADAGNO_PARTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpOnorari)
                    .HasColumnName("IMP_ONORARI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpPersPermanente)
                    .HasColumnName("IMP_PERS_PERMANENTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpPersTemporaneo)
                    .HasColumnName("IMP_PERS_TEMPORANEO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiservaProposta)
                    .HasColumnName("IMP_RISERVA_PROPOSTA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRivalse)
                    .HasColumnName("IMP_RIVALSE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRivalseMorte)
                    .HasColumnName("IMP_RIVALSE_MORTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRivalseMorteParte)
                    .HasColumnName("IMP_RIVALSE_MORTE_PARTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSpeseFunebri)
                    .HasColumnName("IMP_SPESE_FUNEBRI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSpeseFunebriParte)
                    .HasColumnName("IMP_SPESE_FUNEBRI_PARTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSpeseMediche)
                    .HasColumnName("IMP_SPESE_MEDICHE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSpeseVarieMorte)
                    .HasColumnName("IMP_SPESE_VARIE_MORTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSpeseVarieMorteParte)
                    .HasColumnName("IMP_SPESE_VARIE_MORTE_PARTE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NDipendentiAccertati).HasColumnName("N_DIPENDENTI_ACCERTATI");

                entity.Property(e => e.NDipendentiPolizza).HasColumnName("N_DIPENDENTI_POLIZZA");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.NoteDinamica)
                    .HasColumnName("NOTE_DINAMICA")
                    .IsUnicode(false);

                entity.Property(e => e.PercDannoPermanente)
                    .HasColumnName("PERC_DANNO_PERMANENTE")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PercPersPermanente)
                    .HasColumnName("PERC_PERS_PERMANENTE")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PercPersTemporaneo)
                    .HasColumnName("PERC_PERS_TEMPORANEO")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<SinEventi>(entity =>
            {
                entity.HasKey(e => e.IdEvento)
                    .HasName("PK__SIN_EVEN__748D7F3598BDAAB6");

                entity.ToTable("SIN_EVENTI", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03SIN_EVENTI");

                entity.HasIndex(e => e.IdEvento)
                    .HasName("SYS_C0047564")
                    .IsUnique();

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("XX02SIN_EVENTI");

                entity.Property(e => e.IdEvento)
                    .HasColumnName("ID_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAccadimentoEvento)
                    .HasColumnName("DT_ACCADIMENTO_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEvento)
                    .HasColumnName("DT_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.HhmmEvento)
                    .HasColumnName("HHMM_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTipoEventoDen)
                    .HasColumnName("ID_TIPO_EVENTO_DEN")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteEvento)
                    .HasColumnName("NOTE_EVENTO")
                    .IsUnicode(false);

                entity.HasOne(d => d.IdTipoEventoDenNavigation)
                    .WithMany(p => p.SinEventi)
                    .HasForeignKey(d => d.IdTipoEventoDen)
                    .HasConstraintName("FK__SIN_EVENT__ID_TI__66AB197F");
            });

            modelBuilder.Entity<SinFlussiAdvancingTrade>(entity =>
            {
                entity.HasKey(e => e.IdFlussoAdvancingTrade);

                entity.ToTable("SIN_FLUSSI_ADVANCING_TRADE", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03SIN_FLUSSI_ADVANCING_TRAD");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01SIN_FLUSSI_ADVANCING_TRAD");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtInvio })
                    .HasName("XX02SIN_FLUSSI_ADVANCING_TRADE");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdSinistro })
                    .HasName("XX01SIN_FLUSSI_ADVANCING_TRADE");

                entity.Property(e => e.IdFlussoAdvancingTrade)
                    .HasColumnName("ID_FLUSSO_ADVANCING_TRADE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.RecordFlusso)
                    .HasColumnName("RECORD_FLUSSO")
                    .HasMaxLength(1000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinGarDettaglio>(entity =>
            {
                entity.HasKey(e => e.KeySinGarDettaglio);

                entity.ToTable("SIN_GAR_DETTAGLIO", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.IdSinistro, e.IdGaranzia, e.FlgTipoGestione })
                    .HasName("XX01SIN_SIN_GAR_DETTAGLIO");

                entity.Property(e => e.KeySinGarDettaglio)
                    .HasColumnName("KEY_SIN_GAR_DETTAGLIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagniaCtp)
                    .HasColumnName("COD_COMPAGNIA_CTP")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtDenuncia)
                    .HasColumnName("DT_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPervenimento)
                    .HasColumnName("DT_PERVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EstremiPartita)
                    .HasColumnName("ESTREMI_PARTITA")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdGaranzia).HasColumnName("ID_GARANZIA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpPagInden)
                    .HasColumnName("IMP_PAG_INDEN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagSpeseLiq)
                    .HasColumnName("IMP_PAG_SPESE_LIQ")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagSpeseRes)
                    .HasColumnName("IMP_PAG_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRec)
                    .HasColumnName("IMP_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataInden)
                    .HasColumnName("IMP_RIS_ENTRATA_INDEN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataRec)
                    .HasColumnName("IMP_RIS_ENTRATA_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataSpeseLiq)
                    .HasColumnName("IMP_RIS_ENTRATA_SPESE_LIQ")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataSpeseRes)
                    .HasColumnName("IMP_RIS_ENTRATA_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaInden)
                    .HasColumnName("IMP_RIS_USCITA_INDEN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaRec)
                    .HasColumnName("IMP_RIS_USCITA_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaSpeseLiq)
                    .HasColumnName("IMP_RIS_USCITA_SPESE_LIQ")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaSpeseRes)
                    .HasColumnName("IMP_RIS_USCITA_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SinGarPrestazioniInf>(entity =>
            {
                entity.HasKey(e => e.KeyGarprestazioniinf);

                entity.ToTable("SIN_GAR_PRESTAZIONI_INF", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX01SIN_GAR_PRESTAZIONI_INF");

                entity.HasIndex(e => e.IdGaranziacolpita)
                    .HasName("XX02SIN_GAR_PRESTAZIONI_INF");

                entity.HasIndex(e => e.IdGarprestazioniinf)
                    .HasName("XX03SIN_GAR_PRESTAZIONI_INF");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX05SIN_GAR_PRESTAZIONI_INF");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX04SIN_GAR_PRESTAZIONI_INF");

                entity.HasIndex(e => new { e.IdGarprestazioniinf, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_GAR_PRESTAZIONI_INF_STO")
                    .IsUnique();

                entity.Property(e => e.KeyGarprestazioniinf)
                    .HasColumnName("KEY_GARPRESTAZIONIINF")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPrestazioniInfTipo)
                    .HasColumnName("FLG_PRESTAZIONI_INF_TIPO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPrestazioniInfValore)
                    .HasColumnName("FLG_PRESTAZIONI_INF_VALORE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdGaranziacolpita).HasColumnName("ID_GARANZIACOLPITA");

                entity.Property(e => e.IdGarprestazioniinf).HasColumnName("ID_GARPRESTAZIONIINF");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<SinGaranzie>(entity =>
            {
                entity.HasKey(e => e.KeyGaranziacolpita)
                    .HasName("PK__SIN_GARA__30F213D3C901DB11");

                entity.ToTable("SIN_GARANZIE", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX01SIN_GARANZIE");

                entity.HasIndex(e => e.IdGaranziaassicurata)
                    .HasName("XX03SIN_GARANZIE");

                entity.HasIndex(e => e.IdGaranziacolpita)
                    .HasName("XX02SIN_GARANZIE");

                entity.HasIndex(e => e.KeyGaranziacolpita)
                    .HasName("SYS_C0047566")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX04SIN_GARANZIE");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX06SIN_GARANZIE");

                entity.HasIndex(e => new { e.IdGaranziacolpita, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_GARANZIE_STO")
                    .IsUnique();

                entity.Property(e => e.KeyGaranziacolpita)
                    .HasColumnName("KEY_GARANZIACOLPITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdGaranziaassicurata)
                    .HasColumnName("ID_GARANZIAASSICURATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdGaranziacolpita)
                    .HasColumnName("ID_GARANZIACOLPITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMalattiafattura).HasColumnName("ID_MALATTIAFATTURA");

                entity.Property(e => e.IdMalattiatrattamento).HasColumnName("ID_MALATTIATRATTAMENTO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinGruppi>(entity =>
            {
                entity.HasKey(e => e.IdGrupposinistri)
                    .HasName("PK__SIN_GRUP__DC2EA3115BDDDBDE");

                entity.ToTable("SIN_GRUPPI", "ICLAIMS");

                entity.HasIndex(e => e.IdGrupposinistri)
                    .HasName("SYS_C0047569")
                    .IsUnique();

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX02SIN_GRUPPI");

                entity.HasIndex(e => new { e.IdGrupposinistri, e.IdPolizza })
                    .HasName("XSIN_GRUPPI")
                    .IsUnique();

                entity.Property(e => e.IdGrupposinistri)
                    .HasColumnName("ID_GRUPPOSINISTRI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinIncentivi>(entity =>
            {
                entity.HasKey(e => e.IdIncentivo);

                entity.ToTable("SIN_INCENTIVI", "ICLAIMS");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02_SIN_INCENTIVI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01_SIN_INCENTIVI");

                entity.Property(e => e.IdIncentivo)
                    .HasColumnName("ID_INCENTIVO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("date");

                entity.Property(e => e.DtPeriodoRiferimento)
                    .HasColumnName("DT_PERIODO_RIFERIMENTO")
                    .HasColumnType("date");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("date");

                entity.Property(e => e.DtSegnalazioneDatoAnomalo)
                    .HasColumnName("DT_SEGNALAZIONE_DATO_ANOMALO")
                    .HasColumnType("date");

                entity.Property(e => e.IdFasciaIncentivo).HasColumnName("ID_FASCIA_INCENTIVO");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtenteSegnalazione).HasColumnName("ID_UTENTE_SEGNALAZIONE");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<SinInterventiLegali>(entity =>
            {
                entity.HasKey(e => e.IdInterventoLegale);

                entity.ToTable("SIN_INTERVENTI_LEGALI", "ICLAIMS");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("X01_SIN_INTERVENTI_LEGALI");

                entity.HasIndex(e => new { e.IdRegione, e.DtScarico })
                    .HasName("X03_SIN_INTERVENTI_LEGALI");

                entity.HasIndex(e => new { e.IdRetevendita, e.DtScarico })
                    .HasName("X02_SIN_INTERVENTI_LEGALI");

                entity.Property(e => e.IdInterventoLegale)
                    .HasColumnName("ID_INTERVENTO_LEGALE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtInterventoLegale)
                    .HasColumnName("DT_INTERVENTO_LEGALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazioneSinistro)
                    .HasColumnName("DT_REGISTRAZIONE_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdRegione).HasColumnName("ID_REGIONE");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");
            });

            modelBuilder.Entity<SinListaMovDanni>(entity =>
            {
                entity.HasKey(e => e.KeySinListaMovDanni);

                entity.ToTable("SIN_LISTA_MOV_DANNI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.IdSinistro, e.FlgTpMovimento, e.DtMovimento, e.ProgMovimento })
                    .HasName("XX02SIN_LISTA_MOV_DANNI");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.IdSinistro, e.IdPartita, e.IdDanno, e.FlgTipoGestione })
                    .HasName("XX01SIN_LISTA_MOV_DANNI");

                entity.Property(e => e.KeySinListaMovDanni)
                    .HasColumnName("KEY_SIN_LISTA_MOV_DANNI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagniaCtp)
                    .HasColumnName("COD_COMPAGNIA_CTP")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodConvenzione)
                    .HasColumnName("COD_CONVENZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DtDenuncia)
                    .HasColumnName("DT_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtMovimento)
                    .HasColumnName("DT_MOVIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPervenimento)
                    .HasColumnName("DT_PERVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EstremiBeneficiario)
                    .HasColumnName("ESTREMI_BENEFICIARIO")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EstremiPartita)
                    .HasColumnName("ESTREMI_PARTITA")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCausa)
                    .HasColumnName("FLG_CAUSA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStorno)
                    .HasColumnName("FLG_STORNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoDannoRegulation)
                    .HasColumnName("FLG_TIPO_DANNO_REGULATION")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSpesa)
                    .HasColumnName("FLG_TIPO_SPESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTpMovimento)
                    .HasColumnName("FLG_TP_MOVIMENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdPartita).HasColumnName("ID_PARTITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpMovimento)
                    .HasColumnName("IMP_MOVIMENTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ProgMovimento)
                    .HasColumnName("PROG_MOVIMENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinListaMovDanniEsclusi>(entity =>
            {
                entity.HasKey(e => e.KeySinListaMovDanniEscl)
                    .HasName("PK_SIN_LISTA_MOV_DANNI_ESCL");

                entity.ToTable("SIN_LISTA_MOV_DANNI_ESCLUSI", "IREGULATION");

                entity.Property(e => e.KeySinListaMovDanniEscl)
                    .HasColumnName("KEY_SIN_LISTA_MOV_DANNI_ESCL")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagniaCtp)
                    .HasColumnName("COD_COMPAGNIA_CTP")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodConvenzione)
                    .HasColumnName("COD_CONVENZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DtDenuncia)
                    .HasColumnName("DT_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtMovimento)
                    .HasColumnName("DT_MOVIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPervenimento)
                    .HasColumnName("DT_PERVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EstremiBeneficiario)
                    .HasColumnName("ESTREMI_BENEFICIARIO")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EstremiPartita)
                    .HasColumnName("ESTREMI_PARTITA")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCausa)
                    .HasColumnName("FLG_CAUSA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStorno)
                    .HasColumnName("FLG_STORNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoDannoRegulation)
                    .HasColumnName("FLG_TIPO_DANNO_REGULATION")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSpesa)
                    .HasColumnName("FLG_TIPO_SPESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTpMovimento)
                    .HasColumnName("FLG_TP_MOVIMENTO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdPartita).HasColumnName("ID_PARTITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpMovimento)
                    .HasColumnName("IMP_MOVIMENTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ProgMovimento)
                    .HasColumnName("PROG_MOVIMENTO")
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinMalattiaDiagnosi>(entity =>
            {
                entity.HasKey(e => e.KeyMalattiadiagnosi);

                entity.ToTable("SIN_MALATTIA_DIAGNOSI", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX02SIN_MALATTIA_DIAGNOSI");

                entity.HasIndex(e => e.IdMalattiatrattamento)
                    .HasName("XX01SIN_MALATTIA_DIAGNOSI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03SIN_MALATTIA_DIAGNOSI");

                entity.HasIndex(e => new { e.IdMalattiadiagnosi, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_MALATTIA_DIAGNOSI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyMalattiadiagnosi)
                    .HasColumnName("KEY_MALATTIADIAGNOSI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDiagnosi)
                    .IsRequired()
                    .HasColumnName("FLG_DIAGNOSI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDiagnosi)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_DIAGNOSI")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdMalattiadiagnosi).HasColumnName("ID_MALATTIADIAGNOSI");

                entity.Property(e => e.IdMalattiatrattamento).HasColumnName("ID_MALATTIATRATTAMENTO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinMalattiaFatture>(entity =>
            {
                entity.HasKey(e => e.KeyMalattiafattura);

                entity.ToTable("SIN_MALATTIA_FATTURE", "ICLAIMS");

                entity.HasIndex(e => e.IdMalattiatrattamento)
                    .HasName("XX02_SIN_MALATTIA_FATTURE");

                entity.HasIndex(e => new { e.IdMalattiafattura, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_MALATTIA_FATTURE_STO");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.IdMalattiatrattamento })
                    .HasName("XX01_SIN_MALATTIA_FATTURE");

                entity.Property(e => e.KeyMalattiafattura)
                    .HasColumnName("KEY_MALATTIAFATTURA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFattura)
                    .HasColumnName("DT_FATTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvioAnagrafeTributaria)
                    .HasColumnName("DT_INVIO_ANAGRAFE_TRIBUTARIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEsteraSino)
                    .HasColumnName("FLG_ESTERA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFatturaSenzaDatiSino)
                    .HasColumnName("FLG_FATTURA_SENZA_DATI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFittiziaSino)
                    .HasColumnName("FLG_FITTIZIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIntestatario)
                    .HasColumnName("FLG_INTESTATARIO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgModPagamento)
                    .HasColumnName("FLG_MOD_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgProformaSino)
                    .HasColumnName("FLG_PROFORMA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRichiediBersaniSino)
                    .HasColumnName("FLG_RICHIEDI_BERSANI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDocPratica)
                    .HasColumnName("FLG_TIPO_DOC_PRATICA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPrestMalattia)
                    .HasColumnName("FLG_TIPO_PREST_MALATTIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdMalattiafattura).HasColumnName("ID_MALATTIAFATTURA");

                entity.Property(e => e.IdMalattiatrattamento).HasColumnName("ID_MALATTIATRATTAMENTO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdValuta).HasColumnName("ID_VALUTA");

                entity.Property(e => e.ImpBollo)
                    .HasColumnName("IMP_BOLLO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpCambio)
                    .HasColumnName("IMP_CAMBIO")
                    .HasColumnType("decimal(18, 3)");

                entity.Property(e => e.NumeroFattura)
                    .HasColumnName("NUMERO_FATTURA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinMalattiaTrattamenti>(entity =>
            {
                entity.HasKey(e => e.KeyMalattiatrattamento);

                entity.ToTable("SIN_MALATTIA_TRATTAMENTI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX06SIN_MALATTIA_TRATTAMENTI");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX03SIN_MALATTIA_TRATTAMENTI");

                entity.HasIndex(e => e.IdIndennizzo)
                    .HasName("XX04SIN_MALATTIA_TRATTAMENTI");

                entity.HasIndex(e => e.IdOspedale)
                    .HasName("XX01SIN_MALATTIA_TRATTAMENTI");

                entity.HasIndex(e => e.IdQuietanza)
                    .HasName("XX05SIN_MALATTIA_TRATTAMENTI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX02SIN_MALATTIA_TRATTAMENTI");

                entity.HasIndex(e => new { e.IdMalattiatrattamento, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_MALATTIA_TRATT_STO")
                    .IsUnique();

                entity.Property(e => e.KeyMalattiatrattamento)
                    .HasColumnName("KEY_MALATTIATRATTAMENTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFineTrattamento)
                    .HasColumnName("DT_FINE_TRATTAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioTrattamento)
                    .HasColumnName("DT_INIZIO_TRATTAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgOspedaleEsteroSino)
                    .HasColumnName("FLG_OSPEDALE_ESTERO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoTrattamento)
                    .HasColumnName("FLG_STATO_TRATTAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStrutturaPrivataSino)
                    .HasColumnName("FLG_STRUTTURA_PRIVATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTicketSino)
                    .HasColumnName("FLG_TICKET_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoConvenzione)
                    .HasColumnName("FLG_TIPO_CONVENZIONE")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoEvento)
                    .HasColumnName("FLG_TIPO_EVENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoTrattamento)
                    .HasColumnName("FLG_TIPO_TRATTAMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdIndennizzo).HasColumnName("ID_INDENNIZZO");

                entity.Property(e => e.IdMalattiatrattamento).HasColumnName("ID_MALATTIATRATTAMENTO");

                entity.Property(e => e.IdNazione).HasColumnName("ID_NAZIONE");

                entity.Property(e => e.IdOspedale).HasColumnName("ID_OSPEDALE");

                entity.Property(e => e.IdQuietanza).HasColumnName("ID_QUIETANZA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinMedici>(entity =>
            {
                entity.HasKey(e => e.IdMedico)
                    .HasName("PK__SIN_MEDI__1DBF7DAD3611D569");

                entity.ToTable("SIN_MEDICI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02SIN_MEDICI");

                entity.HasIndex(e => e.IdMedico)
                    .HasName("SYS_C0047572")
                    .IsUnique();

                entity.Property(e => e.IdMedico)
                    .HasColumnName("ID_MEDICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinModDettagli>(entity =>
            {
                entity.HasKey(e => e.KeySinModDettagli);

                entity.ToTable("SIN_MOD_DETTAGLI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.FlgCodTipoModulo, e.FlgComprendeUlaeSino, e.FlgTipoRiservaRegulation })
                    .HasName("XX01SIN_MOD_DETTAGLI");

                entity.Property(e => e.KeySinModDettagli)
                    .HasColumnName("KEY_SIN_MOD_DETTAGLI")
                    .ValueGeneratedNever();

                entity.Property(e => e.AI)
                    .HasColumnName("A_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.AnnoAccadimento)
                    .HasColumnName("ANNO_ACCADIMENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.BI)
                    .HasColumnName("B_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BP)
                    .HasColumnName("B_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.C1P)
                    .HasColumnName("C1_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.C2P)
                    .HasColumnName("C2_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.CI)
                    .HasColumnName("C_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CP)
                    .HasColumnName("C_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.CodProvIvass)
                    .HasColumnName("COD_PROV_IVASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodRegioneIvass)
                    .HasColumnName("COD_REGIONE_IVASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DI)
                    .HasColumnName("D_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DP)
                    .HasColumnName("D_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EI)
                    .HasColumnName("E_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EP)
                    .HasColumnName("E_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.F1P)
                    .HasColumnName("F1_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.F2P)
                    .HasColumnName("F2_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.FI)
                    .HasColumnName("F_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FP)
                    .HasColumnName("F_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.FlgAllegato)
                    .HasColumnName("FLG_ALLEGATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCodTipoModulo)
                    .HasColumnName("FLG_COD_TIPO_MODULO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgComprendeUlaeSino)
                    .HasColumnName("FLG_COMPRENDE_ULAE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRiservaRegulation)
                    .HasColumnName("FLG_TIPO_RISERVA_REGULATION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GI)
                    .HasColumnName("G_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GP)
                    .HasColumnName("G_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.HI)
                    .HasColumnName("H_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.HP)
                    .HasColumnName("H_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.II)
                    .HasColumnName("I_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.IP)
                    .HasColumnName("I_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpPagAnniPrec)
                    .HasColumnName("IMP_PAG_ANNI_PREC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagAnno)
                    .HasColumnName("IMP_PAG_ANNO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisAnniPrec)
                    .HasColumnName("IMP_RIS_ANNI_PREC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisAnno)
                    .HasColumnName("IMP_RIS_ANNO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.JI)
                    .HasColumnName("J_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.JP)
                    .HasColumnName("J_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.KI)
                    .HasColumnName("K_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KP)
                    .HasColumnName("K_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.LI)
                    .HasColumnName("L_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.LP)
                    .HasColumnName("L_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NumPagAnniPrec)
                    .HasColumnName("NUM_PAG_ANNI_PREC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumPagAnno)
                    .HasColumnName("NUM_PAG_ANNO")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumRisAnniPrec)
                    .HasColumnName("NUM_RIS_ANNI_PREC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumRisAnno)
                    .HasColumnName("NUM_RIS_ANNO")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R0I)
                    .HasColumnName("R0_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R0P)
                    .HasColumnName("R0_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R10I)
                    .HasColumnName("R10_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R10P)
                    .HasColumnName("R10_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R11I)
                    .HasColumnName("R11_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R11P)
                    .HasColumnName("R11_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R12I)
                    .HasColumnName("R12_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R12P)
                    .HasColumnName("R12_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R13I)
                    .HasColumnName("R13_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R13P)
                    .HasColumnName("R13_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R14I)
                    .HasColumnName("R14_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R14P)
                    .HasColumnName("R14_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R15I)
                    .HasColumnName("R15_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R15P)
                    .HasColumnName("R15_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R16I)
                    .HasColumnName("R16_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R16P)
                    .HasColumnName("R16_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R17I)
                    .HasColumnName("R17_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R17P)
                    .HasColumnName("R17_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R1I)
                    .HasColumnName("R1_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R1P)
                    .HasColumnName("R1_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R2I)
                    .HasColumnName("R2_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R2P)
                    .HasColumnName("R2_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R3I)
                    .HasColumnName("R3_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R3P)
                    .HasColumnName("R3_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R4I)
                    .HasColumnName("R4_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R4P)
                    .HasColumnName("R4_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R5I)
                    .HasColumnName("R5_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R5P)
                    .HasColumnName("R5_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R6I)
                    .HasColumnName("R6_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R6P)
                    .HasColumnName("R6_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R7I)
                    .HasColumnName("R7_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R7P)
                    .HasColumnName("R7_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R8I)
                    .HasColumnName("R8_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R8P)
                    .HasColumnName("R8_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R9I)
                    .HasColumnName("R9_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R9P)
                    .HasColumnName("R9_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.S1I)
                    .HasColumnName("S1_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.S1P)
                    .HasColumnName("S1_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.S2I)
                    .HasColumnName("S2_I")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SinModTardivi>(entity =>
            {
                entity.HasKey(e => e.KeySinModTardivi);

                entity.ToTable("SIN_MOD_TARDIVI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.AnnoCompetenza, e.FlgCodTipoModulo })
                    .HasName("XX01SIN_MOD_TARDIVI");

                entity.Property(e => e.KeySinModTardivi)
                    .HasColumnName("KEY_SIN_MOD_TARDIVI")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoAccadimento)
                    .HasColumnName("ANNO_ACCADIMENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.AnnoCompetenza)
                    .HasColumnName("ANNO_COMPETENZA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAllegato)
                    .HasColumnName("FLG_ALLEGATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCodTipoModulo)
                    .HasColumnName("FLG_COD_TIPO_MODULO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.RisFinCosto)
                    .HasColumnName("RIS_FIN_COSTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFinImporto)
                    .HasColumnName("RIS_FIN_IMPORTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFinNum)
                    .HasColumnName("RIS_FIN_NUM")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.RisInizCosto)
                    .HasColumnName("RIS_INIZ_COSTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisInizImporto)
                    .HasColumnName("RIS_INIZ_IMPORTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisInizNum)
                    .HasColumnName("RIS_INIZ_NUM")
                    .HasColumnType("numeric(18, 5)");
            });

            modelBuilder.Entity<SinModTotali>(entity =>
            {
                entity.HasKey(e => e.KeySinModTotali);

                entity.ToTable("SIN_MOD_TOTALI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.FlgCodTipoModulo, e.FlgComprendeUlaeSino, e.FlgTipoRiservaRegulation })
                    .HasName("XX01SIN_MOD_TOTALI");

                entity.Property(e => e.KeySinModTotali)
                    .HasColumnName("KEY_SIN_MOD_TOTALI")
                    .ValueGeneratedNever();

                entity.Property(e => e.AI)
                    .HasColumnName("A_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.AnnoAccadimento)
                    .HasColumnName("ANNO_ACCADIMENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.BI)
                    .HasColumnName("B_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.BP)
                    .HasColumnName("B_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.C1P)
                    .HasColumnName("C1_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.C2P)
                    .HasColumnName("C2_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.CI)
                    .HasColumnName("C_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.CP)
                    .HasColumnName("C_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.CodProvIvass)
                    .HasColumnName("COD_PROV_IVASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodRegioneIvass)
                    .HasColumnName("COD_REGIONE_IVASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DI)
                    .HasColumnName("D_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.DP)
                    .HasColumnName("D_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EI)
                    .HasColumnName("E_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.EP)
                    .HasColumnName("E_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.F1P)
                    .HasColumnName("F1_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.F2P)
                    .HasColumnName("F2_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.FI)
                    .HasColumnName("F_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.FP)
                    .HasColumnName("F_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.FlgAllegato)
                    .HasColumnName("FLG_ALLEGATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCodTipoModulo)
                    .HasColumnName("FLG_COD_TIPO_MODULO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgComprendeUlaeSino)
                    .HasColumnName("FLG_COMPRENDE_ULAE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRiservaRegulation)
                    .HasColumnName("FLG_TIPO_RISERVA_REGULATION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GI)
                    .HasColumnName("G_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.GP)
                    .HasColumnName("G_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.HI)
                    .HasColumnName("H_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.HP)
                    .HasColumnName("H_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.II)
                    .HasColumnName("I_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.IP)
                    .HasColumnName("I_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.ImpPagAnniPrec)
                    .HasColumnName("IMP_PAG_ANNI_PREC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagAnno)
                    .HasColumnName("IMP_PAG_ANNO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisAnniPrec)
                    .HasColumnName("IMP_RIS_ANNI_PREC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisAnno)
                    .HasColumnName("IMP_RIS_ANNO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.JI)
                    .HasColumnName("J_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.JP)
                    .HasColumnName("J_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.KI)
                    .HasColumnName("K_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KP)
                    .HasColumnName("K_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.LI)
                    .HasColumnName("L_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.LP)
                    .HasColumnName("L_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumPagAnniPrec)
                    .HasColumnName("NUM_PAG_ANNI_PREC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumPagAnno)
                    .HasColumnName("NUM_PAG_ANNO")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumRisAnniPrec)
                    .HasColumnName("NUM_RIS_ANNI_PREC")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.NumRisAnno)
                    .HasColumnName("NUM_RIS_ANNO")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R0I)
                    .HasColumnName("R0_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R0P)
                    .HasColumnName("R0_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R10I)
                    .HasColumnName("R10_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R10P)
                    .HasColumnName("R10_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R11I)
                    .HasColumnName("R11_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R11P)
                    .HasColumnName("R11_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R12I)
                    .HasColumnName("R12_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R12P)
                    .HasColumnName("R12_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R13I)
                    .HasColumnName("R13_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R13P)
                    .HasColumnName("R13_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R14I)
                    .HasColumnName("R14_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R14P)
                    .HasColumnName("R14_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R15I)
                    .HasColumnName("R15_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R15P)
                    .HasColumnName("R15_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R16I)
                    .HasColumnName("R16_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R16P)
                    .HasColumnName("R16_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R17I)
                    .HasColumnName("R17_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R17P)
                    .HasColumnName("R17_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R1I)
                    .HasColumnName("R1_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R1P)
                    .HasColumnName("R1_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R2I)
                    .HasColumnName("R2_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R2P)
                    .HasColumnName("R2_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R3I)
                    .HasColumnName("R3_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R3P)
                    .HasColumnName("R3_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R4I)
                    .HasColumnName("R4_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R4P)
                    .HasColumnName("R4_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R5I)
                    .HasColumnName("R5_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R5P)
                    .HasColumnName("R5_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R6I)
                    .HasColumnName("R6_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R6P)
                    .HasColumnName("R6_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R7I)
                    .HasColumnName("R7_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R7P)
                    .HasColumnName("R7_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R8I)
                    .HasColumnName("R8_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R8P)
                    .HasColumnName("R8_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.R9I)
                    .HasColumnName("R9_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.R9P)
                    .HasColumnName("R9_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.RisFinCosto)
                    .HasColumnName("RIS_FIN_COSTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFinImporto)
                    .HasColumnName("RIS_FIN_IMPORTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisFinNum)
                    .HasColumnName("RIS_FIN_NUM")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.RisInizCosto)
                    .HasColumnName("RIS_INIZ_COSTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisInizImporto)
                    .HasColumnName("RIS_INIZ_IMPORTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.RisInizNum)
                    .HasColumnName("RIS_INIZ_NUM")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.S1I)
                    .HasColumnName("S1_I")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.S1P)
                    .HasColumnName("S1_P")
                    .HasColumnType("numeric(18, 5)");

                entity.Property(e => e.S2I)
                    .HasColumnName("S2_I")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SinModUlae>(entity =>
            {
                entity.HasKey(e => e.KeySinModUlae);

                entity.ToTable("SIN_MOD_ULAE", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.AnnoCompetenza })
                    .HasName("XX01SIN_MOD_ULAE");

                entity.Property(e => e.KeySinModUlae)
                    .HasColumnName("KEY_SIN_MOD_ULAE")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoCompetenza)
                    .HasColumnName("ANNO_COMPETENZA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodRamo)
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.ImpRiservaFinAc)
                    .HasColumnName("IMP_RISERVA_FIN_AC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaFinAp)
                    .HasColumnName("IMP_RISERVA_FIN_AP")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSpeseAc)
                    .HasColumnName("IMP_SPESE_AC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSpeseAp)
                    .HasColumnName("IMP_SPESE_AP")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SinOspedali>(entity =>
            {
                entity.HasKey(e => e.IdOspedale)
                    .HasName("PK__SIN_OSPE__545A2D71FA1F20A7");

                entity.ToTable("SIN_OSPEDALI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02SIN_OSPEDALI");

                entity.HasIndex(e => e.IdOspedale)
                    .HasName("SYS_C0047575")
                    .IsUnique();

                entity.Property(e => e.IdOspedale)
                    .HasColumnName("ID_OSPEDALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinParametriSignComp>(entity =>
            {
                entity.HasKey(e => e.KeySinParametroSignComp);

                entity.ToTable("SIN_PARAMETRI_SIGN_COMP", "ICLAIMS");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01SIN_PARAMETRI_SIGN_COMP");

                entity.HasIndex(e => new { e.IdentificativoPersona, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX04SIN_PARAMETRI_SIGN_COMP");

                entity.HasIndex(e => new { e.IdentificativoVeicolo, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX03SIN_PARAMETRI_SIGN_COMP");

                entity.HasIndex(e => new { e.IdOggetto, e.FlgTipoOggetto, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX02SIN_PARAMETRI_SIGN_COMP");

                entity.Property(e => e.KeySinParametroSignComp)
                    .HasColumnName("KEY_SIN_PARAMETRO_SIGN_COMP")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtPrimaElaborazione)
                    .HasColumnName("DT_PRIMA_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimaVariazione)
                    .HasColumnName("DT_ULTIMA_VARIAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgIndiceSignificativita)
                    .HasColumnName("FLG_INDICE_SIGNIFICATIVITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdSinParametroSignComp).HasColumnName("ID_SIN_PARAMETRO_SIGN_COMP");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdentificativoPersona)
                    .HasColumnName("IDENTIFICATIVO_PERSONA")
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.IdentificativoPolizza)
                    .HasColumnName("IDENTIFICATIVO_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdentificativoVeicolo)
                    .HasColumnName("IDENTIFICATIVO_VEICOLO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ValoreIndiceSignificativita).HasColumnName("VALORE_INDICE_SIGNIFICATIVITA");
            });

            modelBuilder.Entity<SinPatrocinatori>(entity =>
            {
                entity.HasKey(e => e.KeyPatrocinatore)
                    .HasName("PK__SIN_PATR__3BF6CE3319FADED4");

                entity.ToTable("SIN_PATROCINATORI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02SIN_PATROCINATORI");

                entity.HasIndex(e => e.IdPatrocinatore)
                    .HasName("SYS_C0047578")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPatrocinatore, e.DtStoEffettoLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_PATROCINATORI")
                    .IsUnique();

                entity.Property(e => e.KeyPatrocinatore)
                    .HasColumnName("KEY_PATROCINATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPatrocinatore)
                    .HasColumnName("ID_PATROCINATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinPeriodoScaricoDef>(entity =>
            {
                entity.HasKey(e => e.KeySinPeriodoScaricoDef);

                entity.ToTable("SIN_PERIODO_SCARICO_DEF", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.IdUtente })
                    .HasName("XX01SIN_PERIODO_SCARICO_DEF");

                entity.Property(e => e.KeySinPeriodoScaricoDef)
                    .HasColumnName("KEY_SIN_PERIODO_SCARICO_DEF")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSistema)
                    .HasColumnName("DT_SISTEMA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<SinPeriti>(entity =>
            {
                entity.HasKey(e => e.IdPerito)
                    .HasName("PK__SIN_PERI__91D0B9AD794C1C37");

                entity.ToTable("SIN_PERITI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02SIN_PERITI");

                entity.HasIndex(e => e.IdPerito)
                    .HasName("SYS_C0047581")
                    .IsUnique();

                entity.Property(e => e.IdPerito)
                    .HasColumnName("ID_PERITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinPianiRecupero>(entity =>
            {
                entity.HasKey(e => e.KeySinPianiRecupero);

                entity.ToTable("SIN_PIANI_RECUPERO", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX01SIN_PIANI_RECUPERO");

                entity.HasIndex(e => e.IdFiduciario)
                    .HasName("XX02SIN_PIANI_RECUPERO");

                entity.HasIndex(e => new { e.IdSinPianiRecupero, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_PIANI_RECUPERO_STO")
                    .IsUnique();

                entity.Property(e => e.KeySinPianiRecupero)
                    .HasColumnName("KEY_SIN_PIANI_RECUPERO")
                    .ValueGeneratedNever();

                entity.Property(e => e.ComposizioneRate)
                    .IsRequired()
                    .HasColumnName("COMPOSIZIONE_RATE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtAccordo)
                    .HasColumnName("DT_ACCORDO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioPiano)
                    .HasColumnName("DT_INIZIO_PIANO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMotivoScaPianoRec)
                    .HasColumnName("FLG_MOTIVO_SCA_PIANO_REC")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTitolo)
                    .IsRequired()
                    .HasColumnName("FLG_TITOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagraficaPagatore).HasColumnName("ID_ANAGRAFICA_PAGATORE");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdFiduciario).HasColumnName("ID_FIDUCIARIO");

                entity.Property(e => e.IdSinPianiRecupero).HasColumnName("ID_SIN_PIANI_RECUPERO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteIncentivazione).HasColumnName("ID_UTENTE_INCENTIVAZIONE");

                entity.Property(e => e.ImpCaricato)
                    .HasColumnName("IMP_CARICATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpScaricato)
                    .HasColumnName("IMP_SCARICATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSpeseCaricato)
                    .HasColumnName("IMP_SPESE_CARICATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSpeseScaricato)
                    .HasColumnName("IMP_SPESE_SCARICATO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SinPrestMalattia>(entity =>
            {
                entity.HasKey(e => e.KeyPrestMalattia);

                entity.ToTable("SIN_PREST_MALATTIA", "ICLAIMS");

                entity.HasIndex(e => e.IdMalattiaLa)
                    .HasName("XX02_SIN_PREST_MALATTIA");

                entity.HasIndex(e => new { e.IdPrestMalattia, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_PREST_MALATTIA_STO");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.IdMalattiatrattamento })
                    .HasName("XX01_SIN_PREST_MALATTIA");

                entity.Property(e => e.KeyPrestMalattia)
                    .HasColumnName("KEY_PREST_MALATTIA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdGaranzia).HasColumnName("ID_GARANZIA");

                entity.Property(e => e.IdMalattiaLa).HasColumnName("ID_MALATTIA_LA");

                entity.Property(e => e.IdMalattiafattura).HasColumnName("ID_MALATTIAFATTURA");

                entity.Property(e => e.IdMalattiatrattamento).HasColumnName("ID_MALATTIATRATTAMENTO");

                entity.Property(e => e.IdPrestMalattia).HasColumnName("ID_PREST_MALATTIA");

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdTariffa).HasColumnName("ID_TARIFFA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpFranchigia)
                    .HasColumnName("IMP_FRANCHIGIA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpFranchigiaScoperto)
                    .HasColumnName("IMP_FRANCHIGIA_SCOPERTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpImponibile)
                    .HasColumnName("IMP_IMPONIBILE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpIva)
                    .HasColumnName("IMP_IVA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpLiquidabile)
                    .HasColumnName("IMP_LIQUIDABILE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpLiquidabileTeorico)
                    .HasColumnName("IMP_LIQUIDABILE_TEORICO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRimborsoEnti)
                    .HasColumnName("IMP_RIMBORSO_ENTI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRitAcconto)
                    .HasColumnName("IMP_RIT_ACCONTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpTotaleFattura)
                    .HasColumnName("IMP_TOTALE_FATTURA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PercIva)
                    .HasColumnName("PERC_IVA")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PercScoperto)
                    .HasColumnName("PERC_SCOPERTO")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<SinPrestMedicoChirurgiche>(entity =>
            {
                entity.HasKey(e => e.KeyPrestMedChir)
                    .HasName("PK_SIN_PREST_MED_CHIR");

                entity.ToTable("SIN_PREST_MEDICO_CHIRURGICHE", "ICLAIMS");

                entity.HasIndex(e => e.IdPrestazione)
                    .HasName("XX02_SIN_PREST_MED_CHIR");

                entity.HasIndex(e => new { e.IdPrestMedChir, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_PREST_MED_CHIR_STO");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.IdMalattiatrattamento })
                    .HasName("XX01_SIN_PREST_MED_CHIR");

                entity.Property(e => e.KeyPrestMedChir)
                    .HasColumnName("KEY_PREST_MED_CHIR")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdMalattiatrattamento).HasColumnName("ID_MALATTIATRATTAMENTO");

                entity.Property(e => e.IdPrestMedChir).HasColumnName("ID_PREST_MED_CHIR");

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Percentuale)
                    .HasColumnName("PERCENTUALE")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<SinPrestazioniColpite>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SIN_PRESTAZIONI_COLPITE", "ICLAIMS");

                entity.HasIndex(e => e.IdDanno)
                    .HasName("XX04_SIN_PRESTAZIONI_COLPITE");

                entity.HasIndex(e => e.IdGaranziacolpita)
                    .HasName("XX01SIN_PRESTAZIONI_COLPITE");

                entity.HasIndex(e => e.IdPrestazione)
                    .HasName("XX02SIN_PRESTAZIONI_COLPITE");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX03SIN_PRESTAZIONI_COLPITE");

                entity.HasIndex(e => new { e.IdPrestazioneColpita, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_PRESTAZIONI_COLPITE")
                    .IsUnique();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdGaranziacolpita).HasColumnName("ID_GARANZIACOLPITA");

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.IdPrestazioneColpita).HasColumnName("ID_PRESTAZIONE_COLPITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.KeyPrestazioneColpita).HasColumnName("KEY_PRESTAZIONE_COLPITA");
            });

            modelBuilder.Entity<SinPrestazioniOpera>(entity =>
            {
                entity.HasKey(e => e.KeyPrestazioneOpera);

                entity.ToTable("SIN_PRESTAZIONI_OPERA", "ICLAIMS");

                entity.HasIndex(e => e.IdPrestazioneOpera)
                    .HasName("XX01SIN_PRESTAZIONI_OPERA");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX02SIN_PRESTAZIONI_OPERA");

                entity.HasIndex(e => new { e.IdPrestazioneOpera, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_PRESTAZIONI_OPERA_STO")
                    .IsUnique();

                entity.Property(e => e.KeyPrestazioneOpera)
                    .HasColumnName("KEY_PRESTAZIONE_OPERA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtInvioAnagrafeTributaria)
                    .HasColumnName("DT_INVIO_ANAGRAFE_TRIBUTARIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrestazione)
                    .HasColumnName("DT_PRESTAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoPrestatore)
                    .HasColumnName("FLG_TIPO_PRESTATORE")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdPrestazioneOpera).HasColumnName("ID_PRESTAZIONE_OPERA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SinProprietari>(entity =>
            {
                entity.HasKey(e => e.IdProprietario)
                    .HasName("PK__SIN_PROP__215415B6796895B5");

                entity.ToTable("SIN_PROPRIETARI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02SIN_PROPRIETARI");

                entity.HasIndex(e => e.IdProprietario)
                    .HasName("SYS_C0047584")
                    .IsUnique();

                entity.Property(e => e.IdProprietario)
                    .HasColumnName("ID_PROPRIETARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinRecuperoCfConducenti>(entity =>
            {
                entity.HasKey(e => e.IdRecuperoCf)
                    .HasName("PK_ID_RECUPERO_CF");

                entity.ToTable("SIN_RECUPERO_CF_CONDUCENTI", "ICLAIMS");

                entity.HasIndex(e => e.FlgStatoRecuperoCf)
                    .HasName("XX02_SIN_RECUPERO_CF_CONDUCENTI");

                entity.HasIndex(e => e.IdVeicolo)
                    .HasName("XX01_SIN_RECUPERO_CF_CONDUCENTI");

                entity.Property(e => e.IdRecuperoCf)
                    .HasColumnName("ID_RECUPERO_CF")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtInvioRichiesta)
                    .HasColumnName("DT_INVIO_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicezione)
                    .HasColumnName("DT_RICEZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoRecuperoCf)
                    .HasColumnName("FLG_STATO_RECUPERO_CF")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdVeicolo).HasColumnName("ID_VEICOLO");
            });

            modelBuilder.Entity<SinRegDettagli>(entity =>
            {
                entity.HasKey(e => e.KeySinRegDettagli);

                entity.ToTable("SIN_REG_DETTAGLI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.FlgCodTipoRegistro, e.FlgComprendeUlaeSino, e.FlgTipoRiservaRegulation })
                    .HasName("XX01SIN_REG_DETTAGLI");

                entity.Property(e => e.KeySinRegDettagli)
                    .HasColumnName("KEY_SIN_REG_DETTAGLI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodAgenzia)
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodCompagniaCtp)
                    .HasColumnName("COD_COMPAGNIA_CTP")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtAccadimento)
                    .HasColumnName("DT_ACCADIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtChiusura)
                    .HasColumnName("DT_CHIUSURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDenuncia)
                    .HasColumnName("DT_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffPolizza)
                    .HasColumnName("DT_EFF_POLIZZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPervenimento)
                    .HasColumnName("DT_PERVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiapertura)
                    .HasColumnName("DT_RIAPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EstremiAssicurato)
                    .HasColumnName("ESTREMI_ASSICURATO")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EstremiBeneficiario)
                    .HasColumnName("ESTREMI_BENEFICIARIO")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EstremiContraente)
                    .HasColumnName("ESTREMI_CONTRAENTE")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.EstremiPartita)
                    .HasColumnName("ESTREMI_PARTITA")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCausa)
                    .HasColumnName("FLG_CAUSA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudeGestione)
                    .HasColumnName("FLG_CHIUDE_GESTIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudePartita)
                    .HasColumnName("FLG_CHIUDE_PARTITA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgChiudeSinistro)
                    .HasColumnName("FLG_CHIUDE_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCodTipoRegistro)
                    .HasColumnName("FLG_COD_TIPO_REGISTRO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgComprendeUlaeSino)
                    .HasColumnName("FLG_COMPRENDE_ULAE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgContaPezzoFgSino)
                    .HasColumnName("FLG_CONTA_PEZZO_FG_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgContaPezzoSino)
                    .HasColumnName("FLG_CONTA_PEZZO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDanniCP)
                    .HasColumnName("FLG_DANNI_C_P")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRiservaInizialeSino)
                    .HasColumnName("FLG_RISERVA_INIZIALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStorno)
                    .HasColumnName("FLG_STORNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoDelega)
                    .HasColumnName("FLG_TIPO_DELEGA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestioneNuova)
                    .HasColumnName("FLG_TIPO_GESTIONE_NUOVA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestioneOld)
                    .HasColumnName("FLG_TIPO_GESTIONE_OLD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoMovStampa)
                    .HasColumnName("FLG_TIPO_MOV_STAMPA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRiservaRegulation)
                    .HasColumnName("FLG_TIPO_RISERVA_REGULATION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTpMovimento)
                    .HasColumnName("FLG_TP_MOVIMENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpPagato)
                    .HasColumnName("IMP_PAGATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaCaduta)
                    .HasColumnName("IMP_RISERVA_CADUTA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaForfait)
                    .HasColumnName("IMP_RISERVA_FORFAIT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaInd)
                    .HasColumnName("IMP_RISERVA_IND")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaRec)
                    .HasColumnName("IMP_RISERVA_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaSpe)
                    .HasColumnName("IMP_RISERVA_SPE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaSpeLiq)
                    .HasColumnName("IMP_RISERVA_SPE_LIQ")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiservaSpeRes)
                    .HasColumnName("IMP_RISERVA_SPE_RES")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiservaSpeUlae)
                    .HasColumnName("IMP_RISERVA_SPE_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NFlotta)
                    .HasColumnName("N_FLOTTA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PercNostraQuota)
                    .HasColumnName("PERC_NOSTRA_QUOTA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<SinRegTotali>(entity =>
            {
                entity.HasKey(e => e.KeySinRegTotali);

                entity.ToTable("SIN_REG_TOTALI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.FlgCodTipoRegistro, e.FlgComprendeUlaeSino, e.FlgTipoRiservaRegulation })
                    .HasName("XX01SIN_REG_TOTALI");

                entity.Property(e => e.KeySinRegTotali)
                    .HasColumnName("KEY_SIN_REG_TOTALI")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoAccadimento)
                    .HasColumnName("ANNO_ACCADIMENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCausaleEntrata)
                    .HasColumnName("FLG_CAUSALE_ENTRATA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCausaleUscita)
                    .HasColumnName("FLG_CAUSALE_USCITA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCodTipoRegistro)
                    .HasColumnName("FLG_COD_TIPO_REGISTRO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgComprendeUlaeSino)
                    .HasColumnName("FLG_COMPRENDE_ULAE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRiservaInizialeSino)
                    .HasColumnName("FLG_RISERVA_INIZIALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRiservaRegulation)
                    .HasColumnName("FLG_TIPO_RISERVA_REGULATION")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoTot)
                    .HasColumnName("FLG_TIPO_TOT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.ImpRiservaCaduta)
                    .HasColumnName("IMP_RISERVA_CADUTA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRiservaRiap)
                    .HasColumnName("IMP_RISERVA_RIAP")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotPagato)
                    .HasColumnName("IMP_TOT_PAGATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotRecupero)
                    .HasColumnName("IMP_TOT_RECUPERO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotRiserva)
                    .HasColumnName("IMP_TOT_RISERVA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotRiservaRec)
                    .HasColumnName("IMP_TOT_RISERVA_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTotSpeseUlae)
                    .HasColumnName("IMP_TOT_SPESE_ULAE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NumPezzi)
                    .HasColumnName("NUM_PEZZI")
                    .HasColumnType("numeric(18, 5)");
            });

            modelBuilder.Entity<SinReiezione>(entity =>
            {
                entity.HasKey(e => e.KeyReiezione);

                entity.ToTable("SIN_REIEZIONE", "ICLAIMS");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta, e.FlgTipoDanno, e.DtStoScadenzaLog })
                    .HasName("XX01SIN_REIEZIONE");

                entity.Property(e => e.KeyReiezione)
                    .HasColumnName("KEY_REIEZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtReiezione)
                    .HasColumnName("DT_REIEZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCausaleChiusReiezione)
                    .HasColumnName("FLG_CAUSALE_CHIUS_REIEZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMotivoReiezione)
                    .HasColumnName("FLG_MOTIVO_REIEZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoReiezione)
                    .HasColumnName("FLG_STATO_REIEZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDanno)
                    .HasColumnName("FLG_TIPO_DANNO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoReiezione)
                    .HasColumnName("FLG_TIPO_REIEZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdReiezione).HasColumnName("ID_REIEZIONE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteChiusura).HasColumnName("ID_UTENTE_CHIUSURA");

                entity.Property(e => e.IdUtenteCreazione).HasColumnName("ID_UTENTE_CREAZIONE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinRilievi>(entity =>
            {
                entity.HasKey(e => e.IdSinRilievo)
                    .HasName("PK_SIN_RILIEVO");

                entity.ToTable("SIN_RILIEVI", "ICLAIMS");

                entity.HasIndex(e => e.FlgTipoOggettoRilievo)
                    .HasName("XX04SIN_RILIEVI");

                entity.HasIndex(e => e.IdOggettoRilievo)
                    .HasName("XX03SIN_RILIEVI");

                entity.HasIndex(e => e.IdRilievo)
                    .HasName("XX05SIN_RILIEVI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01SIN_RILIEVI");

                entity.HasIndex(e => new { e.IdSinistro, e.FlgTipoOggettoRilievo })
                    .HasName("XX02SIN_RILIEVI");

                entity.Property(e => e.IdSinRilievo)
                    .HasColumnName("ID_SIN_RILIEVO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErroreIvass)
                    .HasColumnName("COD_ERRORE_IVASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaStato)
                    .HasColumnName("DT_SCADENZA_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoAttuale)
                    .HasColumnName("DT_STATO_ATTUALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoOggettoRilievo)
                    .HasColumnName("FLG_TIPO_OGGETTO_RILIEVO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggettoRilievo).HasColumnName("ID_OGGETTO_RILIEVO");

                entity.Property(e => e.IdRilievo).HasColumnName("ID_RILIEVO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdStatoOggetto).HasColumnName("ID_STATO_OGGETTO");

                entity.Property(e => e.IdTipoOggetto).HasColumnName("ID_TIPO_OGGETTO");
            });

            modelBuilder.Entity<SinRimesse>(entity =>
            {
                entity.HasKey(e => e.IdRimessa)
                    .HasName("PK__SIN_RIME__F7F4E55A7BE3E732");

                entity.ToTable("SIN_RIMESSE", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02SIN_RIMESSE");

                entity.HasIndex(e => e.IdRimessa)
                    .HasName("SYS_C0047586")
                    .IsUnique();

                entity.Property(e => e.IdRimessa)
                    .HasColumnName("ID_RIMESSA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgTipoRimessa)
                    .HasColumnName("flg_tipo_rimessa")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SinRimorchi>(entity =>
            {
                entity.HasKey(e => e.KeySinRimorchio);

                entity.ToTable("SIN_RIMORCHI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdVeicolo, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01_SIN_RIMORCHI");

                entity.Property(e => e.KeySinRimorchio)
                    .HasColumnName("KEY_SIN_RIMORCHIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdSinRimorchio).HasColumnName("ID_SIN_RIMORCHIO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdVeicolo).HasColumnName("ID_VEICOLO");

                entity.Property(e => e.TargaRimorchio)
                    .IsRequired()
                    .HasColumnName("TARGA_RIMORCHIO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinSchedaValutazioneTemp>(entity =>
            {
                entity.HasKey(e => e.KeySchedavalutazionetemp);

                entity.ToTable("SIN_SCHEDA_VALUTAZIONE_TEMP", "ICLAIMS");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX03SIN_SCHEDA_VALUTAZIONE_TEM");

                entity.HasIndex(e => e.IdEntitaschedadannoval)
                    .HasName("XX02SIN_SCHEDA_VALUTAZIONE_TEM");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX04SIN_SCHEDA_VALUTAZIONE_TEM");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX05SIN_SCHEDA_VALUTAZIONE_TEM");

                entity.HasIndex(e => new { e.IdSchedavalutazionetemp, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX01SIN_SCHEDA_VALUTAZIONE_TEM")
                    .IsUnique();

                entity.Property(e => e.KeySchedavalutazionetemp)
                    .HasColumnName("KEY_SCHEDAVALUTAZIONETEMP")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.GiorniInabilita).HasColumnName("GIORNI_INABILITA");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdEntitaschedadannoval).HasColumnName("ID_ENTITASCHEDADANNOVAL");

                entity.Property(e => e.IdSchedavalutazionetemp).HasColumnName("ID_SCHEDAVALUTAZIONETEMP");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpDanno)
                    .HasColumnName("IMP_DANNO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PctInabilita)
                    .HasColumnName("PCT_INABILITA")
                    .HasColumnType("decimal(10, 5)");
            });

            modelBuilder.Entity<SinSinistri>(entity =>
            {
                entity.HasKey(e => e.KeySinistro)
                    .HasName("PK__SIN_SINI__9597D017019F068E");

                entity.ToTable("SIN_SINISTRI", "ICLAIMS");

                entity.HasIndex(e => e.IdDenunciante)
                    .HasName("XX07SIN_SINISTRI");

                entity.HasIndex(e => e.IdEvento)
                    .HasName("XX01SIN_SINISTRI");

                entity.HasIndex(e => e.IdGrupposinistri)
                    .HasName("XX02SIN_SINISTRI");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX05SIN_SINISTRI");

                entity.HasIndex(e => e.IdLiquidatore)
                    .HasName("XX06SIN_SINISTRI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX03SIN_SINISTRI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX04SIN_SINISTRI");

                entity.HasIndex(e => e.IdSinistrocoass)
                    .HasName("XX09SIN_SINISTRI");

                entity.HasIndex(e => e.IdSinistrorca)
                    .HasName("XX10SIN_SINISTRI");

                entity.HasIndex(e => e.IdSinistrotrasporti)
                    .HasName("XX08SIN_SINISTRI");

                entity.HasIndex(e => e.KeySinistro)
                    .HasName("SYS_C0047608")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX12SIN_SINISTRI");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XX14SIN_SINISTRI");

                entity.HasIndex(e => new { e.NSinistro, e.AnnoEsercizio })
                    .HasName("XX11SIN_SINISTRI");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_SINISTRI_STO")
                    .IsUnique();

                entity.Property(e => e.KeySinistro)
                    .HasColumnName("KEY_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoEsercizio)
                    .HasColumnName("ANNO_ESERCIZIO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtDenuncia)
                    .HasColumnName("DT_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtForzaturaAntifrode)
                    .HasColumnName("DT_FORZATURA_ANTIFRODE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIndicazioneRivalsa)
                    .HasColumnName("DT_INDICAZIONE_RIVALSA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvioCoass)
                    .HasColumnName("DT_INVIO_COASS")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPervenimentoDenuncia)
                    .HasColumnName("DT_PERVENIMENTO_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistroDenunciato)
                    .HasColumnName("DT_REGISTRO_DENUNCIATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiapertura)
                    .HasColumnName("DT_RIAPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAreaSinistro)
                    .HasColumnName("FLG_AREA_SINISTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAssistenzaTecnicaSino)
                    .HasColumnName("FLG_ASSISTENZA_TECNICA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCartaceoSino)
                    .HasColumnName("FLG_CARTACEO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCatastrofaleSino)
                    .HasColumnName("FLG_CATASTROFALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCopertoSino)
                    .IsRequired()
                    .HasColumnName("FLG_COPERTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCtrlAperturaAutSino)
                    .HasColumnName("FLG_CTRL_APERTURA_AUT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgForzaturaScopertoSino)
                    .HasColumnName("FLG_FORZATURA_SCOPERTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFranchigiaDaRecSino)
                    .HasColumnName("FLG_FRANCHIGIA_DA_REC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInibizioneStampSurrSino)
                    .HasColumnName("FLG_INIBIZIONE_STAMP_SURR_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIspezioneAmmSino)
                    .HasColumnName("FLG_ISPEZIONE_AMM_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoForzaturaScoperto)
                    .HasColumnName("FLG_MOTIVO_FORZATURA_SCOPERTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMotivoStatoSinistro)
                    .IsRequired()
                    .HasColumnName("FLG_MOTIVO_STATO_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("flg_ramo_tecnico")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRecordAnnullatoSino)
                    .HasColumnName("FLG_RECORD_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgSinistroAnomaloSino)
                    .HasColumnName("FLG_SINISTRO_ANOMALO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistroBloccatoSino)
                    .HasColumnName("FLG_SINISTRO_BLOCCATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistroElettronicoSino)
                    .HasColumnName("FLG_SINISTRO_ELETTRONICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistroEsteroSino)
                    .HasColumnName("FLG_SINISTRO_ESTERO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistroPasSino)
                    .HasColumnName("FLG_SINISTRO_PAS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSistemaProvenienza)
                    .HasColumnName("FLG_SISTEMA_PROVENIENZA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSospettoSino)
                    .HasColumnName("FLG_SOSPETTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoSinistro)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDenuncia)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_DENUNCIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoElettronicoUniqa)
                    .HasColumnName("FLG_TIPO_ELETTRONICO_UNIQA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoLiquidazione)
                    .HasColumnName("FLG_TIPO_LIQUIDAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoLiquidazioneCalc)
                    .HasColumnName("FLG_TIPO_LIQUIDAZIONE_CALC")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaEvento)
                    .HasColumnName("FLG_TIPOLOGIA_EVENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaSinistro)
                    .HasColumnName("FLG_TIPOLOGIA_SINISTRO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgValidatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_VALIDATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("id_compagnia")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDenunciante)
                    .HasColumnName("ID_DENUNCIANTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEvento)
                    .HasColumnName("ID_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEventoCatastrofale).HasColumnName("ID_EVENTO_CATASTROFALE");

                entity.Property(e => e.IdGrupposinistri)
                    .HasColumnName("ID_GRUPPOSINISTRI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLiquidatore)
                    .HasColumnName("ID_LIQUIDATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMediatorecreditizio)
                    .HasColumnName("ID_MEDIATORECREDITIZIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistrocoass)
                    .HasColumnName("ID_SINISTROCOASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistroestero).HasColumnName("ID_SINISTROESTERO");

                entity.Property(e => e.IdSinistrorca)
                    .HasColumnName("ID_SINISTRORCA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistrotrasporti)
                    .HasColumnName("ID_SINISTROTRASPORTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteApertura).HasColumnName("ID_UTENTE_APERTURA");

                entity.Property(e => e.LivelloAntiFrode).HasColumnName("LIVELLO_ANTI_FRODE");

                entity.Property(e => e.NSinistro)
                    .IsRequired()
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NoteDinamica)
                    .HasColumnName("NOTE_DINAMICA")
                    .IsUnicode(false);

                entity.Property(e => e.NoteIndicazioneRivalsa)
                    .HasColumnName("NOTE_INDICAZIONE_RIVALSA")
                    .IsUnicode(false);

                entity.Property(e => e.NoteStato)
                    .HasColumnName("NOTE_STATO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinSinistriCoass>(entity =>
            {
                entity.HasKey(e => e.KeySinistrocoass)
                    .HasName("PK__SIN_SINI__907F75AAF19FF3CB");

                entity.ToTable("SIN_SINISTRI_COASS", "ICLAIMS");

                entity.HasIndex(e => e.IdSinistrocoass)
                    .HasName("XX01SIN_SINISTRI_COASS");

                entity.HasIndex(e => e.KeySinistrocoass)
                    .HasName("SYS_C0047611")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdSinistrocoass, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_SINISTRI_COASS_STO")
                    .IsUnique();

                entity.Property(e => e.KeySinistrocoass)
                    .HasColumnName("KEY_SINISTROCOASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdSinistrocoass)
                    .HasColumnName("ID_SINISTROCOASS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NSinistroCoass)
                    .IsRequired()
                    .HasColumnName("N_SINISTRO_COASS")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinSinistriEsteri>(entity =>
            {
                entity.HasKey(e => e.KeySinistroestero);

                entity.ToTable("SIN_SINISTRI_ESTERI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdCompagniaMand, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("IX_SIN_SINISTRI_ESTERI_2");

                entity.HasIndex(e => new { e.IdSinistroestero, e.DtStoEffettoLog, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("IX_SIN_SINISTRI_ESTERI_1");

                entity.Property(e => e.KeySinistroestero)
                    .HasColumnName("KEY_SINISTROESTERO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtRicRichiestaUci)
                    .HasColumnName("DT_RIC_RICHIESTA_UCI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaMandante)
                    .HasColumnName("DT_RICHIESTA_MANDANTE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRispostaMandante)
                    .HasColumnName("DT_RISPOSTA_MANDANTE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSollecito)
                    .HasColumnName("DT_SOLLECITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCopertura)
                    .HasColumnName("FLG_COPERTURA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRisultanteDa)
                    .HasColumnName("FLG_RISULTANTE_DA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagniaMand).HasColumnName("ID_COMPAGNIA_MAND");

                entity.Property(e => e.IdSinistroestero).HasColumnName("ID_SINISTROESTERO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NoteRisultanteDa)
                    .HasColumnName("NOTE_RISULTANTE_DA")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.NoteSinistro)
                    .HasColumnName("NOTE_SINISTRO")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.NumRiferimentoUci)
                    .HasColumnName("NUM_RIFERIMENTO_UCI")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NumSinistroMandante)
                    .HasColumnName("NUM_SINISTRO_MANDANTE")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinSinistriFantasma>(entity =>
            {
                entity.HasKey(e => e.KeySinistrofantasma);

                entity.ToTable("SIN_SINISTRI_FANTASMA", "ICLAIMS");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX01_SIN_SINISTRI_FANTASMA");

                entity.HasIndex(e => new { e.IdSinistrofantasma, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_SINISTRI_FANTASMA_STO")
                    .IsUnique();

                entity.Property(e => e.KeySinistrofantasma)
                    .HasColumnName("KEY_SINISTROFANTASMA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFantasma)
                    .HasColumnName("DT_FANTASMA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgFranchigiaStornataSino)
                    .HasColumnName("FLG_FRANCHIGIA_STORNATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgImportoRimborsatoSino)
                    .HasColumnName("FLG_IMPORTO_RIMBORSATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRiclassificazioneSino)
                    .HasColumnName("FLG_RICLASSIFICAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSinistrofantasma).HasColumnName("ID_SINISTROFANTASMA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImportoRimborsato)
                    .HasColumnName("IMPORTO_RIMBORSATO")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<SinSinistriRca>(entity =>
            {
                entity.HasKey(e => e.KeySinistrorca)
                    .HasName("PK__SIN_SINI__EECF91EAC0B1822A");

                entity.ToTable("SIN_SINISTRI_RCA", "ICLAIMS");

                entity.HasIndex(e => e.IdCasocid)
                    .HasName("XX01SIN_SINISTRI_RCA");

                entity.HasIndex(e => e.IdSinistrorca)
                    .HasName("XX02SIN_SINISTRI_RCA");

                entity.HasIndex(e => e.KeySinistrorca)
                    .HasName("SYS_C0047619")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX03SIN_SINISTRI_RCA");

                entity.HasIndex(e => new { e.IdSinistrorca, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_SINISTRI_RCA_STO")
                    .IsUnique();

                entity.Property(e => e.KeySinistrorca)
                    .HasColumnName("KEY_SINISTRORCA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAperturaArbitrato)
                    .HasColumnName("DT_APERTURA_ARBITRATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtChiusuraArbitrato)
                    .HasColumnName("DT_CHIUSURA_ARBITRATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaArbitrato)
                    .HasColumnName("DT_RICHIESTA_ARBITRATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoCard)
                    .HasColumnName("DT_STATO_CARD")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgArbitratoCreatoSino)
                    .HasColumnName("FLG_ARBITRATO_CREATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgArbitratoInCaricoSino)
                    .HasColumnName("FLG_ARBITRATO_IN_CARICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAssenzaDannoSino)
                    .HasColumnName("FLG_ASSENZA_DANNO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCardNaturaleSino)
                    .HasColumnName("FLG_CARD_NATURALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCausaleDepenalizzazione)
                    .HasColumnName("FLG_CAUSALE_DEPENALIZZAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgClassificazioneNa)
                    .HasColumnName("FLG_CLASSIFICAZIONE_NA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCollisioneSino)
                    .HasColumnName("FLG_COLLISIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDepenalizzatoSino)
                    .HasColumnName("FLG_DEPENALIZZATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDichiarazione)
                    .HasColumnName("FLG_DICHIARAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFirmaCai)
                    .HasColumnName("FLG_FIRMA_CAI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgForzaturaRcaSino)
                    .HasColumnName("FLG_FORZATURA_RCA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgInviareSino)
                    .HasColumnName("FLG_INVIARE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMotivoForzatura)
                    .HasColumnName("FLG_MOTIVO_FORZATURA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRecordAnnullatoSino)
                    .HasColumnName("FLG_RECORD_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.FlgStanza)
                    .HasColumnName("FLG_STANZA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCard)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_CARD")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCardCompagnia)
                    .HasColumnName("FLG_TIPO_CARD_COMPAGNIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoResponsabilita)
                    .HasColumnName("FLG_TIPO_RESPONSABILITA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCasocid)
                    .HasColumnName("ID_CASOCID")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCasocidTerzo)
                    .HasColumnName("ID_CASOCID_TERZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProvForfait)
                    .HasColumnName("ID_PROV_FORFAIT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProvForfaitCtp).HasColumnName("ID_PROV_FORFAIT_CTP");

                entity.Property(e => e.IdSinistrorca)
                    .HasColumnName("ID_SINISTRORCA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteArbitrato)
                    .HasColumnName("NOTE_ARBITRATO")
                    .HasMaxLength(4000)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NoteMotivoDepenalizzazione)
                    .HasColumnName("NOTE_MOTIVO_DEPENALIZZAZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.PerRespCompagnia)
                    .HasColumnName("PER_RESP_COMPAGNIA")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PerResponsabilita)
                    .HasColumnName("PER_RESPONSABILITA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<SinSinistriTrasporti>(entity =>
            {
                entity.HasKey(e => e.KeySinistrotrasporti)
                    .HasName("PK__SIN_SINI__63121BB98489B59F");

                entity.ToTable("SIN_SINISTRI_TRASPORTI", "ICLAIMS");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("XX02SIN_SINISTRI_TRASPORTI");

                entity.HasIndex(e => e.IdMerce)
                    .HasName("XX01SIN_SINISTRI_TRASPORTI");

                entity.HasIndex(e => e.IdSinistrotrasporti)
                    .HasName("XX03SIN_SINISTRI_TRASPORTI");

                entity.HasIndex(e => e.KeySinistrotrasporti)
                    .HasName("SYS_C0047623")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdSinistrotrasporti, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_SINISTRI_TRASPORTI_STO")
                    .IsUnique();

                entity.Property(e => e.KeySinistrotrasporti)
                    .HasColumnName("KEY_SINISTROTRASPORTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMerce)
                    .HasColumnName("ID_MERCE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistrotrasporti)
                    .HasColumnName("ID_SINISTROTRASPORTI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteAutocarro)
                    .HasColumnName("NOTE_AUTOCARRO")
                    .IsUnicode(false);

                entity.HasOne(d => d.IdMerceNavigation)
                    .WithMany(p => p.SinSinistriTrasporti)
                    .HasForeignKey(d => d.IdMerce)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SIN_SINIS__ID_ME__679F3DB8");
            });

            modelBuilder.Entity<SinSinistriTurismo>(entity =>
            {
                entity.HasKey(e => e.KeySinistroturismo);

                entity.ToTable("SIN_SINISTRI_TURISMO", "ICLAIMS");

                entity.HasIndex(e => new { e.IdSinistroturismo, e.DtStoScadenzaLog })
                    .HasName("XX01SIN_SINISTRI_TURISMO");

                entity.Property(e => e.KeySinistroturismo)
                    .HasColumnName("KEY_SINISTROTURISMO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtInizioViaggio)
                    .HasColumnName("DT_INIZIO_VIAGGIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPrenotViaggio)
                    .HasColumnName("DT_PRENOT_VIAGGIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRientroViaggio)
                    .HasColumnName("DT_RIENTRO_VIAGGIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMotAnnullamento)
                    .HasColumnName("FLG_MOT_ANNULLAMENTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSinistroturismo).HasColumnName("ID_SINISTROTURISMO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NoteMotAnnullamento)
                    .HasColumnName("NOTE_MOT_ANNULLAMENTO")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinSintesiDanni>(entity =>
            {
                entity.HasKey(e => e.KeySinSintesiDanni);

                entity.ToTable("SIN_SINTESI_DANNI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.IdSinistro, e.FlgTipoGestione, e.FlgStatoCausaRegulation })
                    .HasName("XX02SIN_SINTESI_DANNI");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.IdSinistro, e.IdPartita, e.IdDanno, e.FlgTipoGestione })
                    .HasName("XX01SIN_SINTESI_DANNI");

                entity.Property(e => e.KeySinSintesiDanni)
                    .HasColumnName("KEY_SIN_SINTESI_DANNI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagniaCtp)
                    .HasColumnName("COD_COMPAGNIA_CTP")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodConvenzione)
                    .HasColumnName("COD_CONVENZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DtDenuncia)
                    .HasColumnName("DT_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPervenimento)
                    .HasColumnName("DT_PERVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EstremiPartita)
                    .HasColumnName("ESTREMI_PARTITA")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoCausaRegulation)
                    .HasColumnName("FLG_STATO_CAUSA_REGULATION")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoFinale)
                    .HasColumnName("FLG_STATO_FINALE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoIniziale)
                    .HasColumnName("FLG_STATO_INIZIALE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDannoRegulation)
                    .HasColumnName("FLG_TIPO_DANNO_REGULATION")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestioneNuova)
                    .HasColumnName("FLG_TIPO_GESTIONE_NUOVA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestioneOld)
                    .HasColumnName("FLG_TIPO_GESTIONE_OLD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdPartita).HasColumnName("ID_PARTITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpPagEntrata)
                    .HasColumnName("IMP_PAG_ENTRATA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagInden)
                    .HasColumnName("IMP_PAG_INDEN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagSpeseLiq)
                    .HasColumnName("IMP_PAG_SPESE_LIQ")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagSpeseRes)
                    .HasColumnName("IMP_PAG_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRec)
                    .HasColumnName("IMP_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisCaduta)
                    .HasColumnName("IMP_RIS_CADUTA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataInden)
                    .HasColumnName("IMP_RIS_ENTRATA_INDEN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataRec)
                    .HasColumnName("IMP_RIS_ENTRATA_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataSpeseLiq)
                    .HasColumnName("IMP_RIS_ENTRATA_SPESE_LIQ")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataSpeseRes)
                    .HasColumnName("IMP_RIS_ENTRATA_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaInden)
                    .HasColumnName("IMP_RIS_USCITA_INDEN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaRec)
                    .HasColumnName("IMP_RIS_USCITA_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaSpeseLiq)
                    .HasColumnName("IMP_RIS_USCITA_SPESE_LIQ")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaSpeseRes)
                    .HasColumnName("IMP_RIS_USCITA_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SinSintesiGestioni>(entity =>
            {
                entity.HasKey(e => e.KeySinSintesiGestioni);

                entity.ToTable("SIN_SINTESI_GESTIONI", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.IdSinistro, e.FlgTipoGestione })
                    .HasName("XX01SIN_SINTESI_GESTIONI");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdSinistro, e.FlgTipoGestione, e.FlgStatoFinale })
                    .HasName("XX02SIN_SINTESI_GESTIONI");

                entity.Property(e => e.KeySinSintesiGestioni)
                    .HasColumnName("KEY_SIN_SINTESI_GESTIONI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagniaCtp)
                    .HasColumnName("COD_COMPAGNIA_CTP")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtChiusura)
                    .HasColumnName("DT_CHIUSURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDenuncia)
                    .HasColumnName("DT_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPervenimento)
                    .HasColumnName("DT_PERVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiapertura)
                    .HasColumnName("DT_RIAPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRiattivazione)
                    .HasColumnName("DT_RIATTIVAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EstremiPartita)
                    .HasColumnName("ESTREMI_PARTITA")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoCausaRegulation)
                    .HasColumnName("FLG_STATO_CAUSA_REGULATION")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoFinale)
                    .HasColumnName("FLG_STATO_FINALE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoIniziale)
                    .HasColumnName("FLG_STATO_INIZIALE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestioneNuova)
                    .HasColumnName("FLG_TIPO_GESTIONE_NUOVA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestioneOld)
                    .HasColumnName("FLG_TIPO_GESTIONE_OLD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpPagEntrata)
                    .HasColumnName("IMP_PAG_ENTRATA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagInden)
                    .HasColumnName("IMP_PAG_INDEN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagSpeseLiq)
                    .HasColumnName("IMP_PAG_SPESE_LIQ")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagSpeseRes)
                    .HasColumnName("IMP_PAG_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagSpeseUlae)
                    .HasColumnName("IMP_PAG_SPESE_ULAE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRec)
                    .HasColumnName("IMP_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisCaduta)
                    .HasColumnName("IMP_RIS_CADUTA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisCadutaBil)
                    .HasColumnName("IMP_RIS_CADUTA_BIL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisCadutaBilUlae)
                    .HasColumnName("IMP_RIS_CADUTA_BIL_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisCadutaTecUlae)
                    .HasColumnName("IMP_RIS_CADUTA_TEC_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisEntrataInden)
                    .HasColumnName("IMP_RIS_ENTRATA_INDEN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataIntegBil)
                    .HasColumnName("IMP_RIS_ENTRATA_INTEG_BIL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisEntrataRec)
                    .HasColumnName("IMP_RIS_ENTRATA_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataSpeseLiq)
                    .HasColumnName("IMP_RIS_ENTRATA_SPESE_LIQ")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataSpeseRes)
                    .HasColumnName("IMP_RIS_ENTRATA_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataSpeseUlae)
                    .HasColumnName("IMP_RIS_ENTRATA_SPESE_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisIntegBil)
                    .HasColumnName("IMP_RIS_INTEG_BIL")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisSpeseUlae)
                    .HasColumnName("IMP_RIS_SPESE_ULAE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaInden)
                    .HasColumnName("IMP_RIS_USCITA_INDEN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaRec)
                    .HasColumnName("IMP_RIS_USCITA_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaSpeseLiq)
                    .HasColumnName("IMP_RIS_USCITA_SPESE_LIQ")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaSpeseRes)
                    .HasColumnName("IMP_RIS_USCITA_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SinSintesiPartite>(entity =>
            {
                entity.HasKey(e => e.KeySinSintesiPartite);

                entity.ToTable("SIN_SINTESI_PARTITE", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtScarico, e.IdSinistro, e.IdPartita, e.FlgTipoGestione })
                    .HasName("XX01SIN_SINTESI_PARTITE");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdSinistro, e.IdPartita, e.FlgTipoGestione, e.FlgStatoFinale })
                    .HasName("XX02SIN_SINTESI_PARTITE");

                entity.Property(e => e.KeySinSintesiPartite)
                    .HasColumnName("KEY_SIN_SINTESI_PARTITE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagniaCtp)
                    .HasColumnName("COD_COMPAGNIA_CTP")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtDenuncia)
                    .HasColumnName("DT_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPervenimento)
                    .HasColumnName("DT_PERVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScarico)
                    .HasColumnName("DT_SCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.EstremiPartita)
                    .HasColumnName("ESTREMI_PARTITA")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.FlgContaPezzoSino)
                    .HasColumnName("FLG_CONTA_PEZZO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoCausaRegulation)
                    .HasColumnName("FLG_STATO_CAUSA_REGULATION")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoFinale)
                    .HasColumnName("FLG_STATO_FINALE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoIniziale)
                    .HasColumnName("FLG_STATO_INIZIALE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestioneNuova)
                    .HasColumnName("FLG_TIPO_GESTIONE_NUOVA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoGestioneOld)
                    .HasColumnName("FLG_TIPO_GESTIONE_OLD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdPartita).HasColumnName("ID_PARTITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpPagEntrata)
                    .HasColumnName("IMP_PAG_ENTRATA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagInden)
                    .HasColumnName("IMP_PAG_INDEN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagSpeseLiq)
                    .HasColumnName("IMP_PAG_SPESE_LIQ")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagSpeseRes)
                    .HasColumnName("IMP_PAG_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPagSpeseUlae)
                    .HasColumnName("IMP_PAG_SPESE_ULAE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRec)
                    .HasColumnName("IMP_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisCaduta)
                    .HasColumnName("IMP_RIS_CADUTA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisCadutaBil)
                    .HasColumnName("IMP_RIS_CADUTA_BIL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisCadutaBilUlae)
                    .HasColumnName("IMP_RIS_CADUTA_BIL_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisCadutaTecUlae)
                    .HasColumnName("IMP_RIS_CADUTA_TEC_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisEntrataInden)
                    .HasColumnName("IMP_RIS_ENTRATA_INDEN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataIntegBil)
                    .HasColumnName("IMP_RIS_ENTRATA_INTEG_BIL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisEntrataRec)
                    .HasColumnName("IMP_RIS_ENTRATA_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataSpeseLiq)
                    .HasColumnName("IMP_RIS_ENTRATA_SPESE_LIQ")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataSpeseRes)
                    .HasColumnName("IMP_RIS_ENTRATA_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisEntrataSpeseUlae)
                    .HasColumnName("IMP_RIS_ENTRATA_SPESE_ULAE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRisIntegBil)
                    .HasColumnName("IMP_RIS_INTEG_BIL")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisSpeseUlae)
                    .HasColumnName("IMP_RIS_SPESE_ULAE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaInden)
                    .HasColumnName("IMP_RIS_USCITA_INDEN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaRec)
                    .HasColumnName("IMP_RIS_USCITA_REC")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaSpeseLiq)
                    .HasColumnName("IMP_RIS_USCITA_SPESE_LIQ")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRisUscitaSpeseRes)
                    .HasColumnName("IMP_RIS_USCITA_SPESE_RES")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<SinSottoprestMalattia>(entity =>
            {
                entity.HasKey(e => e.KeySottoprestMalattia);

                entity.ToTable("SIN_SOTTOPREST_MALATTIA", "ICLAIMS");

                entity.HasIndex(e => new { e.IdPrestMalattia, e.DtStoScadenzaLog })
                    .HasName("XX01_SIN_SOTTOPREST_MALATTIA");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaLog })
                    .HasName("XX02_SIN_SOTTOPREST_MALATTIA");

                entity.Property(e => e.KeySottoprestMalattia)
                    .HasColumnName("KEY_SOTTOPREST_MALATTIA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdMalattiafattura).HasColumnName("ID_MALATTIAFATTURA");

                entity.Property(e => e.IdMalattiatrattamento).HasColumnName("ID_MALATTIATRATTAMENTO");

                entity.Property(e => e.IdPrestMalattia).HasColumnName("ID_PREST_MALATTIA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdSottoprestMalattia).HasColumnName("ID_SOTTOPREST_MALATTIA");

                entity.Property(e => e.IdSottoprestazione).HasColumnName("ID_SOTTOPRESTAZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpImponibile)
                    .HasColumnName("IMP_IMPONIBILE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpIva)
                    .HasColumnName("IMP_IVA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpLiquidabile)
                    .HasColumnName("IMP_LIQUIDABILE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRitAcconto)
                    .HasColumnName("IMP_RIT_ACCONTO")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<SinStatiGestionali>(entity =>
            {
                entity.HasKey(e => e.KeyStatoGestionale);

                entity.ToTable("SIN_STATI_GESTIONALI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdSinistro, e.IdEntitacoinvolta })
                    .HasName("XX01_SIN_STATI_GESTIONALI");

                entity.HasIndex(e => new { e.IdDanno, e.DtStoEffettoLog, e.DtStoScadenzaLog })
                    .HasName("XX02_SIN_STATI_GESTIONALI");

                entity.Property(e => e.KeyStatoGestionale)
                    .HasColumnName("KEY_STATO_GESTIONALE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStato)
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdDanno).HasColumnName("ID_DANNO");

                entity.Property(e => e.IdEntitacoinvolta).HasColumnName("ID_ENTITACOINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdStatoGestionale).HasColumnName("ID_STATO_GESTIONALE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpRiservaGestionale)
                    .HasColumnName("IMP_RISERVA_GESTIONALE")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<SinTabAgenzie>(entity =>
            {
                entity.HasKey(e => e.KeySinTabAgenzie);

                entity.ToTable("SIN_TAB_AGENZIE", "IREGULATION");

                entity.HasIndex(e => new { e.IdCompagnia, e.CodAgenzia })
                    .HasName("XX01SIN_TAB_AGENZIE");

                entity.Property(e => e.KeySinTabAgenzie)
                    .HasColumnName("KEY_SIN_TAB_AGENZIE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodAgenzia)
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDirezione)
                    .HasColumnName("FLG_DIREZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEsclusione)
                    .HasColumnName("FLG_ESCLUSIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");
            });

            modelBuilder.Entity<SinTestimoni>(entity =>
            {
                entity.HasKey(e => e.KeyTestimone)
                    .HasName("PK__SIN_TEST__E1EF09BFC153116E");

                entity.ToTable("SIN_TESTIMONI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02SIN_TESTIMONI");

                entity.HasIndex(e => e.IdEntitacoinvolta)
                    .HasName("XX03SIN_TESTIMONI");

                entity.HasIndex(e => e.IdTestimone)
                    .HasName("XX01SIN_TESTIMONI");

                entity.HasIndex(e => e.KeyTestimone)
                    .HasName("SYS_C0047626")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdTestimone, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_TESTIMONI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyTestimone)
                    .HasColumnName("KEY_TESTIMONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtPervenimentoTestimonianza)
                    .HasColumnName("DT_PERVENIMENTO_TESTIMONIANZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaTestimonianza)
                    .HasColumnName("DT_RICHIESTA_TESTIMONIANZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdEntitacoinvolta)
                    .HasColumnName("ID_ENTITACOINVOLTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTestimone)
                    .HasColumnName("ID_TESTIMONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteTestimonianza)
                    .HasColumnName("NOTE_TESTIMONIANZA")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinTrasferimenti>(entity =>
            {
                entity.HasKey(e => e.IdTrasferimento);

                entity.ToTable("SIN_TRASFERIMENTI", "ICLAIMS");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("K01_SIN_TRASFERIMENTI");

                entity.Property(e => e.IdTrasferimento)
                    .HasColumnName("ID_TRASFERIMENTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtLimite)
                    .HasColumnName("DT_LIMITE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRestituzione)
                    .HasColumnName("DT_RESTITUZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtTrasferimento)
                    .HasColumnName("DT_TRASFERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdIspettoratoDestinazione).HasColumnName("ID_ISPETTORATO_DESTINAZIONE");

                entity.Property(e => e.IdIspettoratoOrigine).HasColumnName("ID_ISPETTORATO_ORIGINE");

                entity.Property(e => e.IdLiquidatoreDestinazione).HasColumnName("ID_LIQUIDATORE_DESTINAZIONE");

                entity.Property(e => e.IdLiquidatoreOrigine).HasColumnName("ID_LIQUIDATORE_ORIGINE");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtenteRestituzione).HasColumnName("ID_UTENTE_RESTITUZIONE");

                entity.Property(e => e.IdUtenteTrasferimento).HasColumnName("ID_UTENTE_TRASFERIMENTO");
            });

            modelBuilder.Entity<SinVeicoli>(entity =>
            {
                entity.HasKey(e => e.KeyVeicolo)
                    .HasName("PK__SIN_VEIC__6100DE48F2017D0B");

                entity.ToTable("SIN_VEICOLI", "ICLAIMS");

                entity.HasIndex(e => e.IdVeicolo)
                    .HasName("SYS_C0047629")
                    .IsUnique();

                entity.HasIndex(e => e.Targa)
                    .HasName("XX2SIN_VEICOLI");

                entity.HasIndex(e => e.TargaAnia)
                    .HasName("XX3SIN_VEICOLI");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX1SIN_VEICOLI");

                entity.HasIndex(e => new { e.IdVeicolo, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_SIN_VEICOLI_STO")
                    .IsUnique();

                entity.Property(e => e.KeyVeicolo)
                    .HasColumnName("KEY_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Cc).HasColumnName("CC");

                entity.Property(e => e.CodAgenzia)
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodInfocar)
                    .HasColumnName("COD_INFOCAR")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtDemolizione)
                    .HasColumnName("DT_DEMOLIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineCopertura)
                    .HasColumnName("DT_FINE_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtImmatricolazione)
                    .HasColumnName("DT_IMMATRICOLAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioCopertura)
                    .HasColumnName("DT_INIZIO_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCondizioniVeicolo)
                    .HasColumnName("FLG_CONDIZIONI_VEICOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIvaSino)
                    .HasColumnName("FLG_IVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRdCvtSino)
                    .HasColumnName("FLG_RD_CVT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoInvio)
                    .HasColumnName("FLG_STATO_INVIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoDemolizione)
                    .HasColumnName("FLG_TIPO_DEMOLIZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoTarga)
                    .HasColumnName("FLG_TIPO_TARGA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoVeicolo)
                    .HasColumnName("FLG_TIPO_VEICOLO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoVeicoloIsvap)
                    .HasColumnName("FLG_TIPO_VEICOLO_ISVAP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FlgVeicoloDiPolizzaSino)
                    .HasColumnName("FLG_VEICOLO_DI_POLIZZA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVeicoloSostaSino)
                    .HasColumnName("FLG_VEICOLO_SOSTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Hp).HasColumnName("HP");

                entity.Property(e => e.IdClasse)
                    .HasColumnName("ID_CLASSE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdConducente)
                    .HasColumnName("ID_CONDUCENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContraente)
                    .HasColumnName("ID_CONTRAENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCorrispondenteestero).HasColumnName("ID_CORRISPONDENTEESTERO");

                entity.Property(e => e.IdNazione)
                    .HasColumnName("ID_NAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProprietario)
                    .HasColumnName("ID_PROPRIETARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRimessa)
                    .HasColumnName("ID_RIMESSA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSettore)
                    .HasColumnName("ID_SETTORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUso)
                    .HasColumnName("ID_USO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdVeicolo)
                    .HasColumnName("ID_VEICOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Kw).HasColumnName("KW");

                entity.Property(e => e.Marca)
                    .HasColumnName("MARCA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.MesiVetusta).HasColumnName("MESI_VETUSTA");

                entity.Property(e => e.Modello)
                    .HasColumnName("MODELLO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NoteVeicolo)
                    .HasColumnName("NOTE_VEICOLO")
                    .IsUnicode(false);

                entity.Property(e => e.Posti)
                    .HasColumnName("POSTI")
                    .HasColumnType("numeric(8, 0)");

                entity.Property(e => e.Qli)
                    .HasColumnName("QLI")
                    .HasColumnType("numeric(8, 3)");

                entity.Property(e => e.RifCorrispondenteEstero)
                    .HasColumnName("RIF_CORRISPONDENTE_ESTERO")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Targa)
                    .HasColumnName("TARGA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TargaAnia)
                    .HasColumnName("TARGA_ANIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Targhino)
                    .HasColumnName("TARGHINO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Telaio)
                    .HasColumnName("TELAIO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SinVerificaDati>(entity =>
            {
                entity.HasKey(e => e.KeySinVerificaDati);

                entity.ToTable("SIN_VERIFICA_DATI", "ICLAIMS");

                entity.HasIndex(e => new { e.DtVerificaDati, e.DtStoScadenzaLog })
                    .HasName("XX02SIN_VERIFICA_DATI");

                entity.HasIndex(e => new { e.IdSinistro, e.DtStoScadenzaLog })
                    .HasName("XX01SIN_VERIFICA_DATI");

                entity.Property(e => e.KeySinVerificaDati)
                    .HasColumnName("KEY_SIN_VERIFICA_DATI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtVerificaDati)
                    .HasColumnName("DT_VERIFICA_DATI")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgVerificaDatiSino)
                    .HasColumnName("FLG_VERIFICA_DATI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdSinVerificaDati).HasColumnName("ID_SIN_VERIFICA_DATI");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteVerifica).HasColumnName("ID_UTENTE_VERIFICA");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SiniQzV3>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SINI_QZ_V3", "IAGENCY");

                entity.Property(e => e.AgeSini)
                    .HasColumnName("AGE_SINI")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodCoass)
                    .HasColumnName("COD_COASS")
                    .HasColumnType("decimal(1, 0)");

                entity.Property(e => e.DtAvv)
                    .HasColumnName("DT_AVV")
                    .HasColumnType("date");

                entity.Property(e => e.DtFranchigia)
                    .HasColumnName("DT_FRANCHIGIA")
                    .HasColumnType("date");

                entity.Property(e => e.DtPervDen)
                    .HasColumnName("DT_PERV_DEN")
                    .HasColumnType("date");

                entity.Property(e => e.DtPrimoPag)
                    .HasColumnName("DT_PRIMO_PAG")
                    .HasColumnType("date");

                entity.Property(e => e.Esercizio)
                    .HasColumnName("ESERCIZIO")
                    .HasColumnType("decimal(4, 0)");

                entity.Property(e => e.Esito)
                    .HasColumnName("ESITO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlCd)
                    .HasColumnName("FL_CD")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlPen)
                    .HasColumnName("FL_PEN")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Franchigia)
                    .HasColumnName("FRANCHIGIA")
                    .HasColumnType("decimal(14, 3)");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.ImpLiqu)
                    .HasColumnName("IMP_LIQU")
                    .HasColumnType("decimal(14, 3)");

                entity.Property(e => e.NumPol)
                    .HasColumnName("NUM_POL")
                    .HasMaxLength(14)
                    .IsUnicode(false);

                entity.Property(e => e.NumSini)
                    .HasColumnName("NUM_SINI")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.RamoSin)
                    .HasColumnName("RAMO_SIN")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Repertorio)
                    .HasColumnName("REPERTORIO")
                    .HasColumnType("decimal(5, 0)");

                entity.Property(e => e.RespPerc)
                    .HasColumnName("RESP_PERC")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.Targa)
                    .HasColumnName("TARGA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TipoDanno)
                    .HasColumnName("TIPO_DANNO")
                    .HasColumnType("decimal(1, 0)");

                entity.Property(e => e.TpRespQz)
                    .HasColumnName("TP_RESP_QZ")
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StatGestDettaglio>(entity =>
            {
                entity.HasKey(e => e.IdStatGestDettaglio);

                entity.ToTable("STAT_GEST_DETTAGLIO", "ICLAIMS");

                entity.HasIndex(e => e.FlgValoreIndiceDanno)
                    .HasName("XX02STAT_GEST_DETTAGLIO");

                entity.HasIndex(e => e.IdStatGestRiepilogo)
                    .HasName("XX01STAT_GEST_DETTAGLIO");

                entity.HasIndex(e => new { e.IdSinistro, e.IdPartita, e.FlgTipologiaDanno, e.FlgTipologiaGestionePartita })
                    .HasName("XX03_STAT_GEST_DETTAGLIO");

                entity.Property(e => e.IdStatGestDettaglio)
                    .HasColumnName("ID_STAT_GEST_DETTAGLIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoEsercizio).HasColumnName("ANNO_ESERCIZIO");

                entity.Property(e => e.DtRegistrazione)
                    .HasColumnName("DT_REGISTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCardDebitoreSino)
                    .HasColumnName("FLG_CARD_DEBITORE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCausaCaricataSino)
                    .HasColumnName("FLG_CAUSA_CARICATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCausaPendenteSino)
                    .HasColumnName("FLG_CAUSA_PENDENTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCausaScaricataSino)
                    .HasColumnName("FLG_CAUSA_SCARICATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCitazioneCaricataSino)
                    .HasColumnName("FLG_CITAZIONE_CARICATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCitazionePendenteSino)
                    .HasColumnName("FLG_CITAZIONE_PENDENTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCitazioneScaricataSino)
                    .HasColumnName("FLG_CITAZIONE_SCARICATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCttPassivoSino)
                    .HasColumnName("FLG_CTT_PASSIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgElettronicoSino)
                    .HasColumnName("FLG_ELETTRONICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEsitoCitazione)
                    .HasColumnName("FLG_ESITO_CITAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLdaSino)
                    .HasColumnName("FLG_LDA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMortaleSino)
                    .HasColumnName("FLG_MORTALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgProntaLiqSino)
                    .HasColumnName("FLG_PRONTA_LIQ_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .IsRequired()
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoTecnico)
                    .IsRequired()
                    .HasColumnName("FLG_RAMO_TECNICO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSinistroAntifrodeSino)
                    .HasColumnName("FLG_SINISTRO_ANTIFRODE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistroEsteroSino)
                    .HasColumnName("FLG_SINISTRO_ESTERO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinsitriAssOutsouSino)
                    .HasColumnName("FLG_SINSITRI_ASS_OUTSOU_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoGestDanno)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_GEST_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoGestPart)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_GEST_PART")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoGestSin)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_GEST_SIN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCoass)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaDanno)
                    .IsRequired()
                    .HasColumnName("FLG_TIPOLOGIA_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaGestionePartita)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE_PARTITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgValoreIndiceDanno)
                    .IsRequired()
                    .HasColumnName("FLG_VALORE_INDICE_DANNO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgValoreIndicePart)
                    .HasColumnName("FLG_VALORE_INDICE_PART")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgValoreIndiceSin)
                    .IsRequired()
                    .HasColumnName("FLG_VALORE_INDICE_SIN")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.GgDenunciaApertura).HasColumnName("GG_DENUNCIA_APERTURA");

                entity.Property(e => e.GgDenunciaChiusPagTot).HasColumnName("GG_DENUNCIA_CHIUS_PAG_TOT");

                entity.Property(e => e.GgIncPerScaPer).HasColumnName("GG_INC_PER_SCA_PER");

                entity.Property(e => e.GgPervenimApertura).HasColumnName("GG_PERVENIM_APERTURA");

                entity.Property(e => e.GgPervenimChiusPagTot).HasColumnName("GG_PERVENIM_CHIUS_PAG_TOT");

                entity.Property(e => e.GgPervenimIncPer).HasColumnName("GG_PERVENIM_INC_PER");

                entity.Property(e => e.GgScaPerChiusPagTot).HasColumnName("GG_SCA_PER_CHIUS_PAG_TOT");

                entity.Property(e => e.IdAgenzia).HasColumnName("ID_AGENZIA");

                entity.Property(e => e.IdIspettoratoOrig).HasColumnName("ID_ISPETTORATO_ORIG");

                entity.Property(e => e.IdIspettoratoOrigSin).HasColumnName("ID_ISPETTORATO_ORIG_SIN");

                entity.Property(e => e.IdIspettoratoUltimo).HasColumnName("ID_ISPETTORATO_ULTIMO");

                entity.Property(e => e.IdIspettoratoUltimoSin).HasColumnName("ID_ISPETTORATO_ULTIMO_SIN");

                entity.Property(e => e.IdLiquidatoreOrig).HasColumnName("ID_LIQUIDATORE_ORIG");

                entity.Property(e => e.IdLiquidatoreOrigSin).HasColumnName("ID_LIQUIDATORE_ORIG_SIN");

                entity.Property(e => e.IdLiquidatoreUltimo).HasColumnName("ID_LIQUIDATORE_ULTIMO");

                entity.Property(e => e.IdLiquidatoreUltimoSin).HasColumnName("ID_LIQUIDATORE_ULTIMO_SIN");

                entity.Property(e => e.IdPartita).HasColumnName("ID_PARTITA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdStatGestRiepilogo).HasColumnName("ID_STAT_GEST_RIEPILOGO");

                entity.Property(e => e.ImpPagato)
                    .HasColumnName("IMP_PAGATO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiserva)
                    .HasColumnName("IMP_RISERVA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiservaInEntrata)
                    .HasColumnName("IMP_RISERVA_IN_ENTRATA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NSinistro)
                    .IsRequired()
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ProgressivoPartitaDanno).HasColumnName("PROGRESSIVO_PARTITA_DANNO");
            });

            modelBuilder.Entity<StatGestDettaglioPrest>(entity =>
            {
                entity.HasKey(e => e.IdStatGestDettaglioPrest);

                entity.ToTable("STAT_GEST_DETTAGLIO_PREST", "ICLAIMS");

                entity.HasIndex(e => new { e.IdStatGestDettaglio, e.IdPrestazione })
                    .HasName("XX01STAT_GEST_DETTAGLIO_PREST");

                entity.Property(e => e.IdStatGestDettaglioPrest)
                    .HasColumnName("ID_STAT_GEST_DETTAGLIO_PREST")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.IdStatGestDettaglio).HasColumnName("ID_STAT_GEST_DETTAGLIO");

                entity.Property(e => e.ImpPagato)
                    .HasColumnName("IMP_PAGATO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiserva)
                    .HasColumnName("IMP_RISERVA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRiservaInEntrata)
                    .HasColumnName("IMP_RISERVA_IN_ENTRATA")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<StatGestRiepilogo>(entity =>
            {
                entity.HasKey(e => e.IdStatGestRiepilogo);

                entity.ToTable("STAT_GEST_RIEPILOGO", "ICLAIMS");

                entity.HasIndex(e => new { e.FlgTipoStatGest, e.DtRiferimento, e.FlgOndemandSino })
                    .HasName("XX01STAT_GEST_RIEPILOGO")
                    .IsUnique();

                entity.Property(e => e.IdStatGestRiepilogo)
                    .HasColumnName("ID_STAT_GEST_RIEPILOGO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtRiferimento)
                    .HasColumnName("DT_RIFERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysEstrazione)
                    .HasColumnName("DT_SYS_ESTRAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgOndemandSino)
                    .HasColumnName("FLG_ONDEMAND_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStoricizMensileSino)
                    .HasColumnName("FLG_STORICIZ_MENSILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoStatGest)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_STAT_GEST")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");
            });

            modelBuilder.Entity<Stati>(entity =>
            {
                entity.HasKey(e => e.KeyStato);

                entity.ToTable("STATI", "ISUITE");

                entity.HasIndex(e => e.IdStatoOggetto)
                    .HasName("XX02_STATI");

                entity.HasIndex(e => new { e.IdOggetto, e.FlgTipoOggetto })
                    .HasName("XX03_STATI");

                entity.HasIndex(e => new { e.IdStato, e.DtStoScadenzaLog })
                    .HasName("XX01_STATI");

                entity.Property(e => e.KeyStato)
                    .HasColumnName("KEY_STATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdOperazioniStati).HasColumnName("ID_OPERAZIONI_STATI");

                entity.Property(e => e.IdStato).HasColumnName("ID_STATO");

                entity.Property(e => e.IdStatoOggetto).HasColumnName("ID_STATO_OGGETTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<StoAbilitazioniFunz>(entity =>
            {
                entity.HasKey(e => new { e.IdAbilitazioneFunz, e.DtStorico });

                entity.ToTable("STO_ABILITAZIONI_FUNZ", "ISUITE");

                entity.HasIndex(e => e.IdProfilo)
                    .HasName("K01_STO_ABILITAZIONI_FUNZ");

                entity.Property(e => e.IdAbilitazioneFunz).HasColumnName("ID_ABILITAZIONE_FUNZ");

                entity.Property(e => e.DtStorico)
                    .HasColumnName("DT_STORICO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodFunzione)
                    .IsRequired()
                    .HasColumnName("COD_FUNZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCancellatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_CANCELLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdProfilo).HasColumnName("ID_PROFILO");

                entity.Property(e => e.IdStoricoUtente).HasColumnName("ID_STORICO_UTENTE");

                entity.Property(e => e.ValoriParametroEccezioni)
                    .HasColumnName("VALORI_PARAMETRO_ECCEZIONI")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StoDisposizioni>(entity =>
            {
                entity.HasKey(e => new { e.IdDisposizione, e.DtStorico });

                entity.ToTable("STO_DISPOSIZIONI", "ISUITE");

                entity.HasIndex(e => e.IdDistinta)
                    .HasName("K01_STO_DISPOSIZIONI");

                entity.Property(e => e.IdDisposizione).HasColumnName("ID_DISPOSIZIONE");

                entity.Property(e => e.DtStorico)
                    .HasColumnName("DT_STORICO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodRamoProdotto)
                    .HasColumnName("COD_RAMO_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRiferimento)
                    .HasColumnName("COD_RIFERIMENTO")
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.DtEmessoBanca)
                    .HasColumnName("DT_EMESSO_BANCA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamento)
                    .HasColumnName("DT_PAGAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPagamentoBanca)
                    .HasColumnName("DT_PAGAMENTO_BANCA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStornoBanca)
                    .HasColumnName("DT_STORNO_BANCA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Errore)
                    .HasColumnName("ERRORE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAnnullataSino)
                    .HasColumnName("FLG_ANNULLATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCancellatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_CANCELLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPresaVisioneSino)
                    .HasColumnName("FLG_PRESA_VISIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoDisp)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_DISP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCodRiferimento)
                    .HasColumnName("FLG_TIPO_COD_RIFERIMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggDisp)
                    .HasColumnName("FLG_TIPO_OGG_DISP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdContocorrenteBenef).HasColumnName("ID_CONTOCORRENTE_BENEF");

                entity.Property(e => e.IdDistinta).HasColumnName("ID_DISTINTA");

                entity.Property(e => e.IdIndirizzo).HasColumnName("ID_INDIRIZZO");

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdStoricoUtente).HasColumnName("ID_STORICO_UTENTE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdValuta).HasColumnName("ID_VALUTA");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.RifOggetto)
                    .IsRequired()
                    .HasColumnName("RIF_OGGETTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StoDistinte>(entity =>
            {
                entity.HasKey(e => new { e.IdDistinta, e.DtStorico });

                entity.ToTable("STO_DISTINTE", "ISUITE");

                entity.Property(e => e.IdDistinta).HasColumnName("ID_DISTINTA");

                entity.Property(e => e.DtStorico)
                    .HasColumnName("DT_STORICO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodRamoProdotto)
                    .HasColumnName("COD_RAMO_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtCreazione)
                    .HasColumnName("DT_CREAZIONE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtDistinta)
                    .HasColumnName("DT_DISTINTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoDistinta)
                    .HasColumnName("DT_STATO_DISTINTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtValuta)
                    .HasColumnName("DT_VALUTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAutorizzataSino)
                    .HasColumnName("FLG_AUTORIZZATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCancellatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_CANCELLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInviataSino)
                    .HasColumnName("FLG_INVIATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMezzoPagamento)
                    .IsRequired()
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoDistinta)
                    .HasColumnName("FLG_STATO_DISTINTA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDistinta)
                    .HasColumnName("FLG_TIPO_DISTINTA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdContocorrente).HasColumnName("ID_CONTOCORRENTE");

                entity.Property(e => e.IdStoricoUtente).HasColumnName("ID_STORICO_UTENTE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Progressivo).HasColumnName("PROGRESSIVO");
            });

            modelBuilder.Entity<StoEventi>(entity =>
            {
                entity.HasKey(e => new { e.IdEvento, e.DtStorico });

                entity.ToTable("STO_EVENTI", "ICLAIMS");

                entity.Property(e => e.IdEvento).HasColumnName("ID_EVENTO");

                entity.Property(e => e.DtStorico)
                    .HasColumnName("DT_STORICO")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DtAccadimentoEvento)
                    .HasColumnName("DT_ACCADIMENTO_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEvento)
                    .HasColumnName("DT_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCancellatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_CANCELLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.HhmmEvento)
                    .HasColumnName("HHMM_EVENTO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdIndirizzo).HasColumnName("ID_INDIRIZZO");

                entity.Property(e => e.IdStoricoUtente).HasColumnName("ID_STORICO_UTENTE");

                entity.Property(e => e.IdTipoEventoDen)
                    .HasColumnName("ID_TIPO_EVENTO_DEN")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NoteEvento)
                    .HasColumnName("NOTE_EVENTO")
                    .IsUnicode(false);

                entity.HasOne(d => d.IdTipoEventoDenNavigation)
                    .WithMany(p => p.StoEventi)
                    .HasForeignKey(d => d.IdTipoEventoDen)
                    .HasConstraintName("FK__STO_EVENT__ID_TI__689361F1");
            });

            modelBuilder.Entity<StoLimitePagamenti>(entity =>
            {
                entity.HasKey(e => new { e.IdLimitePagamento, e.DtStorico });

                entity.ToTable("STO_LIMITE_PAGAMENTI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdLimitePagamento, e.DtStorico })
                    .HasName("XX01STO_LIMITE_PAGAMENTI")
                    .IsUnique();

                entity.Property(e => e.IdLimitePagamento).HasColumnName("ID_LIMITE_PAGAMENTO");

                entity.Property(e => e.DtStorico)
                    .HasColumnName("DT_STORICO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EmailNotifica)
                    .HasColumnName("EMAIL_NOTIFICA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAmmettePagamentoSino)
                    .HasColumnName("FLG_AMMETTE_PAGAMENTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCancellatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_CANCELLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagniaLimPag).HasColumnName("ID_COMPAGNIA_LIM_PAG");

                entity.Property(e => e.IdProdotto).HasColumnName("ID_PRODOTTO");

                entity.Property(e => e.IdRamo).HasColumnName("ID_RAMO");

                entity.Property(e => e.IdStoricoUtente).HasColumnName("ID_STORICO_UTENTE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteLimPag).HasColumnName("ID_UTENTE_LIM_PAG");

                entity.Property(e => e.ImpSoglia)
                    .HasColumnName("IMP_SOGLIA")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<StoProfili>(entity =>
            {
                entity.HasKey(e => new { e.IdProfilo, e.DtStorico });

                entity.ToTable("STO_PROFILI", "ISUITE");

                entity.HasIndex(e => e.IdAppartenenzaVis)
                    .HasName("XX02STO_PROFILI");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX04STO_PROFILI");

                entity.HasIndex(e => e.IdProfiloSuperiore)
                    .HasName("XX03STO_PROFILI");

                entity.Property(e => e.IdProfilo).HasColumnName("ID_PROFILO");

                entity.Property(e => e.DtStorico)
                    .HasColumnName("DT_STORICO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodProfilo)
                    .IsRequired()
                    .HasColumnName("COD_PROFILO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAbilScadPolCrusSino)
                    .HasColumnName("FLG_ABIL_SCAD_POL_CRUS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCancellatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_CANCELLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRuoloUtenteVis)
                    .HasColumnName("FLG_TIPO_RUOLO_UTENTE_VIS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTrattaDatiSensibiliSino)
                    .IsRequired()
                    .HasColumnName("FLG_TRATTA_DATI_SENSIBILI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAppartenenzaVis).HasColumnName("ID_APPARTENENZA_VIS");

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdProfiloSuperiore).HasColumnName("ID_PROFILO_SUPERIORE");

                entity.Property(e => e.IdStoricoUtente).HasColumnName("ID_STORICO_UTENTE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StoUtenti>(entity =>
            {
                entity.HasKey(e => new { e.IdUtente, e.DtStorico });

                entity.ToTable("STO_UTENTI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX01STO_UTENTI");

                entity.HasIndex(e => e.IdAppartenenza)
                    .HasName("XX03STO_UTENTI");

                entity.HasIndex(e => e.IdLingua)
                    .HasName("XX02STO_UTENTI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.DtStorico)
                    .HasColumnName("DT_STORICO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtLoginErrata)
                    .HasColumnName("DT_LOGIN_ERRATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimaImpostazionePwd)
                    .HasColumnName("DT_ULTIMA_IMPOSTAZIONE_PWD")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimaLogin)
                    .HasColumnName("DT_ULTIMA_LOGIN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAccountDisabilitatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_ACCOUNT_DISABILITATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCanaleEmissione)
                    .HasColumnName("FLG_CANALE_EMISSIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCancellatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_CANCELLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInibisciCambioPwdSino)
                    .HasColumnName("FLG_INIBISCI_CAMBIO_PWD_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLetturaFacDgSino)
                    .HasColumnName("FLG_LETTURA_FAC_DG_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRuoloUtente)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_RUOLO_UTENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdAppartenenza).HasColumnName("ID_APPARTENENZA");

                entity.Property(e => e.IdLingua).HasColumnName("ID_LINGUA");

                entity.Property(e => e.IdStoricoUtente).HasColumnName("ID_STORICO_UTENTE");

                entity.Property(e => e.NumeroMinutiScaAccErr).HasColumnName("NUMERO_MINUTI_SCA_ACC_ERR");

                entity.Property(e => e.NumeroTentativiErrati).HasColumnName("NUMERO_TENTATIVI_ERRATI");

                entity.Property(e => e.NumeroTentativiLogin).HasColumnName("NUMERO_TENTATIVI_LOGIN");

                entity.Property(e => e.Password)
                    .HasColumnName("PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RiferimentoSso)
                    .HasColumnName("RIFERIMENTO_SSO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Username)
                    .IsRequired()
                    .HasColumnName("USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<StoUtentiGruppo>(entity =>
            {
                entity.HasKey(e => new { e.IdUtenteGruppo, e.DtStorico });

                entity.ToTable("STO_UTENTI_GRUPPO", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX03STO_UTENTI_GRUPPO");

                entity.HasIndex(e => e.IdFormula)
                    .HasName("XX01STO_UTENTI_GRUPPO");

                entity.HasIndex(e => e.IdUtenteGruppoSup)
                    .HasName("XX04STO_UTENTI_GRUPPO");

                entity.Property(e => e.IdUtenteGruppo).HasColumnName("ID_UTENTE_GRUPPO");

                entity.Property(e => e.DtStorico)
                    .HasColumnName("DT_STORICO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodDerogaGruppo).HasColumnName("COD_DEROGA_GRUPPO");

                entity.Property(e => e.CodGruppo)
                    .HasColumnName("COD_GRUPPO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.FlgAreaGruppo)
                    .HasColumnName("FLG_AREA_GRUPPO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCancellatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_CANCELLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEscludiDerogheSino)
                    .HasColumnName("FLG_ESCLUDI_DEROGHE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdFormula).HasColumnName("ID_FORMULA");

                entity.Property(e => e.IdStoricoUtente).HasColumnName("ID_STORICO_UTENTE");

                entity.Property(e => e.IdUtenteGruppoSup).HasColumnName("ID_UTENTE_GRUPPO_SUP");

                entity.Property(e => e.LivelloAutorizzazione).HasColumnName("LIVELLO_AUTORIZZAZIONE");

                entity.Property(e => e.LivelloVisibilitaDocumenti).HasColumnName("livello_visibilita_documenti");
            });

            modelBuilder.Entity<StoUtentiGruppoColl>(entity =>
            {
                entity.HasKey(e => new { e.IdUtenteGruppo, e.IdUtente, e.DtStorico });

                entity.ToTable("STO_UTENTI_GRUPPO_COLL", "ISUITE");

                entity.HasIndex(e => e.IdUtenteGruppo)
                    .HasName("XX01STO_UTENTI_GRUPPO_COLL");

                entity.Property(e => e.IdUtenteGruppo).HasColumnName("ID_UTENTE_GRUPPO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.DtStorico)
                    .HasColumnName("DT_STORICO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtFinVal)
                    .HasColumnName("DT_FIN_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniVal)
                    .HasColumnName("DT_INI_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCancellatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_CANCELLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDisabilitaMailSino)
                    .HasColumnName("FLG_DISABILITA_MAIL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDisabilitaNotificheSino)
                    .HasColumnName("FLG_DISABILITA_NOTIFICHE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgResponsabileSino)
                    .HasColumnName("FLG_RESPONSABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRuoloGruppo)
                    .HasColumnName("FLG_RUOLO_GRUPPO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdStoricoUtente).HasColumnName("ID_STORICO_UTENTE");
            });

            modelBuilder.Entity<StoUtentiIspettorati>(entity =>
            {
                entity.HasKey(e => new { e.IdUtenteIspettorato, e.DtStorico })
                    .HasName("PK_STO_UTENTI_ISPETTORATI_STO");

                entity.ToTable("STO_UTENTI_ISPETTORATI", "ISUITE");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX03STO_UTENTI_ISPETTORATI");

                entity.HasIndex(e => e.IdUtente)
                    .HasName("XX02STO_UTENTI_ISPETTORATI");

                entity.HasIndex(e => e.IdUtenteIspettorato)
                    .HasName("XX01STO_UTENTI_ISPETTORATI");

                entity.Property(e => e.IdUtenteIspettorato).HasColumnName("ID_UTENTE_ISPETTORATO");

                entity.Property(e => e.DtStorico)
                    .HasColumnName("DT_STORICO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCancellatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_CANCELLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdStoricoUtente).HasColumnName("ID_STORICO_UTENTE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<StoUtentiProfili>(entity =>
            {
                entity.HasKey(e => new { e.IdUtenteprofilo, e.DtStorico });

                entity.ToTable("STO_UTENTI_PROFILI", "ISUITE");

                entity.HasIndex(e => e.IdProfilo)
                    .HasName("XX02STO_UTENTI_PROFILI");

                entity.Property(e => e.IdUtenteprofilo).HasColumnName("ID_UTENTEPROFILO");

                entity.Property(e => e.DtStorico)
                    .HasColumnName("DT_STORICO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCancellatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_CANCELLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdProfilo).HasColumnName("ID_PROFILO");

                entity.Property(e => e.IdStoricoUtente).HasColumnName("ID_STORICO_UTENTE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<SysAbilitazioniFlagvalue>(entity =>
            {
                entity.HasKey(e => e.IdAbilitazioneflagvalue)
                    .HasName("PK__SYS_ABIL__CD9AB37D9A253A47");

                entity.ToTable("SYS_ABILITAZIONI_FLAGVALUE", "ISUITE");

                entity.HasIndex(e => e.IdAbilitazioneflagvalue)
                    .HasName("SYS_C0045859")
                    .IsUnique();

                entity.Property(e => e.IdAbilitazioneflagvalue)
                    .HasColumnName("ID_ABILITAZIONEFLAGVALUE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFlagvalue)
                    .HasColumnName("ID_FLAGVALUE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProfilo)
                    .HasColumnName("ID_PROFILO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysAbilitazioniFunz>(entity =>
            {
                entity.HasKey(e => e.IdAbilitazioneFunz)
                    .HasName("PK__SYS_ABIL__14E4004B717FE6FE");

                entity.ToTable("SYS_ABILITAZIONI_FUNZ", "ISUITE");

                entity.HasIndex(e => e.IdAbilitazioneFunz)
                    .HasName("SYS_C005731")
                    .IsUnique();

                entity.HasIndex(e => e.IdProfilo)
                    .HasName("K01_SYS_ABILITAZIONI_FUNZ");

                entity.HasIndex(e => new { e.CodFunzione, e.IdProfilo })
                    .HasName("XSYS_ABILITAZIONI_FUNZ")
                    .IsUnique();

                entity.Property(e => e.IdAbilitazioneFunz)
                    .HasColumnName("ID_ABILITAZIONE_FUNZ")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodFunzione)
                    .IsRequired()
                    .HasColumnName("COD_FUNZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdProfilo)
                    .HasColumnName("ID_PROFILO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ValoriParametroEccezioni)
                    .HasColumnName("VALORI_PARAMETRO_ECCEZIONI")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdProfiloNavigation)
                    .WithMany(p => p.SysAbilitazioniFunz)
                    .HasForeignKey(d => d.IdProfilo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_ABILI__ID_PR__7AB2122C");
            });

            modelBuilder.Entity<SysAbilitazioniMenu>(entity =>
            {
                entity.HasKey(e => e.IdAbilitazionemenu)
                    .HasName("PK__SYS_ABIL__70D4D5AA162F6071");

                entity.ToTable("SYS_ABILITAZIONI_MENU", "ISUITE");

                entity.HasIndex(e => e.IdAbilitazionemenu)
                    .HasName("SYS_C0045863")
                    .IsUnique();

                entity.HasIndex(e => e.IdAbilitazioneprodotto)
                    .HasName("K01_SYS_ABILITAZIONI_MENU");

                entity.HasIndex(e => e.IdMenuprocedura)
                    .HasName("XX03SYS_ABILITAZIONI_MENU");

                entity.Property(e => e.IdAbilitazionemenu)
                    .HasColumnName("ID_ABILITAZIONEMENU")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAbilitazioneprodotto)
                    .HasColumnName("ID_ABILITAZIONEPRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMenuprocedura)
                    .HasColumnName("ID_MENUPROCEDURA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdAbilitazioneprodottoNavigation)
                    .WithMany(p => p.SysAbilitazioniMenu)
                    .HasForeignKey(d => d.IdAbilitazioneprodotto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_ABILI__ID_AB__7C9A5A9E");

                entity.HasOne(d => d.IdMenuproceduraNavigation)
                    .WithMany(p => p.SysAbilitazioniMenu)
                    .HasForeignKey(d => d.IdMenuprocedura)
                    .HasConstraintName("FK__SYS_ABILI__ID_ME__7BA63665");
            });

            modelBuilder.Entity<SysAbilitazioniNavigatore>(entity =>
            {
                entity.HasKey(e => e.IdAbilitazionenavigatore)
                    .HasName("PK__SYS_ABIL__A1C1DFFB61F73B80");

                entity.ToTable("SYS_ABILITAZIONI_NAVIGATORE", "ISUITE");

                entity.HasIndex(e => e.IdAbilitazionenavigatore)
                    .HasName("SYS_C0045865")
                    .IsUnique();

                entity.Property(e => e.IdAbilitazionenavigatore)
                    .HasColumnName("ID_ABILITAZIONENAVIGATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMenuprocedura)
                    .HasColumnName("ID_MENUPROCEDURA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNavigatore)
                    .HasColumnName("ID_NAVIGATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNavigatoreMenu)
                    .HasColumnName("ID_NAVIGATORE_MENU")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProfilo)
                    .HasColumnName("ID_PROFILO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Step)
                    .HasColumnName("STEP")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysAbilitazioniProcessi>(entity =>
            {
                entity.HasKey(e => e.IdAbilitazioneprocesso)
                    .HasName("PK__SYS_ABIL__BA7FC7D1055CA36C");

                entity.ToTable("SYS_ABILITAZIONI_PROCESSI", "ISUITE");

                entity.HasIndex(e => e.IdAbilitazioneprocesso)
                    .HasName("SYS_C0045869")
                    .IsUnique();

                entity.HasIndex(e => e.IdProcesso)
                    .HasName("XX03SYS_ABILITAZIONI_PROCESSI");

                entity.HasIndex(e => e.IdProfilo)
                    .HasName("K01_SYS_ABILITAZIONI_PROCESSI");

                entity.HasIndex(e => new { e.IdProcesso, e.IdProfilo })
                    .HasName("XSYS_ABILITAZIONI_PROCESSI")
                    .IsUnique();

                entity.Property(e => e.IdAbilitazioneprocesso)
                    .HasColumnName("ID_ABILITAZIONEPROCESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProcesso)
                    .HasColumnName("ID_PROCESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProfilo)
                    .HasColumnName("ID_PROFILO")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdProcessoNavigation)
                    .WithMany(p => p.SysAbilitazioniProcessi)
                    .HasForeignKey(d => d.IdProcesso)
                    .HasConstraintName("FK__SYS_ABILI__ID_PR__7E82A310");

                entity.HasOne(d => d.IdProfiloNavigation)
                    .WithMany(p => p.SysAbilitazioniProcessi)
                    .HasForeignKey(d => d.IdProfilo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_ABILI__ID_PR__7D8E7ED7");
            });

            modelBuilder.Entity<SysAbilitazioniProd>(entity =>
            {
                entity.HasKey(e => e.IdAbilitazioneprodotto)
                    .HasName("PK__SYS_ABIL__71DDA2110DDDD734");

                entity.ToTable("SYS_ABILITAZIONI_PROD", "ISUITE");

                entity.HasIndex(e => e.IdAbilitazioneprodotto)
                    .HasName("SYS_C0045873")
                    .IsUnique();

                entity.HasIndex(e => e.IdProfilo)
                    .HasName("K01_SYS_ABILITAZIONI_PROD");

                entity.HasIndex(e => new { e.NomeProdottoIsuite, e.IdProfilo })
                    .HasName("XSYS_ABILITAZIONI_PROD")
                    .IsUnique();

                entity.Property(e => e.IdAbilitazioneprodotto)
                    .HasColumnName("ID_ABILITAZIONEPRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProfilo)
                    .HasColumnName("ID_PROFILO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NomeProdottoIsuite)
                    .IsRequired()
                    .HasColumnName("NOME_PRODOTTO_ISUITE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdProfiloNavigation)
                    .WithMany(p => p.SysAbilitazioniProd)
                    .HasForeignKey(d => d.IdProfilo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_ABILI__ID_PR__7F76C749");
            });

            modelBuilder.Entity<SysDebug>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SYS_DEBUG", "ISUITE");

                entity.Property(e => e.DtCompilazioneApp)
                    .HasColumnName("DT_COMPILAZIONE_APP")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCompilazioneClassibase)
                    .HasColumnName("DT_COMPILAZIONE_CLASSIBASE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCompilazioneCombcl)
                    .HasColumnName("DT_COMPILAZIONE_COMBCL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCompilazioneCombclbase)
                    .HasColumnName("DT_COMPILAZIONE_COMBCLBASE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCompilazioneEntitybase)
                    .HasColumnName("DT_COMPILAZIONE_ENTITYBASE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCompilazioneOmnidb)
                    .HasColumnName("DT_COMPILAZIONE_OMNIDB")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoApplicazione)
                    .HasColumnName("FLG_TIPO_APPLICAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDebug)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_DEBUG")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Messaggio1)
                    .HasColumnName("MESSAGGIO1")
                    .IsUnicode(false);

                entity.Property(e => e.Messaggio2)
                    .HasColumnName("MESSAGGIO2")
                    .IsUnicode(false);

                entity.Property(e => e.Metodo)
                    .HasColumnName("METODO")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.PathApplicazione)
                    .HasColumnName("PATH_APPLICAZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Timestamp)
                    .IsRequired()
                    .HasColumnName("TIMESTAMP")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.VersioneApp)
                    .HasColumnName("VERSIONE_APP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VersioneClassibase)
                    .HasColumnName("VERSIONE_CLASSIBASE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VersioneCombcl)
                    .HasColumnName("VERSIONE_COMBCL")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VersioneCombclbase)
                    .HasColumnName("VERSIONE_COMBCLBASE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VersioneEntitybase)
                    .HasColumnName("VERSIONE_ENTITYBASE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.VersioneOmnidb)
                    .HasColumnName("VERSIONE_OMNIDB")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysDebugWebapi>(entity =>
            {
                entity.HasKey(e => e.IdSysDebugWebapi)
                    .HasName("PK__SYS_DEBU__F02A1D79337DFA66");

                entity.ToTable("SYS_DEBUG_WEBAPI", "ISUITE");

                entity.HasIndex(e => new { e.DateStart, e.DateEnd })
                    .HasName("XX01SYS_DEBUG_WEBAPI");

                entity.Property(e => e.IdSysDebugWebapi)
                    .HasColumnName("ID_SYS_DEBUG_WEBAPI")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DateEnd).HasColumnName("DATE_END");

                entity.Property(e => e.DateStart).HasColumnName("DATE_START");

                entity.Property(e => e.Esito)
                    .HasColumnName("ESITO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Exception)
                    .HasColumnName("EXCEPTION")
                    .IsUnicode(false);

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IpChiamante)
                    .IsRequired()
                    .HasColumnName("IP_CHIAMANTE")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.NomeServizio)
                    .IsRequired()
                    .HasColumnName("NOME_SERVIZIO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Request)
                    .HasColumnName("REQUEST")
                    .IsUnicode(false);

                entity.Property(e => e.Response)
                    .HasColumnName("RESPONSE")
                    .IsUnicode(false);

                entity.Property(e => e.TimeExeMs).HasColumnName("TIME_EXE_MS");

                entity.Property(e => e.TimeExeSs).HasColumnName("TIME_EXE_SS");

                entity.Property(e => e.Token)
                    .IsRequired()
                    .HasColumnName("TOKEN")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysDettagliJob>(entity =>
            {
                entity.HasKey(e => e.IdDettaglioJob)
                    .HasName("PK__SYS_DETT__D55E2EB454AB672A");

                entity.ToTable("SYS_DETTAGLI_JOB", "ISUITE");

                entity.HasIndex(e => e.IdDettaglioJob)
                    .HasName("PK_SYS_DETTAGLI_JOB")
                    .IsUnique();

                entity.HasIndex(e => e.IdJob)
                    .HasName("XX02SYS_DETTAGLI_JOB");

                entity.HasIndex(e => new { e.IdJob, e.DtInizioElaborazione })
                    .HasName("K01_SYS_DETTAGLI_JOB");

                entity.Property(e => e.IdDettaglioJob)
                    .HasColumnName("ID_DETTAGLIO_JOB")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFineElaborazione)
                    .HasColumnName("DT_FINE_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioElaborazione)
                    .HasColumnName("DT_INIZIO_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEsitoElaborazione)
                    .HasColumnName("FLG_ESITO_ELABORAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSchedulatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_SCHEDULATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVerificatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_VERIFICATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdJob)
                    .HasColumnName("ID_JOB")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NomeSistemaOperativo)
                    .HasColumnName("NOME_SISTEMA_OPERATIVO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.Parametri)
                    .HasColumnName("PARAMETRI")
                    .HasColumnType("text");

                entity.Property(e => e.PidSistemaOperativo)
                    .HasColumnName("PID_SISTEMA_OPERATIVO")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdJobNavigation)
                    .WithMany(p => p.SysDettagliJob)
                    .HasForeignKey(d => d.IdJob)
                    .HasConstraintName("FK__SYS_DETTA__ID_JO__006AEB82");
            });

            modelBuilder.Entity<SysDipendenzeProcessi>(entity =>
            {
                entity.HasKey(e => e.IdDipendenzaProcesso)
                    .HasName("PK__SYS_DIPE__439D8247E0F598CB");

                entity.ToTable("SYS_DIPENDENZE_PROCESSI", "ISUITE");

                entity.HasIndex(e => e.IdDipendenzaProcesso)
                    .HasName("PK_SYS_REGOLE_PROCESSI")
                    .IsUnique();

                entity.HasIndex(e => e.IdProcesso)
                    .HasName("XX02SYS_DIPENDENZE_PROCESSI");

                entity.HasIndex(e => e.IdProcessoPadre)
                    .HasName("K02_SYS_RECOLE_PROCESSI");

                entity.HasIndex(e => new { e.IdProcesso, e.IdProcessoPadre, e.Ordine })
                    .HasName("K01_SYS_REGOLE_PROCESSI")
                    .IsUnique();

                entity.Property(e => e.IdDipendenzaProcesso)
                    .HasColumnName("ID_DIPENDENZA_PROCESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProcesso)
                    .HasColumnName("ID_PROCESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProcessoPadre)
                    .HasColumnName("ID_PROCESSO_PADRE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Ordine)
                    .HasColumnName("ORDINE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdProcessoNavigation)
                    .WithMany(p => p.SysDipendenzeProcessiIdProcessoNavigation)
                    .HasForeignKey(d => d.IdProcesso)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_DIPEN__ID_PR__015F0FBB");

                entity.HasOne(d => d.IdProcessoPadreNavigation)
                    .WithMany(p => p.SysDipendenzeProcessiIdProcessoPadreNavigation)
                    .HasForeignKey(d => d.IdProcessoPadre)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_DIPEN__ID_PR__025333F4");
            });

            modelBuilder.Entity<SysDizionario>(entity =>
            {
                entity.HasKey(e => e.IdVocedizionario)
                    .HasName("PK__SYS_DIZI__D13626C996022024");

                entity.ToTable("SYS_DIZIONARIO", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02SYS_DIZIONARIO");

                entity.HasIndex(e => e.IdLingua)
                    .HasName("XX03SYS_DIZIONARIO");

                entity.HasIndex(e => e.IdVocedizionario)
                    .HasName("SYS_C0045889")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdDescrizione, e.IdLingua })
                    .HasName("SYS_DIZIONARIO_K01")
                    .IsUnique();

                entity.Property(e => e.IdVocedizionario)
                    .HasColumnName("ID_VOCEDIZIONARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLingua)
                    .HasColumnName("ID_LINGUA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdLinguaNavigation)
                    .WithMany(p => p.SysDizionario)
                    .HasForeignKey(d => d.IdLingua)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_DIZIO__ID_LI__0347582D");
            });

            modelBuilder.Entity<SysFlagcode>(entity =>
            {
                entity.HasKey(e => e.IdFlgcode)
                    .HasName("PK__SYS_FLAG__34B1516C7CD38E8A");

                entity.ToTable("SYS_FLAGCODE", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02SYS_FLAGCODE");

                entity.HasIndex(e => e.IdFlgcode)
                    .HasName("SYS_C0045894")
                    .IsUnique();

                entity.Property(e => e.IdFlgcode)
                    .HasColumnName("ID_FLGCODE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodFlagSistema)
                    .IsRequired()
                    .HasColumnName("COD_FLAG_SISTEMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlagReadOnly)
                    .IsRequired()
                    .HasColumnName("FLAG_READ_ONLY")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFormatoVariabile)
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMulticompSino)
                    .HasColumnName("FLG_MULTICOMP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStoricoSino)
                    .HasColumnName("FLG_STORICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Lunghezza)
                    .HasColumnName("LUNGHEZZA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysFlagcodeCol>(entity =>
            {
                entity.HasKey(e => e.IdFlgcodeCol)
                    .HasName("PK__SYS_FLAG__B4D36313627ACE73");

                entity.ToTable("SYS_FLAGCODE_COL", "ISUITE");

                entity.HasIndex(e => e.IdFlgcodeCol)
                    .HasName("SYS_C0048529")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdFlgcode, e.NomeColonna })
                    .HasName("XX01_FLAGCODE_COL")
                    .IsUnique();

                entity.Property(e => e.IdFlgcodeCol)
                    .HasColumnName("ID_FLGCODE_COL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Descrizione)
                    .IsRequired()
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Dimensione)
                    .HasColumnName("DIMENSIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgFormato)
                    .IsRequired()
                    .HasColumnName("FLG_FORMATO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligatorioSino)
                    .HasColumnName("FLG_OBBLIGATORIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFlgcode)
                    .HasColumnName("ID_FLGCODE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFlgcodeRel)
                    .HasColumnName("ID_FLGCODE_REL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NomeColonna)
                    .IsRequired()
                    .HasColumnName("NOME_COLONNA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Ordine)
                    .HasColumnName("ORDINE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Precisione)
                    .HasColumnName("PRECISIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysFlagvalue>(entity =>
            {
                entity.HasKey(e => e.IdFlgvalue)
                    .HasName("PK__SYS_FLAG__E4196753F494CAB4");

                entity.ToTable("SYS_FLAGVALUE", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02SYS_FLAGVALUE");

                entity.HasIndex(e => e.IdFlgcode)
                    .HasName("XX03SYS_FLAGVALUE");

                entity.HasIndex(e => new { e.IdFlgcode, e.CodValoreFlagSistema })
                    .HasName("XX04SYS_FLAGVALUE");

                entity.Property(e => e.IdFlgvalue)
                    .HasColumnName("ID_FLGVALUE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodValoreFlagSistema)
                    .IsRequired()
                    .HasColumnName("COD_VALORE_FLAG_SISTEMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.DtFinVal)
                    .HasColumnName("DT_FIN_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniVal)
                    .HasColumnName("DT_INI_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFlgcode)
                    .HasColumnName("ID_FLGCODE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdFlgcodeNavigation)
                    .WithMany(p => p.SysFlagvalue)
                    .HasForeignKey(d => d.IdFlgcode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_FLAGV__ID_FL__043B7C66");
            });

            modelBuilder.Entity<SysFlagvalueCol>(entity =>
            {
                entity.HasKey(e => e.IdFlgvalueCol)
                    .HasName("PK__SYS_FLAG__A7013F2875184C44");

                entity.ToTable("SYS_FLAGVALUE_COL", "ISUITE");

                entity.HasIndex(e => e.IdFlgvalueCol)
                    .HasName("SYS_C0048536")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdFlgvalue, e.IdFlgcodeCol })
                    .HasName("XX01_FLAGVALUE_COL")
                    .IsUnique();

                entity.Property(e => e.IdFlgvalueCol)
                    .HasColumnName("ID_FLGVALUE_COL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFlgcodeCol)
                    .HasColumnName("ID_FLGCODE_COL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFlgvalue)
                    .HasColumnName("ID_FLGVALUE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ValoreData)
                    .HasColumnName("VALORE_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.ValoreNumero)
                    .HasColumnName("VALORE_NUMERO")
                    .HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ValoreTesto)
                    .HasColumnName("VALORE_TESTO")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysFlagvalueComp>(entity =>
            {
                entity.HasKey(e => e.IdFlgvalueComp)
                    .HasName("PK__SYS_FLAG__B4E04A33DD4A3DA5");

                entity.ToTable("SYS_FLAGVALUE_COMP", "ISUITE");

                entity.HasIndex(e => e.IdFlgvalueComp)
                    .HasName("SYS_C0048540")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdFlgvalue, e.IdCompagnia })
                    .HasName("XX01_FLAGVALUE_COMP")
                    .IsUnique();

                entity.Property(e => e.IdFlgvalueComp)
                    .HasColumnName("ID_FLGVALUE_COMP")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFlgvalue)
                    .HasColumnName("ID_FLGVALUE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysFunzioni>(entity =>
            {
                entity.HasKey(e => e.IdFunzione);

                entity.ToTable("SYS_FUNZIONI", "ISUITE");

                entity.Property(e => e.IdFunzione)
                    .HasColumnName("ID_FUNZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.Codice)
                    .IsRequired()
                    .HasColumnName("CODICE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceParametroEccezioni)
                    .HasColumnName("CODICE_PARAMETRO_ECCEZIONI")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneFunzione)
                    .HasColumnName("DESCRIZIONE_FUNZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DisabilitataDefault)
                    .HasColumnName("DISABILITATA_DEFAULT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInserimentoUtenteSino)
                    .HasColumnName("FLG_INSERIMENTO_UTENTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MacroFunzioneWise)
                    .HasColumnName("MACRO_FUNZIONE_WISE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ModuloWise)
                    .HasColumnName("MODULO_WISE")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysJob>(entity =>
            {
                entity.HasKey(e => e.IdJob)
                    .HasName("PK__SYS_JOB__2E3A6A10BB4C7747");

                entity.ToTable("SYS_JOB", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02SYS_JOB");

                entity.HasIndex(e => e.IdJob)
                    .HasName("PK_SYS_JOB")
                    .IsUnique();

                entity.HasIndex(e => e.IdJobFiglio)
                    .HasName("XX03SYS_JOB");

                entity.HasIndex(e => e.IdProcesso)
                    .HasName("XX04SYS_JOB");

                entity.HasIndex(e => new { e.IdCompagnia, e.DtSchedulazione })
                    .HasName("K01_SYS_JOB");

                entity.Property(e => e.IdJob)
                    .HasColumnName("ID_JOB")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Codice)
                    .HasColumnName("CODICE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtProssimaElaborazione)
                    .HasColumnName("DT_PROSSIMA_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSchedulazione)
                    .HasColumnName("DT_SCHEDULAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAgostoSino)
                    .HasColumnName("FLG_AGOSTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAprileSino)
                    .HasColumnName("FLG_APRILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDicembreSino)
                    .HasColumnName("FLG_DICEMBRE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDomenicaSino)
                    .HasColumnName("FLG_DOMENICA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEsecuzioneFiglio)
                    .HasColumnName("FLG_ESECUZIONE_FIGLIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFebbraioSino)
                    .HasColumnName("FLG_FEBBRAIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGennaioSino)
                    .HasColumnName("FLG_GENNAIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGiovediSino)
                    .HasColumnName("FLG_GIOVEDI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGiugnoSino)
                    .HasColumnName("FLG_GIUGNO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLuglioSino)
                    .HasColumnName("FLG_LUGLIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLunediSino)
                    .HasColumnName("FLG_LUNEDI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMaggioSino)
                    .HasColumnName("FLG_MAGGIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMartediSino)
                    .HasColumnName("FLG_MARTEDI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMarzoSino)
                    .HasColumnName("FLG_MARZO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMercolediSino)
                    .HasColumnName("FLG_MERCOLEDI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNovembreSino)
                    .HasColumnName("FLG_NOVEMBRE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgOttobreSino)
                    .HasColumnName("FLG_OTTOBRE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPeriodicitaElaborazione)
                    .IsRequired()
                    .HasColumnName("FLG_PERIODICITA_ELABORAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSabatoSino)
                    .HasColumnName("FLG_SABATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSchedAutomSino)
                    .HasColumnName("FLG_SCHED_AUTOM_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSettembreSino)
                    .HasColumnName("FLG_SETTEMBRE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSospesoSino)
                    .IsRequired()
                    .HasColumnName("FLG_SOSPESO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVenerdiSino)
                    .HasColumnName("FLG_VENERDI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdJobFiglio)
                    .HasColumnName("ID_JOB_FIGLIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProcesso)
                    .HasColumnName("ID_PROCESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Intervallo)
                    .HasColumnName("INTERVALLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.Parametri)
                    .HasColumnName("PARAMETRI")
                    .HasColumnType("text");

                entity.HasOne(d => d.IdCompagniaNavigation)
                    .WithMany(p => p.SysJob)
                    .HasForeignKey(d => d.IdCompagnia)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_JOB__ID_COMP__0623C4D8");

                entity.HasOne(d => d.IdProcessoNavigation)
                    .WithMany(p => p.SysJob)
                    .HasForeignKey(d => d.IdProcesso)
                    .HasConstraintName("FK__SYS_JOB__ID_PROC__052FA09F");
            });

            modelBuilder.Entity<SysJobAvvisi>(entity =>
            {
                entity.HasKey(e => e.IdJobAvviso)
                    .HasName("PK__SYS_JOB___94A97F5A6793FB83");

                entity.ToTable("SYS_JOB_AVVISI", "ISUITE");

                entity.HasIndex(e => e.IdJob)
                    .HasName("XX02SYS_JOB_AVVISI");

                entity.HasIndex(e => e.IdJobAvviso)
                    .HasName("PK_SYS_JOB_AVVISI")
                    .IsUnique();

                entity.HasIndex(e => e.IdUtente)
                    .HasName("K02_SYS_JOB_AVVISI");

                entity.HasIndex(e => new { e.IdJob, e.IdUtente })
                    .HasName("K01_SYS_JOB_AVVISI")
                    .IsUnique();

                entity.Property(e => e.IdJobAvviso)
                    .HasColumnName("ID_JOB_AVVISO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdJob)
                    .HasColumnName("ID_JOB")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdJobNavigation)
                    .WithMany(p => p.SysJobAvvisi)
                    .HasForeignKey(d => d.IdJob)
                    .HasConstraintName("FK__SYS_JOB_A__ID_JO__0717E911");
            });

            modelBuilder.Entity<SysJobMail>(entity =>
            {
                entity.HasKey(e => e.IdJobMail);

                entity.ToTable("SYS_JOB_MAIL", "ISUITE");

                entity.Property(e => e.IdJobMail)
                    .HasColumnName("ID_JOB_MAIL")
                    .ValueGeneratedNever();

                entity.Property(e => e.Destinatario)
                    .HasColumnName("DESTINATARIO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgInvioAbortita)
                    .HasColumnName("FLG_INVIO_ABORTITA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInvioErrore)
                    .HasColumnName("FLG_INVIO_ERRORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInvioNotificaAvvio)
                    .HasColumnName("FLG_INVIO_NOTIFICA_AVVIO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInvioSuccesso)
                    .HasColumnName("FLG_INVIO_SUCCESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInvioWarning)
                    .HasColumnName("FLG_INVIO_WARNING")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdJob).HasColumnName("ID_JOB");
            });

            modelBuilder.Entity<SysLingue>(entity =>
            {
                entity.HasKey(e => e.IdLingua)
                    .HasName("PK__SYS_LING__BF0D3F63B20424EB");

                entity.ToTable("SYS_LINGUE", "ISUITE");

                entity.HasIndex(e => e.CodLingua)
                    .HasName("SYS_LINGUE_K01")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02SYS_LINGUE");

                entity.HasIndex(e => e.IdLingua)
                    .HasName("SYS_C0045912")
                    .IsUnique();

                entity.Property(e => e.IdLingua)
                    .HasColumnName("ID_LINGUA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodLingua)
                    .IsRequired()
                    .HasColumnName("COD_LINGUA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysListeDistribuzione>(entity =>
            {
                entity.HasKey(e => e.IdListaDistribuzione)
                    .HasName("PK__SYS_LIST__386BAA8CBEA33EAE");

                entity.ToTable("SYS_LISTE_DISTRIBUZIONE", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03SYS_LISTE_DISTRIBUZIONE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02SYS_LISTE_DISTRIBUZIONE");

                entity.HasIndex(e => e.IdListaDistribuzione)
                    .HasName("PK_SYS_LISTE_DISTRIBUZIONE")
                    .IsUnique();

                entity.HasIndex(e => e.IdUtenteProprietario)
                    .HasName("XX04SYS_LISTE_DISTRIBUZIONE");

                entity.Property(e => e.IdListaDistribuzione)
                    .HasColumnName("ID_LISTA_DISTRIBUZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPubblicaSino)
                    .IsRequired()
                    .HasColumnName("FLG_PUBBLICA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteProprietario)
                    .HasColumnName("ID_UTENTE_PROPRIETARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysLogJob>(entity =>
            {
                entity.HasKey(e => e.IdLogJob)
                    .HasName("PK__SYS_LOG___15A850B1BD405BE2");

                entity.ToTable("SYS_LOG_JOB", "ISUITE");

                entity.HasIndex(e => e.IdDettaglioJob)
                    .HasName("K01_SYS_LOG_JOB");

                entity.HasIndex(e => e.IdLogJob)
                    .HasName("PK_SYS_LOG_JOB")
                    .IsUnique();

                entity.Property(e => e.IdLogJob)
                    .HasColumnName("ID_LOG_JOB")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgTipoSegnalazione)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_SEGNALAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDettaglioJob)
                    .HasColumnName("ID_DETTAGLIO_JOB")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.StringaSegnalazione)
                    .HasColumnName("STRINGA_SEGNALAZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdDettaglioJobNavigation)
                    .WithMany(p => p.SysLogJob)
                    .HasForeignKey(d => d.IdDettaglioJob)
                    .HasConstraintName("FK__SYS_LOG_J__ID_DE__080C0D4A");
            });

            modelBuilder.Entity<SysLogModifiche>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SYS_LOG_MODIFICHE", "ISUITE");

                entity.Property(e => e.Campo)
                    .HasColumnName("CAMPO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Chiave)
                    .HasColumnName("CHIAVE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtModifica)
                    .HasColumnName("DT_MODIFICA")
                    .HasColumnType("date");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Tabella)
                    .HasColumnName("TABELLA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ValoreNew)
                    .HasColumnName("VALORE_NEW")
                    .IsUnicode(false);

                entity.Property(e => e.ValoreOld)
                    .HasColumnName("VALORE_OLD")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysManuale>(entity =>
            {
                entity.HasKey(e => e.IdManuale)
                    .HasName("PK__SYS_MANU__81DBE59E22508054");

                entity.ToTable("SYS_MANUALE", "ISUITE");

                entity.HasIndex(e => e.IdLingua)
                    .HasName("XX02SYS_MANUALE");

                entity.HasIndex(e => e.IdManuale)
                    .HasName("SYS_C0045926")
                    .IsUnique();

                entity.Property(e => e.IdManuale)
                    .HasColumnName("ID_MANUALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLingua)
                    .HasColumnName("ID_LINGUA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PaginaAspx)
                    .IsRequired()
                    .HasColumnName("PAGINA_ASPX")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.PaginaManuale)
                    .IsRequired()
                    .HasColumnName("PAGINA_MANUALE")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysMembriListaDistribuzione>(entity =>
            {
                entity.HasKey(e => e.IdMembroListaDistribuzione)
                    .HasName("PK__SYS_MEMB__456BF0CF6E3A5A12");

                entity.ToTable("SYS_MEMBRI_LISTA_DISTRIBUZIONE", "ISUITE");

                entity.HasIndex(e => e.IdListaDistribuzione)
                    .HasName("XX02SYS_MEMBRI_LISTA_DISTRIBU");

                entity.HasIndex(e => e.IdMembroListaDistribuzione)
                    .HasName("PK_SYS_MEMBRI_LISTA_DISTR")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdListaDistribuzione, e.IdUtente })
                    .HasName("K01_SYS_MEMBRI_LISTA_DISTR")
                    .IsUnique();

                entity.Property(e => e.IdMembroListaDistribuzione)
                    .HasColumnName("ID_MEMBRO_LISTA_DISTRIBUZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdListaDistribuzione)
                    .HasColumnName("ID_LISTA_DISTRIBUZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdListaDistribuzioneNavigation)
                    .WithMany(p => p.SysMembriListaDistribuzione)
                    .HasForeignKey(d => d.IdListaDistribuzione)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_MEMBR__ID_LI__09003183");
            });

            modelBuilder.Entity<SysMenu>(entity =>
            {
                entity.HasKey(e => e.IdMenuprocedura)
                    .HasName("PK__SYS_MENU__F82C31E3FCFAFCF7");

                entity.ToTable("SYS_MENU", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02SYS_MENU");

                entity.HasIndex(e => e.IdDescrizioneFunzionalita)
                    .HasName("XX03SYS_MENU");

                entity.HasIndex(e => e.IdMenuprocedura)
                    .HasName("SYS_C0045936")
                    .IsUnique();

                entity.Property(e => e.IdMenuprocedura)
                    .HasColumnName("ID_MENUPROCEDURA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodOperazionePtf).HasColumnName("COD_OPERAZIONE_PTF");

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneFunzionalita)
                    .HasColumnName("DESCRIZIONE_FUNZIONALITA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCambioLinguaSino)
                    .HasColumnName("FLG_CAMBIO_LINGUA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCambioValutaSino)
                    .HasColumnName("FLG_CAMBIO_VALUTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDisabilitaCacheSino)
                    .HasColumnName("flg_disabilita_cache_sino")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEspansoSino)
                    .HasColumnName("FLG_ESPANSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMenuProtettoSino)
                    .HasColumnName("FLG_MENU_PROTETTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSystemSino)
                    .HasColumnName("FLG_SYSTEM_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMenu)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_MENU")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoNodo)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_NODO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Icona)
                    .HasColumnName("ICONA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizioneFunzionalita)
                    .HasColumnName("ID_DESCRIZIONE_FUNZIONALITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NomeProdottoIsuite)
                    .IsRequired()
                    .HasColumnName("NOME_PRODOTTO_ISUITE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Ordine)
                    .HasColumnName("ORDINE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysMenuPreferiti>(entity =>
            {
                entity.HasKey(e => e.IdMenuPreferito)
                    .HasName("PK__SYS_MENU__A5B4536AD0CE682A");

                entity.ToTable("SYS_MENU_PREFERITI", "ISUITE");

                entity.HasIndex(e => e.IdMenuPreferito)
                    .HasName("PK_SYS_MENU_PREFERITI")
                    .IsUnique();

                entity.HasIndex(e => e.IdMenuprocedura)
                    .HasName("XX02SYS_MENU_PREFERITI");

                entity.HasIndex(e => new { e.IdUtente, e.Ordine })
                    .HasName("K01_SYS_MENU_PREFERITI");

                entity.Property(e => e.IdMenuPreferito)
                    .HasColumnName("ID_MENU_PREFERITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMenuprocedura)
                    .HasColumnName("ID_MENUPROCEDURA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Ordine)
                    .HasColumnName("ORDINE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdMenuproceduraNavigation)
                    .WithMany(p => p.SysMenuPreferiti)
                    .HasForeignKey(d => d.IdMenuprocedura)
                    .HasConstraintName("FK__SYS_MENU___ID_ME__09F455BC");

                entity.HasOne(d => d.IdUtenteNavigation)
                    .WithMany(p => p.SysMenuPreferiti)
                    .HasForeignKey(d => d.IdUtente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_MENU___ID_UT__0AE879F5");
            });

            modelBuilder.Entity<SysMessaggiInfo>(entity =>
            {
                entity.HasKey(e => e.KeySysMessaggiInfo)
                    .HasName("PK_ISUITE_SYS_MESSAGGI_INFO");

                entity.ToTable("SYS_MESSAGGI_INFO", "ISUITE");

                entity.HasIndex(e => new { e.IdSysMessaggiInfo, e.DtStoScadenzaFis })
                    .HasName("XX01SYS_MESSAGGI_INFO");

                entity.HasIndex(e => new { e.Pagina, e.Controllo, e.DtStoScadenzaFis })
                    .HasName("XX02SYS_MESSAGGI_INFO");

                entity.Property(e => e.KeySysMessaggiInfo)
                    .HasColumnName("KEY_SYS_MESSAGGI_INFO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Controllo)
                    .IsRequired()
                    .HasColumnName("CONTROLLO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .IsRequired()
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdSysMessaggiInfo).HasColumnName("ID_SYS_MESSAGGI_INFO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Pagina)
                    .IsRequired()
                    .HasColumnName("PAGINA")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysNavigatore>(entity =>
            {
                entity.HasKey(e => e.IdNavigatore)
                    .HasName("PK__SYS_NAVI__790ED081C3FF31E6");

                entity.ToTable("SYS_NAVIGATORE", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02SYS_NAVIGATORE");

                entity.HasIndex(e => e.IdNavigatore)
                    .HasName("SYS_C0045945")
                    .IsUnique();

                entity.HasIndex(e => new { e.FlgTipoNavigatore, e.Step })
                    .HasName("XSYS_NAVIGATORE")
                    .IsUnique();

                entity.Property(e => e.IdNavigatore)
                    .HasColumnName("ID_NAVIGATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Codice)
                    .HasColumnName("CODICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDisabilitatoSino)
                    .HasColumnName("FLG_DISABILITATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoNavigatore)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_NAVIGATORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Step)
                    .HasColumnName("STEP")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysNavigatoreMenu>(entity =>
            {
                entity.HasKey(e => e.IdNavigatoreMenu)
                    .HasName("PK__SYS_NAVI__DEA09D0FDE20DC71");

                entity.ToTable("SYS_NAVIGATORE_MENU", "ISUITE");

                entity.HasIndex(e => e.IdNavigatoreMenu)
                    .HasName("SYS_C0045949")
                    .IsUnique();

                entity.Property(e => e.IdNavigatoreMenu)
                    .HasColumnName("ID_NAVIGATORE_MENU")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgTipoNavigatore)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_NAVIGATORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdMenuprocedura)
                    .HasColumnName("ID_MENUPROCEDURA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysNumerazione>(entity =>
            {
                entity.HasKey(e => e.IdNumerazione)
                    .HasName("PK__SYS_NUME__C54E1267BCE6DFC7");

                entity.ToTable("SYS_NUMERAZIONE", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04SYS_NUMERAZIONE");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX03SYS_NUMERAZIONE");

                entity.HasIndex(e => e.IdNumerazione)
                    .HasName("SYS_C0045954")
                    .IsUnique();

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02SYS_NUMERAZIONE");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdRetevendita, e.IdIspettorato, e.AnnoEsercizio, e.FlgTipoNumerazione, e.FlgRamoTecnico, e.FlgTipologiaSinistro })
                    .HasName("XSYS_NUMERAZIONE")
                    .IsUnique();

                entity.Property(e => e.IdNumerazione)
                    .HasColumnName("ID_NUMERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoEsercizio)
                    .HasColumnName("ANNO_ESERCIZIO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("FLG_RAMO_TECNICO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoNumerazione)
                    .HasColumnName("FLG_TIPO_NUMERAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaSinistro)
                    .HasColumnName("FLG_TIPOLOGIA_SINISTRO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdMandataria).HasColumnName("ID_MANDATARIA");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ProgressivoNumerazione)
                    .HasColumnName("PROGRESSIVO_NUMERAZIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysParametri>(entity =>
            {
                entity.HasKey(e => e.IdParametro)
                    .HasName("PK__SYS_PARA__79032FF53C521A98");

                entity.ToTable("SYS_PARAMETRI", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02SYS_PARAMETRI");

                entity.HasIndex(e => e.IdParametro)
                    .HasName("SYS_C0045956")
                    .IsUnique();

                entity.HasIndex(e => e.IdTabella)
                    .HasName("XX03SYS_PARAMETRI");

                entity.Property(e => e.IdParametro)
                    .HasColumnName("ID_PARAMETRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtData)
                    .HasColumnName("DT_DATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgModificabileSino)
                    .HasColumnName("FLG_MODIFICABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoParametro)
                    .HasColumnName("FLG_TIPO_PARAMETRO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoParametro2)
                    .HasColumnName("FLG_TIPO_PARAMETRO2")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoParametro3)
                    .HasColumnName("FLG_TIPO_PARAMETRO3")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabella)
                    .HasColumnName("ID_TABELLA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Numero)
                    .HasColumnName("NUMERO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Stringa)
                    .HasColumnName("STRINGA")
                    .IsUnicode(false);

                entity.HasOne(d => d.IdCompagniaNavigation)
                    .WithMany(p => p.SysParametri)
                    .HasForeignKey(d => d.IdCompagnia)
                    .HasConstraintName("FK__SYS_PARAM__ID_CO__0BDC9E2E");
            });

            modelBuilder.Entity<SysParametriProcessi>(entity =>
            {
                entity.HasKey(e => e.IdParametroProcesso)
                    .HasName("PK__SYS_PARA__A95A7F24E70A954B");

                entity.ToTable("SYS_PARAMETRI_PROCESSI", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02SYS_PARAMETRI_PROCESSI");

                entity.HasIndex(e => e.IdParametroProcesso)
                    .HasName("PK_SYS_PARAMETRI_PROCESSI")
                    .IsUnique();

                entity.HasIndex(e => e.IdProcesso)
                    .HasName("K01_SYS_PARAMETRI_PROCESSI");

                entity.Property(e => e.IdParametroProcesso)
                    .HasColumnName("ID_PARAMETRO_PROCESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodFlagSistema)
                    .HasColumnName("COD_FLAG_SISTEMA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Dimensione)
                    .HasColumnName("DIMENSIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgFormatoVariabile)
                    .IsRequired()
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligatorioSino)
                    .IsRequired()
                    .HasColumnName("FLG_OBBLIGATORIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProcesso)
                    .HasColumnName("ID_PROCESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Ordine)
                    .HasColumnName("ORDINE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdProcessoNavigation)
                    .WithMany(p => p.SysParametriProcessi)
                    .HasForeignKey(d => d.IdProcesso)
                    .HasConstraintName("FK__SYS_PARAM__ID_PR__0CD0C267");
            });

            modelBuilder.Entity<SysPreferenzeDg>(entity =>
            {
                entity.HasKey(e => e.IdPreferenzaDg)
                    .HasName("PK__SYS_PREF__7E03A59CD0346CF7");

                entity.ToTable("SYS_PREFERENZE_DG", "ISUITE");

                entity.HasIndex(e => e.IdPreferenzaDg)
                    .HasName("PK_SYS_PREFERENZE_DG")
                    .IsUnique();

                entity.Property(e => e.IdPreferenzaDg)
                    .HasColumnName("ID_PREFERENZA_DG")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ChiaveDatagrid)
                    .HasColumnName("CHIAVE_DATAGRID")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumElePagina)
                    .HasColumnName("NUM_ELE_PAGINA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Ordinamento)
                    .HasColumnName("ORDINAMENTO")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysProcessi>(entity =>
            {
                entity.HasKey(e => e.IdProcesso)
                    .HasName("PK__SYS_PROC__A6C74608312B592A");

                entity.ToTable("SYS_PROCESSI", "ISUITE");

                entity.HasIndex(e => e.Codice)
                    .HasName("K01_SYS_PROCESSI");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02SYS_PROCESSI");

                entity.HasIndex(e => e.IdProcesso)
                    .HasName("PK_SYS_PROCESSI")
                    .IsUnique();

                entity.Property(e => e.IdProcesso)
                    .HasColumnName("ID_PROCESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Codice)
                    .HasColumnName("CODICE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSchedulabileManSino)
                    .IsRequired()
                    .HasColumnName("FLG_SCHEDULABILE_MAN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEsecuzione)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ESECUZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoProcesso)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_PROCESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Modulo)
                    .IsRequired()
                    .HasColumnName("MODULO")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysProcessiCompagnie>(entity =>
            {
                entity.HasKey(e => e.IdProcessoCompagnia)
                    .HasName("PK__SYS_PROC__5F013D0F7B16524B");

                entity.ToTable("SYS_PROCESSI_COMPAGNIE", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("K01_SYS_PROCESSI_COMPAGNIE");

                entity.HasIndex(e => e.IdProcesso)
                    .HasName("K02_SYS_PROCESSI_COMPAGNIE");

                entity.HasIndex(e => e.IdProcessoCompagnia)
                    .HasName("PK_SYS_PROCESSI_COMPAGNIE")
                    .IsUnique();

                entity.Property(e => e.IdProcessoCompagnia)
                    .HasColumnName("ID_PROCESSO_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtUltimaElaborazione)
                    .HasColumnName("DT_ULTIMA_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.HhmmAl)
                    .IsRequired()
                    .HasColumnName("HHMM_AL")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.HhmmDal)
                    .IsRequired()
                    .HasColumnName("HHMM_DAL")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProcesso)
                    .HasColumnName("ID_PROCESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroElaborazioni)
                    .HasColumnName("NUMERO_ELABORAZIONI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.TempoMedio)
                    .HasColumnName("TEMPO_MEDIO")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdCompagniaNavigation)
                    .WithMany(p => p.SysProcessiCompagnie)
                    .HasForeignKey(d => d.IdCompagnia)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_PROCE__ID_CO__0EB90AD9");

                entity.HasOne(d => d.IdProcessoNavigation)
                    .WithMany(p => p.SysProcessiCompagnie)
                    .HasForeignKey(d => d.IdProcesso)
                    .HasConstraintName("FK__SYS_PROCE__ID_PR__0DC4E6A0");
            });

            modelBuilder.Entity<SysProfili>(entity =>
            {
                entity.HasKey(e => e.IdProfilo)
                    .HasName("PK__SYS_PROF__0DB3039A1FA4DB10");

                entity.ToTable("SYS_PROFILI", "ISUITE");

                entity.HasIndex(e => e.IdAppartenenzaVis)
                    .HasName("XX02SYS_PROFILI");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX04SYS_PROFILI");

                entity.HasIndex(e => e.IdProfilo)
                    .HasName("SYS_C0045983")
                    .IsUnique();

                entity.HasIndex(e => e.IdProfiloSuperiore)
                    .HasName("XX03SYS_PROFILI");

                entity.Property(e => e.IdProfilo)
                    .HasColumnName("ID_PROFILO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodProfilo)
                    .IsRequired()
                    .HasColumnName("COD_PROFILO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAbilScadPolCrusSino)
                    .HasColumnName("FLG_ABIL_SCAD_POL_CRUS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRuoloUtenteVis)
                    .HasColumnName("FLG_TIPO_RUOLO_UTENTE_VIS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTrattaDatiSensibiliSino)
                    .IsRequired()
                    .HasColumnName("FLG_TRATTA_DATI_SENSIBILI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAppartenenzaVis)
                    .HasColumnName("ID_APPARTENENZA_VIS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProfiloSuperiore)
                    .HasColumnName("ID_PROFILO_SUPERIORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysProfiliComp>(entity =>
            {
                entity.HasKey(e => e.IdProfilocompagnia);

                entity.ToTable("SYS_PROFILI_COMP", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02SYS_PROFILI_COMP");

                entity.HasIndex(e => e.IdProfilo)
                    .HasName("XX01SYS_PROFILI_COMP");

                entity.Property(e => e.IdProfilocompagnia)
                    .HasColumnName("ID_PROFILOCOMPAGNIA")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdProfilo).HasColumnName("ID_PROFILO");
            });

            modelBuilder.Entity<SysRequisitiAccount>(entity =>
            {
                entity.HasKey(e => e.IdRequisitiaccount)
                    .HasName("PK__SYS_REQU__452B406FEF9B1FEA");

                entity.ToTable("SYS_REQUISITI_ACCOUNT", "ISUITE");

                entity.HasIndex(e => e.IdRequisitiaccount)
                    .HasName("SYS_C0045994")
                    .IsUnique();

                entity.Property(e => e.IdRequisitiaccount)
                    .HasColumnName("ID_REQUISITIACCOUNT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DurataGgMaxLastLogin)
                    .HasColumnName("DURATA_GG_MAX_LAST_LOGIN")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DurataGgMaxLastLoginSens)
                    .HasColumnName("DURATA_GG_MAX_LAST_LOGIN_SENS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DurataGgMaxPwd)
                    .HasColumnName("DURATA_GG_MAX_PWD")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DurataGgMaxPwdSens)
                    .HasColumnName("DURATA_GG_MAX_PWD_SENS")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.LunghezzaMinPwd)
                    .HasColumnName("LUNGHEZZA_MIN_PWD")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.LunghezzaMinUsername)
                    .HasColumnName("LUNGHEZZA_MIN_USERNAME")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroMinCarAlfPwd)
                    .HasColumnName("NUMERO_MIN_CAR_ALF_PWD")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroMinCarNumPwd)
                    .HasColumnName("NUMERO_MIN_CAR_NUM_PWD")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroMinCarSpePwd)
                    .HasColumnName("NUMERO_MIN_CAR_SPE_PWD")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroMinutiScaAccErrDef)
                    .HasColumnName("NUMERO_MINUTI_SCA_ACC_ERR_DEF")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroPwdNonRiutilizzabili).HasColumnName("NUMERO_PWD_NON_RIUTILIZZABILI");

                entity.Property(e => e.NumeroTentativiLoginDef)
                    .HasColumnName("NUMERO_TENTATIVI_LOGIN_DEF")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysSchedulazioniJob>(entity =>
            {
                entity.HasKey(e => e.KeySchedulazioneJob)
                    .HasName("PK__SYS_SCHE__2611AC31ADB3D266");

                entity.ToTable("SYS_SCHEDULAZIONI_JOB", "ISUITE");

                entity.HasIndex(e => new { e.IdJob, e.DtStoScadenzaLog })
                    .HasName("XX01_SYS_SCHEDULAZIONI_JOB");

                entity.Property(e => e.KeySchedulazioneJob)
                    .HasColumnName("KEY_SCHEDULAZIONE_JOB")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPeriodicitaJob)
                    .HasColumnName("FLG_PERIODICITA_JOB")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgValorePeriodicita)
                    .HasColumnName("FLG_VALORE_PERIODICITA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdJob).HasColumnName("ID_JOB");

                entity.Property(e => e.IdSchedulazioneJob).HasColumnName("ID_SCHEDULAZIONE_JOB");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.OraFinePrevista)
                    .HasColumnName("ORA_FINE_PREVISTA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.OraInizioPrevista)
                    .HasColumnName("ORA_INIZIO_PREVISTA")
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysSequenze>(entity =>
            {
                entity.HasKey(e => e.NomeTabella)
                    .HasName("PK__SYS_SEQU__33B3D77715AB9FB6");

                entity.ToTable("SYS_SEQUENZE", "ISUITE");

                entity.HasIndex(e => e.IdProgressivo)
                    .HasName("XX01SYS_SEQUENZE");

                entity.HasIndex(e => e.NomeTabella)
                    .HasName("SYS_C0045996")
                    .IsUnique();

                entity.Property(e => e.NomeTabella)
                    .HasColumnName("NOME_TABELLA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdProgressivo)
                    .HasColumnName("ID_PROGRESSIVO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysUtenti>(entity =>
            {
                entity.HasKey(e => e.IdUtente)
                    .HasName("PK__SYS_UTEN__C9E0EAC57DCBBA74");

                entity.ToTable("SYS_UTENTI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX01SYS_UTENTI");

                entity.HasIndex(e => e.IdAppartenenza)
                    .HasName("XX03SYS_UTENTI");

                entity.HasIndex(e => e.IdLingua)
                    .HasName("XX02SYS_UTENTI");

                entity.HasIndex(e => e.IdUtente)
                    .HasName("SYS_C0046005")
                    .IsUnique();

                entity.HasIndex(e => e.RiferimentoSso)
                    .HasName("XX04SYS_UTENTI");

                entity.HasIndex(e => e.Username)
                    .HasName("XSYS_UTENTI")
                    .IsUnique();

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtLoginErrata)
                    .HasColumnName("DT_LOGIN_ERRATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimaImpostazionePwd)
                    .HasColumnName("DT_ULTIMA_IMPOSTAZIONE_PWD")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltimaLogin)
                    .HasColumnName("DT_ULTIMA_LOGIN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAccountDisabilitatoSino)
                    .IsRequired()
                    .HasColumnName("FLG_ACCOUNT_DISABILITATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCanaleEmissione)
                    .HasColumnName("FLG_CANALE_EMISSIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgInibisciCambioPwdSino)
                    .HasColumnName("FLG_INIBISCI_CAMBIO_PWD_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLetturaFacDgSino)
                    .HasColumnName("FLG_LETTURA_FAC_DG_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRuoloUtente)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_RUOLO_UTENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAppartenenza)
                    .HasColumnName("ID_APPARTENENZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLingua)
                    .HasColumnName("ID_LINGUA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroMinutiScaAccErr)
                    .HasColumnName("NUMERO_MINUTI_SCA_ACC_ERR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroTentativiErrati)
                    .HasColumnName("NUMERO_TENTATIVI_ERRATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroTentativiLogin)
                    .HasColumnName("NUMERO_TENTATIVI_LOGIN")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Password)
                    .HasColumnName("PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.RiferimentoSso)
                    .HasColumnName("RIFERIMENTO_SSO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Username)
                    .IsRequired()
                    .HasColumnName("USERNAME")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdLinguaNavigation)
                    .WithMany(p => p.SysUtenti)
                    .HasForeignKey(d => d.IdLingua)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_UTENT__ID_LI__0FAD2F12");
            });

            modelBuilder.Entity<SysUtentiCollegati>(entity =>
            {
                entity.HasKey(e => e.IdUtentiCollegati);

                entity.ToTable("SYS_UTENTI_COLLEGATI", "ISUITE");

                entity.Property(e => e.IdUtentiCollegati)
                    .HasColumnName("ID_UTENTI_COLLEGATI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodRaggruppamento)
                    .IsRequired()
                    .HasColumnName("COD_RAGGRUPPAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DtUltimaLogin)
                    .HasColumnName("DT_ULTIMA_LOGIN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgUltimoUtilizzatoSino)
                    .HasColumnName("FLG_ULTIMO_UTILIZZATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<SysUtentiComp>(entity =>
            {
                entity.HasKey(e => e.IdUtenteCompagnia)
                    .HasName("PK__SYS_UTEN__24178B049E409159");

                entity.ToTable("SYS_UTENTI_COMP", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02SYS_UTENTI_COMP");

                entity.HasIndex(e => e.IdUtenteCompagnia)
                    .HasName("SYS_C0046009")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCompagnia, e.IdUtente })
                    .HasName("XSYS_UTENTI_COMP")
                    .IsUnique();

                entity.Property(e => e.IdUtenteCompagnia)
                    .HasColumnName("ID_UTENTE_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgPreferitaSino)
                    .HasColumnName("FLG_PREFERITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoStylesheet)
                    .HasColumnName("FLG_TIPO_STYLESHEET")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysUtentiGruppo>(entity =>
            {
                entity.HasKey(e => e.IdUtenteGruppo)
                    .HasName("PK__SYS_UTEN__A69C25827175DF3E");

                entity.ToTable("SYS_UTENTI_GRUPPO", "ISUITE");

                entity.HasIndex(e => e.IdUtenteGruppo)
                    .HasName("SYS_UTENTI_GRUPPO_PK")
                    .IsUnique();

                entity.Property(e => e.IdUtenteGruppo)
                    .HasColumnName("ID_UTENTE_GRUPPO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDerogaGruppo).HasColumnName("COD_DEROGA_GRUPPO");

                entity.Property(e => e.CodGruppo)
                    .HasColumnName("COD_GRUPPO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.FlgAreaGruppo)
                    .HasColumnName("FLG_AREA_GRUPPO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEscludiDerogheSino)
                    .HasColumnName("FLG_ESCLUDI_DEROGHE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFormula)
                    .HasColumnName("ID_FORMULA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteGruppoSup)
                    .HasColumnName("ID_UTENTE_GRUPPO_SUP")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.LivelloAutorizzazione).HasColumnName("LIVELLO_AUTORIZZAZIONE");

                entity.Property(e => e.LivelloVisibilitaDocumenti).HasColumnName("LIVELLO_VISIBILITA_DOCUMENTI");
            });

            modelBuilder.Entity<SysUtentiGruppoColl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SYS_UTENTI_GRUPPO_COLL", "ISUITE");

                entity.Property(e => e.DtFinVal)
                    .HasColumnName("DT_FIN_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniVal)
                    .HasColumnName("DT_INI_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDisabilitaMailSino)
                    .HasColumnName("FLG_DISABILITA_MAIL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDisabilitaNotificheSino)
                    .HasColumnName("FLG_DISABILITA_NOTIFICHE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgResponsabileSino)
                    .HasColumnName("FLG_RESPONSABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRuoloGruppo)
                    .HasColumnName("FLG_RUOLO_GRUPPO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteGruppo)
                    .HasColumnName("ID_UTENTE_GRUPPO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysUtentiGruppoComp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SYS_UTENTI_GRUPPO_COMP", "ISUITE");

                entity.HasIndex(e => new { e.IdUtenteGruppo, e.IdCompagnia })
                    .HasName("XXXSYS_UTENTI_GRUPPO_COMP_R01")
                    .IsUnique();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteGruppo)
                    .HasColumnName("ID_UTENTE_GRUPPO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<SysUtentiIndisponibilita>(entity =>
            {
                entity.HasKey(e => e.IdUtenteIndisponibilita);

                entity.ToTable("SYS_UTENTI_INDISPONIBILITA", "ISUITE");

                entity.HasIndex(e => e.IdUtente)
                    .HasName("IX_01SYS_UTENTI_INDISPONIBILITA");

                entity.Property(e => e.IdUtenteIndisponibilita)
                    .HasColumnName("ID_UTENTE_INDISPONIBILITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtIndisponibileA)
                    .HasColumnName("DT_INDISPONIBILE_A")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIndisponibileDa)
                    .HasColumnName("DT_INDISPONIBILE_DA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysInserimento)
                    .HasColumnName("DT_SYS_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysModifica)
                    .HasColumnName("DT_SYS_MODIFICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAnnullatoSino)
                    .HasColumnName("FLG_ANNULLATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoIndisponibilita)
                    .HasColumnName("FLG_MOTIVO_INDISPONIBILITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteInserimento).HasColumnName("ID_UTENTE_INSERIMENTO");

                entity.Property(e => e.IdUtenteModifica).HasColumnName("ID_UTENTE_MODIFICA");

                entity.Property(e => e.NoteIndisponibilita)
                    .HasColumnName("NOTE_INDISPONIBILITA")
                    .HasMaxLength(400)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysUtentiIspettorati>(entity =>
            {
                entity.HasKey(e => e.IdUtenteIspettorato);

                entity.ToTable("SYS_UTENTI_ISPETTORATI", "ISUITE");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX03SYS_UTENTI_ISPETTORATI");

                entity.HasIndex(e => e.IdUtente)
                    .HasName("XX02SYS_UTENTI_ISPETTORATI");

                entity.HasIndex(e => e.IdUtenteIspettorato)
                    .HasName("XX01SYS_UTENTI_ISPETTORATI");

                entity.Property(e => e.IdUtenteIspettorato)
                    .HasColumnName("ID_UTENTE_ISPETTORATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<SysUtentiLogLogin>(entity =>
            {
                entity.HasKey(e => e.IdUtenteLogLogin)
                    .HasName("PK__SYS_UTEN__874E078C86F60AF3");

                entity.ToTable("SYS_UTENTI_LOG_LOGIN", "ISUITE");

                entity.HasIndex(e => e.IdUtenteLogLogin)
                    .HasName("SYS_C0046012")
                    .IsUnique();

                entity.Property(e => e.IdUtenteLogLogin)
                    .HasColumnName("ID_UTENTE_LOG_LOGIN")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtLogin)
                    .HasColumnName("DT_LOGIN")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAzioneLog)
                    .HasColumnName("FLG_AZIONE_LOG")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMotivoLoginFallito)
                    .HasColumnName("FLG_MOTIVO_LOGIN_FALLITO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IpDestinazione)
                    .HasColumnName("IP_Destinazione")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.IpSorgente)
                    .HasColumnName("IP_sorgente")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.NomePc)
                    .HasColumnName("Nome_PC")
                    .HasMaxLength(256)
                    .IsUnicode(false);

                entity.Property(e => e.NomeServer)
                    .HasColumnName("Nome_Server")
                    .HasMaxLength(256)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<SysUtentiPassword>(entity =>
            {
                entity.HasKey(e => e.IdUtentepassword)
                    .HasName("PK__SYS_UTEN__B083E5A0C2A7DA96");

                entity.ToTable("SYS_UTENTI_PASSWORD", "ISUITE");

                entity.HasIndex(e => e.IdUtentepassword)
                    .HasName("SYS_C0046015")
                    .IsUnique();

                entity.Property(e => e.IdUtentepassword)
                    .HasColumnName("ID_UTENTEPASSWORD")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasColumnName("PASSWORD")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdUtenteNavigation)
                    .WithMany(p => p.SysUtentiPassword)
                    .HasForeignKey(d => d.IdUtente)
                    .HasConstraintName("FK__SYS_UTENT__ID_UT__10A1534B");
            });

            modelBuilder.Entity<SysUtentiProfili>(entity =>
            {
                entity.HasKey(e => e.IdUtenteprofilo)
                    .HasName("PK__SYS_UTEN__8ED80E0C7DDA30FD");

                entity.ToTable("SYS_UTENTI_PROFILI", "ISUITE");

                entity.HasIndex(e => e.IdProfilo)
                    .HasName("XX02SYS_UTENTI_PROFILI");

                entity.HasIndex(e => e.IdUtenteprofilo)
                    .HasName("SYS_C0046019")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdUtente, e.IdUtenteprofilo })
                    .HasName("K01_SYS_UTENTI_PROFILI")
                    .IsUnique();

                entity.Property(e => e.IdUtenteprofilo)
                    .HasColumnName("ID_UTENTEPROFILO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProfilo)
                    .HasColumnName("ID_PROFILO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdProfiloNavigation)
                    .WithMany(p => p.SysUtentiProfili)
                    .HasForeignKey(d => d.IdProfilo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SYS_UTENT__ID_PR__11957784");
            });

            modelBuilder.Entity<SysUtentiSostituzioni>(entity =>
            {
                entity.HasKey(e => e.IdUtenteSostituzione);

                entity.ToTable("SYS_UTENTI_SOSTITUZIONI", "ISUITE");

                entity.HasIndex(e => new { e.IdUtenteIndisponibilita, e.FlgTipoSostituzione, e.DtAnnullamento })
                    .HasName("XX01_SYS_UTENTI_SOSTITUZIONI");

                entity.Property(e => e.IdUtenteSostituzione)
                    .HasColumnName("ID_UTENTE_SOSTITUZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAnnullamento)
                    .HasColumnName("DT_ANNULLAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoSostituzione)
                    .HasColumnName("FLG_TIPO_SOSTITUZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdUtenteIndisponibilita).HasColumnName("ID_UTENTE_INDISPONIBILITA");

                entity.Property(e => e.IdUtenteInserimento).HasColumnName("ID_UTENTE_INSERIMENTO");

                entity.Property(e => e.IdUtenteSostituto).HasColumnName("ID_UTENTE_SOSTITUTO");
            });

            modelBuilder.Entity<TabAbi>(entity =>
            {
                entity.HasKey(e => e.IdAbi)
                    .HasName("PK__TAB_ABI__2A7CC63366B2DB27");

                entity.ToTable("TAB_ABI", "ISUITE");

                entity.HasIndex(e => e.CodAbi)
                    .HasName("XX03TAB_ABI");

                entity.HasIndex(e => e.IdAbi)
                    .HasName("SYS_C0046023")
                    .IsUnique();

                entity.Property(e => e.IdAbi)
                    .HasColumnName("ID_ABI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodAbi)
                    .IsRequired()
                    .HasColumnName("COD_ABI")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Denominazione)
                    .HasColumnName("DENOMINAZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<TabAbilitazioniOperazioni>(entity =>
            {
                entity.HasKey(e => e.IdAbilitazioneOperazione)
                    .HasName("PK__TAB_ABIL__7EFE1BA715C4CB41");

                entity.ToTable("TAB_ABILITAZIONI_OPERAZIONI", "ISUITE");

                entity.HasIndex(e => e.IdAbilitazioneOperazione)
                    .HasName("XX01TAB_ABILITAZIONI_OPERAZIONI");

                entity.HasIndex(e => e.IdStatoOperazione)
                    .HasName("XX02TAB_ABILITAZIONI_OPERAZIONI");

                entity.Property(e => e.IdAbilitazioneOperazione)
                    .HasColumnName("ID_ABILITAZIONE_OPERAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdProdotto).HasColumnName("ID_PRODOTTO");

                entity.Property(e => e.IdStatoOperazione).HasColumnName("ID_STATO_OPERAZIONE");
            });

            modelBuilder.Entity<TabAllestimenti>(entity =>
            {
                entity.HasKey(e => e.IdAllestimento)
                    .HasName("SYS_C0061020");

                entity.ToTable("TAB_ALLESTIMENTI", "IAGENCY");

                entity.HasIndex(e => e.IdModello)
                    .HasName("XX02TAB_ALLESTIMENTI");

                entity.HasIndex(e => new { e.IdModello, e.CodAllestimento })
                    .HasName("XAK1TAB_ALLESTIMENTI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdModello, e.DescAllestimento })
                    .HasName("XIE1TAB_ALLESTIMENTI");

                entity.Property(e => e.IdAllestimento)
                    .HasColumnName("ID_ALLESTIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodAllestimento)
                    .HasColumnName("COD_ALLESTIMENTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescAllestimento)
                    .HasColumnName("DESC_ALLESTIMENTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdModelloNavigation)
                    .WithMany(p => p.TabAllestimenti)
                    .HasForeignKey(d => d.IdModello)
                    .HasConstraintName("FK__TAB_ALLES__ID_MO__5D21AF45");
            });

            modelBuilder.Entity<TabAnaValoriTipi>(entity =>
            {
                entity.HasKey(e => e.IdValoreTipo)
                    .HasName("PK__TAB_ANA___24FA0BBD376D42BF");

                entity.ToTable("TAB_ANA_VALORI_TIPI", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02TAB_ANA_VALORI_TIPI");

                entity.HasIndex(e => e.IdRuoloAnagrafica)
                    .HasName("XX03TAB_ANA_VALORI_TIPI");

                entity.HasIndex(e => e.IdValoreTipo)
                    .HasName("PK_TAB_ANA_VALORI_TIPI")
                    .IsUnique();

                entity.Property(e => e.IdValoreTipo)
                    .HasColumnName("ID_VALORE_TIPO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgDisabilitatoSino)
                    .HasColumnName("FLG_DISABILITATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligatorioSino)
                    .HasColumnName("FLG_OBBLIGATORIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPresenzaMultiplaSino)
                    .HasColumnName("FLG_PRESENZA_MULTIPLA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAnagrafica)
                    .HasColumnName("FLG_TIPO_ANAGRAFICA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRuoloAnagrafica)
                    .HasColumnName("ID_RUOLO_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NomeCampoAnagrafica)
                    .HasColumnName("NOME_CAMPO_ANAGRAFICA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ValoreCampoAnagrafica)
                    .HasColumnName("VALORE_CAMPO_ANAGRAFICA")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabAnagraficheSarc>(entity =>
            {
                entity.HasKey(e => e.IdAnagraficaSarc)
                    .HasName("SYS_C0040304");

                entity.ToTable("TAB_ANAGRAFICHE_SARC", "ISUITE");

                entity.Property(e => e.IdAnagraficaSarc)
                    .HasColumnName("ID_ANAGRAFICA_SARC")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabAnnullamentoRami>(entity =>
            {
                entity.HasKey(e => e.KeyTabAnnullamentoRamo)
                    .HasName("SYS_C0061026");

                entity.ToTable("TAB_ANNULLAMENTO_RAMI", "IAGENCY");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX02TAB_ANNULLAMENTO_RAMI");

                entity.HasIndex(e => e.IdTabAnnullamentoRamo)
                    .HasName("XX01TAB_ANNULLAMENTO_RAMI");

                entity.HasIndex(e => e.IdTabMotivoStorno)
                    .HasName("XX03TAB_ANNULLAMENTO_RAMI");

                entity.Property(e => e.KeyTabAnnullamentoRamo)
                    .HasColumnName("KEY_TAB_ANNULLAMENTO_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabAnnullamentoRamo)
                    .HasColumnName("ID_TAB_ANNULLAMENTO_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabMotivoStorno)
                    .HasColumnName("ID_TAB_MOTIVO_STORNO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabAppendici>(entity =>
            {
                entity.HasKey(e => e.KeyTabAppendice)
                    .HasName("SYS_C0061032");

                entity.ToTable("TAB_APPENDICI", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03TAB_APPENDICI");

                entity.HasIndex(e => e.IdDescAppendice)
                    .HasName("XX01TAB_APPENDICI");

                entity.HasIndex(e => e.IdTabAppendice)
                    .HasName("XX04TAB_APPENDICI");

                entity.HasIndex(e => e.IdTitTipoTitolo)
                    .HasName("XX02TAB_APPENDICI");

                entity.HasIndex(e => new { e.IdTabAppendice, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK2TAB_APPENDICI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCompagnia, e.CodAppendice, e.DtStoScadenzaLog, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XAK1TAB_APPENDICI")
                    .IsUnique();

                entity.Property(e => e.KeyTabAppendice)
                    .HasColumnName("KEY_TAB_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodAppendice)
                    .HasColumnName("COD_APPENDICE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DescAppendice)
                    .HasColumnName("DESC_APPENDICE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAutorizzazioneSino)
                    .HasColumnName("FLG_AUTORIZZAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEmissioneRetroattivaSino)
                    .HasColumnName("FLG_EMISSIONE_RETROATTIVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGeneraTitoloZeroSino)
                    .HasColumnName("FLG_GENERA_TITOLO_ZERO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIncassoTitoloZeroSino)
                    .HasColumnName("FLG_INCASSO_TITOLO_ZERO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPremioSino)
                    .HasColumnName("FLG_PREMIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVariazionePtfSino)
                    .HasColumnName("FLG_VARIAZIONE_PTF_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescAppendice)
                    .HasColumnName("ID_DESC_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabAppendice)
                    .HasColumnName("ID_TAB_APPENDICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTipoTitolo)
                    .HasColumnName("ID_TIT_TIPO_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabAreeComm>(entity =>
            {
                entity.HasKey(e => e.KeyAreaCommerciale)
                    .HasName("PK__TAB_AREE__5931E2C2467D4781");

                entity.ToTable("TAB_AREE_COMM", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX05TAB_AREE_COMM");

                entity.HasIndex(e => e.IdAreaCommerciale)
                    .HasName("XX01TAB_AREE_COMM");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02TAB_AREE_COMM");

                entity.HasIndex(e => e.IdDipartimento)
                    .HasName("XX03TAB_AREE_COMM");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("XX04TAB_AREE_COMM");

                entity.HasIndex(e => e.KeyAreaCommerciale)
                    .HasName("PK_TAB_AREE_COMM")
                    .IsUnique();

                entity.Property(e => e.KeyAreaCommerciale)
                    .HasColumnName("KEY_AREA_COMMERCIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodAreaCommerciale)
                    .IsRequired()
                    .HasColumnName("COD_AREA_COMMERCIALE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtApertura)
                    .HasColumnName("DT_APERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCapoareaDal)
                    .HasColumnName("DT_CAPOAREA_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtChiusura)
                    .HasColumnName("DT_CHIUSURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAreaCommerciale)
                    .HasColumnName("ID_AREA_COMMERCIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDipartimento)
                    .HasColumnName("ID_DIPARTIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumFax)
                    .HasColumnName("NUM_FAX")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumSelezioneDiretta)
                    .HasColumnName("NUM_SELEZIONE_DIRETTA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono1)
                    .HasColumnName("NUM_TELEFONO1")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono2)
                    .HasColumnName("NUM_TELEFONO2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono3)
                    .HasColumnName("NUM_TELEFONO3")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabAreeSinistri>(entity =>
            {
                entity.HasKey(e => e.KeyAreaSinistri)
                    .HasName("PK__TAB_AREE__4CB570BA8358495A");

                entity.ToTable("TAB_AREE_SINISTRI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02TAB_AREE_SINISTRI");

                entity.HasIndex(e => e.IdAreaSinistri)
                    .HasName("XX01TAB_AREE_SINISTRI");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX03TAB_AREE_SINISTRI");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("XX04TAB_AREE_SINISTRI");

                entity.HasIndex(e => e.KeyAreaSinistri)
                    .HasName("PK_TAB_AREE_SINISTRI")
                    .IsUnique();

                entity.Property(e => e.KeyAreaSinistri)
                    .HasColumnName("KEY_AREA_SINISTRI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodAreaSinistri)
                    .IsRequired()
                    .HasColumnName("COD_AREA_SINISTRI")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtResponsabileDal)
                    .HasColumnName("DT_RESPONSABILE_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAreaSinistri)
                    .HasColumnName("ID_AREA_SINISTRI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumFax)
                    .HasColumnName("NUM_FAX")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumSelezioneDiretta)
                    .HasColumnName("NUM_SELEZIONE_DIRETTA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono1)
                    .HasColumnName("NUM_TELEFONO1")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono2)
                    .HasColumnName("NUM_TELEFONO2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono3)
                    .HasColumnName("NUM_TELEFONO3")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabAssegnazioneLiquidatori>(entity =>
            {
                entity.HasKey(e => e.KeyAssegnazioneLiquidatori)
                    .HasName("PK_ASSEGNAZIONE_LIQUIDATORI");

                entity.ToTable("TAB_ASSEGNAZIONE_LIQUIDATORI", "ICLAIMS");

                entity.Property(e => e.KeyAssegnazioneLiquidatori)
                    .HasColumnName("KEY_ASSEGNAZIONE_LIQUIDATORI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAssegnazioneLiquidatori).HasColumnName("ID_ASSEGNAZIONE_LIQUIDATORI");

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdLiquidatore).HasColumnName("ID_LIQUIDATORE");

                entity.Property(e => e.IdReteVendita).HasColumnName("ID_RETE_VENDITA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabAutorizzatori>(entity =>
            {
                entity.HasKey(e => e.IdAutorizzatore);

                entity.ToTable("TAB_AUTORIZZATORI", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02TAB_AUTORIZZATORI");

                entity.HasIndex(e => e.IdProdotto)
                    .HasName("XX05TAB_AUTORIZZATORI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX06TAB_AUTORIZZATORI");

                entity.HasIndex(e => e.IdRetevenditaControllata)
                    .HasName("XX04TAB_AUTORIZZATORI");

                entity.HasIndex(e => e.IdUtenteAutorizzatore)
                    .HasName("XX03TAB_AUTORIZZATORI");

                entity.Property(e => e.IdAutorizzatore)
                    .HasColumnName("ID_AUTORIZZATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProdotto)
                    .HasColumnName("ID_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaControllata)
                    .HasColumnName("ID_RETEVENDITA_CONTROLLATA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteAutorizzatore)
                    .HasColumnName("ID_UTENTE_AUTORIZZATORE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabBic>(entity =>
            {
                entity.HasKey(e => e.IdBic);

                entity.ToTable("TAB_BIC", "ISUITE");

                entity.HasIndex(e => new { e.CodBicSwift, e.IdAbi, e.IdCab, e.DtFineValidita })
                    .HasName("XAK_TAB_BIC")
                    .IsUnique();

                entity.Property(e => e.IdBic)
                    .HasColumnName("ID_BIC")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodBicSwift)
                    .IsRequired()
                    .HasColumnName("COD_BIC_SWIFT")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAbi).HasColumnName("ID_ABI");

                entity.Property(e => e.IdCab).HasColumnName("ID_CAB");
            });

            modelBuilder.Entity<TabCab>(entity =>
            {
                entity.HasKey(e => e.IdCab)
                    .HasName("PK__TAB_CAB__2BF8FA0E32E25AFA");

                entity.ToTable("TAB_CAB", "ISUITE");

                entity.HasIndex(e => e.CodCab)
                    .HasName("XX04TAB_CAB");

                entity.HasIndex(e => e.IdAbi)
                    .HasName("XX02TAB_CAB");

                entity.HasIndex(e => e.IdCab)
                    .HasName("SYS_C0046057")
                    .IsUnique();

                entity.Property(e => e.IdCab)
                    .HasColumnName("ID_CAB")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Cap)
                    .HasColumnName("CAP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CodCab)
                    .IsRequired()
                    .HasColumnName("COD_CAB")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Comune)
                    .HasColumnName("COMUNE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Denominazione)
                    .HasColumnName("DENOMINAZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAbi)
                    .HasColumnName("ID_ABI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCorporatebanking)
                    .HasColumnName("id_corporatebanking")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Indirizzo)
                    .HasColumnName("INDIRIZZO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Provincia)
                    .HasColumnName("PROVINCIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdAbiNavigation)
                    .WithMany(p => p.TabCab)
                    .HasForeignKey(d => d.IdAbi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TAB_CAB__ID_ABI__12899BBD");
            });

            modelBuilder.Entity<TabCalcoliAutomatici>(entity =>
            {
                entity.HasKey(e => e.KeyCalcoloautomatico)
                    .HasName("PK__TAB_CALC__892DE894C648D637");

                entity.ToTable("TAB_CALCOLI_AUTOMATICI", "ICLAIMS");

                entity.HasIndex(e => e.IdCalcoloautomatico)
                    .HasName("XX01TAB_CALCOLI_AUTOMATICI");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02TAB_CALCOLI_AUTOMATICI");

                entity.HasIndex(e => e.KeyCalcoloautomatico)
                    .HasName("SYS_C0047642")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCalcoloautomatico, e.DtStoScadenzaLog })
                    .HasName("XIE1TAB_CALCOLI_AUTOMATICI");

                entity.HasIndex(e => new { e.IdCalcoloautomatico, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK1TAB_CALCOLI_AUTOMATICI")
                    .IsUnique();

                entity.Property(e => e.KeyCalcoloautomatico)
                    .HasColumnName("KEY_CALCOLOAUTOMATICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgIvaSuCpaSino)
                    .IsRequired()
                    .HasColumnName("FLG_IVA_SU_CPA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIvaSuInpsSino)
                    .HasColumnName("FLG_IVA_SU_INPS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRitSuCpaSino)
                    .HasColumnName("FLG_RIT_SU_CPA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRitSuInpsSino)
                    .HasColumnName("FLG_RIT_SU_INPS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCalcoloautomatico)
                    .HasColumnName("ID_CALCOLOAUTOMATICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PerCpa)
                    .HasColumnName("PER_CPA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PerInps)
                    .HasColumnName("PER_INPS")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PerIva)
                    .HasColumnName("PER_IVA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PerRitenuta)
                    .HasColumnName("PER_RITENUTA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<TabCalendarioStanzaAnia>(entity =>
            {
                entity.HasKey(e => e.IdTabCalendarioStanzaAnia);

                entity.ToTable("TAB_CALENDARIO_STANZA_ANIA", "ICLAIMS");

                entity.HasIndex(e => e.AnnoMeseStanza)
                    .HasName("XX01_TAB_CALENDARIO_STANZA_ANIA");

                entity.Property(e => e.IdTabCalendarioStanzaAnia)
                    .HasColumnName("ID_TAB_CALENDARIO_STANZA_ANIA")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoMeseStanza)
                    .HasColumnName("ANNO_MESE_STANZA")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DtAperturaStanza)
                    .HasColumnName("DT_APERTURA_STANZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtChiusuraStanza)
                    .HasColumnName("DT_CHIUSURA_STANZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtElaborazioneStanza)
                    .HasColumnName("DT_ELABORAZIONE_STANZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegolazioneSaldiCredito)
                    .HasColumnName("DT_REGOLAZIONE_SALDI_CREDITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRegolazioneSaldiDebito)
                    .HasColumnName("DT_REGOLAZIONE_SALDI_DEBITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTrimestraleSino)
                    .HasColumnName("FLG_TRIMESTRALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<TabCambi>(entity =>
            {
                entity.HasKey(e => e.IdCambio)
                    .HasName("PK__TAB_CAMB__47F17882291B921B");

                entity.ToTable("TAB_CAMBI", "ISUITE");

                entity.HasIndex(e => e.IdCambio)
                    .HasName("SYS_C0046063")
                    .IsUnique();

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX02TAB_CAMBI");

                entity.Property(e => e.IdCambio)
                    .HasColumnName("ID_CAMBIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CoeffCambio)
                    .HasColumnName("COEFF_CAMBIO")
                    .HasColumnType("numeric(18, 9)");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdValutaNavigation)
                    .WithMany(p => p.TabCambi)
                    .HasForeignKey(d => d.IdValuta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TAB_CAMBI__ID_VA__137DBFF6");
            });

            modelBuilder.Entity<TabCampiAnagrafica>(entity =>
            {
                entity.HasKey(e => e.IdCampoAnagrafica)
                    .HasName("PK__TAB_CAMP__542AA3EC2D2EEECD");

                entity.ToTable("TAB_CAMPI_ANAGRAFICA", "ISUITE");

                entity.HasIndex(e => e.IdCampoAnagrafica)
                    .HasName("PK_TAB_CAMPI_ANAGRAFICA")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02TAB_CAMPI_ANAGRAFICA");

                entity.Property(e => e.IdCampoAnagrafica)
                    .HasColumnName("ID_CAMPO_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ClasseAppartenenza)
                    .HasColumnName("CLASSE_APPARTENENZA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgGestibileUtenteSino)
                    .HasColumnName("FLG_GESTIBILE_UTENTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTabellaSino)
                    .HasColumnName("FLG_TABELLA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NomeCampoAnagrafica)
                    .IsRequired()
                    .HasColumnName("NOME_CAMPO_ANAGRAFICA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NomeCampoControllo)
                    .HasColumnName("NOME_CAMPO_CONTROLLO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabCanaliDistribuzione>(entity =>
            {
                entity.HasKey(e => e.IdCanaledistribuzione)
                    .HasName("PK__TAB_CANA__66AB582D077A70BC");

                entity.ToTable("TAB_CANALI_DISTRIBUZIONE", "ISUITE");

                entity.HasIndex(e => e.IdCanaledistribuzione)
                    .HasName("TAB_CANALI_DISTRIBUZIONE_PK")
                    .IsUnique();

                entity.Property(e => e.IdCanaledistribuzione)
                    .HasColumnName("ID_CANALEDISTRIBUZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCanaleDistribuzione)
                    .HasColumnName("COD_CANALE_DISTRIBUZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdRetedistributiva).HasColumnName("ID_RETEDISTRIBUTIVA");
            });

            modelBuilder.Entity<TabCanalizzazioneIsp>(entity =>
            {
                entity.HasKey(e => e.IdCanalizzazioneIsp);

                entity.ToTable("TAB_CANALIZZAZIONE_ISP", "ICLAIMS");

                entity.HasIndex(e => new { e.IdRetevendita, e.FlgRamoTecnico, e.IdIspettorato })
                    .HasName("XX01TAB_CANALIZZAZIONE_ISP");

                entity.Property(e => e.IdCanalizzazioneIsp)
                    .HasColumnName("ID_CANALIZZAZIONE_ISP")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("FLG_RAMO_TECNICO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSinistroCanaliz)
                    .HasColumnName("FLG_TIPO_SINISTRO_CANALIZ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdProvincia).HasColumnName("ID_PROVINCIA");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");
            });

            modelBuilder.Entity<TabCanalizzazioneLiq>(entity =>
            {
                entity.HasKey(e => e.IdCanalizzazioneLiq);

                entity.ToTable("TAB_CANALIZZAZIONE_LIQ", "ICLAIMS");

                entity.HasIndex(e => new { e.IdIspettorato, e.FlgRamoTecnico, e.IdRetevendita, e.FlgTipoSinistroCanaliz, e.IdLiquidatore })
                    .HasName("XX01TAB_CANALIZZAZIONE_LIQ");

                entity.Property(e => e.IdCanalizzazioneLiq)
                    .HasColumnName("ID_CANALIZZAZIONE_LIQ")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGruppoFormula)
                    .HasColumnName("COD_GRUPPO_FORMULA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("FLG_RAMO_TECNICO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSinistroCanaliz)
                    .HasColumnName("FLG_TIPO_SINISTRO_CANALIZ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdLiquidatore).HasColumnName("ID_LIQUIDATORE");

                entity.Property(e => e.IdProvincia).HasColumnName("ID_PROVINCIA");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.PercentualeDiCarico)
                    .HasColumnName("PERCENTUALE_DI_CARICO")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<TabCanalizzazionePeriti>(entity =>
            {
                entity.HasKey(e => e.IdCanalizzazionePeriti);

                entity.ToTable("TAB_CANALIZZAZIONE_PERITI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdComune, e.FlgTipoPerizia, e.DtInizioValidita })
                    .HasName("X1_TAB_CANALIZZAZIONE_PERITI");

                entity.HasIndex(e => new { e.IdFiduciario, e.FlgTipoPerizia, e.DtInizioValidita })
                    .HasName("X2_TAB_CANALIZZAZIONE_PERITI");

                entity.Property(e => e.IdCanalizzazionePeriti)
                    .HasColumnName("ID_CANALIZZAZIONE_PERITI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoIncarico)
                    .HasColumnName("FLG_TIPO_INCARICO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPerizia)
                    .HasColumnName("FLG_TIPO_PERIZIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdComune).HasColumnName("ID_COMUNE");

                entity.Property(e => e.IdFiduciario).HasColumnName("ID_FIDUCIARIO");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.PercentualeDiCarico)
                    .HasColumnName("PERCENTUALE_DI_CARICO")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<TabCarrozzerieConvenzionate>(entity =>
            {
                entity.HasKey(e => e.KeyCarrozzeriaConvenzionata);

                entity.ToTable("TAB_CARROZZERIE_CONVENZIONATE", "ICLAIMS");

                entity.HasIndex(e => new { e.IdCarrozzeriaConvenzionata, e.DtStoScadenzaLog })
                    .HasName("XX01_TAB_CARROZZERIE_CONVENZIONATE");

                entity.HasIndex(e => new { e.IdNetwork, e.DtStoScadenzaLog })
                    .HasName("XX02_TAB_CARROZZERIE_CONVENZIONATE");

                entity.Property(e => e.KeyCarrozzeriaConvenzionata)
                    .HasColumnName("KEY_CARROZZERIA_CONVENZIONATA")
                    .ValueGeneratedNever();

                entity.Property(e => e.Area)
                    .HasColumnName("AREA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.AutoSostitutiva)
                    .HasColumnName("AUTO_SOSTITUTIVA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Axa)
                    .HasColumnName("AXA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CasaAutomobilistica)
                    .HasColumnName("CASA_AUTOMOBILISTICA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cld)
                    .HasColumnName("CLD")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CodAge)
                    .HasColumnName("COD_AGE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodCld)
                    .HasColumnName("COD_CLD")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodUtenzaPortale)
                    .HasColumnName("COD_UTENZA_PORTALE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Convenz)
                    .HasColumnName("CONVENZ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ConvenzioneAltreComp)
                    .HasColumnName("CONVENZIONE_ALTRE_COMP")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.CostoOrarioArsNoIva)
                    .HasColumnName("COSTO_ORARIO_ARS_NO_IVA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CostoOrarioRmaNoIva)
                    .HasColumnName("COSTO_ORARIO_RMA_NO_IVA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DecodificaAge)
                    .HasColumnName("DECODIFICA_AGE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Delta2010)
                    .HasColumnName("DELTA_2010")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Delta2011)
                    .HasColumnName("DELTA_2011")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Delta2012)
                    .HasColumnName("DELTA_2012")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Delta2013)
                    .HasColumnName("DELTA_2013")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Delta2014)
                    .HasColumnName("DELTA_2014")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DerogaProgettoArs)
                    .HasColumnName("DEROGA_PROGETTO_ARS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DtEliminazione)
                    .HasColumnName("DT_ELIMINAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioArs)
                    .HasColumnName("DT_INIZIO_ARS")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioRapporto)
                    .HasColumnName("DT_INIZIO_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRinnovoConv2010)
                    .HasColumnName("DT_RINNOVO_CONV_2010")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRinnovoConv2011)
                    .HasColumnName("DT_RINNOVO_CONV_2011")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRinnovoConv2012)
                    .HasColumnName("DT_RINNOVO_CONV_2012")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRinnovoConv2013)
                    .HasColumnName("DT_RINNOVO_CONV_2013")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.ExtraScontoImponFat)
                    .HasColumnName("EXTRA_SCONTO_IMPON_FAT")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdCarrozzeriaConvenzionata).HasColumnName("ID_CARROZZERIA_CONVENZIONATA");

                entity.Property(e => e.IdIndirizzo).HasColumnName("ID_INDIRIZZO");

                entity.Property(e => e.IdNetwork).HasColumnName("ID_NETWORK");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.InviareMail)
                    .HasColumnName("INVIARE_MAIL")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Iso14001)
                    .HasColumnName("ISO_14001")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Italiana)
                    .HasColumnName("ITALIANA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.MinimiGarantiti)
                    .HasColumnName("MINIMI_GARANTITI")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.PresaERiconsegnaVeicolo)
                    .HasColumnName("PRESA_E_RICONSEGNA_VEICOLO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.RagioneSociale)
                    .HasColumnName("RAGIONE_SOCIALE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Reale)
                    .HasColumnName("REALE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Rebate)
                    .HasColumnName("REBATE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ReferenteZona)
                    .HasColumnName("REFERENTE_ZONA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.RegioneCld)
                    .HasColumnName("REGIONE_CLD")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.ScontiRicambiEquiv)
                    .HasColumnName("SCONTI_RICAMBI_EQUIV")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ScontiRicambiEsteri)
                    .HasColumnName("SCONTI_RICAMBI_ESTERI")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.ScontiRicambiNazionali)
                    .HasColumnName("SCONTI_RICAMBI_NAZIONALI")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Software)
                    .HasColumnName("SOFTWARE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SupCoperta)
                    .HasColumnName("SUP_COPERTA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SupScoperta)
                    .HasColumnName("SUP_SCOPERTA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Traino)
                    .HasColumnName("TRAINO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TrasmTel)
                    .HasColumnName("TRASM_TEL")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Ubicazione)
                    .HasColumnName("UBICAZIONE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.VerniceAdAcqua)
                    .HasColumnName("VERNICE_AD_ACQUA")
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabCasiCid>(entity =>
            {
                entity.HasKey(e => e.IdCasocid)
                    .HasName("PK__TAB_CASI__C9A1B62E3C949EFB");

                entity.ToTable("TAB_CASI_CID", "ICLAIMS");

                entity.HasIndex(e => e.IdCasocid)
                    .HasName("SYS_C0047648")
                    .IsUnique();

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02TAB_CASI_CID");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX03TAB_CASI_CID");

                entity.HasIndex(e => new { e.IdCompagnia, e.CodCasoCid })
                    .HasName("TAB_CASI_CID_K01")
                    .IsUnique();

                entity.Property(e => e.IdCasocid)
                    .HasColumnName("ID_CASOCID")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodCasoCid)
                    .IsRequired()
                    .HasColumnName("COD_CASO_CID")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PerResponsabilita)
                    .HasColumnName("PER_RESPONSABILITA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<TabCassaPrevidenzaAge>(entity =>
            {
                entity.HasKey(e => e.KeyTabCpa)
                    .HasName("SYS_C0061037");

                entity.ToTable("TAB_CASSA_PREVIDENZA_AGE", "IAGENCY");

                entity.HasIndex(e => e.IdTabCpa)
                    .HasName("XX01TAB_CASSA_PREVIDENZA_AGE");

                entity.Property(e => e.KeyTabCpa)
                    .HasColumnName("KEY_TAB_CPA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdTabCpa)
                    .HasColumnName("ID_TAB_CPA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PercCpa)
                    .HasColumnName("PERC_CPA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<TabCausaliRete>(entity =>
            {
                entity.HasKey(e => e.IdCausale)
                    .HasName("SYS_C0014542");

                entity.ToTable("TAB_CAUSALI_RETE", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02TAB_CAUSALI_RETE");

                entity.Property(e => e.IdCausale)
                    .HasColumnName("ID_CAUSALE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCausale)
                    .IsRequired()
                    .HasColumnName("COD_CAUSALE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFinVal)
                    .HasColumnName("DT_FIN_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniVal)
                    .HasColumnName("DT_INI_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCodiceStatoCausale)
                    .HasColumnName("FLG_CODICE_STATO_CAUSALE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCausale)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_CAUSALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEntita)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ENTITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");
            });

            modelBuilder.Entity<TabClasse>(entity =>
            {
                entity.HasKey(e => e.IdClasse)
                    .HasName("PK__TAB_CLAS__08797F143EE61DDE");

                entity.ToTable("TAB_CLASSE", "ISUITE");

                entity.HasIndex(e => e.IdClasse)
                    .HasName("SYS_C0046069")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescClasse)
                    .HasName("XX02TAB_CLASSE");

                entity.HasIndex(e => e.IdSettore)
                    .HasName("XX03TAB_CLASSE");

                entity.HasIndex(e => new { e.IdSettore, e.CodClasse })
                    .HasName("XAK1TAB_CLASSE")
                    .IsUnique();

                entity.Property(e => e.IdClasse)
                    .HasColumnName("ID_CLASSE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodClasse)
                    .HasColumnName("COD_CLASSE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodVeicoloAnia)
                    .HasColumnName("COD_VEICOLO_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescClasse)
                    .HasColumnName("DESC_CLASSE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPreventivoSino)
                    .HasColumnName("FLG_PREVENTIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescClasse)
                    .HasColumnName("ID_DESC_CLASSE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSettore)
                    .HasColumnName("ID_SETTORE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdSettoreNavigation)
                    .WithMany(p => p.TabClasse)
                    .HasForeignKey(d => d.IdSettore)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TAB_CLASS__ID_SE__1471E42F");
            });

            modelBuilder.Entity<TabClassificazioniStatiCard>(entity =>
            {
                entity.HasKey(e => e.IdClassificazioneStatoCard);

                entity.ToTable("TAB_CLASSIFICAZIONI_STATI_CARD", "ICLAIMS");

                entity.HasIndex(e => e.IdStatoCard)
                    .HasName("XX01_TAB_CLASSIFICAZIONI_STATI_CARD");

                entity.Property(e => e.IdClassificazioneStatoCard)
                    .HasColumnName("ID_CLASSIFICAZIONE_STATO_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.FlgClassificazione)
                    .HasColumnName("FLG_CLASSIFICAZIONE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdStatoCard).HasColumnName("ID_STATO_CARD");
            });

            modelBuilder.Entity<TabClausole>(entity =>
            {
                entity.HasKey(e => e.IdClausola)
                    .HasName("PK__TAB_CLAU__EC18C00B299C5173");

                entity.ToTable("TAB_CLAUSOLE", "ICLAIMS");

                entity.HasIndex(e => e.IdClausola)
                    .HasName("SYS_C0047653")
                    .IsUnique();

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02TAB_CLAUSOLE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX03TAB_CLAUSOLE");

                entity.HasIndex(e => new { e.CodClausola, e.IdClausola })
                    .HasName("TAB_CLAUSOLE_K01")
                    .IsUnique();

                entity.Property(e => e.IdClausola)
                    .HasColumnName("ID_CLAUSOLA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodClausola)
                    .IsRequired()
                    .HasColumnName("COD_CLAUSOLA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabCodFisFittizi>(entity =>
            {
                entity.HasKey(e => e.IdCfFittizio)
                    .HasName("PK__TAB_COD___A88494F77D6D3874");

                entity.ToTable("TAB_COD_FIS_FITTIZI", "IREGULATION");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02TAB_COD_FIS_FITTIZI");

                entity.HasIndex(e => e.IdCfFittizio)
                    .HasName("SYS_C0047919")
                    .IsUnique();

                entity.Property(e => e.IdCfFittizio)
                    .HasColumnName("ID_CF_FITTIZIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodProgressivo)
                    .IsRequired()
                    .HasColumnName("COD_PROGRESSIVO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceFittizio)
                    .IsRequired()
                    .HasColumnName("CODICE_FITTIZIO")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabCodGarBp>(entity =>
            {
                entity.HasKey(e => e.IdTabCodBp);

                entity.ToTable("TAB_COD_GAR_BP", "IAGENCY");

                entity.Property(e => e.IdTabCodBp)
                    .HasColumnName("ID_TAB_COD_BP")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceBp)
                    .HasColumnName("CODICE_BP")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEnteErogatore)
                    .HasColumnName("FLG_ENTE_EROGATORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrGaranzia).HasColumnName("ID_PR_GARANZIA");

                entity.Property(e => e.IdPrPacchetto).HasColumnName("ID_PR_PACCHETTO");

                entity.Property(e => e.IdPrProdotto).HasColumnName("ID_PR_PRODOTTO");

                entity.Property(e => e.IdPrValParametro).HasColumnName("ID_PR_VAL_PARAMETRO");
            });

            modelBuilder.Entity<TabCoeffAttuazione>(entity =>
            {
                entity.HasKey(e => e.IdCoeffAttuazione)
                    .HasName("PK_TTAB_COEFF_ATTUAZIONE");

                entity.ToTable("TAB_COEFF_ATTUAZIONE", "IAGENCY");

                entity.HasIndex(e => e.AnnoAttuazione)
                    .HasName("IDX_ANNO_TAB_COEFF_ATTUAZIONE")
                    .IsUnique();

                entity.HasIndex(e => e.IdCoeffAttuazione)
                    .HasName("IDX_TAB_COEFF_ATTUAZIONE")
                    .IsUnique();

                entity.Property(e => e.IdCoeffAttuazione)
                    .HasColumnName("ID_COEFF_ATTUAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoAttuazione).HasColumnName("ANNO_ATTUAZIONE");

                entity.Property(e => e.Coefficiente)
                    .HasColumnName("COEFFICIENTE")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<TabCoeffRiserva>(entity =>
            {
                entity.HasKey(e => e.KeyCoeffRiserva);

                entity.ToTable("TAB_COEFF_RISERVA", "IREGULATION");

                entity.HasIndex(e => new { e.IdCoeffRiserva, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_TAB_COEFF_RISERVA_STO")
                    .IsUnique();

                entity.Property(e => e.KeyCoeffRiserva)
                    .HasColumnName("KEY_COEFF_RISERVA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoAccadimento).HasColumnName("ANNO_ACCADIMENTO");

                entity.Property(e => e.Coefficiente)
                    .HasColumnName("COEFFICIENTE")
                    .HasColumnType("decimal(18, 6)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCoeffRiserva).HasColumnName("ID_COEFF_RISERVA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.PeriodoRiferimento)
                    .HasColumnName("PERIODO_RIFERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.TipoGestione)
                    .HasColumnName("TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabCoeffTpabitazione>(entity =>
            {
                entity.HasKey(e => e.IdCoeffTpabitazione);

                entity.ToTable("TAB_COEFF_TPABITAZIONE", "IAGENCY");

                entity.HasIndex(e => e.IdCoeffTpabitazione)
                    .HasName("IDX_TAB_COEFF_TPABITAZIONE")
                    .IsUnique();

                entity.Property(e => e.IdCoeffTpabitazione)
                    .HasColumnName("ID_COEFF_TPABITAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.Coefficiente)
                    .HasColumnName("COEFFICIENTE")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.FlgTpAbitazione)
                    .IsRequired()
                    .HasColumnName("FLG_TP_ABITAZIONE")
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabCombinazioniCasiCid>(entity =>
            {
                entity.HasKey(e => e.IdCombinazioneCasiCid);

                entity.ToTable("TAB_COMBINAZIONI_CASI_CID", "ICLAIMS");

                entity.HasIndex(e => new { e.IdCasoCidComp, e.IdCasoCidCtp })
                    .HasName("XX01_TAB_COMBINAZIONI_CASI_CID");

                entity.Property(e => e.IdCombinazioneCasiCid)
                    .HasColumnName("ID_COMBINAZIONE_CASI_CID")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdCasoCidComp).HasColumnName("ID_CASO_CID_COMP");

                entity.Property(e => e.IdCasoCidCtp).HasColumnName("ID_CASO_CID_CTP");

                entity.Property(e => e.PercResp)
                    .HasColumnName("PERC_RESP")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PercRespForzatura)
                    .HasColumnName("PERC_RESP_FORZATURA")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<TabCompagnie>(entity =>
            {
                entity.HasKey(e => e.IdCompagnia)
                    .HasName("PK__TAB_COMP__173D117FCB9C025C");

                entity.ToTable("TAB_COMPAGNIE", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02TAB_COMPAGNIE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("SYS_C0046072")
                    .IsUnique();

                entity.HasIndex(e => e.IdCompagniegruppo)
                    .HasName("XX03TAB_COMPAGNIE");

                entity.HasIndex(e => new { e.CodCompagniaAnia, e.IdCompagnia })
                    .HasName("TAB_COMPAGNIE_K01")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCompagnia, e.CodCompagniaIsvap })
                    .HasName("XTAB_COMPAGNIE")
                    .IsUnique();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodCompagniaAnia)
                    .HasColumnName("COD_COMPAGNIA_ANIA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CodCompagniaIsvap)
                    .HasColumnName("COD_COMPAGNIA_ISVAP")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtFineAdesioneCard)
                    .HasColumnName("DT_FINE_ADESIONE_CARD")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineAttivita)
                    .HasColumnName("DT_FINE_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioAdesioneCard)
                    .HasColumnName("DT_INIZIO_ADESIONE_CARD")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioAttivita)
                    .HasColumnName("DT_INIZIO_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtLiquidazioneCoatta)
                    .HasColumnName("DT_LIQUIDAZIONE_COATTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAdesioneCard)
                    .HasColumnName("FLG_ADESIONE_CARD")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCompagnia)
                    .HasColumnName("FLG_TIPO_COMPAGNIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompAcquirente)
                    .HasColumnName("ID_COMP_ACQUIRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagniegruppo)
                    .HasColumnName("ID_COMPAGNIEGRUPPO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.RamiBilancioAmmessi)
                    .HasColumnName("RAMI_BILANCIO_AMMESSI")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabCompagnieGruppo>(entity =>
            {
                entity.HasKey(e => e.IdCompagniegruppo)
                    .HasName("PK__TAB_COMP__07A928C093C76E06");

                entity.ToTable("TAB_COMPAGNIE_GRUPPO", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02TAB_COMPAGNIE_GRUPPO");

                entity.HasIndex(e => e.IdCompagniegruppo)
                    .HasName("SYS_C0046075")
                    .IsUnique();

                entity.Property(e => e.IdCompagniegruppo)
                    .HasColumnName("ID_COMPAGNIEGRUPPO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodIsvap)
                    .HasColumnName("COD_ISVAP")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabCompagnieMand>(entity =>
            {
                entity.HasKey(e => e.IdCompagniaMand);

                entity.ToTable("TAB_COMPAGNIE_MAND", "ICLAIMS");

                entity.Property(e => e.IdCompagniaMand)
                    .HasColumnName("ID_COMPAGNIA_MAND")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagniaMand)
                    .HasColumnName("COD_COMPAGNIA_MAND")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CodCompagniaUci)
                    .HasColumnName("COD_COMPAGNIA_UCI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagraficaComp).HasColumnName("ID_ANAGRAFICA_COMP");

                entity.Property(e => e.IdAnagraficaRef).HasColumnName("ID_ANAGRAFICA_REF");
            });

            modelBuilder.Entity<TabCompagnieNazioni>(entity =>
            {
                entity.HasKey(e => e.IdCompagnieNazioni);

                entity.ToTable("TAB_COMPAGNIE_NAZIONI", "ISUITE");

                entity.HasIndex(e => e.IdCompagnieNazioni)
                    .HasName("XX01TAB_COMPAGNIE_NAZIONI");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdNazione })
                    .HasName("XX02TAB_COMPAGNIE_NAZIONI");

                entity.Property(e => e.IdCompagnieNazioni)
                    .HasColumnName("ID_COMPAGNIE_NAZIONI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNazione)
                    .HasColumnName("ID_NAZIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabComposizioneFondi>(entity =>
            {
                entity.HasKey(e => e.KeyComposizioneFondo)
                    .HasName("SYS_C0061042");

                entity.ToTable("TAB_COMPOSIZIONE_FONDI", "IAGENCY");

                entity.HasIndex(e => e.IdComposizioneFondo)
                    .HasName("XX01TAB_COMPOSIZIONE_FONDI");

                entity.HasIndex(e => e.IdDescFondo)
                    .HasName("XX03TAB_COMPOSIZIONE_FONDI");

                entity.HasIndex(e => e.IdTabFondo)
                    .HasName("XX02TAB_COMPOSIZIONE_FONDI");

                entity.Property(e => e.KeyComposizioneFondo)
                    .HasColumnName("KEY_COMPOSIZIONE_FONDO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DescFondo)
                    .HasColumnName("DESC_FONDO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdComposizioneFondo)
                    .HasColumnName("ID_COMPOSIZIONE_FONDO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescFondo)
                    .HasColumnName("ID_DESC_FONDO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabFondo)
                    .HasColumnName("ID_TAB_FONDO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PctFondo)
                    .HasColumnName("PCT_FONDO")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<TabComuni>(entity =>
            {
                entity.HasKey(e => e.IdComune)
                    .HasName("PK__TAB_COMU__168CF009D20A076F");

                entity.ToTable("TAB_COMUNI", "ISUITE");

                entity.HasIndex(e => e.IdComune)
                    .HasName("SYS_C0046079")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX04TAB_COMUNI");

                entity.HasIndex(e => e.IdNazione)
                    .HasName("XX03TAB_COMUNI");

                entity.HasIndex(e => e.IdProvincia)
                    .HasName("XX02TAB_COMUNI");

                entity.Property(e => e.IdComune)
                    .HasColumnName("ID_COMUNE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Cap)
                    .HasColumnName("CAP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CodComuneMinisteriale)
                    .HasColumnName("COD_COMUNE_MINISTERIALE")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodIsvap)
                    .HasColumnName("COD_ISVAP")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.DescDenormalizzata)
                    .HasColumnName("DESC_DENORMALIZZATA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgSoppressoSino)
                    .HasColumnName("FLG_SOPPRESSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNazione)
                    .HasColumnName("ID_NAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProvincia)
                    .HasColumnName("ID_PROVINCIA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdProvinciaNavigation)
                    .WithMany(p => p.TabComuni)
                    .HasForeignKey(d => d.IdProvincia)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TAB_COMUN__ID_PR__15660868");
            });

            modelBuilder.Entity<TabComuniIstat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_COMUNI_ISTAT");

                entity.HasIndex(e => e.CodCatastale)
                    .HasName("K04TAB_COMUNI_ISTAT");

                entity.HasIndex(e => e.DescAltro)
                    .HasName("K03TAB_COMUNI_ISTAT");

                entity.HasIndex(e => e.DescIta)
                    .HasName("K02TAB_COMUNI_ISTAT");

                entity.HasIndex(e => e.DescItaNoita)
                    .HasName("K01TAB_COMUNI_ISTAT");

                entity.Property(e => e.CodCatastale)
                    .HasColumnName("COD_CATASTALE")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodComuneAlfanum)
                    .HasColumnName("COD_COMUNE_ALFANUM")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.CodComuneNumerico).HasColumnName("COD_COMUNE_NUMERICO");

                entity.Property(e => e.CodComuneNumerico103).HasColumnName("COD_COMUNE_NUMERICO_103");

                entity.Property(e => e.CodComuneNumerico107).HasColumnName("COD_COMUNE_NUMERICO_107");

                entity.Property(e => e.CodComuneNumerico110).HasColumnName("COD_COMUNE_NUMERICO_110");

                entity.Property(e => e.CodProvStorico)
                    .HasColumnName("COD_PROV_STORICO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodRegione)
                    .HasColumnName("COD_REGIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodRipartizione).HasColumnName("COD_RIPARTIZIONE");

                entity.Property(e => e.CodUnitaTerr)
                    .HasColumnName("COD_UNITA_TERR")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DescAltro)
                    .HasColumnName("DESC_ALTRO")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DescIta)
                    .HasColumnName("DESC_ITA")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DescItaNoita)
                    .HasColumnName("DESC_ITA_NOITA")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DescProvincia)
                    .HasColumnName("DESC_PROVINCIA")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DescRegione)
                    .HasColumnName("DESC_REGIONE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.DescRipartizione)
                    .HasColumnName("DESC_RIPARTIZIONE")
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCapoluogo01).HasColumnName("FLG_CAPOLUOGO_01");

                entity.Property(e => e.NrAbitanti).HasColumnName("NR_ABITANTI");

                entity.Property(e => e.Nuts1)
                    .HasColumnName("NUTS1")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Nuts2)
                    .HasColumnName("NUTS2")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Nuts3)
                    .HasColumnName("NUTS3")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.ProgrComune)
                    .HasColumnName("PROGR_COMUNE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.SiglaProv)
                    .HasColumnName("SIGLA_PROV")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<TabComuniTemp>(entity =>
            {
                entity.HasKey(e => e.IdComune);

                entity.ToTable("TAB_COMUNI_TEMP", "ISUITE");

                entity.Property(e => e.IdComune)
                    .HasColumnName("ID_COMUNE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabContatoreCaricoLiq>(entity =>
            {
                entity.HasKey(e => e.IdContatoreCaricoLiq);

                entity.ToTable("TAB_CONTATORE_CARICO_LIQ", "ICLAIMS");

                entity.HasIndex(e => new { e.IdCanalizzazioneLiq, e.IdIspettorato, e.IdLiquidatore })
                    .HasName("XX01TAB_CONTATORE_CARICO_LIQ");

                entity.Property(e => e.IdContatoreCaricoLiq)
                    .HasColumnName("ID_CONTATORE_CARICO_LIQ")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdCanalizzazioneLiq).HasColumnName("ID_CANALIZZAZIONE_LIQ");

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");

                entity.Property(e => e.IdLiquidatore).HasColumnName("ID_LIQUIDATORE");

                entity.Property(e => e.Numero).HasColumnName("NUMERO");
            });

            modelBuilder.Entity<TabContatoreCaricoPer>(entity =>
            {
                entity.HasKey(e => e.IdContatoreCaricoPer);

                entity.ToTable("TAB_CONTATORE_CARICO_PER", "ICLAIMS");

                entity.HasIndex(e => e.IdCanalizzazionePeriti)
                    .HasName("XX01TAB_CONTATORE_CARICO_PER");

                entity.Property(e => e.IdContatoreCaricoPer)
                    .HasColumnName("ID_CONTATORE_CARICO_PER")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdCanalizzazionePeriti).HasColumnName("ID_CANALIZZAZIONE_PERITI");

                entity.Property(e => e.Numero).HasColumnName("NUMERO");
            });

            modelBuilder.Entity<TabConti>(entity =>
            {
                entity.HasKey(e => e.KeyConto)
                    .HasName("PK__TAB_CONT__1EFD6CE8AC1F8382");

                entity.ToTable("TAB_CONTI", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03TAB_CONTI");

                entity.HasIndex(e => e.IdConto)
                    .HasName("XX01TAB_CONTI");

                entity.HasIndex(e => e.IdDescContoCoge)
                    .HasName("XX02TAB_CONTI");

                entity.HasIndex(e => e.IdDescContoComm)
                    .HasName("XX04TAB_CONTI");

                entity.HasIndex(e => e.KeyConto)
                    .HasName("PK_TAB_CONTI")
                    .IsUnique();

                entity.Property(e => e.KeyConto)
                    .HasColumnName("KEY_CONTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodContoCoge)
                    .IsRequired()
                    .HasColumnName("COD_CONTO_COGE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodContoComm)
                    .IsRequired()
                    .HasColumnName("COD_CONTO_COMM")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescContoCoge)
                    .HasColumnName("DESC_CONTO_COGE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DescContoComm)
                    .HasColumnName("DESC_CONTO_COMM")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdConto)
                    .HasColumnName("ID_CONTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescContoCoge)
                    .HasColumnName("ID_DESC_CONTO_COGE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescContoComm)
                    .HasColumnName("ID_DESC_CONTO_COMM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabContoSap>(entity =>
            {
                entity.HasKey(e => e.IdContoSap);

                entity.ToTable("TAB_CONTO_SAP", "ICLAIMS");

                entity.Property(e => e.IdContoSap)
                    .HasColumnName("ID_CONTO_SAP")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCompagniaAnia)
                    .HasColumnName("COD_COMPAGNIA_ANIA")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodContoAvere)
                    .HasColumnName("COD_CONTO_AVERE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodContoDare)
                    .HasColumnName("COD_CONTO_DARE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodContoDareCoass1)
                    .HasColumnName("COD_CONTO_DARE_COASS1")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodContoDareCoass2)
                    .HasColumnName("COD_CONTO_DARE_COASS2")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodContoDareCoass3)
                    .HasColumnName("COD_CONTO_DARE_COASS3")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodCoordinateBancarie)
                    .HasColumnName("COD_COORDINATE_BANCARIE")
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAnnoCorrenteSino)
                    .HasColumnName("FLG_ANNO_CORRENTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEntePagatore)
                    .HasColumnName("FLG_ENTE_PAGATORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStornoSino)
                    .HasColumnName("FLG_STORNO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCard)
                    .HasColumnName("FLG_TIPO_CARD")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCoass)
                    .HasColumnName("FLG_TIPO_COASS")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoPagamento)
                    .HasColumnName("FLG_TIPO_PAGAMENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabContoSapUniqa>(entity =>
            {
                entity.HasKey(e => e.IdContoSapUniqa);

                entity.ToTable("TAB_CONTO_SAP_UNIQA", "ICLAIMS");

                entity.Property(e => e.IdContoSapUniqa)
                    .HasColumnName("ID_CONTO_SAP_UNIQA")
                    .ValueGeneratedNever();

                entity.Property(e => e.ContoAnalitico)
                    .HasColumnName("CONTO_ANALITICO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ContoEconomico)
                    .HasColumnName("CONTO_ECONOMICO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAnnoCorrenteSino)
                    .HasColumnName("FLG_ANNO_CORRENTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto2)
                    .HasColumnName("FLG_TIPO_OGGETTO_2")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.MezzoPagamentoWise)
                    .HasColumnName("MEZZO_PAGAMENTO_WISE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Ramo).HasColumnName("RAMO");

                entity.Property(e => e.StornoSino)
                    .HasColumnName("STORNO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoCaricamentoWise)
                    .HasColumnName("TIPO_CARICAMENTO_WISE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.TipoContoFg)
                    .HasColumnName("TIPO_CONTO_FG")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoCtt)
                    .HasColumnName("TIPO_CTT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoGestione)
                    .HasColumnName("TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabContributiAgenti>(entity =>
            {
                entity.HasKey(e => e.KeyContributiagente)
                    .HasName("TAB_CONTRIBUTI_AGENTI_PK");

                entity.ToTable("TAB_CONTRIBUTI_AGENTI", "ICLAIMS");

                entity.Property(e => e.KeyContributiagente)
                    .HasColumnName("KEY_CONTRIBUTIAGENTE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCodificaEntroGgMaxSino)
                    .IsRequired()
                    .HasColumnName("FLG_CODIFICA_ENTRO_GG_MAX_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCoinvolgimentoLegaleSino)
                    .IsRequired()
                    .HasColumnName("FLG_COINVOLGIMENTO_LEGALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDatiCompletiSino)
                    .IsRequired()
                    .HasColumnName("FLG_DATI_COMPLETI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDenunciaAgenteSino)
                    .IsRequired()
                    .HasColumnName("FLG_DENUNCIA_AGENTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgProvenienzaSinistro)
                    .IsRequired()
                    .HasColumnName("FLG_PROVENIENZA_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaSinistro)
                    .IsRequired()
                    .HasColumnName("FLG_TIPOLOGIA_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GiorniMaxCodifica).HasColumnName("GIORNI_MAX_CODIFICA");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdContributiagente).HasColumnName("ID_CONTRIBUTIAGENTE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpCodificaEntroGgMax)
                    .HasColumnName("IMP_CODIFICA_ENTRO_GG_MAX")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpCoinvolgimentoLegale)
                    .HasColumnName("IMP_COINVOLGIMENTO_LEGALE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpDatiCompleti)
                    .HasColumnName("IMP_DATI_COMPLETI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpDenunciaAgente)
                    .HasColumnName("IMP_DENUNCIA_AGENTE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvenienzaSinistro)
                    .HasColumnName("IMP_PROVENIENZA_SINISTRO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTipologiaSinistro)
                    .HasColumnName("IMP_TIPOLOGIA_SINISTRO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TabConvenzioni>(entity =>
            {
                entity.HasKey(e => e.IdConvenzione);

                entity.ToTable("TAB_CONVENZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03TAB_CONVENZIONI");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02TAB_CONVENZIONI");

                entity.HasIndex(e => new { e.IdCompagnia, e.Codice })
                    .HasName("K01_TAB_CONVENZIONI")
                    .IsUnique();

                entity.Property(e => e.IdConvenzione)
                    .HasColumnName("ID_CONVENZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.Codice)
                    .IsRequired()
                    .HasColumnName("CODICE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAlimentaPlafondSino)
                    .IsRequired()
                    .HasColumnName("FLG_ALIMENTA_PLAFOND_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAutorizzazioneSino)
                    .IsRequired()
                    .HasColumnName("FLG_AUTORIZZAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRateSuccessiveSino)
                    .IsRequired()
                    .HasColumnName("FLG_RATE_SUCCESSIVE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScontoAutomaticoSino)
                    .IsRequired()
                    .HasColumnName("FLG_SCONTO_AUTOMATICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSommaScontoSino)
                    .IsRequired()
                    .HasColumnName("FLG_SOMMA_SCONTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoConvenzione)
                    .HasColumnName("FLG_TIPO_CONVENZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpSconto)
                    .HasColumnName("IMP_SCONTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpScontoFisso)
                    .HasColumnName("IMP_SCONTO_FISSO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PctMaxSconto)
                    .HasColumnName("PCT_MAX_SCONTO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctVarProvvAcquisto)
                    .HasColumnName("PCT_VAR_PROVV_ACQUISTO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctVarProvvIncasso)
                    .HasColumnName("PCT_VAR_PROVV_INCASSO")
                    .HasColumnType("numeric(10, 5)");

                entity.HasOne(d => d.IdCompagniaNavigation)
                    .WithMany(p => p.TabConvenzioni)
                    .HasForeignKey(d => d.IdCompagnia)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TAB_CONVE__ID_CO__5E15D37E");
            });

            modelBuilder.Entity<TabConvenzioniAgenzie>(entity =>
            {
                entity.HasKey(e => e.IdConvenzioneAgenzia);

                entity.ToTable("TAB_CONVENZIONI_AGENZIE", "IAGENCY");

                entity.HasIndex(e => e.IdConvenzione)
                    .HasName("XX02TAB_CONVENZIONI_AGENZIE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03TAB_CONVENZIONI_AGENZIE");

                entity.HasIndex(e => new { e.IdConvenzione, e.IdRetevendita })
                    .HasName("K01_TAB_CONVENZIONI_AGENZIE")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.IdConvenzione })
                    .HasName("K02_TAB_CONVENZIONI_AGENZIE");

                entity.Property(e => e.IdConvenzioneAgenzia)
                    .HasColumnName("ID_CONVENZIONE_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdConvenzione)
                    .HasColumnName("ID_CONVENZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdConvenzioneNavigation)
                    .WithMany(p => p.TabConvenzioniAgenzie)
                    .HasForeignKey(d => d.IdConvenzione)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TAB_CONVE__ID_CO__5F09F7B7");
            });

            modelBuilder.Entity<TabCoordinatoreReteDedicata>(entity =>
            {
                entity.HasKey(e => e.KeyCoordinatoreretededicata)
                    .HasName("PK_TAB_COORDINATORE_RETE_DEDIC");

                entity.ToTable("TAB_COORDINATORE_RETE_DEDICATA", "ISUITE");

                entity.Property(e => e.KeyCoordinatoreretededicata)
                    .HasColumnName("KEY_COORDINATORERETEDEDICATA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtCoordinatoreDal)
                    .HasColumnName("DT_COORDINATORE_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdCoordinatoreretededicata).HasColumnName("ID_COORDINATORERETEDEDICATA");

                entity.Property(e => e.IdDipartimento).HasColumnName("ID_DIPARTIMENTO");

                entity.Property(e => e.IdIndirizzo).HasColumnName("ID_INDIRIZZO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabCorporateBanking>(entity =>
            {
                entity.HasKey(e => e.IdCorporatebanking)
                    .HasName("PK__TAB_CORP__F3708944B5BC6CD4");

                entity.ToTable("TAB_CORPORATE_BANKING", "ISUITE");

                entity.HasIndex(e => e.IdCorporatebanking)
                    .HasName("TAB_CORPORATEBANKING_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.Descrizione, e.CodCorporate })
                    .HasName("XX01_TAB_CORP_BANK");

                entity.Property(e => e.IdCorporatebanking)
                    .HasColumnName("ID_CORPORATEBANKING")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodCorporate)
                    .HasColumnName("COD_CORPORATE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabCorrispondentiEsteri>(entity =>
            {
                entity.HasKey(e => e.IdCorrispondenteestero);

                entity.ToTable("TAB_CORRISPONDENTI_ESTERI", "ICLAIMS");

                entity.Property(e => e.IdCorrispondenteestero)
                    .HasColumnName("ID_CORRISPONDENTEESTERO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodCorrispondenteEstero)
                    .HasColumnName("COD_CORRISPONDENTE_ESTERO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineRapporto)
                    .HasColumnName("DT_FINE_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioRapporto)
                    .HasColumnName("DT_INIZIO_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagraficaCorrEstero).HasColumnName("ID_ANAGRAFICA_CORR_ESTERO");
            });

            modelBuilder.Entity<TabCorrispondentiEsteriComp>(entity =>
            {
                entity.HasKey(e => e.IdCorrispondenteesteroComp);

                entity.ToTable("TAB_CORRISPONDENTI_ESTERI_COMP", "ICLAIMS");

                entity.Property(e => e.IdCorrispondenteesteroComp)
                    .HasColumnName("ID_CORRISPONDENTEESTERO_COMP")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdCorrispondenteestero).HasColumnName("ID_CORRISPONDENTEESTERO");
            });

            modelBuilder.Entity<TabCorrispondentiEsteriNaz>(entity =>
            {
                entity.HasKey(e => e.IdCorrispondenteesteronazione);

                entity.ToTable("TAB_CORRISPONDENTI_ESTERI_NAZ", "ICLAIMS");

                entity.Property(e => e.IdCorrispondenteesteronazione)
                    .HasColumnName("ID_CORRISPONDENTEESTERONAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFineRapporto)
                    .HasColumnName("DT_FINE_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioRapporto)
                    .HasColumnName("DT_INIZIO_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCorrispondenteestero).HasColumnName("ID_CORRISPONDENTEESTERO");

                entity.Property(e => e.IdNazione).HasColumnName("ID_NAZIONE");
            });

            modelBuilder.Entity<TabDannoBiologico>(entity =>
            {
                entity.HasKey(e => e.IdDannoBiologico);

                entity.ToTable("TAB_DANNO_BIOLOGICO", "ICLAIMS");

                entity.HasIndex(e => new { e.IdDannoBiologico, e.FlgTabellaDannoBiologico })
                    .HasName("XX01TAB_DANNO_BIOLOGICO");

                entity.Property(e => e.IdDannoBiologico)
                    .HasColumnName("ID_DANNO_BIOLOGICO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anno)
                    .HasColumnName("ANNO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.FlgTabellaDannoBiologico)
                    .IsRequired()
                    .HasColumnName("FLG_TABELLA_DANNO_BIOLOGICO")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.ImpDannoTemporaneo)
                    .HasColumnName("IMP_DANNO_TEMPORANEO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PercMaxPersTemporaneo)
                    .HasColumnName("PERC_MAX_PERS_TEMPORANEO")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TabDannoMorte>(entity =>
            {
                entity.HasKey(e => e.IdDannoMorte);

                entity.ToTable("TAB_DANNO_MORTE", "ICLAIMS");

                entity.HasIndex(e => new { e.IdDannoMorte, e.FlgTipoRelazioneParentela })
                    .HasName("XX01TAB_DANNO_MORTE");

                entity.Property(e => e.IdDannoMorte)
                    .HasColumnName("ID_DANNO_MORTE")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoRelazioneParentela)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_RELAZIONE_PARENTELA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdDannoBiologico).HasColumnName("ID_DANNO_BIOLOGICO");

                entity.Property(e => e.ImpMassimo)
                    .HasColumnName("IMP_MASSIMO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpMinimo)
                    .HasColumnName("IMP_MINIMO")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TabDatiAggRicSin>(entity =>
            {
                entity.HasKey(e => e.IdDatoAggRicSin);

                entity.ToTable("TAB_DATI_AGG_RIC_SIN", "ICLAIMS");

                entity.Property(e => e.IdDatoAggRicSin)
                    .HasColumnName("ID_DATO_AGG_RIC_SIN")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgDatoAggRicSin)
                    .HasColumnName("FLG_DATO_AGG_RIC_SIN")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoSinistro)
                    .HasColumnName("FLG_STATO_SINISTRO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdTipoEventoDen)
                    .HasColumnName("ID_TIPO_EVENTO_DEN")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabDeducibilitaSsn>(entity =>
            {
                entity.HasKey(e => e.IdDeducibilitaSsn);

                entity.ToTable("TAB_DEDUCIBILITA_SSN", "IAGENCY");

                entity.Property(e => e.IdDeducibilitaSsn)
                    .HasColumnName("ID_DEDUCIBILITA_SSN")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.PercDeducibilita)
                    .HasColumnName("PERC_DEDUCIBILITA")
                    .HasColumnType("numeric(5, 2)");
            });

            modelBuilder.Entity<TabDetraibilita>(entity =>
            {
                entity.HasKey(e => e.IdDetraibilita);

                entity.ToTable("TAB_DETRAIBILITA", "IAGENCY");

                entity.Property(e => e.IdDetraibilita)
                    .HasColumnName("ID_DETRAIBILITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.PercDetraibilita)
                    .HasColumnName("PERC_DETRAIBILITA")
                    .HasColumnType("numeric(5, 2)");

                entity.Property(e => e.PercFranchigiaA)
                    .HasColumnName("PERC_FRANCHIGIA_A")
                    .HasColumnType("numeric(5, 2)");

                entity.Property(e => e.PercFranchigiaDa)
                    .HasColumnName("PERC_FRANCHIGIA_DA")
                    .HasColumnType("numeric(5, 2)");
            });

            modelBuilder.Entity<TabDipComm>(entity =>
            {
                entity.HasKey(e => e.KeyDipartimento)
                    .HasName("PK__TAB_DIP___A4B87A4414C9A4AC");

                entity.ToTable("TAB_DIP_COMM", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX04TAB_DIP_COMM");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX05TAB_DIP_COMM");

                entity.HasIndex(e => e.IdDipartimento)
                    .HasName("XX01TAB_DIP_COMM");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("XX02TAB_DIP_COMM");

                entity.HasIndex(e => e.IdManagerVf)
                    .HasName("XX03TAB_DIP_COMM");

                entity.HasIndex(e => e.KeyDipartimento)
                    .HasName("PK_TAB_DIP_COMM")
                    .IsUnique();

                entity.Property(e => e.KeyDipartimento)
                    .HasColumnName("KEY_DIPARTIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDipartimento)
                    .IsRequired()
                    .HasColumnName("COD_DIPARTIMENTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtApertura)
                    .HasColumnName("DT_APERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtChiusura)
                    .HasColumnName("DT_CHIUSURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtResponsabileDal)
                    .HasColumnName("DT_RESPONSABILE_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCanaledistribuzione).HasColumnName("ID_CANALEDISTRIBUZIONE");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDipartimento)
                    .HasColumnName("ID_DIPARTIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdManagerVf)
                    .HasColumnName("ID_MANAGER_VF")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumFax)
                    .HasColumnName("NUM_FAX")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumSelezioneDiretta)
                    .HasColumnName("NUM_SELEZIONE_DIRETTA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono1)
                    .HasColumnName("NUM_TELEFONO1")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono2)
                    .HasColumnName("NUM_TELEFONO2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono3)
                    .HasColumnName("NUM_TELEFONO3")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabDipCommComp>(entity =>
            {
                entity.HasKey(e => e.KeyDipartimentoCompagnia)
                    .HasName("PK__TAB_DIP___ABA4B31D1AF64708");

                entity.ToTable("TAB_DIP_COMM_COMP", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02TAB_DIP_COMM_COMP");

                entity.HasIndex(e => e.IdDipartimento)
                    .HasName("XX03TAB_DIP_COMM_COMP");

                entity.HasIndex(e => e.IdDipartimentoCompagnia)
                    .HasName("XX01TAB_DIP_COMM_COMP");

                entity.HasIndex(e => e.KeyDipartimentoCompagnia)
                    .HasName("PK_TAB_DIP_COMM_COMP")
                    .IsUnique();

                entity.Property(e => e.KeyDipartimentoCompagnia)
                    .HasColumnName("KEY_DIPARTIMENTO_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDipartimento)
                    .HasColumnName("ID_DIPARTIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDipartimentoCompagnia)
                    .HasColumnName("ID_DIPARTIMENTO_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabDocumentazioniAmmesse>(entity =>
            {
                entity.HasKey(e => e.IdDocumentazioneAmmessa);

                entity.ToTable("TAB_DOCUMENTAZIONI_AMMESSE", "ICLAIMS");

                entity.HasIndex(e => new { e.FlgTipoDocumentazione, e.IdTransizioneStatoCard })
                    .HasName("XX01TAB_DOCUMENTAZIONI_AMMESSE");

                entity.Property(e => e.IdDocumentazioneAmmessa)
                    .HasColumnName("ID_DOCUMENTAZIONE_AMMESSA")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceRaggruppamento)
                    .HasColumnName("CODICE_RAGGRUPPAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoDocumentazione)
                    .HasColumnName("FLG_TIPO_DOCUMENTAZIONE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdTransizioneStatoCard).HasColumnName("ID_TRANSIZIONE_STATO_CARD");
            });

            modelBuilder.Entity<TabDominiIvass>(entity =>
            {
                entity.HasKey(e => e.IdTabDominiIvass);

                entity.ToTable("TAB_DOMINI_IVASS", "IAGENCY");

                entity.HasIndex(e => e.IdTabDominiIvass)
                    .HasName("XAK1_TAB_DOMINI_IVASS");

                entity.Property(e => e.IdTabDominiIvass)
                    .HasColumnName("ID_TAB_DOMINI_IVASS")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodDominio)
                    .HasColumnName("COD_DOMINIO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodValore)
                    .HasColumnName("COD_VALORE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodWise)
                    .HasColumnName("COD_WISE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescDominio)
                    .HasColumnName("DESC_DOMINIO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DescValore)
                    .HasColumnName("DESC_VALORE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtUltAggiornDominio)
                    .HasColumnName("DT_ULT_AGGIORN_DOMINIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtUltAggiornValore)
                    .HasColumnName("DT_ULT_AGGIORN_VALORE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabEccezioniTarget>(entity =>
            {
                entity.HasKey(e => e.IdEccezioneTarget);

                entity.ToTable("TAB_ECCEZIONI_TARGET", "ISUITE");

                entity.HasIndex(e => e.IdTarget)
                    .HasName("XX01_TAB_ECCEZIONI_TARGET");

                entity.Property(e => e.IdEccezioneTarget)
                    .HasColumnName("ID_ECCEZIONE_TARGET")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoOggettoTarget)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OGGETTO_TARGET")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggettoTarget).HasColumnName("ID_OGGETTO_TARGET");

                entity.Property(e => e.IdTarget).HasColumnName("ID_TARGET");
            });

            modelBuilder.Entity<TabEdizioniMalattia>(entity =>
            {
                entity.HasKey(e => e.IdEdizione);

                entity.ToTable("TAB_EDIZIONI_MALATTIA", "ICLAIMS");

                entity.Property(e => e.IdEdizione)
                    .HasColumnName("ID_EDIZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.Edizione)
                    .HasColumnName("EDIZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabEntiIntervenuti>(entity =>
            {
                entity.HasKey(e => e.IdTabella);

                entity.ToTable("TAB_ENTI_INTERVENUTI", "ICLAIMS");

                entity.HasIndex(e => new { e.FlgTipoEnte, e.DtInizioValidita, e.DtFineValidita })
                    .HasName("XAK1_TAB_ENTI_INTERVENUTI");

                entity.Property(e => e.IdTabella)
                    .HasColumnName("ID_TABELLA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoEnte)
                    .HasColumnName("FLG_TIPO_ENTE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");
            });

            modelBuilder.Entity<TabErroriIsvap>(entity =>
            {
                entity.HasKey(e => e.IdErrore)
                    .HasName("PK__TAB_ERRO__CD295915B82852E6");

                entity.ToTable("TAB_ERRORI_ISVAP", "IREGULATION");

                entity.HasIndex(e => e.IdErrore)
                    .HasName("SYS_C0047922")
                    .IsUnique();

                entity.Property(e => e.IdErrore)
                    .HasColumnName("ID_ERRORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodErroreLabel)
                    .HasColumnName("COD_ERRORE_LABEL")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneBreve)
                    .HasColumnName("DESCRIZIONE_BREVE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneErrore)
                    .HasColumnName("DESCRIZIONE_ERRORE")
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoErrore)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ERRORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.LunghezzaCampo)
                    .HasColumnName("LUNGHEZZA_CAMPO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NomeCampoIsvap)
                    .HasColumnName("NOME_CAMPO_ISVAP")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PosizioneCampo)
                    .HasColumnName("POSIZIONE_CAMPO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabEsitiComunicazioni>(entity =>
            {
                entity.HasKey(e => e.IdTabEsitoComunicazione);

                entity.ToTable("TAB_ESITI_COMUNICAZIONI", "ISUITE");

                entity.HasIndex(e => e.DtComunicazione)
                    .HasName("XX02TAB_ESITI_COMUNICAZIONI");

                entity.HasIndex(e => new { e.IdOggetto, e.FlgTipoOggetto })
                    .HasName("XX01TAB_ESITI_COMUNICAZIONI");

                entity.Property(e => e.IdTabEsitoComunicazione)
                    .HasColumnName("ID_TAB_ESITO_COMUNICAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.Dettaglio)
                    .HasColumnName("DETTAGLIO")
                    .IsUnicode(false);

                entity.Property(e => e.DtComunicazione)
                    .HasColumnName("DT_COMUNICAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEsitoComunicazione)
                    .HasColumnName("FLG_ESITO_COMUNICAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoComunicazione)
                    .HasColumnName("FLG_TIPO_COMUNICAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggettoPrincipale)
                    .HasColumnName("FLG_TIPO_OGGETTO_PRINCIPALE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdOggettoPrincipale).HasColumnName("ID_OGGETTO_PRINCIPALE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.TimestampEsito)
                    .HasColumnName("TIMESTAMP_ESITO")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TimestampRichiesta)
                    .HasColumnName("TIMESTAMP_RICHIESTA")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<TabEuropAssLink>(entity =>
            {
                entity.HasKey(e => e.IdEuropAssLink)
                    .HasName("PK_EUROP_ASS_LINK");

                entity.ToTable("TAB_EUROP_ASS_LINK", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX01TAB_EUROP_ASS_LINK");

                entity.HasIndex(e => new { e.IdCompagnia, e.Dossier })
                    .HasName("XX02EUROP_ASS_LINK");

                entity.HasIndex(e => new { e.IdCompagnia, e.NSinistroIclaims, e.AnnoSinistroIclaims })
                    .HasName("XX01EUROP_ASS_LINK");

                entity.Property(e => e.IdEuropAssLink)
                    .HasColumnName("ID_EUROP_ASS_LINK")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoSinistroIclaims).HasColumnName("ANNO_SINISTRO_ICLAIMS");

                entity.Property(e => e.Dossier)
                    .IsRequired()
                    .HasColumnName("DOSSIER")
                    .HasMaxLength(11)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.NSinistroIclaims)
                    .IsRequired()
                    .HasColumnName("N_SINISTRO_ICLAIMS")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.RecordDenuncia)
                    .HasColumnName("RECORD_DENUNCIA")
                    .HasMaxLength(1000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabEventoCatastrofale>(entity =>
            {
                entity.HasKey(e => e.KeyEventoCatastrofale)
                    .HasName("PK_EVENTO_CATASTROFALE");

                entity.ToTable("TAB_EVENTO_CATASTROFALE", "ICLAIMS");

                entity.Property(e => e.KeyEventoCatastrofale)
                    .HasColumnName("KEY_EVENTO_CATASTROFALE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtEventoCatastrofale)
                    .HasColumnName("DT_EVENTO_CATASTROFALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineEvento)
                    .HasColumnName("DT_FINE_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdEventoCatastrofale).HasColumnName("ID_EVENTO_CATASTROFALE");

                entity.Property(e => e.IdIndirizzo).HasColumnName("ID_INDIRIZZO");

                entity.Property(e => e.IdTipoEventoCatastrofale).HasColumnName("ID_TIPO_EVENTO_CATASTROFALE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Note)
                    .IsRequired()
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabExtraProvvigioni>(entity =>
            {
                entity.HasKey(e => e.IdExtraprovvigione);

                entity.ToTable("TAB_EXTRA_PROVVIGIONI", "IAGENCY");

                entity.HasIndex(e => e.CodNodo)
                    .HasName("XX03EXTRA_PROVVIGIONI");

                entity.HasIndex(e => e.DescNodo)
                    .HasName("XX04EXTRA_PROVVIGIONI");

                entity.HasIndex(e => e.IdExtraprovvigioneSup)
                    .HasName("XX05EXTRA_PROVVIGIONI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX02EXTRA_PROVVIGIONI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX01EXTRA_PROVVIGIONI");

                entity.HasIndex(e => new { e.IdRetevendita, e.CodNodo, e.DescNodo })
                    .HasName("XX06EXTRA_PROVVIGIONI")
                    .IsUnique();

                entity.Property(e => e.IdExtraprovvigione)
                    .HasColumnName("ID_EXTRAPROVVIGIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodNodo)
                    .HasColumnName("COD_NODO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodRaggruppamentoEc)
                    .HasColumnName("COD_RAGGRUPPAMENTO_EC")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescNodo)
                    .HasColumnName("DESC_NODO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCalcoloExtraProvv)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_CALCOLO_EXTRA_PROVV")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescNodo).HasColumnName("ID_DESC_NODO");

                entity.Property(e => e.IdExtraprovvigioneSup).HasColumnName("ID_EXTRAPROVVIGIONE_SUP");

                entity.Property(e => e.IdPrProdotto).HasColumnName("ID_PR_PRODOTTO");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.PctAccessori)
                    .HasColumnName("PCT_ACCESSORI")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PctImposte)
                    .HasColumnName("PCT_IMPOSTE")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PctNetto)
                    .HasColumnName("PCT_NETTO")
                    .HasColumnType("decimal(10, 5)");
            });

            modelBuilder.Entity<TabFasceAumentoRca>(entity =>
            {
                entity.HasKey(e => e.IdFasciaAumento)
                    .HasName("PK__TAB_FASC__1AF3011801FB535C");

                entity.ToTable("TAB_FASCE_AUMENTO_RCA", "IAGENCY");

                entity.HasIndex(e => new { e.FlgTipoAbbScRca, e.PctScontoDa, e.PctScontoA })
                    .HasName("XX01TAB_FASCE_AUMENTO_RCA");

                entity.Property(e => e.IdFasciaAumento)
                    .HasColumnName("ID_FASCIA_AUMENTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoAbbScRca)
                    .HasColumnName("FLG_TIPO_ABB_SC_RCA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PctAumentoRca)
                    .HasColumnName("PCT_AUMENTO_RCA")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctScontoA)
                    .HasColumnName("PCT_SCONTO_A")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctScontoDa)
                    .HasColumnName("PCT_SCONTO_DA")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<TabFasceIncentivi>(entity =>
            {
                entity.HasKey(e => e.IdFasciaIncentivo);

                entity.ToTable("TAB_FASCE_INCENTIVI", "ISUITE");

                entity.HasIndex(e => e.IdTipoIncentivo)
                    .HasName("XX01_TAB_FASCE_INCENTIVI");

                entity.Property(e => e.IdFasciaIncentivo)
                    .HasColumnName("ID_FASCIA_INCENTIVO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFine)
                    .HasColumnName("DT_FINE")
                    .HasColumnType("date");

                entity.Property(e => e.DtInizio)
                    .HasColumnName("DT_INIZIO")
                    .HasColumnType("date");

                entity.Property(e => e.IdTipoIncentivo).HasColumnName("ID_TIPO_INCENTIVO");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PercentualeA)
                    .HasColumnName("PERCENTUALE_A")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PercentualeDa)
                    .HasColumnName("PERCENTUALE_DA")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<TabFiduciari>(entity =>
            {
                entity.HasKey(e => e.IdFiduciario)
                    .HasName("PK__TAB_FIDU__D62E0EA8E245F976");

                entity.ToTable("TAB_FIDUCIARI", "ICLAIMS");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX07TAB_FIDUCIARI");

                entity.HasIndex(e => e.IdCalcoloautomatico)
                    .HasName("XX05TAB_FIDUCIARI");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02TAB_FIDUCIARI");

                entity.HasIndex(e => e.IdFiduciario)
                    .HasName("SYS_C0047669")
                    .IsUnique();

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX04TAB_FIDUCIARI");

                entity.HasIndex(e => e.IdStudiofiduciario)
                    .HasName("XX03TAB_FIDUCIARI");

                entity.HasIndex(e => new { e.CodFiduciario, e.IdCompagnia })
                    .HasName("TAB_FIDUCIARI_K01")
                    .IsUnique();

                entity.Property(e => e.IdFiduciario)
                    .HasColumnName("ID_FIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodFiduciario)
                    .IsRequired()
                    .HasColumnName("COD_FIDUCIARIO")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DtFinRapporto)
                    .HasColumnName("DT_FIN_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniRapporto)
                    .HasColumnName("DT_INI_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAbilitaPortaleSino)
                    .HasColumnName("FLG_ABILITA_PORTALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAltoValore)
                    .HasColumnName("FLG_ALTO_VALORE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFiduciarioCtpSino)
                    .HasColumnName("FLG_FIDUCIARIO_CTP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMandatoProLiqSino)
                    .HasColumnName("FLG_MANDATO_PRO_LIQ_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPortaleSospesoSino)
                    .HasColumnName("FLG_PORTALE_SOSPESO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgProponiInvioMailSino)
                    .HasColumnName("FLG_PROPONI_INVIO_MAIL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStudioSino)
                    .HasColumnName("FLG_STUDIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoPortalePeriti)
                    .HasColumnName("FLG_TIPO_PORTALE_PERITI")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoProfessione)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_PROFESSIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCalcoloautomatico)
                    .HasColumnName("ID_CALCOLOAUTOMATICO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdStudiofiduciario)
                    .HasColumnName("ID_STUDIOFIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdentificativoEsterno)
                    .HasColumnName("IDENTIFICATIVO_ESTERNO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PerSpeseRecupero)
                    .HasColumnName("PER_SPESE_RECUPERO")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.ProgFiduciario)
                    .HasColumnName("PROG_FIDUCIARIO")
                    .HasColumnType("numeric(4, 0)");
            });

            modelBuilder.Entity<TabFiduciariAutosoft>(entity =>
            {
                entity.HasKey(e => e.IdFiduciarioAutosoft);

                entity.ToTable("TAB_FIDUCIARI_AUTOSOFT", "ICLAIMS");

                entity.HasIndex(e => e.IdFiduciario)
                    .HasName("XX01_TAB_FIDUCIARI_AUTOSOFT");

                entity.Property(e => e.IdFiduciarioAutosoft)
                    .HasColumnName("ID_FIDUCIARIO_AUTOSOFT")
                    .ValueGeneratedNever();

                entity.Property(e => e.DescEsenzioneIva)
                    .HasColumnName("DESC_ESENZIONE_IVA")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEsenteIvaSino)
                    .HasColumnName("FLG_ESENTE_IVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFatturazioneSino)
                    .HasColumnName("FLG_FATTURAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRitSuCassaSino)
                    .HasColumnName("FLG_RIT_SU_CASSA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdFiduciario).HasColumnName("ID_FIDUCIARIO");

                entity.Property(e => e.NumMaxParcelleFatt).HasColumnName("NUM_MAX_PARCELLE_FATT");

                entity.Property(e => e.PercCassa)
                    .HasColumnName("PERC_CASSA")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PercContrInps)
                    .HasColumnName("PERC_CONTR_INPS")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PercIva)
                    .HasColumnName("PERC_IVA")
                    .HasColumnType("decimal(10, 5)");

                entity.Property(e => e.PercRitAcconto)
                    .HasColumnName("PERC_RIT_ACCONTO")
                    .HasColumnType("decimal(10, 5)");
            });

            modelBuilder.Entity<TabFiduciariComp>(entity =>
            {
                entity.HasKey(e => e.IdFiduciarioComp)
                    .HasName("PK__TAB_FIDU__602499846320E72F");

                entity.ToTable("TAB_FIDUCIARI_COMP", "ICLAIMS");

                entity.HasIndex(e => e.IdFiduciarioComp)
                    .HasName("PK_TAB_FIDUCIARI_COMP")
                    .IsUnique();

                entity.Property(e => e.IdFiduciarioComp)
                    .HasColumnName("ID_FIDUCIARIO_COMP")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFiduciario)
                    .HasColumnName("ID_FIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabFiduciariCorr>(entity =>
            {
                entity.HasKey(e => e.IdFiduciarioCorr)
                    .HasName("PK__TAB_FIDU__6024A1E6B838B157");

                entity.ToTable("TAB_FIDUCIARI_CORR", "ICLAIMS");

                entity.HasIndex(e => e.IdFiduciarioCorr)
                    .HasName("TAB_FIDUCIARI_CORR_PK")
                    .IsUnique();

                entity.Property(e => e.IdFiduciarioCorr)
                    .HasColumnName("ID_FIDUCIARIO_CORR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFiduciario)
                    .HasColumnName("ID_FIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabFiduciariImporti>(entity =>
            {
                entity.HasKey(e => e.KeyFiduciariImporti)
                    .HasName("PK_FIDUCIARI_IMPORTI");

                entity.ToTable("TAB_FIDUCIARI_IMPORTI", "ICLAIMS");

                entity.Property(e => e.KeyFiduciariImporti)
                    .HasColumnName("KEY_FIDUCIARI_IMPORTI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FasciaImportoAl)
                    .HasColumnName("FASCIA_IMPORTO_AL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.FasciaImportoDal)
                    .HasColumnName("FASCIA_IMPORTO_DAL")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("FLG_RAMO_TECNICO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdFiduciariImporti).HasColumnName("ID_FIDUCIARI_IMPORTI");

                entity.Property(e => e.IdTipoincaricofiduciario).HasColumnName("ID_TIPOINCARICOFIDUCIARIO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImportoMinimo)
                    .HasColumnName("IMPORTO_MINIMO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Percentuale)
                    .HasColumnName("PERCENTUALE")
                    .HasColumnType("numeric(5, 2)");
            });

            modelBuilder.Entity<TabFiduciariIsp>(entity =>
            {
                entity.HasKey(e => e.IdFiduciarioIsp)
                    .HasName("PK__TAB_FIDU__27FBDCB84B248FE6");

                entity.ToTable("TAB_FIDUCIARI_ISP", "ICLAIMS");

                entity.HasIndex(e => e.IdFiduciarioIsp)
                    .HasName("PK_TAB_FIDUCIARI_ISP")
                    .IsUnique();

                entity.Property(e => e.IdFiduciarioIsp)
                    .HasColumnName("ID_FIDUCIARIO_ISP")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFiduciario)
                    .HasColumnName("ID_FIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabFiduciariMacroaree>(entity =>
            {
                entity.HasKey(e => e.KeyFiduciariMacroaree);

                entity.ToTable("TAB_FIDUCIARI_MACROAREE", "ICLAIMS");

                entity.HasIndex(e => e.IdFiduciariMacroaree)
                    .HasName("XX01TAB_FIDUCIARI_MACROAREE");

                entity.HasIndex(e => e.IdUtente)
                    .HasName("XX02TAB_FIDUCIARI_MACROAREE");

                entity.HasIndex(e => new { e.DtStoScadenzaLog, e.DtStoEffettoLog })
                    .HasName("XX03TAB_FIDUCIARI_MACROAREE");

                entity.HasIndex(e => new { e.IdFiduciariMacroaree, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_TAB_FIDUCIARI_MACROAREE_STO")
                    .IsUnique();

                entity.Property(e => e.KeyFiduciariMacroaree)
                    .HasColumnName("KEY_FIDUCIARI_MACROAREE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.EmailUfficio)
                    .HasColumnName("EMAIL_UFFICIO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMacroAreaAppartenenza)
                    .IsRequired()
                    .HasColumnName("FLG_MACRO_AREA_APPARTENENZA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdFiduciariMacroaree).HasColumnName("ID_FIDUCIARI_MACROAREE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabFondi>(entity =>
            {
                entity.HasKey(e => e.KeyTabFondo)
                    .HasName("SYS_C0061064");

                entity.ToTable("TAB_FONDI", "IAGENCY");

                entity.HasIndex(e => e.IdDescEstesa)
                    .HasName("XX02TAB_FONDI");

                entity.HasIndex(e => e.IdDescRidotta)
                    .HasName("XX03TAB_FONDI");

                entity.HasIndex(e => e.IdTabFondo)
                    .HasName("XX01TAB_FONDI");

                entity.Property(e => e.KeyTabFondo)
                    .HasColumnName("KEY_TAB_FONDO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodiceFondo)
                    .HasColumnName("CODICE_FONDO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescEstesa)
                    .HasColumnName("DESC_ESTESA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DescRidotta)
                    .HasColumnName("DESC_RIDOTTA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDescEstesa)
                    .HasColumnName("ID_DESC_ESTESA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescRidotta)
                    .HasColumnName("ID_DESC_RIDOTTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabFondo)
                    .HasColumnName("ID_TAB_FONDO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabForfaitCard>(entity =>
            {
                entity.HasKey(e => e.IdForfaitCard)
                    .HasName("PK__TAB_FORF__5AD589A6D374ABB5");

                entity.ToTable("TAB_FORFAIT_CARD", "ICLAIMS");

                entity.HasIndex(e => e.IdForfaitCard)
                    .HasName("PK_TAB_FORFAIT_CARD")
                    .IsUnique();

                entity.Property(e => e.IdForfaitCard)
                    .HasColumnName("ID_FORFAIT_CARD")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdProvincia)
                    .HasColumnName("ID_PROVINCIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpForfaitCtt)
                    .HasColumnName("IMP_FORFAIT_CTT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpForfaitCttM)
                    .HasColumnName("IMP_FORFAIT_CTT_M")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpForfaitLesioni)
                    .HasColumnName("IMP_FORFAIT_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpForfaitVeicolo)
                    .HasColumnName("IMP_FORFAIT_VEICOLO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpForfaitVeicoloM)
                    .HasColumnName("IMP_FORFAIT_VEICOLO_M")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFrancFissaCtt)
                    .HasColumnName("IMP_FRANC_FISSA_CTT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFrancFissaLesioni)
                    .HasColumnName("IMP_FRANC_FISSA_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFrancMaxCtt)
                    .HasColumnName("IMP_FRANC_MAX_CTT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFrancMaxLesioni)
                    .HasColumnName("IMP_FRANC_MAX_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPlafondCtt)
                    .HasColumnName("IMP_PLAFOND_CTT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpPlafondLesioni)
                    .HasColumnName("IMP_PLAFOND_LESIONI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PerFrancCtt)
                    .HasColumnName("PER_FRANC_CTT")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PerFrancLesioni)
                    .HasColumnName("PER_FRANC_LESIONI")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<TabFormatoTarga>(entity =>
            {
                entity.HasKey(e => e.IdFormatoTarga)
                    .HasName("PK__TAB_FORM__9B8EE3FA0D7AFC76");

                entity.ToTable("TAB_FORMATO_TARGA", "ISUITE");

                entity.HasIndex(e => e.IdFormatoTarga)
                    .HasName("PK_FORMATO_TARGA")
                    .IsUnique();

                entity.Property(e => e.IdFormatoTarga)
                    .HasColumnName("ID_FORMATO_TARGA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgTargaSpeciale)
                    .HasColumnName("FLG_TARGA_SPECIALE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoTarga)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_TARGA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoVeicolo)
                    .HasColumnName("FLG_TIPO_VEICOLO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FormatoInputTarga)
                    .IsRequired()
                    .HasColumnName("FORMATO_INPUT_TARGA")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.FormatoOutputTarga)
                    .IsRequired()
                    .HasColumnName("FORMATO_OUTPUT_TARGA")
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabFormule>(entity =>
            {
                entity.HasKey(e => e.KeyFormula)
                    .HasName("PK__TAB_FORM__2BC15FDABA1F639E");

                entity.ToTable("TAB_FORMULE", "ISUITE");

                entity.HasIndex(e => e.IdDescFormula)
                    .HasName("XX02TAB_FORMULE");

                entity.HasIndex(e => e.IdFormula)
                    .HasName("XX01TAB_FORMULE");

                entity.HasIndex(e => e.KeyFormula)
                    .HasName("PK_TAB_FORMULE")
                    .IsUnique();

                entity.Property(e => e.KeyFormula)
                    .HasColumnName("KEY_FORMULA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodFormula)
                    .HasColumnName("COD_FORMULA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescFormula)
                    .HasColumnName("DESC_FORMULA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoFormula)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_FORMULA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgValidaSino)
                    .IsRequired()
                    .HasColumnName("FLG_VALIDA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Formula)
                    .IsRequired()
                    .HasColumnName("FORMULA")
                    .IsUnicode(false);

                entity.Property(e => e.IdDescFormula)
                    .HasColumnName("ID_DESC_FORMULA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFormula)
                    .HasColumnName("ID_FORMULA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ParoleChiave)
                    .HasColumnName("PAROLE_CHIAVE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabFormuleParamFunzioni>(entity =>
            {
                entity.HasKey(e => e.KeyFormulaParamFunzione)
                    .HasName("PK_FORMULE_PARAM_FUNZIONI");

                entity.ToTable("TAB_FORMULE_PARAM_FUNZIONI", "ISUITE");

                entity.HasIndex(e => e.IdFormula)
                    .HasName("XX01_FORMULE_PARAM_FUNZIONI_ID_FORMULA");

                entity.HasIndex(e => new { e.IdFormulaParamFunzione, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_FORMULE_PARAM_FUNZIONI")
                    .IsUnique();

                entity.Property(e => e.KeyFormulaParamFunzione)
                    .HasColumnName("KEY_FORMULA_PARAM_FUNZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("date");

                entity.Property(e => e.FlgFormatoVariabile)
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdFormula).HasColumnName("ID_FORMULA");

                entity.Property(e => e.IdFormulaParamFunzione).HasColumnName("ID_FORMULA_PARAM_FUNZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.PrgParametro).HasColumnName("PRG_PARAMETRO");
            });

            modelBuilder.Entity<TabGaranzie>(entity =>
            {
                entity.HasKey(e => e.KeyGaranzia)
                    .HasName("PK__TAB_GARA__38D1BE4C54C66789");

                entity.ToTable("TAB_GARANZIE", "ICLAIMS");

                entity.HasIndex(e => e.IdProdotto)
                    .HasName("K01_TAB_GARANZIE");

                entity.HasIndex(e => e.KeyGaranzia)
                    .HasName("PK_TAB_GARANZIE")
                    .IsUnique();

                entity.Property(e => e.KeyGaranzia)
                    .HasColumnName("KEY_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGaranzia)
                    .HasColumnName("COD_GARANZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgBeneficiarioMorteSino)
                    .HasColumnName("FLG_BENEFICIARIO_MORTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCreaIncaricoSino)
                    .HasColumnName("FLG_CREA_INCARICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLdaSino)
                    .HasColumnName("FLG_LDA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPrestazioniInfTipo)
                    .HasColumnName("FLG_PRESTAZIONI_INF_TIPO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoSolvency)
                    .HasColumnName("FLG_RAMO_SOLVENCY")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("flg_ramo_tecnico")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRichiediDatiCciSino)
                    .HasColumnName("FLG_RICHIEDI_DATI_CCI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaCoinvolto)
                    .HasColumnName("FLG_RICHIESTA_COINVOLTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiestaFurtoSino)
                    .HasColumnName("FLG_RICHIESTA_FURTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRischioRiass)
                    .HasColumnName("FLG_RISCHIO_RIASS")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSelAperturaSxSino)
                    .HasColumnName("FLG_SEL_APERTURA_SX_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSezione)
                    .HasColumnName("FLG_SEZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoMassimalizzazione)
                    .HasColumnName("FLG_TIPO_MASSIMALIZZAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSchedaDanno)
                    .HasColumnName("FLG_TIPO_SCHEDA_DANNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSinistro)
                    .HasColumnName("FLG_TIPO_SINISTRO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdGaranzia)
                    .HasColumnName("ID_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProdotto)
                    .HasColumnName("ID_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NPrestErogabiliAnnuali).HasColumnName("N_PREST_EROGABILI_ANNUALI");
            });

            modelBuilder.Entity<TabGaranzieAniaCvt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_GARANZIE_ANIA_CVT", "IAGENCY");

                entity.Property(e => e.CodGaranzia)
                    .HasColumnName("COD_GARANZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodGaranziaAnia)
                    .HasColumnName("COD_GARANZIA_ANIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DescGaranzia)
                    .HasColumnName("DESC_GARANZIA")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabGaranzieNetwork>(entity =>
            {
                entity.HasKey(e => e.IdGaranzieNetwork);

                entity.ToTable("TAB_GARANZIE_NETWORK", "ICLAIMS");

                entity.HasIndex(e => e.IdGaranzia)
                    .HasName("XAK1_TAB_GARANZIE_NETWORK");

                entity.Property(e => e.IdGaranzieNetwork)
                    .HasColumnName("ID_GARANZIE_NETWORK")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdGaranzia).HasColumnName("ID_GARANZIA");

                entity.Property(e => e.IdNetwork).HasColumnName("ID_NETWORK");
            });

            modelBuilder.Entity<TabGruppiIntervento>(entity =>
            {
                entity.HasKey(e => e.KeyGruppoIntervento)
                    .HasName("PK_TAB_GRUPPI_INTERV");

                entity.ToTable("TAB_GRUPPI_INTERVENTO", "ICLAIMS");

                entity.HasIndex(e => new { e.IdGruppoIntervento, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_TAB_GRUPPI_INTERV_STO");

                entity.Property(e => e.KeyGruppoIntervento)
                    .HasColumnName("KEY_GRUPPO_INTERVENTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodTariffa)
                    .HasColumnName("COD_TARIFFA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceGruppoIntervento)
                    .HasColumnName("CODICE_GRUPPO_INTERVENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.Edizione)
                    .HasColumnName("EDIZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdGruppoIntervento).HasColumnName("ID_GRUPPO_INTERVENTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PercCapitaleAssicurato)
                    .HasColumnName("PERC_CAPITALE_ASSICURATO")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<TabGuidaAxa>(entity =>
            {
                entity.HasKey(e => e.IdTabGuidaAxa)
                    .HasName("PK__TAB_GUIDA_AXA__7C062918");

                entity.ToTable("TAB_GUIDA_AXA", "ISUITE");

                entity.HasIndex(e => e.IdTabGuidaAxa)
                    .HasName("TAB_GUIDA_AXA_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.FlgElaboratoSino, e.IdNodo, e.FlgSpecialRulesEntity })
                    .HasName("K01_TAB_GUIDA_AXA");

                entity.Property(e => e.IdTabGuidaAxa).HasColumnName("ID_TAB_GUIDA_AXA");

                entity.Property(e => e.DtSysAggiornamento)
                    .HasColumnName("DT_SYS_AGGIORNAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysElaborazione)
                    .HasColumnName("DT_SYS_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgElaboratoSino)
                    .HasColumnName("FLG_ELABORATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSpecialRulesEntity)
                    .IsRequired()
                    .HasColumnName("FLG_SPECIAL_RULES_ENTITY")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSpecialRulesNodo)
                    .IsRequired()
                    .HasColumnName("FLG_SPECIAL_RULES_NODO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoInterfaccia)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_INTERFACCIA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdNodo).HasColumnName("ID_NODO");

                entity.Property(e => e.IdTabTrackingAxa).HasColumnName("ID_TAB_TRACKING_AXA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabImportiMediazione>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_IMPORTI_MEDIAZIONE", "ICLAIMS");

                entity.Property(e => e.CodParametri)
                    .HasColumnName("COD_PARAMETRI")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdImportomediazione).HasColumnName("ID_IMPORTOMEDIAZIONE");

                entity.Property(e => e.IdValuta).HasColumnName("ID_VALUTA");

                entity.Property(e => e.ImpValore)
                    .HasColumnName("IMP_VALORE")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TabImportiPrev>(entity =>
            {
                entity.HasKey(e => e.IdImportoPrev)
                    .HasName("PK__TAB_IMPO__0769B1F920B9357B");

                entity.ToTable("TAB_IMPORTI_PREV", "ICLAIMS");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX04TAB_IMPORTI_PREV");

                entity.HasIndex(e => e.IdGaranzia)
                    .HasName("XX03TAB_IMPORTI_PREV");

                entity.HasIndex(e => e.IdImportoPrev)
                    .HasName("SYS_C0047681")
                    .IsUnique();

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX02TAB_IMPORTI_PREV");

                entity.HasIndex(e => new { e.CodParametri, e.DataInizioValidita, e.IdGaranzia })
                    .HasName("XTAB_IMPORTI_PREV")
                    .IsUnique();

                entity.Property(e => e.IdImportoPrev)
                    .HasColumnName("ID_IMPORTO_PREV")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodParametri)
                    .HasColumnName("COD_PARAMETRI")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DataFineValidita)
                    .HasColumnName("DATA_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataInizioValidita)
                    .HasColumnName("DATA_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdGaranzia)
                    .HasColumnName("ID_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpCostoMedio)
                    .HasColumnName("IMP_COSTO_MEDIO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TabImportiPrevPrest>(entity =>
            {
                entity.HasKey(e => e.IdImportoPrevPrest);

                entity.ToTable("TAB_IMPORTI_PREV_PREST", "ICLAIMS");

                entity.HasIndex(e => e.IdPrestazione)
                    .HasName("XX03TAB_IMPORTI_PREV");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX02TAB_IMPORTI_PREV");

                entity.HasIndex(e => new { e.DataInizioValidita, e.IdPrestazione })
                    .HasName("XX01TAB_IMPORTI_PREV");

                entity.Property(e => e.IdImportoPrevPrest)
                    .HasColumnName("ID_IMPORTO_PREV_PREST")
                    .ValueGeneratedNever();

                entity.Property(e => e.DataFineValidita)
                    .HasColumnName("DATA_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataInizioValidita)
                    .HasColumnName("DATA_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgLdaSino)
                    .HasColumnName("FLG_LDA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCardCompagnia)
                    .HasColumnName("FLG_TIPO_CARD_COMPAGNIA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgUtilizzaPercRespSino)
                    .HasColumnName("FLG_UTILIZZA_PERC_RESP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.IdValuta).HasColumnName("ID_VALUTA");

                entity.Property(e => e.ImpCostoMedio)
                    .HasColumnName("IMP_COSTO_MEDIO")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TabIniziativeRete>(entity =>
            {
                entity.HasKey(e => e.IdIniziativaRete)
                    .HasName("SYS_C0014617");

                entity.ToTable("TAB_INIZIATIVE_RETE", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX01TAB_INIZIATIVE_RETE");

                entity.Property(e => e.IdIniziativaRete)
                    .HasColumnName("ID_INIZIATIVA_RETE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodIniziativa)
                    .IsRequired()
                    .HasColumnName("COD_INIZIATIVA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFinVal)
                    .HasColumnName("DT_FIN_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniVal)
                    .HasColumnName("DT_INI_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoVenditore)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_VENDITORE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdModelloIniziativa).HasColumnName("ID_MODELLO_INIZIATIVA");

                entity.Property(e => e.IdModelloIniziativaSpec).HasColumnName("ID_MODELLO_INIZIATIVA_SPEC");

                entity.Property(e => e.IdModelloIniziativaStage).HasColumnName("ID_MODELLO_INIZIATIVA_STAGE");
            });

            modelBuilder.Entity<TabInvaliditaCoeff>(entity =>
            {
                entity.HasKey(e => e.IdTabInvaliditaCoeff);

                entity.ToTable("TAB_INVALIDITA_COEFF", "ICLAIMS");

                entity.HasIndex(e => e.IdDannoBiologico)
                    .HasName("XX02TAB_INVALIDITA_COEFF");

                entity.HasIndex(e => new { e.IdTabInvaliditaCoeff, e.Eta })
                    .HasName("XX01TAB_INVALIDITA_COEFF");

                entity.Property(e => e.IdTabInvaliditaCoeff)
                    .HasColumnName("ID_TAB_INVALIDITA_COEFF")
                    .ValueGeneratedNever();

                entity.Property(e => e.Eta)
                    .HasColumnName("ETA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdDannoBiologico).HasColumnName("ID_DANNO_BIOLOGICO");

                entity.Property(e => e.PercCoefficiente)
                    .HasColumnName("PERC_COEFFICIENTE")
                    .HasColumnType("decimal(18, 3)");
            });

            modelBuilder.Entity<TabInvaliditaPunti>(entity =>
            {
                entity.HasKey(e => e.IdTabInvaliditaPunti);

                entity.ToTable("TAB_INVALIDITA_PUNTI", "ICLAIMS");

                entity.HasIndex(e => e.IdDannoBiologico)
                    .HasName("XX02TAB_INVALIDITA_PUNTI");

                entity.HasIndex(e => new { e.IdTabInvaliditaPunti, e.PuntoInv })
                    .HasName("XX01TAB_INVALIDITA_PUNTI");

                entity.Property(e => e.IdTabInvaliditaPunti)
                    .HasColumnName("ID_TAB_INVALIDITA_PUNTI")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdDannoBiologico).HasColumnName("ID_DANNO_BIOLOGICO");

                entity.Property(e => e.Imp100)
                    .HasColumnName("IMP_100")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PercMaxPers)
                    .HasColumnName("PERC_MAX_PERS")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PuntoInv)
                    .HasColumnName("PUNTO_INV")
                    .HasColumnType("numeric(3, 0)");
            });

            modelBuilder.Entity<TabInviiCrm>(entity =>
            {
                entity.HasKey(e => e.IdInvio)
                    .HasName("SYS_C0040588");

                entity.ToTable("TAB_INVII_CRM", "ICLAIMS");

                entity.HasIndex(e => e.DtInvio)
                    .HasName("XX01TAB_INVII_CRM");

                entity.Property(e => e.IdInvio)
                    .HasColumnName("ID_INVIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.Progressivo)
                    .HasColumnName("PROGRESSIVO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabInviiIsvap>(entity =>
            {
                entity.HasKey(e => e.KeyInvio)
                    .HasName("TAB_INVII_ISVAP_PK0");

                entity.ToTable("TAB_INVII_ISVAP", "IREGULATION");

                entity.HasIndex(e => e.KeyInvio)
                    .HasName("TAB_INVII_ISVAP_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCompagnia, e.DtInvio, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX01TAB_INVII_ISVAP");

                entity.Property(e => e.KeyInvio)
                    .HasColumnName("KEY_INVIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEsecuzioneInvio)
                    .HasColumnName("DT_ESECUZIONE_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInvio)
                    .HasColumnName("DT_INVIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPeriodoAl)
                    .HasColumnName("DT_PERIODO_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPeriodoDal)
                    .HasColumnName("DT_PERIODO_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInviatoSino)
                    .HasColumnName("FLG_INVIATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdInvio)
                    .HasColumnName("ID_INVIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabIspTipoCanalizzazione>(entity =>
            {
                entity.HasKey(e => e.IdIspTipoCanalizzazione);

                entity.ToTable("TAB_ISP_TIPO_CANALIZZAZIONE", "ICLAIMS");

                entity.HasIndex(e => new { e.IdIspettorato, e.FlgTipoCanalizzazioneIsp })
                    .HasName("XX01TAB_ISP_TIPO_CANALIZ");

                entity.Property(e => e.IdIspTipoCanalizzazione)
                    .HasColumnName("ID_ISP_TIPO_CANALIZZAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoCanalizzazioneIsp)
                    .HasColumnName("FLG_TIPO_CANALIZZAZIONE_ISP")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdIspettorato).HasColumnName("ID_ISPETTORATO");
            });

            modelBuilder.Entity<TabIspettAmm>(entity =>
            {
                entity.HasKey(e => e.KeyIspettoreAmm)
                    .HasName("PK__TAB_ISPE__19360B88AA9481D8");

                entity.ToTable("TAB_ISPETT_AMM", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02TAB_ISPETT_AMM");

                entity.HasIndex(e => e.IdDipartimento)
                    .HasName("XX03TAB_ISPETT_AMM");

                entity.HasIndex(e => e.IdIspettoreAmm)
                    .HasName("XX01TAB_ISPETT_AMM");

                entity.HasIndex(e => e.KeyIspettoreAmm)
                    .HasName("PK_TAB_ISPETT_AMM")
                    .IsUnique();

                entity.Property(e => e.KeyIspettoreAmm)
                    .HasColumnName("KEY_ISPETTORE_AMM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodIspettoreAmm)
                    .IsRequired()
                    .HasColumnName("COD_ISPETTORE_AMM")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDipartimento)
                    .HasColumnName("ID_DIPARTIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettoreAmm)
                    .HasColumnName("ID_ISPETTORE_AMM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabIspettorati>(entity =>
            {
                entity.HasKey(e => e.KeyIspettorato)
                    .HasName("PK__TAB_ISPE__5718A2D6ED9B48FD");

                entity.ToTable("TAB_ISPETTORATI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02TAB_ISPETTORATI");

                entity.HasIndex(e => e.IdAreaSinistri)
                    .HasName("XX03TAB_ISPETTORATI");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX04TAB_ISPETTORATI");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("XX05TAB_ISPETTORATI");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX01TAB_ISPETTORATI");

                entity.HasIndex(e => e.KeyIspettorato)
                    .HasName("PK_TAB_ISPETTORATI")
                    .IsUnique();

                entity.Property(e => e.KeyIspettorato)
                    .HasColumnName("KEY_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodIspettorato)
                    .IsRequired()
                    .HasColumnName("COD_ISPETTORATO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFinRapporto)
                    .HasColumnName("DT_FIN_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniRapporto)
                    .HasColumnName("DT_INI_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtResponsabileDal)
                    .HasColumnName("DT_RESPONSABILE_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgBloccoAbbChiusureSino)
                    .HasColumnName("FLG_BLOCCO_ABB_CHIUSURE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgOutsourcerSino)
                    .HasColumnName("FLG_OUTSOURCER_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoLiquidazione)
                    .HasColumnName("FLG_TIPO_LIQUIDAZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgUnitaAntifrodeSino)
                    .HasColumnName("FLG_UNITA_ANTIFRODE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgVisSpeseAltriIspSino)
                    .HasColumnName("FLG_VIS_SPESE_ALTRI_ISP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAreaSinistri)
                    .HasColumnName("ID_AREA_SINISTRI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFiduciario).HasColumnName("ID_FIDUCIARIO");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteResponsabile).HasColumnName("ID_UTENTE_RESPONSABILE");

                entity.Property(e => e.NotaOrarioRicevimento)
                    .HasColumnName("NOTA_ORARIO_RICEVIMENTO")
                    .IsUnicode(false);

                entity.Property(e => e.NotaOrarioRicevimentoPubb)
                    .HasColumnName("NOTA_ORARIO_RICEVIMENTO_PUBB")
                    .IsUnicode(false);

                entity.Property(e => e.NumFax)
                    .HasColumnName("NUM_FAX")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumSelezioneDiretta)
                    .HasColumnName("NUM_SELEZIONE_DIRETTA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono1)
                    .HasColumnName("NUM_TELEFONO1")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono2)
                    .HasColumnName("NUM_TELEFONO2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono3)
                    .HasColumnName("NUM_TELEFONO3")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabIspettoratiCc>(entity =>
            {
                entity.HasKey(e => e.KeyIspettoratoCc);

                entity.ToTable("TAB_ISPETTORATI_CC", "ISUITE");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX03TAB_ISPETTORATI_CC");

                entity.HasIndex(e => e.IdIspettoratoCc)
                    .HasName("XX01TAB_ISPETTORATI_CC");

                entity.Property(e => e.KeyIspettoratoCc)
                    .HasColumnName("KEY_ISPETTORATO_CC")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdContocorrente)
                    .HasColumnName("ID_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettoratoCc)
                    .HasColumnName("ID_ISPETTORATO_CC")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabIspettoratiComp>(entity =>
            {
                entity.HasKey(e => e.KeyIspettoratoCompagnia)
                    .HasName("PK__TAB_ISPE__222878CDBC3E0D2D");

                entity.ToTable("TAB_ISPETTORATI_COMP", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02TAB_ISPETTORATI_COMP");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX03TAB_ISPETTORATI_COMP");

                entity.HasIndex(e => e.IdIspettoratoCompagnia)
                    .HasName("XX01TAB_ISPETTORATI_COMP");

                entity.HasIndex(e => e.KeyIspettoratoCompagnia)
                    .HasName("PK_TAB_ISPETTORATI_COMP")
                    .IsUnique();

                entity.Property(e => e.KeyIspettoratoCompagnia)
                    .HasColumnName("KEY_ISPETTORATO_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettoratoCompagnia)
                    .HasColumnName("ID_ISPETTORATO_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabIspettoratiLiquidatori>(entity =>
            {
                entity.HasKey(e => e.IdIspettoratoliquidatore)
                    .HasName("PK__TAB_ISPE__97BC7A74E03FA4A8");

                entity.ToTable("TAB_ISPETTORATI_LIQUIDATORI", "ISUITE");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX02TAB_ISPETTORATI_LIQUIDATO");

                entity.HasIndex(e => e.IdIspettoratoliquidatore)
                    .HasName("SYS_C0046148")
                    .IsUnique();

                entity.HasIndex(e => e.IdLiquidatore)
                    .HasName("XX03TAB_ISPETTORATI_LIQUIDATO");

                entity.HasIndex(e => new { e.IdIspettorato, e.IdLiquidatore })
                    .HasName("XTAB_ISPETTORATI_LIQUIDATORI")
                    .IsUnique();

                entity.Property(e => e.IdIspettoratoliquidatore)
                    .HasColumnName("ID_ISPETTORATOLIQUIDATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLiquidatore)
                    .HasColumnName("ID_LIQUIDATORE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabLegameAnagrafe>(entity =>
            {
                entity.HasKey(e => e.IdTabLegame)
                    .HasName("PK__TAB_LEGA__F420459A2694370B");

                entity.ToTable("TAB_LEGAME_ANAGRAFE", "ISUITE");

                entity.HasIndex(e => e.IdDescLegame)
                    .HasName("XX02TAB_LEGAME_ANAGRAFE");

                entity.HasIndex(e => e.IdLegameRiferimento)
                    .HasName("XX03TAB_LEGAME_ANAGRAFE");

                entity.HasIndex(e => e.IdTabLegame)
                    .HasName("SYS_C0046151")
                    .IsUnique();

                entity.Property(e => e.IdTabLegame)
                    .HasColumnName("ID_TAB_LEGAME")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodiceLegame)
                    .IsRequired()
                    .HasColumnName("CODICE_LEGAME")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DescLegame)
                    .HasColumnName("DESC_LEGAME")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLegameParentelaSino)
                    .HasColumnName("FLG_LEGAME_PARENTELA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgReadOnlySino)
                    .HasColumnName("FLG_READ_ONLY_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.GradoParentela)
                    .HasColumnName("GRADO_PARENTELA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescLegame)
                    .HasColumnName("ID_DESC_LEGAME")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLegameRiferimento)
                    .HasColumnName("ID_LEGAME_RIFERIMENTO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabLimiteCostoSin>(entity =>
            {
                entity.HasKey(e => e.IdLimiteCostoSin);

                entity.ToTable("TAB_LIMITE_COSTO_SIN", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX01TAB_LIMITE_COSTO_SIN");

                entity.Property(e => e.IdLimiteCostoSin)
                    .HasColumnName("ID_LIMITE_COSTO_SIN")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoEsercizio).HasColumnName("ANNO_ESERCIZIO");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.ImpLimiteCosto)
                    .HasColumnName("IMP_LIMITE_COSTO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TabLimitePagamenti>(entity =>
            {
                entity.HasKey(e => e.IdLimitePagamento);

                entity.ToTable("TAB_LIMITE_PAGAMENTI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdUtenteLimPag, e.IdRamo, e.IdProdotto, e.IdCompagniaLimPag })
                    .HasName("XX01TAB_LIMITE_PAGAMENTI");

                entity.Property(e => e.IdLimitePagamento)
                    .HasColumnName("ID_LIMITE_PAGAMENTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.EmailNotifica)
                    .HasColumnName("EMAIL_NOTIFICA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAmmettePagamentoSino)
                    .HasColumnName("FLG_AMMETTE_PAGAMENTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagniaLimPag).HasColumnName("ID_COMPAGNIA_LIM_PAG");

                entity.Property(e => e.IdProdotto).HasColumnName("ID_PRODOTTO");

                entity.Property(e => e.IdRamo).HasColumnName("ID_RAMO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteLimPag).HasColumnName("ID_UTENTE_LIM_PAG");

                entity.Property(e => e.ImpSoglia)
                    .HasColumnName("IMP_SOGLIA")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TabLimitiLdaListini>(entity =>
            {
                entity.HasKey(e => e.IdLimiteLdaListino);

                entity.ToTable("TAB_LIMITI_LDA_LISTINI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdListino, e.FlgRamoTecnico, e.DtInizioValidita, e.DtFineValidita })
                    .HasName("XX01_TAB_LIMITI_LDA_LISTINI");

                entity.Property(e => e.IdLimiteLdaListino)
                    .HasColumnName("ID_LIMITE_LDA_LISTINO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("FLG_RAMO_TECNICO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdListino).HasColumnName("ID_LISTINO");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TabLiquidatori>(entity =>
            {
                entity.HasKey(e => e.KeyLiquidatore)
                    .HasName("PK__TAB_LIQU__616BC2F11D565BDB");

                entity.ToTable("TAB_LIQUIDATORI", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02TAB_LIQUIDATORI");

                entity.HasIndex(e => e.IdLiquidatore)
                    .HasName("XX01TAB_LIQUIDATORI");

                entity.HasIndex(e => e.KeyLiquidatore)
                    .HasName("SYS_C0046163")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdLiquidatore, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_LIQUIDATORI");

                entity.Property(e => e.KeyLiquidatore)
                    .HasColumnName("KEY_LIQUIDATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodLiquidatore)
                    .IsRequired()
                    .HasColumnName("COD_LIQUIDATORE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtFinRapporto)
                    .HasColumnName("DT_FIN_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniRapporto)
                    .HasColumnName("DT_INI_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAmministrativoSino)
                    .HasColumnName("FLG_AMMINISTRATIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLiquidatore)
                    .HasColumnName("ID_LIQUIDATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabLiquidatoriTipoSinistro>(entity =>
            {
                entity.HasKey(e => e.IdLiquidatoreTipoSinistro)
                    .HasName("PK_LIQUIDATORI_TIPO_SINISTRO");

                entity.ToTable("TAB_LIQUIDATORI_TIPO_SINISTRO", "ICLAIMS");

                entity.HasIndex(e => e.IdLiquidatore)
                    .HasName("XX01_TAB_LIQUIDATORI_TIPO_SINISTRO");

                entity.Property(e => e.IdLiquidatoreTipoSinistro)
                    .HasColumnName("ID_LIQUIDATORE_TIPO_SINISTRO")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgFirmaCai)
                    .HasColumnName("FLG_FIRMA_CAI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("FLG_RAMO_TECNICO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCard)
                    .HasColumnName("FLG_TIPO_CARD")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdLiquidatore).HasColumnName("ID_LIQUIDATORE");
            });

            modelBuilder.Entity<TabListini>(entity =>
            {
                entity.HasKey(e => e.IdListino);

                entity.ToTable("TAB_LISTINI", "ICLAIMS");

                entity.HasIndex(e => new { e.IdListino, e.DtInizioValidita, e.DtFineValidita })
                    .HasName("XX01_TAB_LISTINI");

                entity.Property(e => e.IdListino)
                    .HasColumnName("ID_LISTINO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabLivelliCarriera>(entity =>
            {
                entity.HasKey(e => e.IdLivelloCarriera)
                    .HasName("SYS_C0014673");

                entity.ToTable("TAB_LIVELLI_CARRIERA", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX01TAB_LIVELLI_CARRIERA");

                entity.Property(e => e.IdLivelloCarriera)
                    .HasColumnName("ID_LIVELLO_CARRIERA")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodLivelloCarriera)
                    .IsRequired()
                    .HasColumnName("COD_LIVELLO_CARRIERA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFinVal)
                    .HasColumnName("DT_FIN_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniVal)
                    .HasColumnName("DT_INI_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgQualificaLivCarriera)
                    .HasColumnName("FLG_QUALIFICA_LIV_CARRIERA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVenditore)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_VENDITORE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.MesiOsservazione).HasColumnName("MESI_OSSERVAZIONE");
            });

            modelBuilder.Entity<TabMalattiaLa>(entity =>
            {
                entity.HasKey(e => e.KeyMalattiaLa);

                entity.ToTable("TAB_MALATTIA_LA", "ICLAIMS");

                entity.HasIndex(e => new { e.IdMalattiaLa, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_TAB_MALATTIA_LA_STO");

                entity.Property(e => e.KeyMalattiaLa)
                    .HasColumnName("KEY_MALATTIA_LA")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceLa)
                    .HasColumnName("CODICE_LA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneLa)
                    .HasColumnName("DESCRIZIONE_LA")
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgNonRimborsabileSino)
                    .HasColumnName("FLG_NON_RIMBORSABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgObbligoFatturaSino)
                    .HasColumnName("FLG_OBBLIGO_FATTURA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTestoQuietanza)
                    .HasColumnName("FLG_TESTO_QUIETANZA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoConvenzione)
                    .HasColumnName("FLG_TIPO_CONVENZIONE")
                    .HasMaxLength(9)
                    .IsUnicode(false);

                entity.Property(e => e.IdMalattiaLa).HasColumnName("ID_MALATTIA_LA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabManagerVf>(entity =>
            {
                entity.HasKey(e => e.KeyManagerVf)
                    .HasName("PK__TAB_MANA__193B1E2D10F6EC49");

                entity.ToTable("TAB_MANAGER_VF", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02TAB_MANAGER_VF");

                entity.HasIndex(e => e.IdManagerVf)
                    .HasName("XX01TAB_MANAGER_VF");

                entity.HasIndex(e => e.KeyManagerVf)
                    .HasName("PK_TAB_MANAGER_VF")
                    .IsUnique();

                entity.Property(e => e.KeyManagerVf)
                    .HasColumnName("KEY_MANAGER_VF")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodManagerVf)
                    .IsRequired()
                    .HasColumnName("COD_MANAGER_VF")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdManagerVf)
                    .HasColumnName("ID_MANAGER_VF")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabMarche>(entity =>
            {
                entity.HasKey(e => e.IdMarca)
                    .HasName("SYS_C0061066");

                entity.ToTable("TAB_MARCHE", "IAGENCY");

                entity.HasIndex(e => e.CodMarca)
                    .HasName("XAK1TAB_MARCHE")
                    .IsUnique();

                entity.HasIndex(e => e.DescMarca)
                    .HasName("XIE2TAB_MARCHE");

                entity.Property(e => e.IdMarca)
                    .HasColumnName("ID_MARCA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodMarca)
                    .HasColumnName("COD_MARCA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescMarca)
                    .HasColumnName("DESC_MARCA")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabMassimaliGarPrestaz>(entity =>
            {
                entity.HasKey(e => e.IdMassimale);

                entity.ToTable("TAB_MASSIMALI_GAR_PRESTAZ", "ICLAIMS");

                entity.HasIndex(e => new { e.IdGaranzia, e.NumAventiDiritto })
                    .HasName("XX01_TAB_MASSIMALI_GAR_PRESTAZ");

                entity.HasIndex(e => new { e.IdPrestazione, e.NumAventiDiritto })
                    .HasName("XX02_TAB_MASSIMALI_GAR_PRESTAZ");

                entity.Property(e => e.IdMassimale)
                    .HasColumnName("ID_MASSIMALE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodRaggruppamento)
                    .HasColumnName("COD_RAGGRUPPAMENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("date");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("date");

                entity.Property(e => e.FlgCatAgenziaEntrate)
                    .HasColumnName("FLG_CAT_AGENZIA_ENTRATE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDateRicoveroSino)
                    .HasColumnName("FLG_DATE_RICOVERO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFascia)
                    .HasColumnName("FLG_FASCIA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMassimalePerGgSino)
                    .HasColumnName("FLG_MASSIMALE_PER_GG_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTicketObbSino)
                    .HasColumnName("FLG_TICKET_OBB_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoScoperto)
                    .HasColumnName("FLG_TIPO_SCOPERTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdGaranzia).HasColumnName("ID_GARANZIA");

                entity.Property(e => e.IdGaranziaPolIntegrativa).HasColumnName("ID_GARANZIA_POL_INTEGRATIVA");

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.IdProdottoPolIntegrativa).HasColumnName("ID_PRODOTTO_POL_INTEGRATIVA");

                entity.Property(e => e.ImpDiaria)
                    .HasColumnName("IMP_DIARIA")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.ImpFranchigia)
                    .HasColumnName("IMP_FRANCHIGIA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpMassimale)
                    .HasColumnName("IMP_MASSIMALE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MaxGgPostFineRicovero).HasColumnName("MAX_GG_POST_FINE_RICOVERO");

                entity.Property(e => e.MaxGgPreInizioRicovero).HasColumnName("MAX_GG_PRE_INIZIO_RICOVERO");

                entity.Property(e => e.NumAventiDiritto).HasColumnName("NUM_AVENTI_DIRITTO");

                entity.Property(e => e.NumGgFranchigia).HasColumnName("NUM_GG_FRANCHIGIA");

                entity.Property(e => e.PercScoperto)
                    .HasColumnName("PERC_SCOPERTO")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PercScopertoConTicket)
                    .HasColumnName("PERC_SCOPERTO_CON_TICKET")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PercScopertoSenzaTicket)
                    .HasColumnName("PERC_SCOPERTO_SENZA_TICKET")
                    .HasColumnType("decimal(5, 2)");
            });

            modelBuilder.Entity<TabMediatoriCreditizi>(entity =>
            {
                entity.HasKey(e => e.IdMediatorecreditizio)
                    .HasName("PK__TAB_MEDI__7516395FAB2426BF");

                entity.ToTable("TAB_MEDIATORI_CREDITIZI", "ISUITE");

                entity.HasIndex(e => e.IdMediatorecreditizio)
                    .HasName("TAB_MEDIATORI_CREDITIZI_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.NumeroIscrizione, e.IdAnagrafica })
                    .HasName("XX01TAB_MED_CRED");

                entity.Property(e => e.IdMediatorecreditizio)
                    .HasColumnName("ID_MEDIATORECREDITIZIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtCessazione)
                    .HasColumnName("DT_CESSAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIscrizione)
                    .HasColumnName("DT_ISCRIZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSospensione)
                    .HasColumnName("DT_SOSPENSIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroIscrizione)
                    .IsRequired()
                    .HasColumnName("NUMERO_ISCRIZIONE")
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabMerci>(entity =>
            {
                entity.HasKey(e => e.IdMerce)
                    .HasName("PK__TAB_MERC__17353BB79DB31378");

                entity.ToTable("TAB_MERCI", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02TAB_MERCI");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX03TAB_MERCI");

                entity.HasIndex(e => e.IdMerce)
                    .HasName("SYS_C0047686")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCompagnia, e.CodTipoMerce })
                    .HasName("TAB_MERCI_K01")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCompagnia, e.IdDescrizione })
                    .HasName("XTAB_MERCI")
                    .IsUnique();

                entity.Property(e => e.IdMerce)
                    .HasColumnName("ID_MERCE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodTipoMerce)
                    .IsRequired()
                    .HasColumnName("COD_TIPO_MERCE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabMezziIncassoAbil>(entity =>
            {
                entity.HasKey(e => e.IdMezzoincassoabil)
                    .HasName("PK__TAB_MEZZ__8BC0704687C4FF23");

                entity.ToTable("TAB_MEZZI_INCASSO_ABIL", "ISUITE");

                entity.HasIndex(e => e.IdMezzoincassoabil)
                    .HasName("SYS_C0046176")
                    .IsUnique();

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02TAB_MEZZI_INCASSO_ABIL");

                entity.HasIndex(e => new { e.IdRetevendita, e.FlgMezzoIncassoPolizza })
                    .HasName("XTAB_MEZZI_INCASSO_ABIL")
                    .IsUnique();

                entity.Property(e => e.IdMezzoincassoabil)
                    .HasColumnName("ID_MEZZOINCASSOABIL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgMezzoIncassoPolizza)
                    .IsRequired()
                    .HasColumnName("FLG_MEZZO_INCASSO_POLIZZA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPredefinitoSino)
                    .HasColumnName("FLG_PREDEFINITO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabMezziPagCc>(entity =>
            {
                entity.HasKey(e => e.IdTabella);

                entity.ToTable("TAB_MEZZI_PAG_CC", "ICLAIMS");

                entity.HasIndex(e => new { e.IdCompagnia, e.FlgMezzoPagamento, e.FlgTipologiaCard, e.DataInizioValidita, e.IdContocorrente, e.FlgParcellaSino, e.FlgRamoTecnico })
                    .HasName("XAK1_TAB_MEZZI_PAG_CC")
                    .IsUnique();

                entity.Property(e => e.IdTabella)
                    .HasColumnName("ID_TABELLA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DataFineValidita)
                    .HasColumnName("DATA_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DataInizioValidita)
                    .HasColumnName("DATA_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMezzoPagamento)
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgParcellaSino)
                    .HasColumnName("FLG_PARCELLA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("FLG_RAMO_TECNICO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaCard)
                    .HasColumnName("FLG_TIPOLOGIA_CARD")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdContocorrente).HasColumnName("ID_CONTOCORRENTE");
            });

            modelBuilder.Entity<TabModelli>(entity =>
            {
                entity.HasKey(e => e.IdModello)
                    .HasName("SYS_C0061068");

                entity.ToTable("TAB_MODELLI", "IAGENCY");

                entity.HasIndex(e => e.IdMarca)
                    .HasName("XX02TAB_MODELLI");

                entity.HasIndex(e => new { e.IdMarca, e.CodModello })
                    .HasName("XAK1TAB_MODELLI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdMarca, e.DescModello })
                    .HasName("XIE1TAB_MODELLI");

                entity.Property(e => e.IdModello)
                    .HasColumnName("ID_MODELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodModello)
                    .HasColumnName("COD_MODELLO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescModello)
                    .HasColumnName("DESC_MODELLO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdMarca)
                    .HasColumnName("ID_MARCA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdMarcaNavigation)
                    .WithMany(p => p.TabModelli)
                    .HasForeignKey(d => d.IdMarca)
                    .HasConstraintName("FK__TAB_MODEL__ID_MA__5FFE1BF0");
            });

            modelBuilder.Entity<TabModelliConsenso>(entity =>
            {
                entity.HasKey(e => e.KeyModelloConsenso);

                entity.ToTable("TAB_MODELLI_CONSENSO", "ISUITE");

                entity.Property(e => e.KeyModelloConsenso)
                    .HasColumnName("KEY_MODELLO_CONSENSO")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoConsenso)
                    .HasColumnName("FLG_TIPO_CONSENSO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdModello).HasColumnName("ID_MODELLO");
            });

            modelBuilder.Entity<TabMotiviAnnullamentoPtf>(entity =>
            {
                entity.HasKey(e => e.KeyMotiviAnnullamentoPtf);

                entity.ToTable("TAB_MOTIVI_ANNULLAMENTO_PTF", "ICLAIMS");

                entity.Property(e => e.KeyMotiviAnnullamentoPtf)
                    .HasColumnName("KEY_MOTIVI_ANNULLAMENTO_PTF")
                    .ValueGeneratedNever();

                entity.Property(e => e.Codice)
                    .HasColumnName("CODICE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRcaSino)
                    .HasColumnName("FLG_RCA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgReSino)
                    .HasColumnName("FLG_RE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdMotiviAnnullamentoPtf).HasColumnName("ID_MOTIVI_ANNULLAMENTO_PTF");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabMotiviStorno>(entity =>
            {
                entity.HasKey(e => e.KeyTabMotivoStorno)
                    .HasName("SYS_C0061092");

                entity.ToTable("TAB_MOTIVI_STORNO", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03TAB_MOTIVI_STORNO");

                entity.HasIndex(e => e.IdDescStorno)
                    .HasName("XX02TAB_MOTIVI_STORNO");

                entity.HasIndex(e => e.IdTabMotivoStorno)
                    .HasName("XX01TAB_MOTIVI_STORNO");

                entity.Property(e => e.KeyTabMotivoStorno)
                    .HasColumnName("KEY_TAB_MOTIVO_STORNO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodStorno)
                    .IsRequired()
                    .HasColumnName("COD_STORNO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescStorno)
                    .HasColumnName("DESC_STORNO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAnnPvSino)
                    .IsRequired()
                    .HasColumnName("FLG_ANN_PV_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAnnTitoliSino)
                    .IsRequired()
                    .HasColumnName("FLG_ANN_TITOLI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAnnullamentoSino)
                    .IsRequired()
                    .HasColumnName("FLG_ANNULLAMENTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAutorizzazioneSino)
                    .IsRequired()
                    .HasColumnName("FLG_AUTORIZZAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCauAnnSita)
                    .HasColumnName("FLG_CAU_ANN_SITA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPolizzeSino)
                    .IsRequired()
                    .HasColumnName("FLG_POLIZZE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgProposteSino)
                    .HasColumnName("FLG_PROPOSTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgReadonlySino)
                    .IsRequired()
                    .HasColumnName("FLG_READONLY_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRestituzioneSino)
                    .IsRequired()
                    .HasColumnName("FLG_RESTITUZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRimbPlafondProRataSino)
                    .HasColumnName("FLG_RIMB_PLAFOND_PRO_RATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRimbPlafondSino)
                    .HasColumnName("FLG_RIMB_PLAFOND_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRimborsoProvvSino)
                    .IsRequired()
                    .HasColumnName("FLG_RIMBORSO_PROVV_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRimborsoSino)
                    .IsRequired()
                    .HasColumnName("FLG_RIMBORSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRisDirezioneSino)
                    .HasColumnName("FLG_RIS_DIREZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSbloccaAnnInsPrecSino)
                    .HasColumnName("FLG_SBLOCCA_ANN_INS_PREC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScadRataSino)
                    .HasColumnName("FLG_SCAD_RATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSenzaEffettoSino)
                    .HasColumnName("FLG_SENZA_EFFETTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSoggDirittiRimborsoSino)
                    .HasColumnName("FLG_SOGG_DIRITTI_RIMBORSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSoloDirezioneSino)
                    .HasColumnName("FLG_SOLO_DIREZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStornoOperSino)
                    .HasColumnName("FLG_STORNO_OPER_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStornoPvSino)
                    .IsRequired()
                    .HasColumnName("FLG_STORNO_PV_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStornoSino)
                    .IsRequired()
                    .HasColumnName("FLG_STORNO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStornoTitoliSino)
                    .IsRequired()
                    .HasColumnName("FLG_STORNO_TITOLI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAnnullamento)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ANNULLAMENTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTrattativaSino)
                    .IsRequired()
                    .HasColumnName("FLG_TRATTATIVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescStorno)
                    .HasColumnName("ID_DESC_STORNO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabMotivoStorno)
                    .HasColumnName("ID_TAB_MOTIVO_STORNO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabNazioni>(entity =>
            {
                entity.HasKey(e => e.IdNazione)
                    .HasName("PK__TAB_NAZI__6D78D3B0C7DC01DC");

                entity.ToTable("TAB_NAZIONI", "ISUITE");

                entity.HasIndex(e => e.CodNazioneUic)
                    .HasName("XTAB_NAZIONI")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescrizioneNazionalita)
                    .HasName("XX03TAB_NAZIONI");

                entity.HasIndex(e => e.IdDescrizioneNazione)
                    .HasName("XX02TAB_NAZIONI");

                entity.HasIndex(e => e.IdNazione)
                    .HasName("SYS_C0046181")
                    .IsUnique();

                entity.Property(e => e.IdNazione)
                    .HasColumnName("ID_NAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodNazioneIso)
                    .IsRequired()
                    .HasColumnName("COD_NAZIONE_ISO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodNazioneUic)
                    .IsRequired()
                    .HasColumnName("COD_NAZIONE_UIC")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DescrizioneNazionalita)
                    .HasColumnName("DESCRIZIONE_NAZIONALITA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneNazione)
                    .HasColumnName("DESCRIZIONE_NAZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizioneNazionalita)
                    .HasColumnName("ID_DESCRIZIONE_NAZIONALITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizioneNazione)
                    .HasColumnName("ID_DESCRIZIONE_NAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.SiglaAutomobilistica)
                    .HasColumnName("SIGLA_AUTOMOBILISTICA")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabNetwork>(entity =>
            {
                entity.HasKey(e => e.IdNetwork);

                entity.ToTable("TAB_NETWORK", "ICLAIMS");

                entity.HasIndex(e => new { e.IdNetwork, e.DtInizioValidita, e.DtFineValidita })
                    .HasName("XAK1_TAB_NETWORK");

                entity.Property(e => e.IdNetwork)
                    .HasColumnName("ID_NETWORK")
                    .ValueGeneratedNever();

                entity.Property(e => e.Codice)
                    .HasColumnName("CODICE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCreaIncaricoSino)
                    .HasColumnName("FLG_CREA_INCARICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdFiduciario).HasColumnName("ID_FIDUCIARIO");

                entity.Property(e => e.IdLiquidatore).HasColumnName("ID_LIQUIDATORE");
            });

            modelBuilder.Entity<TabNumerazione>(entity =>
            {
                entity.HasKey(e => e.IdNumerazione)
                    .HasName("PK__TAB_NUME__C54E1267AF021893");

                entity.ToTable("TAB_NUMERAZIONE", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04TAB_NUMERAZIONE");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX03TAB_NUMERAZIONE");

                entity.HasIndex(e => e.IdNumerazione)
                    .HasName("SYS_C0047691")
                    .IsUnique();

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02TAB_NUMERAZIONE");

                entity.HasIndex(e => new { e.IdCompagnia, e.IdRetevendita, e.IdIspettorato, e.AnnoEsercizio, e.FlgTipoNumerazione })
                    .HasName("XTAB_NUMERAZIONE")
                    .IsUnique();

                entity.Property(e => e.IdNumerazione)
                    .HasColumnName("ID_NUMERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoEsercizio)
                    .HasColumnName("ANNO_ESERCIZIO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.FlgTipoNumerazione)
                    .HasColumnName("FLG_TIPO_NUMERAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ProgressivoNumerazione)
                    .HasColumnName("PROGRESSIVO_NUMERAZIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabOperazioni>(entity =>
            {
                entity.HasKey(e => e.IdTabOperazione);

                entity.ToTable("TAB_OPERAZIONI", "IAGENCY");

                entity.HasIndex(e => e.Codice)
                    .HasName("AK01_TAB_OPERAZIONI")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02TAB_OPERAZIONI");

                entity.Property(e => e.IdTabOperazione)
                    .HasColumnName("ID_TAB_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Codice)
                    .HasColumnName("CODICE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEventoEmissione)
                    .HasColumnName("FLG_EVENTO_EMISSIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgEventoProposta)
                    .HasColumnName("FLG_EVENTO_PROPOSTA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgGeneraPremioSino)
                    .IsRequired()
                    .HasColumnName("FLG_GENERA_PREMIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgModificaPtfSino)
                    .IsRequired()
                    .HasColumnName("FLG_MODIFICA_PTF_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPropostaSino)
                    .IsRequired()
                    .HasColumnName("FLG_PROPOSTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStornoOpPrecedentiSino)
                    .HasColumnName("FLG_STORNO_OP_PRECEDENTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOperazione)
                    .HasColumnName("FLG_TIPO_OPERAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVisibileSino)
                    .IsRequired()
                    .HasColumnName("FLG_VISIBILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasColumnName("URL")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabOperazioniFeu>(entity =>
            {
                entity.HasKey(e => e.IdOperazioneFeu)
                    .HasName("PK__TAB_OPER__3BA23E05769261A7");

                entity.ToTable("TAB_OPERAZIONI_FEU", "IAGENCY");

                entity.Property(e => e.IdOperazioneFeu)
                    .HasColumnName("ID_OPERAZIONE_FEU")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodOperazioneFeu).HasColumnName("COD_OPERAZIONE_FEU");

                entity.Property(e => e.CodOperazioneWise).HasColumnName("COD_OPERAZIONE_WISE");

                entity.Property(e => e.DescOperazione)
                    .HasColumnName("DESC_OPERAZIONE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoEvento)
                    .HasColumnName("FLG_TIPO_EVENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOperazioneBe)
                    .HasColumnName("FLG_TIPO_OPERAZIONE_BE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.TipoMenu)
                    .HasColumnName("TIPO_MENU")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabOperazioniLinee>(entity =>
            {
                entity.HasKey(e => e.IdTabOperazioneLinea);

                entity.ToTable("TAB_OPERAZIONI_LINEE", "IAGENCY");

                entity.HasIndex(e => e.IdTabOperazione)
                    .HasName("XX02TAB_OPERAZIONI_LINEE");

                entity.HasIndex(e => new { e.FlgLineaProdotto, e.IdTabOperazione })
                    .HasName("AK01_TAB_OPERAZIONI_LINEE")
                    .IsUnique();

                entity.Property(e => e.IdTabOperazioneLinea)
                    .HasColumnName("ID_TAB_OPERAZIONE_LINEA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgLineaProdotto)
                    .IsRequired()
                    .HasColumnName("FLG_LINEA_PRODOTTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdTabOperazione)
                    .HasColumnName("ID_TAB_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdTabOperazioneNavigation)
                    .WithMany(p => p.TabOperazioniLinee)
                    .HasForeignKey(d => d.IdTabOperazione)
                    .HasConstraintName("FK__TAB_OPERA__ID_TA__60F24029");
            });

            modelBuilder.Entity<TabOrganismiMediazione>(entity =>
            {
                entity.HasKey(e => e.IdOrganismomediazione)
                    .HasName("SYS_C0040781");

                entity.ToTable("TAB_ORGANISMI_MEDIAZIONE", "ICLAIMS");

                entity.Property(e => e.IdOrganismomediazione)
                    .HasColumnName("ID_ORGANISMOMEDIAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");
            });

            modelBuilder.Entity<TabParametriOperazioni>(entity =>
            {
                entity.HasKey(e => e.KeyTabParametriOperazione);

                entity.ToTable("TAB_PARAMETRI_OPERAZIONI", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX06TAB_PARAMETRI_OPERAZIONI");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02TAB_PARAMETRI_OPERAZIONI");

                entity.HasIndex(e => e.IdOperazione)
                    .HasName("XX03TAB_PARAMETRI_OPERAZIONI");

                entity.HasIndex(e => e.IdTabOperazione)
                    .HasName("XX05TAB_PARAMETRI_OPERAZIONI");

                entity.HasIndex(e => e.IdTabParametriOperazione)
                    .HasName("XX01TAB_PARAMETRI_OPERAZIONI");

                entity.HasIndex(e => e.IdTitTipoTitolo)
                    .HasName("XX04TAB_PARAMETRI_OPERAZIONI");

                entity.HasIndex(e => new { e.IdTabOperazione, e.IdCompagnia, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_PARAMETRI_OPERAZIONI");

                entity.HasIndex(e => new { e.IdTabParametriOperazione, e.IdCompagnia, e.IdTabOperazione, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("AK01_TAB_PARAMETRI_OPERAZIONI")
                    .IsUnique();

                entity.Property(e => e.KeyTabParametriOperazione)
                    .HasColumnName("KEY_TAB_PARAMETRI_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodDeroga)
                    .HasColumnName("COD_DEROGA")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodDerogaScostEffPol).HasColumnName("COD_DEROGA_SCOST_EFF_POL");

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAutorizzazioneSino)
                    .IsRequired()
                    .HasColumnName("FLG_AUTORIZZAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgBloccoSeTitInsSino)
                    .HasColumnName("FLG_BLOCCO_SE_TIT_INS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDefaultSino)
                    .IsRequired()
                    .HasColumnName("FLG_DEFAULT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDerogaScostEffPolSino)
                    .HasColumnName("FLG_DEROGA_SCOST_EFF_POL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgEmissioneRetroattivaSino)
                    .IsRequired()
                    .HasColumnName("FLG_EMISSIONE_RETROATTIVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGeneraTitoloZeroSino)
                    .HasColumnName("FLG_GENERA_TITOLO_ZERO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIncassoTitoloZeroSino)
                    .HasColumnName("FLG_INCASSO_TITOLO_ZERO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdOperazione)
                    .HasColumnName("ID_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabOperazione)
                    .HasColumnName("ID_TAB_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabParametriOperazione)
                    .HasColumnName("ID_TAB_PARAMETRI_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTipoTitolo)
                    .HasColumnName("ID_TIT_TIPO_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NGgEmisAntergata).HasColumnName("N_GG_EMIS_ANTERGATA");

                entity.Property(e => e.NGgEmisPostergata).HasColumnName("N_GG_EMIS_POSTERGATA");

                entity.Property(e => e.NumGgScostEffPol).HasColumnName("NUM_GG_SCOST_EFF_POL");

                entity.HasOne(d => d.IdOperazioneNavigation)
                    .WithMany(p => p.TabParametriOperazioni)
                    .HasForeignKey(d => d.IdOperazione)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__TAB_PARAM__ID_OP__61E66462");
            });

            modelBuilder.Entity<TabParametriPrev>(entity =>
            {
                entity.HasKey(e => e.IdParametroPrev)
                    .HasName("PK__TAB_PARA__D34A6B16118008AC");

                entity.ToTable("TAB_PARAMETRI_PREV", "ICLAIMS");

                entity.HasIndex(e => e.IdGaranzia)
                    .HasName("XX02TAB_PARAMETRI_PREV");

                entity.HasIndex(e => e.IdParametroPrev)
                    .HasName("SYS_C0047695")
                    .IsUnique();

                entity.Property(e => e.IdParametroPrev)
                    .HasColumnName("ID_PARAMETRO_PREV")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgTipoParametroPrev)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_PARAMETRO_PREV")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdGaranzia)
                    .HasColumnName("ID_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NomeFlagDiSistema)
                    .HasColumnName("NOME_FLAG_DI_SISTEMA")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabParametriQuery>(entity =>
            {
                entity.HasKey(e => e.IdTabParametriQuery)
                    .HasName("PK__TAB_PARA__A74A2BF208AD40CD");

                entity.ToTable("TAB_PARAMETRI_QUERY", "ISUITE");

                entity.HasIndex(e => new { e.IdTabQuery, e.PrgParametro })
                    .HasName("TAB_QUERY_PK")
                    .IsUnique();

                entity.Property(e => e.IdTabParametriQuery)
                    .HasColumnName("ID_TAB_PARAMETRI_QUERY")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFormatoVariabile)
                    .IsRequired()
                    .HasColumnName("FLG_FORMATO_VARIABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdTabQuery).HasColumnName("ID_TAB_QUERY");

                entity.Property(e => e.PrgParametro).HasColumnName("PRG_PARAMETRO");

                entity.Property(e => e.ValoreDefault)
                    .HasColumnName("VALORE_DEFAULT")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabPercFees>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_PERC_FEES", "ICLAIMS");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgRamoBilancio)
                    .IsRequired()
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdPercFees).HasColumnName("ID_PERC_FEES");

                entity.Property(e => e.ImpMassimo)
                    .HasColumnName("IMP_MASSIMO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpMinimo)
                    .HasColumnName("IMP_MINIMO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.KeyPercFees).HasColumnName("KEY_PERC_FEES");

                entity.Property(e => e.PercFees).HasColumnName("PERC_FEES");
            });

            modelBuilder.Entity<TabPrValute>(entity =>
            {
                entity.HasKey(e => e.KeyPrValuta)
                    .HasName("PK__TAB_PR_V__C762EB728BBE9065");

                entity.ToTable("TAB_PR_VALUTE", "ICLAIMS");

                entity.HasIndex(e => e.IdProdotto)
                    .HasName("K01_TAB_PR_VALUTE");

                entity.HasIndex(e => e.KeyPrValuta)
                    .HasName("PK_TAB_PR_VALUTE")
                    .IsUnique();

                entity.Property(e => e.KeyPrValuta)
                    .HasColumnName("KEY_PR_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodValuta)
                    .HasColumnName("COD_VALUTA")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrValuta)
                    .HasColumnName("ID_PR_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProdotto)
                    .HasColumnName("ID_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabPrestMedicoChirurgiche>(entity =>
            {
                entity.HasKey(e => e.KeyPrestazione)
                    .HasName("PK_TAB_PREST_MED_CHIR");

                entity.ToTable("TAB_PREST_MEDICO_CHIRURGICHE", "ICLAIMS");

                entity.HasIndex(e => e.IdGruppoIntervento)
                    .HasName("XX01_TAB_PREST_MED_CHIR");

                entity.HasIndex(e => new { e.FlgGruppoPrestMedChir, e.CodPrestazioneMedChir })
                    .HasName("XX02_TAB_PREST_MED_CHIR")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPrestazione, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_TAB_PREST_MED_CHIR_STO");

                entity.Property(e => e.KeyPrestazione)
                    .HasColumnName("KEY_PRESTAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGruppoIntervento)
                    .HasColumnName("COD_GRUPPO_INTERVENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodPrestazioneMedChir)
                    .HasColumnName("COD_PRESTAZIONE_MED_CHIR")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceTabella)
                    .HasColumnName("CODICE_TABELLA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DescPrestazioneMedChir)
                    .HasColumnName("DESC_PRESTAZIONE_MED_CHIR")
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.Edizione)
                    .HasColumnName("EDIZIONE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.FlgGruppoPrestMedChir)
                    .HasColumnName("FLG_GRUPPO_PREST_MED_CHIR")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSottogruppoPrMedChir)
                    .HasColumnName("FLG_SOTTOGRUPPO_PR_MED_CHIR")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdEdizione).HasColumnName("ID_EDIZIONE");

                entity.Property(e => e.IdGruppoIntervento).HasColumnName("ID_GRUPPO_INTERVENTO");

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabPrestazioni>(entity =>
            {
                entity.HasKey(e => e.KeyPrestazione);

                entity.ToTable("TAB_PRESTAZIONI", "ICLAIMS");

                entity.Property(e => e.KeyPrestazione)
                    .HasColumnName("KEY_PRESTAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodPrestazione)
                    .HasColumnName("COD_PRESTAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgBloccaPagRisSchedaSino)
                    .HasColumnName("FLG_BLOCCA_PAG_RIS_SCHEDA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCreaIncaricoSino)
                    .HasColumnName("FLG_CREA_INCARICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgProntaLiquidazioneSino)
                    .HasColumnName("FLG_PRONTA_LIQUIDAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoIndennizzo)
                    .HasColumnName("FLG_TIPO_INDENNIZZO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaEvento)
                    .HasColumnName("FLG_TIPOLOGIA_EVENTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdGaranzia).HasColumnName("ID_GARANZIA");

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabProdotti>(entity =>
            {
                entity.HasKey(e => e.KeyProdotto)
                    .HasName("PK__TAB_PROD__D625E929E2B304C1");

                entity.ToTable("TAB_PRODOTTI", "ICLAIMS");

                entity.HasIndex(e => e.KeyProdotto)
                    .HasName("PK_TAB_PRODOTTI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCompagnia, e.IdRamo })
                    .HasName("K01_TAB_PRODOTTI");

                entity.Property(e => e.KeyProdotto)
                    .HasColumnName("KEY_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodProdotto)
                    .HasColumnName("COD_PRODOTTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAssicuratiSino)
                    .HasColumnName("FLG_ASSICURATI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDataAccEventoSino)
                    .HasColumnName("FLG_DATA_ACC_EVENTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLineaProdotto)
                    .HasColumnName("FLG_LINEA_PRODOTTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSinistroSuPropostaSino)
                    .HasColumnName("FLG_SINISTRO_SU_PROPOSTA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgUbicazioniSino)
                    .HasColumnName("FLG_UBICAZIONI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVeicoliSino)
                    .HasColumnName("FLG_VEICOLI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdProdotto)
                    .HasColumnName("ID_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRamo)
                    .HasColumnName("ID_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabProdottiAniaMipaaf>(entity =>
            {
                entity.HasKey(e => e.IdProdottoAniaMipaaf);

                entity.ToTable("TAB_PRODOTTI_ANIA_MIPAAF", "IAGENCY");

                entity.HasIndex(e => new { e.CodProdottoAnia, e.CodProdottoMipaaf })
                    .HasName("XX01TAB_PRODOTTI_ANIA_MIPAAF")
                    .IsUnique();

                entity.Property(e => e.IdProdottoAniaMipaaf)
                    .HasColumnName("ID_PRODOTTO_ANIA_MIPAAF")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodProdottoAnia)
                    .HasColumnName("COD_PRODOTTO_ANIA")
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.CodProdottoMipaaf)
                    .HasColumnName("COD_PRODOTTO_MIPAAF")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DenominazioneProdotto)
                    .IsRequired()
                    .HasColumnName("DENOMINAZIONE_PRODOTTO")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabPromotersVf>(entity =>
            {
                entity.HasKey(e => e.KeyPromoterVf)
                    .HasName("PK__TAB_PROM__49EACD0AC06F22AE");

                entity.ToTable("TAB_PROMOTERS_VF", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03TAB_PROMOTERS_VF");

                entity.HasIndex(e => e.IdAreaCommerciale)
                    .HasName("XX02TAB_PROMOTERS_VF");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("XX04TAB_PROMOTERS_VF");

                entity.HasIndex(e => e.IdPromoterVf)
                    .HasName("XX01TAB_PROMOTERS_VF");

                entity.HasIndex(e => e.KeyPromoterVf)
                    .HasName("PK_TAB_PROMOTERS_VF")
                    .IsUnique();

                entity.Property(e => e.KeyPromoterVf)
                    .HasColumnName("KEY_PROMOTER_VF")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodPromoterVf)
                    .IsRequired()
                    .HasColumnName("COD_PROMOTER_VF")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtPromoterVfDal)
                    .HasColumnName("DT_PROMOTER_VF_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAreaCommerciale)
                    .HasColumnName("ID_AREA_COMMERCIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPromoterVf)
                    .HasColumnName("ID_PROMOTER_VF")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumFax)
                    .HasColumnName("NUM_FAX")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumSelezioneDiretta)
                    .HasColumnName("NUM_SELEZIONE_DIRETTA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono1)
                    .HasColumnName("NUM_TELEFONO1")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono2)
                    .HasColumnName("NUM_TELEFONO2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono3)
                    .HasColumnName("NUM_TELEFONO3")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabProvince>(entity =>
            {
                entity.HasKey(e => e.IdProvincia)
                    .HasName("PK__TAB_PROV__4245DC52D19EAE37");

                entity.ToTable("TAB_PROVINCE", "ISUITE");

                entity.HasIndex(e => e.CodProvincia)
                    .HasName("TAB_PROVINCE_K01")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02TAB_PROVINCE");

                entity.HasIndex(e => e.IdProvincia)
                    .HasName("SYS_C0046197")
                    .IsUnique();

                entity.HasIndex(e => e.IdRegione)
                    .HasName("XX03TAB_PROVINCE");

                entity.Property(e => e.IdProvincia)
                    .HasColumnName("ID_PROVINCIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodIsvap)
                    .HasColumnName("COD_ISVAP")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodProvincia)
                    .IsRequired()
                    .HasColumnName("COD_PROVINCIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CodStatisticheIvass)
                    .HasColumnName("COD_STATISTICHE_IVASS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodUfficioIva)
                    .HasColumnName("COD_UFFICIO_IVA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRegione)
                    .HasColumnName("ID_REGIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdRegioneNavigation)
                    .WithMany(p => p.TabProvince)
                    .HasForeignKey(d => d.IdRegione)
                    .HasConstraintName("FK__TAB_PROVI__ID_RE__165A2CA1");
            });

            modelBuilder.Entity<TabPubblicaAnagrafiche>(entity =>
            {
                entity.HasKey(e => e.IdPubblicaAnagrafica)
                    .HasName("PK__TAB_PUBB__2F79796F5D9A36A0");

                entity.ToTable("TAB_PUBBLICA_ANAGRAFICHE", "ISUITE");

                entity.HasIndex(e => e.IdPubblicaAnagrafica)
                    .HasName("PK_TAB_PUBBLICA_ANAGRAFICHE")
                    .IsUnique();

                entity.HasIndex(e => e.IdRuolo)
                    .HasName("XX03TAB_PUBBLICA_ANAGRAFICHE");

                entity.HasIndex(e => e.IdVisibilitaAnagrafica)
                    .HasName("XX02TAB_PUBBLICA_ANAGRAFICHE");

                entity.Property(e => e.IdPubblicaAnagrafica)
                    .HasColumnName("ID_PUBBLICA_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRuolo)
                    .HasColumnName("ID_RUOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdVisibilitaAnagrafica)
                    .HasColumnName("ID_VISIBILITA_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdRuoloNavigation)
                    .WithMany(p => p.TabPubblicaAnagrafiche)
                    .HasForeignKey(d => d.IdRuolo)
                    .HasConstraintName("FK__TAB_PUBBL__ID_RU__18427513");

                entity.HasOne(d => d.IdVisibilitaAnagraficaNavigation)
                    .WithMany(p => p.TabPubblicaAnagrafiche)
                    .HasForeignKey(d => d.IdVisibilitaAnagrafica)
                    .HasConstraintName("FK__TAB_PUBBL__ID_VI__174E50DA");
            });

            modelBuilder.Entity<TabPuntiVenditaProd>(entity =>
            {
                entity.HasKey(e => e.KeyPuntoVenditaProd)
                    .HasName("PK__TAB_PUNT__D29EFE18122DDB8A");

                entity.ToTable("TAB_PUNTI_VENDITA_PROD", "ICLAIMS");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("K01_TAB_PUNTI_VENDITA_PROD");

                entity.HasIndex(e => e.KeyPuntoVenditaProd)
                    .HasName("PK_PUNTI_VENDITA_PROD")
                    .IsUnique();

                entity.Property(e => e.KeyPuntoVenditaProd)
                    .HasColumnName("KEY_PUNTO_VENDITA_PROD")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAbilitatoSino)
                    .HasColumnName("FLG_ABILITATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdProdotto)
                    .HasColumnName("ID_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPuntoVenditaProd)
                    .HasColumnName("ID_PUNTO_VENDITA_PROD")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabQuery>(entity =>
            {
                entity.HasKey(e => e.IdTabQuery)
                    .HasName("PK__TAB_QUER__195465D03EE9A2ED");

                entity.ToTable("TAB_QUERY", "ISUITE");

                entity.HasIndex(e => e.CodQuery)
                    .HasName("TAB_QUERY_PK")
                    .IsUnique();

                entity.Property(e => e.IdTabQuery)
                    .HasColumnName("ID_TAB_QUERY")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodQuery)
                    .IsRequired()
                    .HasColumnName("COD_QUERY")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAreaQuery)
                    .IsRequired()
                    .HasColumnName("FLG_AREA_QUERY")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.StringaSql)
                    .IsRequired()
                    .HasColumnName("STRINGA_SQL")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabQuestionariIdd>(entity =>
            {
                entity.HasKey(e => e.KeyQuestionarioIdd)
                    .HasName("PK_TAB_QUESTIONARIO_IDD");

                entity.ToTable("TAB_QUESTIONARI_IDD", "IAGENCY");

                entity.HasIndex(e => e.IdQuestionarioIdd)
                    .HasName("XX01TAB_QUESTIONARI_IDD");

                entity.HasIndex(e => new { e.IdQuestionarioIdd, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX02TAB_QUESTIONARI_IDD");

                entity.Property(e => e.KeyQuestionarioIdd)
                    .HasColumnName("KEY_QUESTIONARIO_IDD")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodQuestionarioIdd)
                    .IsRequired()
                    .HasColumnName("COD_QUESTIONARIO_IDD")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .IsRequired()
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdFormula).HasColumnName("ID_FORMULA");

                entity.Property(e => e.IdQuestionarioIdd).HasColumnName("ID_QUESTIONARIO_IDD");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabQuestionariIddComp>(entity =>
            {
                entity.HasKey(e => e.KeyQuestionarioIddComp)
                    .HasName("PK_TAB_QUESTIONARIO_IDD_COMP");

                entity.ToTable("TAB_QUESTIONARI_IDD_COMP", "IAGENCY");

                entity.HasIndex(e => e.IdQuestionarioIdd)
                    .HasName("XX03TAB_QUESTIONARI_IDD_COMP");

                entity.HasIndex(e => e.IdQuestionarioIddComp)
                    .HasName("XX01TAB_QUESTIONARI_IDD_COMP");

                entity.HasIndex(e => new { e.IdQuestionarioIddComp, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX02TAB_QUESTIONARI_IDD_COMP");

                entity.Property(e => e.KeyQuestionarioIddComp)
                    .HasColumnName("KEY_QUESTIONARIO_IDD_COMP")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdQuestionarioIdd).HasColumnName("ID_QUESTIONARIO_IDD");

                entity.Property(e => e.IdQuestionarioIddComp).HasColumnName("ID_QUESTIONARIO_IDD_COMP");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabQuotazioneFondi>(entity =>
            {
                entity.HasKey(e => e.KeyTabQuotazioneFondo)
                    .HasName("SYS_C0061138");

                entity.ToTable("TAB_QUOTAZIONE_FONDI", "IAGENCY");

                entity.HasIndex(e => e.IdTabFondo)
                    .HasName("XX02TAB_QUOTAZIONE_FONDI");

                entity.HasIndex(e => e.IdTabQuotazioneFondo)
                    .HasName("XX01TAB_QUOTAZIONE_FONDI");

                entity.Property(e => e.KeyTabQuotazioneFondo)
                    .HasColumnName("KEY_TAB_QUOTAZIONE_FONDO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdTabFondo)
                    .HasColumnName("ID_TAB_FONDO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabQuotazioneFondo)
                    .HasColumnName("ID_TAB_QUOTAZIONE_FONDO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ValoreFondo)
                    .HasColumnName("VALORE_FONDO")
                    .HasColumnType("numeric(36, 18)");
            });

            modelBuilder.Entity<TabRaccNatCau>(entity =>
            {
                entity.HasKey(e => e.IdRaccNatCau)
                    .HasName("PK__TAB_RACC__386C46D628DB5CFC");

                entity.ToTable("TAB_RACC_NAT_CAU", "ICLAIMS");

                entity.HasIndex(e => e.IdRaccNatCau)
                    .HasName("PK_TAB_RACC_NAT_CAU")
                    .IsUnique();

                entity.Property(e => e.IdRaccNatCau)
                    .HasColumnName("ID_RACC_NAT_CAU")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgCausaInfCci)
                    .HasColumnName("FLG_CAUSA_INF_CCI")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgNaturaLesCci)
                    .HasColumnName("FLG_NATURA_LES_CCI")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabRaccNatSed>(entity =>
            {
                entity.HasKey(e => e.IdRaccNatSed)
                    .HasName("PK__TAB_RACC__F79F9373A274CF0A");

                entity.ToTable("TAB_RACC_NAT_SED", "ICLAIMS");

                entity.HasIndex(e => e.IdRaccNatSed)
                    .HasName("PK_TAB_RACC_NAT_SED")
                    .IsUnique();

                entity.Property(e => e.IdRaccNatSed)
                    .HasColumnName("ID_RACC_NAT_SED")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgNaturaLesCci)
                    .HasColumnName("FLG_NATURA_LES_CCI")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSedeLesCci)
                    .HasColumnName("FLG_SEDE_LES_CCI")
                    .HasMaxLength(2)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabRaccordiGarDanni>(entity =>
            {
                entity.HasKey(e => e.KeyRaccordoGarDanno);

                entity.ToTable("TAB_RACCORDI_GAR_DANNI", "ICLAIMS");

                entity.HasComment("Tabella che collega le garanzie ad uno o più danni");

                entity.HasIndex(e => new { e.IdGaranzia, e.DtStoScadenzaLog })
                    .HasName("XX01_TAB_RACCORDI_GAR_DANNI");

                entity.Property(e => e.KeyRaccordoGarDanno)
                    .HasColumnName("KEY_RACCORDO_GAR_DANNO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipologiaDanno)
                    .HasColumnName("FLG_TIPOLOGIA_DANNO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdGaranzia).HasColumnName("ID_GARANZIA");

                entity.Property(e => e.IdRaccordoGarDanno).HasColumnName("ID_RACCORDO_GAR_DANNO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabRaccordoProdEdizioni>(entity =>
            {
                entity.HasKey(e => e.IdRaccordoProdEdizione);

                entity.ToTable("TAB_RACCORDO_PROD_EDIZIONI", "ICLAIMS");

                entity.Property(e => e.IdRaccordoProdEdizione)
                    .HasColumnName("ID_RACCORDO_PROD_EDIZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdEdizione).HasColumnName("ID_EDIZIONE");

                entity.Property(e => e.IdProdotto).HasColumnName("ID_PRODOTTO");
            });

            modelBuilder.Entity<TabRaccordoRvMigrate>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TAB_RACCORDO_RV_MIGRATE", "ISUITE");

                entity.HasIndex(e => e.CodAttuale)
                    .HasName("XX01_TAB_RACCORDO_RV_MIGRATE");

                entity.HasIndex(e => e.CodMigrato)
                    .HasName("XX02_TAB_RACCORDO_RV_MIGRATE");

                entity.Property(e => e.CodAttuale)
                    .HasColumnName("COD_ATTUALE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodMigrato)
                    .HasColumnName("COD_MIGRATO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabRami>(entity =>
            {
                entity.HasKey(e => e.KeyRamo)
                    .HasName("PK__TAB_RAMI__E5A3F21395DE8FC8");

                entity.ToTable("TAB_RAMI", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("K01_TAB_RAMI");

                entity.HasIndex(e => e.KeyRamo)
                    .HasName("PK_TAB_RAMI")
                    .IsUnique();

                entity.Property(e => e.KeyRamo)
                    .HasColumnName("KEY_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodRamo)
                    .HasColumnName("COD_RAMO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRamo)
                    .HasColumnName("ID_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabRamiTecnici>(entity =>
            {
                entity.HasKey(e => e.IdRamoTecnico);

                entity.ToTable("TAB_RAMI_TECNICI", "ICLAIMS");

                entity.HasIndex(e => e.FlgRamoTecnico)
                    .HasName("XX01TAB_RAMI_TECNICI");

                entity.Property(e => e.IdRamoTecnico)
                    .HasColumnName("ID_RAMO_TECNICO")
                    .ValueGeneratedNever();

                entity.Property(e => e.BloccoAllegatiAgenzia)
                    .HasColumnName("BLOCCO_ALLEGATI_AGENZIA")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneRamo)
                    .HasColumnName("DESCRIZIONE_RAMO")
                    .IsUnicode(false);

                entity.Property(e => e.DurataMassimaRiservaCose).HasColumnName("DURATA_MASSIMA_RISERVA_COSE");

                entity.Property(e => e.DurataMassimaRiservaPers).HasColumnName("DURATA_MASSIMA_RISERVA_PERS");

                entity.Property(e => e.DurataMaxRisCoseDefault).HasColumnName("DURATA_MAX_RIS_COSE_DEFAULT");

                entity.Property(e => e.DurataMaxRisPersDefault).HasColumnName("DURATA_MAX_RIS_PERS_DEFAULT");

                entity.Property(e => e.FlgMalattiaSino)
                    .HasColumnName("FLG_MALATTIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPortaleDefault)
                    .HasColumnName("FLG_PORTALE_DEFAULT")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgProntaLiquidazioneSino)
                    .HasColumnName("FLG_PRONTA_LIQUIDAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRamoTecnico)
                    .HasColumnName("FLG_RAMO_TECNICO")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabRecapitiCarrozzerie>(entity =>
            {
                entity.HasKey(e => e.IdRecapitoCarrozzeria);

                entity.ToTable("TAB_RECAPITI_CARROZZERIE", "ICLAIMS");

                entity.HasIndex(e => e.IdCarrozzeriaConvenzionata)
                    .HasName("XX01_TAB_RECAPITI_CARROZZERIE");

                entity.HasIndex(e => e.IdRecapito)
                    .HasName("XX02_TAB_RECAPITI_CARROZZERIE");

                entity.Property(e => e.IdRecapitoCarrozzeria)
                    .HasColumnName("ID_RECAPITO_CARROZZERIA")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdCarrozzeriaConvenzionata).HasColumnName("ID_CARROZZERIA_CONVENZIONATA");

                entity.Property(e => e.IdRecapito).HasColumnName("ID_RECAPITO");
            });

            modelBuilder.Entity<TabRegioni>(entity =>
            {
                entity.HasKey(e => e.IdRegione)
                    .HasName("PK__TAB_REGI__F07B932154C80463");

                entity.ToTable("TAB_REGIONI", "ISUITE");

                entity.HasIndex(e => e.CodRegione)
                    .HasName("XTAB_REGIONI")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02TAB_REGIONI");

                entity.HasIndex(e => e.IdRegione)
                    .HasName("SYS_C0046203")
                    .IsUnique();

                entity.Property(e => e.IdRegione)
                    .HasColumnName("ID_REGIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodRegione)
                    .IsRequired()
                    .HasColumnName("COD_REGIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabRespGest>(entity =>
            {
                entity.HasKey(e => e.KeyResponsabileGest)
                    .HasName("PK__TAB_RESP__5C2AA4830E64F56E");

                entity.ToTable("TAB_RESP_GEST", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02TAB_RESP_GEST");

                entity.HasIndex(e => e.IdDipartimento)
                    .HasName("XX03TAB_RESP_GEST");

                entity.HasIndex(e => e.IdResponsabileGest)
                    .HasName("XX01TAB_RESP_GEST");

                entity.HasIndex(e => e.KeyResponsabileGest)
                    .HasName("PK_TAB_RESP_GEST")
                    .IsUnique();

                entity.Property(e => e.KeyResponsabileGest)
                    .HasColumnName("KEY_RESPONSABILE_GEST")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodResponsabileGest)
                    .IsRequired()
                    .HasColumnName("COD_RESPONSABILE_GEST")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDipartimento)
                    .HasColumnName("ID_DIPARTIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdResponsabileGest)
                    .HasColumnName("ID_RESPONSABILE_GEST")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabRespTerr>(entity =>
            {
                entity.HasKey(e => e.KeyResponsabileTerr)
                    .HasName("PK__TAB_RESP__B3C1E4FA5DCE4433");

                entity.ToTable("TAB_RESP_TERR", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03TAB_RESP_TERR");

                entity.HasIndex(e => e.IdAreaCommerciale)
                    .HasName("XX02TAB_RESP_TERR");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("XX04TAB_RESP_TERR");

                entity.HasIndex(e => e.IdResponsabileTerr)
                    .HasName("XX01TAB_RESP_TERR");

                entity.HasIndex(e => e.KeyResponsabileTerr)
                    .HasName("PK_TAB_RESP_TERR")
                    .IsUnique();

                entity.Property(e => e.KeyResponsabileTerr)
                    .HasColumnName("KEY_RESPONSABILE_TERR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodResponsabileTerr)
                    .IsRequired()
                    .HasColumnName("COD_RESPONSABILE_TERR")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtResponsabileAl)
                    .HasColumnName("DT_RESPONSABILE_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtResponsabileDal)
                    .HasColumnName("DT_RESPONSABILE_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAreaCommerciale)
                    .HasColumnName("ID_AREA_COMMERCIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdResponsabileTerr)
                    .HasColumnName("ID_RESPONSABILE_TERR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumFax)
                    .HasColumnName("NUM_FAX")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumSelezioneDiretta)
                    .HasColumnName("NUM_SELEZIONE_DIRETTA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono1)
                    .HasColumnName("NUM_TELEFONO1")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono2)
                    .HasColumnName("NUM_TELEFONO2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumTelefono3)
                    .HasColumnName("NUM_TELEFONO3")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabReteVendita>(entity =>
            {
                entity.HasKey(e => e.KeyRetevendita)
                    .HasName("PK__TAB_RETE_VENDITA__58F12BAE");

                entity.ToTable("TAB_RETE_VENDITA", "ISUITE");

                entity.HasIndex(e => e.CodReteVendita)
                    .HasName("K02_TAB_RETE_VENDITA");

                entity.HasIndex(e => e.KeyRetevendita)
                    .HasName("PK_TAB_RETE_VENDITA")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdAnagrafica, e.DtStoScadenzaFis })
                    .HasName("K03_TAB_RETE_VENDITA");

                entity.HasIndex(e => new { e.IdRetevendita, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETE_VENDITA")
                    .IsUnique();

                entity.Property(e => e.KeyRetevendita)
                    .HasColumnName("KEY_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodReteVendita)
                    .HasColumnName("COD_RETE_VENDITA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFinRapporto)
                    .HasColumnName("DT_FIN_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineGestione)
                    .HasColumnName("DT_FINE_GESTIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniRapporto)
                    .HasColumnName("DT_INI_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioGestione)
                    .HasColumnName("DT_INIZIO_GESTIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.EMail)
                    .HasColumnName("E_MAIL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EMailIstituzionale)
                    .HasColumnName("E_MAIL_ISTITUZIONALE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.EMailIstituzionale2)
                    .HasColumnName("E_MAIL_ISTITUZIONALE_2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Fax)
                    .HasColumnName("FAX")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAbilModQuietSino)
                    .HasColumnName("FLG_ABIL_MOD_QUIET_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAnagVisibileFigliSino)
                    .HasColumnName("FLG_ANAG_VISIBILE_FIGLI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAppartenenzaRete)
                    .HasColumnName("FLG_APPARTENENZA_RETE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAvvisiScadPol)
                    .HasColumnName("FLG_AVVISI_SCAD_POL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAzzeraScontoRcaSino)
                    .HasColumnName("FLG_AZZERA_SCONTO_RCA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgBloccaForzaImpWsSino)
                    .HasColumnName("FLG_BLOCCA_FORZA_IMP_WS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCassaPrevidenzaSino)
                    .HasColumnName("FLG_CASSA_PREVIDENZA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgConsolidatoSino)
                    .HasColumnName("FLG_CONSOLIDATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDerogaTerritorialeSino)
                    .HasColumnName("FLG_DEROGA_TERRITORIALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDirezioneEstero)
                    .HasColumnName("FLG_DIREZIONE_ESTERO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDisabilRimessaSino)
                    .HasColumnName("FLG_DISABIL_RIMESSA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDisabilitaScontiSino)
                    .HasColumnName("FLG_DISABILITA_SCONTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFirmaGrafoSino)
                    .HasColumnName("FLG_FIRMA_GRAFO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGruppoGestioneAgenti)
                    .HasColumnName("FLG_GRUPPO_GESTIONE_AGENTI")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLdaSino)
                    .HasColumnName("FLG_LDA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMandConFinanziariaSino)
                    .HasColumnName("FLG_MAND_CON_FINANZIARIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgProgettoCpmiSino)
                    .HasColumnName("FLG_PROGETTO_CPMI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPropostaRinnovoSino)
                    .HasColumnName("FLG_PROPOSTA_RINNOVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRateizzazionePremioSino)
                    .HasColumnName("FLG_RATEIZZAZIONE_PREMIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScadPolCruscottoSino)
                    .HasColumnName("FLG_SCAD_POL_CRUSCOTTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSezioneRegistroApp)
                    .HasColumnName("FLG_SEZIONE_REGISTRO_APP")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSubAbilEmisDiretSino)
                    .HasColumnName("FLG_SUB_ABIL_EMIS_DIRET_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSubAbilIncasDiretSino)
                    .HasColumnName("FLG_SUB_ABIL_INCAS_DIRET_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTecnicaDistr)
                    .HasColumnName("FLG_TECNICA_DISTR")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCanaleDistrAnia)
                    .HasColumnName("FLG_TIPO_CANALE_DISTR_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoFirmaEmail)
                    .HasColumnName("FLG_TIPO_FIRMA_EMAIL")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoGestione)
                    .HasColumnName("FLG_TIPO_GESTIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoIntermReclamo)
                    .HasColumnName("FLG_TIPO_INTERM_RECLAMO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPeriodicita)
                    .HasColumnName("FLG_TIPO_PERIODICITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoReteVendita)
                    .HasColumnName("FLG_TIPO_RETE_VENDITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRetrocessione)
                    .HasColumnName("FLG_TIPO_RETROCESSIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoVenditore)
                    .HasColumnName("FLG_TIPO_VENDITORE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.GgLimiteSenzaEffRca).HasColumnName("GG_LIMITE_SENZA_EFF_RCA");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCausale)
                    .HasColumnName("ID_CAUSALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdListino).HasColumnName("ID_LISTINO");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaAltri)
                    .HasColumnName("ID_RETEVENDITA_ALTRI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaComm)
                    .HasColumnName("ID_RETEVENDITA_COMM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaPrincipale)
                    .HasColumnName("ID_RETEVENDITA_PRINCIPALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaSup)
                    .HasColumnName("ID_RETEVENDITA_SUP")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Livello)
                    .HasColumnName("LIVELLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.LivelloDerogaTerritoriale)
                    .HasColumnName("LIVELLO_DEROGA_TERRITORIALE")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.MotRevocaMandFinanziaria)
                    .HasColumnName("MOT_REVOCA_MAND_FINANZIARIA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.RiferimentoEsterno)
                    .HasColumnName("RIFERIMENTO_ESTERNO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SelezioneDiretta)
                    .HasColumnName("SELEZIONE_DIRETTA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SitoIstituzionale)
                    .HasColumnName("SITO_ISTITUZIONALE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.SitoPersonale)
                    .HasColumnName("SITO_PERSONALE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono1)
                    .HasColumnName("TELEFONO1")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono2)
                    .HasColumnName("TELEFONO2")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Telefono3)
                    .HasColumnName("TELEFONO3")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabReteVenditaAggDig>(entity =>
            {
                entity.HasKey(e => e.KeyAggDig)
                    .HasName("PK_TAB_RETEVENDITA_AGGDIG");

                entity.ToTable("TAB_RETE_VENDITA_AGG_DIG", "ISUITE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("IDX01_TAB_RETEVENDITA_AGGDIG");

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione })
                    .HasName("IDX02_TAB_RETEVENDITA_AGGDIG");

                entity.HasIndex(e => new { e.IdAggDig, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("STO_TAB_RETEVENDITA_AGGDIG")
                    .IsUnique();

                entity.Property(e => e.KeyAggDig)
                    .HasColumnName("KEY_AGG_DIG")
                    .ValueGeneratedNever();

                entity.Property(e => e.AltroProfiloFbAgenzia)
                    .HasColumnName("ALTRO_PROFILO_FB_AGENZIA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AltroProfiloSocial)
                    .HasColumnName("ALTRO_PROFILO_SOCIAL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.AltroSitoAgenzia)
                    .HasColumnName("ALTRO_SITO_AGENZIA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CodGestione)
                    .IsRequired()
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtChiusuraFerieAl)
                    .HasColumnName("DT_CHIUSURA_FERIE_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtChiusuraFerieDal)
                    .HasColumnName("DT_CHIUSURA_FERIE_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.GoogleMyBusinessSino)
                    .HasColumnName("GOOGLE_MY_BUSINESS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAggDig).HasColumnName("ID_AGG_DIG");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ProfiloFbStdAxa)
                    .HasColumnName("PROFILO_FB_STD_AXA")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabReteVenditaAggDigApe>(entity =>
            {
                entity.HasKey(e => e.KeyAggDigApe)
                    .HasName("PK_TAB_RETEVENDITA_AGGDIG_APE");

                entity.ToTable("TAB_RETE_VENDITA_AGG_DIG_APE", "ISUITE");

                entity.HasIndex(e => new { e.IdAggDigApe, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("STO_TAB_RETEVENDITA_AGGDIG_APE")
                    .IsUnique();

                entity.Property(e => e.KeyAggDigApe)
                    .HasColumnName("KEY_AGG_DIG_APE")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.Giorno).HasColumnName("GIORNO");

                entity.Property(e => e.HhmmAp1)
                    .HasColumnName("HHMM_AP_1")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.HhmmAp2)
                    .HasColumnName("HHMM_AP_2")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.HhmmCh1)
                    .HasColumnName("HHMM_CH_1")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.HhmmCh2)
                    .HasColumnName("HHMM_CH_2")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.IdAggDig).HasColumnName("ID_AGG_DIG");

                entity.Property(e => e.IdAggDigApe).HasColumnName("ID_AGG_DIG_APE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabReteVenditaAllegati>(entity =>
            {
                entity.HasKey(e => e.KeyAllegatoReteVendita)
                    .HasName("PK_ALLEGATI_RETE_VENDITA");

                entity.ToTable("TAB_RETE_VENDITA_ALLEGATI", "ISUITE");

                entity.Property(e => e.KeyAllegatoReteVendita)
                    .HasColumnName("KEY_ALLEGATO_RETE_VENDITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdAllegatoReteVendita).HasColumnName("ID_ALLEGATO_RETE_VENDITA");

                entity.Property(e => e.IdEntita).HasColumnName("ID_ENTITA");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabReteVenditaAltreSedi>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaAltraSede)
                    .HasName("PK__TAB_RETE__FDEEEA73B2D6D0DB");

                entity.ToTable("TAB_RETE_VENDITA_ALTRE_SEDI", "ISUITE");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("K03_TAB_RETEVENDITA_ALTRE_SEDI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("K02_TAB_RETEVENDITA_ALTRE_SEDI");

                entity.HasIndex(e => e.KeyRetevenditaAltraSede)
                    .HasName("TAB_RETE_VENDITA_ALTRE_SEDI_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevenditaAltraSede, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETEVENDITA_ALTRE_SEDI")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaAltraSede)
                    .HasColumnName("KEY_RETEVENDITA_ALTRA_SEDE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgPuntoRemotoSino)
                    .HasColumnName("FLG_PUNTO_REMOTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSedeSecondariaSino)
                    .HasColumnName("FLG_SEDE_SECONDARIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNodoSedeSec).HasColumnName("ID_NODO_SEDE_SEC");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaAltraSede)
                    .HasColumnName("ID_RETEVENDITA_ALTRA_SEDE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroFax)
                    .HasColumnName("NUMERO_FAX")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroTelefono)
                    .HasColumnName("NUMERO_TELEFONO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabReteVenditaAltri>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaAltri)
                    .HasName("PK__TAB_RETE__78AFACD773C5FEFF");

                entity.ToTable("TAB_RETE_VENDITA_ALTRI", "ISUITE");

                entity.HasIndex(e => e.KeyRetevenditaAltri)
                    .HasName("PK_TAB_RETE_VENDITA_ALTRI")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaAltri)
                    .HasColumnName("KEY_RETEVENDITA_ALTRI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ClusterUltimoEs)
                    .HasColumnName("CLUSTER_ULTIMO_ES")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CodicePortafoglioAgenzia)
                    .HasColumnName("CODICE_PORTAFOGLIO_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescPortafoglioAgenzia)
                    .HasColumnName("DESC_PORTAFOGLIO_AGENZIA")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtAutorizFondi)
                    .HasColumnName("DT_AUTORIZ_FONDI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCauzioneDal)
                    .HasColumnName("DT_CAUZIONE_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtLiberalizzazionePtfAl)
                    .HasColumnName("DT_LIBERALIZZAZIONE_PTF_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtLiberalizzazionePtfDal)
                    .HasColumnName("DT_LIBERALIZZAZIONE_PTF_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPartecipaUtili)
                    .HasColumnName("DT_PARTECIPA_UTILI")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAutorizFondiSino)
                    .HasColumnName("FLG_AUTORIZ_FONDI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInsegnaCompagniaSino)
                    .HasColumnName("FLG_INSEGNA_COMPAGNIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLiberalizzazionePtf)
                    .HasColumnName("FLG_LIBERALIZZAZIONE_PTF")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMeccanizzatoAolSino)
                    .HasColumnName("FLG_MECCANIZZATO_AOL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMeccanizzatoOmniaSino)
                    .HasColumnName("FLG_MECCANIZZATO_OMNIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMobiliCompagniaSino)
                    .HasColumnName("FLG_MOBILI_COMPAGNIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPartecipaUtiliSino)
                    .HasColumnName("FLG_PARTECIPA_UTILI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPlSinistriArdSino)
                    .HasColumnName("FLG_PL_SINISTRI_ARD_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPlSinistriIncSino)
                    .HasColumnName("FLG_PL_SINISTRI_INC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPlSinistriInfSino)
                    .HasColumnName("FLG_PL_SINISTRI_INF_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPlSinistriRcaSino)
                    .HasColumnName("FLG_PL_SINISTRI_RCA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgProprietaLocali)
                    .HasColumnName("FLG_PROPRIETA_LOCALI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoCauzione)
                    .HasColumnName("FLG_TIPO_CAUZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoMeccaniz)
                    .HasColumnName("FLG_TIPO_MECCANIZ")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoMonetizzazione)
                    .HasColumnName("FLG_TIPO_MONETIZZAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTitolaritaLocazione)
                    .HasColumnName("FLG_TITOLARITA_LOCAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRetevenditaAltri)
                    .HasColumnName("ID_RETEVENDITA_ALTRI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpCauzionePrestata)
                    .HasColumnName("IMP_CAUZIONE_PRESTATA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpScopertoCassaMax)
                    .HasColumnName("IMP_SCOPERTO_CASSA_MAX")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpScopertoCassaMin)
                    .HasColumnName("IMP_SCOPERTO_CASSA_MIN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.IntegGaaiGarantSino)
                    .HasColumnName("INTEG_GAAI_GARANT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IntegGaaiVariabSino)
                    .HasColumnName("INTEG_GAAI_VARIAB_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.OldCodGestione)
                    .HasColumnName("OLD_COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.OldCodReteVendita)
                    .HasColumnName("OLD_COD_RETE_VENDITA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.PerSpMedioUltimiEsercizi)
                    .HasColumnName("PER_SP_MEDIO_ULTIMI_ESERCIZI")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<TabReteVenditaAltriAgg>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaAltriAgg)
                    .HasName("PK__TAB_RETE__38C0F59F588C9E6E");

                entity.ToTable("TAB_RETE_VENDITA_ALTRI_AGG", "ISUITE");

                entity.HasIndex(e => e.IdAgenziaCorrelato)
                    .HasName("K03_TAB_RETE_VENDITA_ALTRI_AGG");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("K02_TAB_RETE_VENDITA_ALTRI_AGG");

                entity.HasIndex(e => e.KeyRetevenditaAltriAgg)
                    .HasName("SYS_C0033187")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.DtStoScadenzaFis })
                    .HasName("K04_TAB_RETE_VENDITA_ALTRI_AGG");

                entity.HasIndex(e => new { e.IdRetevenditaAltriAgg, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETEVENDITA_ALTRI_AGG")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaAltriAgg)
                    .HasColumnName("KEY_RETEVENDITA_ALTRI_AGG")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodiceAnaSap)
                    .HasColumnName("CODICE_ANA_SAP")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.DtAnnAl)
                    .HasColumnName("DT_ANN_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAnnDal)
                    .HasColumnName("DT_ANN_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDoppioMandatoDal)
                    .HasColumnName("DT_DOPPIO_MANDATO_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.EMailEstrattoConto)
                    .HasColumnName("E_MAIL_ESTRATTO_CONTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAccordoDati)
                    .HasColumnName("FLG_ACCORDO_DATI")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAccordoDigitale)
                    .HasColumnName("FLG_ACCORDO_DIGITALE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAccordoSinistri)
                    .HasColumnName("FLG_ACCORDO_SINISTRI")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAgeAbilCrm)
                    .HasColumnName("FLG_AGE_ABIL_CRM")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAnnullamentoSino)
                    .HasColumnName("FLG_ANNULLAMENTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCodiceRaSap)
                    .HasColumnName("FLG_CODICE_RA_SAP")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDoppioMandatoSino)
                    .HasColumnName("FLG_DOPPIO_MANDATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGeoAgeSino)
                    .HasColumnName("FLG_GEO_AGE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgGeoAxaSino)
                    .HasColumnName("FLG_GEO_AXA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLiberalizzazioneSino)
                    .HasColumnName("FLG_LIBERALIZZAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRinnoviOnlineSuCc)
                    .HasColumnName("FLG_RINNOVI_ONLINE_SU_CC")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRitAcconto)
                    .HasColumnName("FLG_RIT_ACCONTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSegStra)
                    .HasColumnName("FLG_SEG_STRA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSegTat)
                    .HasColumnName("FLG_SEG_TAT")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTargaInsegnaNodo)
                    .HasColumnName("FLG_TARGA_INSEGNA_NODO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTargheCompagniaSino)
                    .HasColumnName("FLG_TARGHE_COMPAGNIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVersAccordoDati)
                    .HasColumnName("FLG_VERS_ACCORDO_DATI")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.FlgVersAccordoDigitale)
                    .HasColumnName("FLG_VERS_ACCORDO_DIGITALE")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.FlgVersAccordoSinistri)
                    .HasColumnName("FLG_VERS_ACCORDO_SINISTRI")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.IbanAccredito)
                    .HasColumnName("IBAN_ACCREDITO")
                    .HasMaxLength(34)
                    .IsUnicode(false);

                entity.Property(e => e.IdAgenziaCorrelato)
                    .HasColumnName("ID_AGENZIA_CORRELATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaAltriAgg)
                    .HasColumnName("ID_RETEVENDITA_ALTRI_AGG")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpIda)
                    .HasColumnName("IMP_IDA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NumMaxLicDispExtVend).HasColumnName("NUM_MAX_LIC_DISP_EXT_VEND");

                entity.Property(e => e.NumMaxLicExtVend).HasColumnName("NUM_MAX_LIC_EXT_VEND");

                entity.Property(e => e.NumMaxLicVend).HasColumnName("NUM_MAX_LIC_VEND");

                entity.Property(e => e.NumPostAssegnati)
                    .HasColumnName("NUM_POST_ASSEGNATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumPostSpett)
                    .HasColumnName("NUM_POST_SPETT")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaAltriCol>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaAltroCol)
                    .HasName("PK__TAB_RETE__C99E8374861EBD10");

                entity.ToTable("TAB_RETE_VENDITA_ALTRI_COL", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia1)
                    .HasName("K04_TAB_RETE_VENDITA_ALTRI_COL");

                entity.HasIndex(e => e.IdCompagnia2)
                    .HasName("K05_TAB_RETE_VENDITA_ALTRI_COL");

                entity.HasIndex(e => e.IdCompagniaPrec)
                    .HasName("K03_TAB_RETE_VENDITA_ALTRI_COL");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("K02_TAB_RETE_VENDITA_ALTRI_COL");

                entity.HasIndex(e => e.KeyRetevenditaAltroCol)
                    .HasName("SYS_C0033196")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevenditaAltroCol, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETE_VENDITA_ALTRI_COL")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaAltroCol)
                    .HasColumnName("KEY_RETEVENDITA_ALTRO_COL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtBeneviso)
                    .HasColumnName("DT_BENEVISO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPianoClrAl)
                    .HasColumnName("DT_PIANO_CLR_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtPianoClrDal)
                    .HasColumnName("DT_PIANO_CLR_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRatifica)
                    .HasColumnName("DT_RATIFICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRevocaBeneviso)
                    .HasColumnName("DT_REVOCA_BENEVISO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRevocaRatifica)
                    .HasColumnName("DT_REVOCA_RATIFICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMotivoCesCol)
                    .HasColumnName("FLG_MOTIVO_CES_COL")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPianoClrSino)
                    .HasColumnName("FLG_PIANO_CLR_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPlurimandatoSino)
                    .HasColumnName("FLG_PLURIMANDATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPosizioneRuiCesRegSino)
                    .HasColumnName("FLG_POSIZIONE_RUI_CES_REG_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPosizioneRuiInsRegSino)
                    .HasColumnName("FLG_POSIZIONE_RUI_INS_REG_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPuntoRemotoSino)
                    .HasColumnName("FLG_PUNTO_REMOTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSedeAgenziaSino)
                    .HasColumnName("FLG_SEDE_AGENZIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia1)
                    .HasColumnName("ID_COMPAGNIA1")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia2)
                    .HasColumnName("ID_COMPAGNIA2")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagniaPrec)
                    .HasColumnName("ID_COMPAGNIA_PREC")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaAltroCol)
                    .HasColumnName("ID_RETEVENDITA_ALTRO_COL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaAltriDp2>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaAltriDp2)
                    .HasName("PK__TAB_RETE__383F0557B24C6291");

                entity.ToTable("TAB_RETE_VENDITA_ALTRI_DP2", "ISUITE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("K02_TAB_RETE_VENDITA_ALTRI_DP2");

                entity.HasIndex(e => e.KeyRetevenditaAltriDp2)
                    .HasName("SYS_C0033826")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevenditaAltriDp2, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETEVENDITA_ALTRI_DP2")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaAltriDp2)
                    .HasColumnName("KEY_RETEVENDITA_ALTRI_DP2")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgLegameParentelaSino)
                    .HasColumnName("FLG_LEGAME_PARENTELA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPianoPersonalizzatoSino)
                    .HasColumnName("FLG_PIANO_PERSONALIZZATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTutor)
                    .HasColumnName("FLG_TUTOR")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTutorizzato)
                    .HasColumnName("FLG_TUTORIZZATO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaAltriDp2)
                    .HasColumnName("ID_RETEVENDITA_ALTRI_DP2")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaBQol>(entity =>
            {
                entity.HasKey(e => e.IdRetevenditaBQol)
                    .HasName("PK__TAB_RETE__91617BD388459F75");

                entity.ToTable("TAB_RETE_VENDITA_B_QOL", "ISUITE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX01TAB_RETE_VENDITA_B_QOL");

                entity.HasIndex(e => e.IdRetevenditaBQol)
                    .HasName("TAB_RETE_VENDITA_B_QOL_PK")
                    .IsUnique();

                entity.HasIndex(e => e.IdUtenteAgg)
                    .HasName("XX02TAB_RETE_VENDITA_B_QOL");

                entity.Property(e => e.IdRetevenditaBQol)
                    .HasColumnName("ID_RETEVENDITA_B_QOL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtAgg)
                    .HasColumnName("DT_AGG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiesta)
                    .HasColumnName("DT_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgBloccoQuietanzeSino)
                    .HasColumnName("FLG_BLOCCO_QUIETANZE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteAgg)
                    .HasColumnName("ID_UTENTE_AGG")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteRichiesta)
                    .HasColumnName("ID_UTENTE_RICHIESTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabReteVenditaCapAuto>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaCapAuto)
                    .HasName("PK__TAB_RETE__DB2BCF033EEB66BC");

                entity.ToTable("TAB_RETE_VENDITA_CAP_AUTO", "ISUITE");

                entity.HasIndex(e => e.KeyRetevenditaCapAuto)
                    .HasName("TAB_RETE_VENDITA_CAP_AUTO_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("K02_TAB_RETE_VENDITA_CAP_AUTO");

                entity.HasIndex(e => new { e.IdRetevenditaCapAuto, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01TAB_RETE_VENDITA_CAP_AUTO")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaCapAuto)
                    .HasColumnName("KEY_RETEVENDITA_CAP_AUTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgGestioneDirittiSino)
                    .HasColumnName("FLG_GESTIONE_DIRITTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoListino)
                    .HasColumnName("FLG_TIPO_LISTINO")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdRetevenditaCapAuto).HasColumnName("ID_RETEVENDITA_CAP_AUTO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabReteVenditaCapCauz>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaCapCauz)
                    .HasName("PK__TAB_RETE__D4D92FE5F7454C0B");

                entity.ToTable("TAB_RETE_VENDITA_CAP_CAUZ", "ISUITE");

                entity.HasIndex(e => e.KeyRetevenditaCapCauz)
                    .HasName("TAB_RETE_VENDITA_CAP_CAUZ_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("K02_TAB_RETE_VENDITA_CAP_CAUZ");

                entity.HasIndex(e => new { e.IdRetevenditaCapCauz, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01TAB_RETE_VENDITA_CAP_CAUZ")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaCapCauz)
                    .HasColumnName("KEY_RETEVENDITA_CAP_CAUZ")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoListino)
                    .HasColumnName("FLG_TIPO_LISTINO")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdRetevenditaCapCauz).HasColumnName("ID_RETEVENDITA_CAP_CAUZ");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabReteVenditaCapRe>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaCapRe)
                    .HasName("PK__TAB_RETE__7E0910BCA56B7880");

                entity.ToTable("TAB_RETE_VENDITA_CAP_RE", "ISUITE");

                entity.HasIndex(e => e.KeyRetevenditaCapRe)
                    .HasName("TAB_RETE_VENDITA_CAP_RE_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("K02_TAB_RETE_VENDITA_CAP_RE");

                entity.HasIndex(e => new { e.IdRetevenditaCapRe, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01TAB_RETE_VENDITA_CAP_RE")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaCapRe)
                    .HasColumnName("KEY_RETEVENDITA_CAP_RE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStornoProvvigioniSino)
                    .HasColumnName("FLG_STORNO_PROVVIGIONI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoDiritti)
                    .HasColumnName("FLG_TIPO_DIRITTI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoListino)
                    .HasColumnName("FLG_TIPO_LISTINO")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoListinoAcc)
                    .HasColumnName("FLG_TIPO_LISTINO_ACC")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRegimeProvv)
                    .HasColumnName("FLG_TIPO_REGIME_PROVV")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRicDiritti)
                    .HasColumnName("FLG_TIPO_RIC_DIRITTI")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdRetevenditaCapRe).HasColumnName("ID_RETEVENDITA_CAP_RE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabReteVenditaCapTrasp>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaCapTrasp)
                    .HasName("PK__TAB_RETE__ABA59419352B77EA");

                entity.ToTable("TAB_RETE_VENDITA_CAP_TRASP", "ISUITE");

                entity.HasIndex(e => e.KeyRetevenditaCapTrasp)
                    .HasName("TAB_RETE_VENDITA_CAP_TRASP_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("K02_TAB_RETE_VENDITA_CAP_TRASP");

                entity.HasIndex(e => new { e.IdRetevenditaCapTrasp, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01TAB_RETE_VENDITA_CAP_TRASP")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaCapTrasp)
                    .HasColumnName("KEY_RETEVENDITA_CAP_TRASP")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoListino)
                    .HasColumnName("FLG_TIPO_LISTINO")
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdRetevenditaCapTrasp).HasColumnName("ID_RETEVENDITA_CAP_TRASP");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabReteVenditaCauzioni>(entity =>
            {
                entity.HasKey(e => e.KeyCauzione)
                    .HasName("PK__TAB_RETE__FB8B0A0AD1A98EE6");

                entity.ToTable("TAB_RETE_VENDITA_CAUZIONI", "ISUITE");

                entity.HasIndex(e => e.KeyCauzione)
                    .HasName("PK_TAB_RETE_VENDITA_CAUZIONI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCauzione, e.DtStoEffettoLog, e.DtStoEffettoFis })
                    .HasName("XAK_TAB_RETE_VENDITA_CAUZIONI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("K02_TAB_RETE_VENDITA_CAUZIONI");

                entity.Property(e => e.KeyCauzione)
                    .HasColumnName("KEY_CAUZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGestione)
                    .IsRequired()
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffettoGaranzia)
                    .HasColumnName("DT_EFFETTO_GARANZIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaGaranzia)
                    .HasColumnName("DT_SCADENZA_GARANZIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.EnteRilasciante)
                    .HasColumnName("ENTE_RILASCIANTE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCauzione)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_CAUZIONE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAltraCompagniaCopertura)
                    .HasColumnName("ID_ALTRA_COMPAGNIA_COPERTURA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCauzione)
                    .HasColumnName("ID_CAUZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TabReteVenditaCodiciProd>(entity =>
            {
                entity.HasKey(e => e.IdCodiceProduzione)
                    .HasName("SYS_C0014777");

                entity.ToTable("TAB_RETE_VENDITA_CODICI_PROD", "ISUITE");

                entity.HasIndex(e => e.IdCausale)
                    .HasName("XX02TAB_RETE_VENDITA_CODICI_P");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX04TAB_RETE_VENDITA_CODICI_P");

                entity.HasIndex(e => e.IdTipoCodProd)
                    .HasName("XX03TAB_RETE_VENDITA_CODICI_P");

                entity.Property(e => e.IdCodiceProduzione)
                    .HasColumnName("ID_CODICE_PRODUZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodProduzione)
                    .IsRequired()
                    .HasColumnName("COD_PRODUZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtAl)
                    .HasColumnName("DT_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDal)
                    .HasColumnName("DT_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCausale).HasColumnName("ID_CAUSALE");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdTipoCodProd).HasColumnName("ID_TIPO_COD_PROD");

                entity.HasOne(d => d.IdCausaleNavigation)
                    .WithMany(p => p.TabReteVenditaCodiciProd)
                    .HasForeignKey(d => d.IdCausale)
                    .HasConstraintName("FK__TAB_RETE___ID_CA__1A2ABD85");

                entity.HasOne(d => d.IdTipoCodProdNavigation)
                    .WithMany(p => p.TabReteVenditaCodiciProd)
                    .HasForeignKey(d => d.IdTipoCodProd)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TAB_RETE___ID_TI__1936994C");
            });

            modelBuilder.Entity<TabReteVenditaCom>(entity =>
            {
                entity.HasKey(e => e.KeyComuneCompetenza)
                    .HasName("PK__TAB_RETE__E305D16117613909");

                entity.ToTable("TAB_RETE_VENDITA_COM", "ISUITE");

                entity.HasIndex(e => e.IdComune)
                    .HasName("XX03TAB_RETE_VENDITA_COM");

                entity.HasIndex(e => e.IdComuneCompetenza)
                    .HasName("XX01TAB_RETE_VENDITA_COM");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02TAB_RETE_VENDITA_COM");

                entity.HasIndex(e => e.KeyComuneCompetenza)
                    .HasName("PK_TAB_RETE_VENDITA_COM")
                    .IsUnique();

                entity.Property(e => e.KeyComuneCompetenza)
                    .HasColumnName("KEY_COMUNE_COMPETENZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdComune)
                    .HasColumnName("ID_COMUNE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdComuneCompetenza)
                    .HasColumnName("ID_COMUNE_COMPETENZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaComPartner>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaComPartner)
                    .HasName("PK__TAB_RETE__0720DC9C02F7CDC1");

                entity.ToTable("TAB_RETE_VENDITA_COM_PARTNER", "ISUITE");

                entity.HasIndex(e => e.KeyRetevenditaComPartner)
                    .HasName("PK_TAB_RETE_VENDITA_COM_PARTNER")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaComPartner)
                    .HasColumnName("KEY_RETEVENDITA_COM_PARTNER")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtAggAdesioneMandato)
                    .HasColumnName("DT_AGG_ADESIONE_MANDATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAperturaPartnership)
                    .HasColumnName("DT_APERTURA_PARTNERSHIP")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtChiusuraPartnership)
                    .HasColumnName("DT_CHIUSURA_PARTNERSHIP")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAdesioneMandatoSino)
                    .HasColumnName("FLG_ADESIONE_MANDATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCausaleRevocaMandato)
                    .HasColumnName("FLG_CAUSALE_REVOCA_MANDATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRevocaPostChiuGestSino)
                    .HasColumnName("FLG_REVOCA_POST_CHIU_GEST_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoPartner)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_PARTNER")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPartnership)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_PARTNERSHIP")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdRetevenditaComPartner).HasColumnName("ID_RETEVENDITA_COM_PARTNER");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabReteVenditaComm>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaComm)
                    .HasName("PK__TAB_RETE__06D04B3B135BCD2F");

                entity.ToTable("TAB_RETE_VENDITA_COMM", "ISUITE");

                entity.HasIndex(e => e.IdAreaCommerciale)
                    .HasName("XX04TAB_RETE_VENDITA_COMM");

                entity.HasIndex(e => e.IdDipartimento)
                    .HasName("XX03TAB_RETE_VENDITA_COMM");

                entity.HasIndex(e => e.IdIspettorato)
                    .HasName("XX09TAB_RETE_VENDITA_COMM");

                entity.HasIndex(e => e.IdIspettoreAmm)
                    .HasName("XX07TAB_RETE_VENDITA_COMM");

                entity.HasIndex(e => e.IdLiquidatore)
                    .HasName("XX10TAB_RETE_VENDITA_COMM");

                entity.HasIndex(e => e.IdPromoterVf)
                    .HasName("XX06TAB_RETE_VENDITA_COMM");

                entity.HasIndex(e => e.IdResponsabileGest)
                    .HasName("XX05TAB_RETE_VENDITA_COMM");

                entity.HasIndex(e => e.IdResponsabileTerr)
                    .HasName("XX08TAB_RETE_VENDITA_COMM");

                entity.HasIndex(e => e.IdRetevenditaAltri)
                    .HasName("XX02TAB_RETE_VENDITA_COMM");

                entity.HasIndex(e => e.IdRetevenditaComm)
                    .HasName("XX01TAB_RETE_VENDITA_COMM");

                entity.HasIndex(e => e.KeyRetevenditaComm)
                    .HasName("PK_TAB_RETE_VENDITA_COMM")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaComm)
                    .HasColumnName("KEY_RETEVENDITA_COMM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAreaCommerciale)
                    .HasColumnName("ID_AREA_COMMERCIALE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDipartimento)
                    .HasColumnName("ID_DIPARTIMENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettoreAmm)
                    .HasColumnName("ID_ISPETTORE_AMM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLiquidatore)
                    .HasColumnName("ID_LIQUIDATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPromoterVf)
                    .HasColumnName("ID_PROMOTER_VF")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdResponsabileGest)
                    .HasColumnName("ID_RESPONSABILE_GEST")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdResponsabileTerr)
                    .HasColumnName("ID_RESPONSABILE_TERR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaAltri)
                    .HasColumnName("ID_RETEVENDITA_ALTRI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaComm)
                    .HasColumnName("ID_RETEVENDITA_COMM")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaComp>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaComp)
                    .HasName("PK__TAB_RETE__06D04B3EB2F41099");

                entity.ToTable("TAB_RETE_VENDITA_COMP", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02TAB_RETE_VENDITA_COMP");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03TAB_RETE_VENDITA_COMP");

                entity.HasIndex(e => e.IdRetevenditaComp)
                    .HasName("XX01TAB_RETE_VENDITA_COMP");

                entity.HasIndex(e => e.KeyRetevenditaComp)
                    .HasName("PK_TAB_RETE_VENDITA_COMP")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevenditaComp, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETE_VENDITA_COMP")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaComp)
                    .HasColumnName("KEY_RETEVENDITA_COMP")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaComp)
                    .HasColumnName("ID_RETEVENDITA_COMP")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaConticorrenti>(entity =>
            {
                entity.HasKey(e => e.KeyContocorrente)
                    .HasName("PK__TAB_RETE__3EA14F337C386B4B");

                entity.ToTable("TAB_RETE_VENDITA_CONTICORRENTI", "ISUITE");

                entity.HasIndex(e => e.KeyContocorrente)
                    .HasName("PK_TAB_RETE_VENDITA_CONTICORRENTI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdContocorrente, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETE_VENDITA_CONTICORRENTI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("K02_TAB_RETE_VENDITA_CONTICORRENTI");

                entity.Property(e => e.KeyContocorrente)
                    .HasColumnName("KEY_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Cin)
                    .HasColumnName("CIN")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CinIban)
                    .HasColumnName("CIN_IBAN")
                    .HasColumnType("numeric(2, 0)");

                entity.Property(e => e.CodGestione)
                    .IsRequired()
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtApertura)
                    .HasColumnName("DT_APERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtChiusura)
                    .HasColumnName("DT_CHIUSURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgNoIbanSino)
                    .HasColumnName("FLG_NO_IBAN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPrincipaleSino)
                    .HasColumnName("FLG_PRINCIPALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgQuietanzamentoSino)
                    .HasColumnName("FLG_QUIETANZAMENTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaConto)
                    .IsRequired()
                    .HasColumnName("FLG_TIPOLOGIA_CONTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Iban)
                    .HasColumnName("IBAN")
                    .HasMaxLength(27)
                    .IsUnicode(false);

                entity.Property(e => e.IdAbi)
                    .HasColumnName("ID_ABI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCab)
                    .HasColumnName("ID_CAB")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdContocorrente)
                    .HasColumnName("ID_CONTOCORRENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFidejussione)
                    .HasColumnName("ID_FIDEJUSSIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdNazione)
                    .HasColumnName("ID_NAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Intestazione)
                    .HasColumnName("INTESTAZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.NConto)
                    .HasColumnName("N_CONTO")
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabReteVenditaContz>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaContz)
                    .HasName("PK__TAB_RETE__598CE62970AB0953");

                entity.ToTable("TAB_RETE_VENDITA_CONTZ", "ISUITE");

                entity.HasIndex(e => e.KeyRetevenditaContz)
                    .HasName("TAB_RETE_VENDITA_CONTZ_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("K02_TAB_RETE_VENDITA_CONTZ");

                entity.HasIndex(e => new { e.IdRetevenditaContz, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01TAB_RETE_VENDITA_CONTZ")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaContz)
                    .HasColumnName("KEY_RETEVENDITA_CONTZ")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtDisattivaFunzOnline)
                    .HasColumnName("DT_DISATTIVA_FUNZ_ONLINE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtValdisattFunzOnline)
                    .HasColumnName("DT_VALDISATT_FUNZ_ONLINE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgDisattivaFunzOnlineSino)
                    .HasColumnName("FLG_DISATTIVA_FUNZ_ONLINE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgValdisattFunzOnlineSino)
                    .HasColumnName("FLG_VALDISATT_FUNZ_ONLINE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdRetevenditaContz).HasColumnName("ID_RETEVENDITA_CONTZ");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabReteVenditaCosti>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaCosto)
                    .HasName("PK__TAB_RETE__5BAE4BA3E756D8FB");

                entity.ToTable("TAB_RETE_VENDITA_COSTI", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02TAB_RETE_VENDITA_COSTI");

                entity.HasIndex(e => e.IdConto)
                    .HasName("XX04TAB_RETE_VENDITA_COSTI");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX05TAB_RETE_VENDITA_COSTI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03TAB_RETE_VENDITA_COSTI");

                entity.HasIndex(e => e.IdRetevenditaCosto)
                    .HasName("XX01TAB_RETE_VENDITA_COSTI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX06TAB_RETE_VENDITA_COSTI");

                entity.HasIndex(e => e.KeyRetevenditaCosto)
                    .HasName("PK_TAB_RETE_VENDITA_COSTI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("K02_TAB_RETE_VENDITA_COSTI");

                entity.HasIndex(e => new { e.IdRetevenditaCosto, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETE_VENDITA_COSTI")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaCosto)
                    .HasColumnName("KEY_RETEVENDITA_COSTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodCosto)
                    .HasColumnName("COD_COSTO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagente)
                    .HasColumnName("COD_SUBAGENTE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescSubagente)
                    .HasColumnName("DESC_SUBAGENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtCompetenzaAl)
                    .HasColumnName("DT_COMPETENZA_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCompetenzaDal)
                    .HasColumnName("DT_COMPETENZA_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRateAl)
                    .HasColumnName("DT_RATE_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRateDal)
                    .HasColumnName("DT_RATE_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgFrequenzaRate)
                    .HasColumnName("FLG_FREQUENZA_RATE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgValutazioneCosto)
                    .HasColumnName("FLG_VALUTAZIONE_COSTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdConto)
                    .HasColumnName("ID_CONTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaCosto)
                    .HasColumnName("ID_RETEVENDITA_COSTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpObbAuto)
                    .HasColumnName("IMP_OBB_AUTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpObbRe)
                    .HasColumnName("IMP_OBB_RE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpObbVpa)
                    .HasColumnName("IMP_OBB_VPA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpObbVpu)
                    .HasColumnName("IMP_OBB_VPU")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpObbVtot)
                    .HasColumnName("IMP_OBB_VTOT")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpRata)
                    .HasColumnName("IMP_RATA")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.NumeroRate)
                    .HasColumnName("NUMERO_RATE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaEventi>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaEvento)
                    .HasName("PK__TAB_RETE__369DA9E5E77114A0");

                entity.ToTable("TAB_RETE_VENDITA_EVENTI", "ISUITE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX01TAB_RETE_VENDITA_EVENTI");

                entity.HasIndex(e => e.KeyRetevenditaEvento)
                    .HasName("PK_TAB_RETE_VENDITA_EVENTI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.DtEffettoEvento, e.DtSysEvento })
                    .HasName("XAK_RETE_VENDITA_EVENTI")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaEvento)
                    .HasColumnName("KEY_RETEVENDITA_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodiceModifica)
                    .HasColumnName("CODICE_MODIFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEffettoEvento)
                    .HasColumnName("DT_EFFETTO_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtSysEvento)
                    .HasColumnName("DT_SYS_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaFidejIntegr>(entity =>
            {
                entity.HasKey(e => e.KeyFidejIntegrativa)
                    .HasName("PK__TAB_RETE__92A725CCC82DCF47");

                entity.ToTable("TAB_RETE_VENDITA_FIDEJ_INTEGR", "ISUITE");

                entity.HasIndex(e => e.KeyFidejIntegrativa)
                    .HasName("PK_TAB_RETE_VENDITA_FIDEJ_INTEGR")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdFidejIntegrativa, e.DtStoEffettoLog, e.DtStoEffettoFis })
                    .HasName("XAK_TAB_RETE_VENDITA_FIDEJ_INTEGR")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("K02_TAB_RETE_VENDITA_FIDEJ_INTEGR");

                entity.Property(e => e.KeyFidejIntegrativa)
                    .HasColumnName("KEY_FIDEJ_INTEGRATIVA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGestione)
                    .IsRequired()
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.EnteRilasciante)
                    .IsRequired()
                    .HasColumnName("ENTE_RILASCIANTE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoFidejIntegrativa)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_FIDEJ_INTEGRATIVA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAltraCompagniaCopertura)
                    .HasColumnName("ID_ALTRA_COMPAGNIA_COPERTURA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFidejIntegrativa)
                    .HasColumnName("ID_FIDEJ_INTEGRATIVA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpFidejussione)
                    .HasColumnName("IMP_FIDEJUSSIONE")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TabReteVenditaFidejussioni>(entity =>
            {
                entity.HasKey(e => e.KeyFidejussione)
                    .HasName("PK__TAB_RETE__2AFE724E0EDBF0B4");

                entity.ToTable("TAB_RETE_VENDITA_FIDEJUSSIONI", "ISUITE");

                entity.HasIndex(e => e.KeyFidejussione)
                    .HasName("PK_TAB_RETE_VENDITA_FEDIJUSSIONI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdFidejussione, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETE_VENDITA_FIDEJUSSIONI")
                    .IsUnique();

                entity.Property(e => e.KeyFidejussione)
                    .HasColumnName("KEY_FIDEJUSSIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtRilascio)
                    .HasColumnName("DT_RILASCIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdAbi)
                    .HasColumnName("ID_ABI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCab)
                    .HasColumnName("ID_CAB")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFidejussione)
                    .HasColumnName("ID_FIDEJUSSIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TabReteVenditaFiduciari>(entity =>
            {
                entity.HasKey(e => e.IdRetevenditaFiduciari);

                entity.ToTable("TAB_RETE_VENDITA_FIDUCIARI", "ISUITE");

                entity.Property(e => e.IdRetevenditaFiduciari)
                    .HasColumnName("id_retevendita_fiduciari")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFinRapporto)
                    .HasColumnName("dt_fin_rapporto")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniRapporto)
                    .HasColumnName("dt_ini_rapporto")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdFiduciario)
                    .HasColumnName("id_fiduciario")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("id_retevendita")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaIniziative>(entity =>
            {
                entity.HasKey(e => e.IdIniziativaReteVendita)
                    .HasName("SYS_C0014877");

                entity.ToTable("TAB_RETE_VENDITA_INIZIATIVE", "ISUITE");

                entity.HasIndex(e => e.IdCausale)
                    .HasName("XX03TAB_RETE_VENDITA_INIZIATI");

                entity.HasIndex(e => e.IdIniziativaRete)
                    .HasName("XX01TAB_RETE_VENDITA_INIZIATI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02TAB_RETE_VENDITA_INIZIATI");

                entity.Property(e => e.IdIniziativaReteVendita)
                    .HasColumnName("ID_INIZIATIVA_RETE_VENDITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAdesione)
                    .HasColumnName("DT_ADESIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAdesioneFormale)
                    .HasColumnName("DT_ADESIONE_FORMALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRinuncia)
                    .HasColumnName("DT_RINUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAdesioniFormaliSino)
                    .HasColumnName("FLG_ADESIONI_FORMALI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPrevedeAnticipiSino)
                    .HasColumnName("FLG_PREVEDE_ANTICIPI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCausale).HasColumnName("ID_CAUSALE");

                entity.Property(e => e.IdIniziativaRete).HasColumnName("ID_INIZIATIVA_RETE");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.NoteAdesione)
                    .HasColumnName("NOTE_ADESIONE")
                    .IsUnicode(false);

                entity.Property(e => e.NoteRinuncia)
                    .HasColumnName("NOTE_RINUNCIA")
                    .IsUnicode(false);

                entity.HasOne(d => d.IdCausaleNavigation)
                    .WithMany(p => p.TabReteVenditaIniziative)
                    .HasForeignKey(d => d.IdCausale)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TAB_RETE___ID_CA__1C1305F7");

                entity.HasOne(d => d.IdIniziativaReteNavigation)
                    .WithMany(p => p.TabReteVenditaIniziative)
                    .HasForeignKey(d => d.IdIniziativaRete)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TAB_RETE___ID_IN__1B1EE1BE");
            });

            modelBuilder.Entity<TabReteVenditaLeadMan>(entity =>
            {
                entity.HasKey(e => e.KeyLeadMan);

                entity.ToTable("TAB_RETE_VENDITA_LEAD_MAN", "ISUITE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("X01_TAB_RETE_VENDITA_LEAD_MAN");

                entity.HasIndex(e => new { e.IdLeadMan, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_TAB_RETE_VENDITA_LEAD_MAN")
                    .IsUnique();

                entity.Property(e => e.KeyLeadMan)
                    .HasColumnName("KEY_LEAD_MAN")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGestione)
                    .IsRequired()
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdLeadMan).HasColumnName("ID_LEAD_MAN");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NumDp2).HasColumnName("NUM_DP2");

                entity.Property(e => e.NumDpmi).HasColumnName("NUM_DPMI");

                entity.Property(e => e.PerCrAuto)
                    .HasColumnName("PER_CR_AUTO")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PerCrCommercialLines)
                    .HasColumnName("PER_CR_COMMERCIAL_LINES")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PerCrRetail)
                    .HasColumnName("PER_CR_RETAIL")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PerCrVita)
                    .HasColumnName("PER_CR_VITA")
                    .HasColumnType("decimal(5, 2)");

                entity.Property(e => e.PunteggioAuto).HasColumnName("PUNTEGGIO_AUTO");

                entity.Property(e => e.PunteggioCommercialLines).HasColumnName("PUNTEGGIO_COMMERCIAL_LINES");

                entity.Property(e => e.PunteggioRetail).HasColumnName("PUNTEGGIO_RETAIL");

                entity.Property(e => e.PunteggioVita).HasColumnName("PUNTEGGIO_VITA");
            });

            modelBuilder.Entity<TabReteVenditaObiettivi>(entity =>
            {
                entity.HasKey(e => e.IdObiettivo);

                entity.ToTable("TAB_RETE_VENDITA_OBIETTIVI", "ISUITE");

                entity.Property(e => e.IdObiettivo)
                    .HasColumnName("ID_OBIETTIVO")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoIncentivazione)
                    .HasColumnName("ANNO_INCENTIVAZIONE")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.DtAggiornamento)
                    .HasColumnName("DT_AGGIORNAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCancellazione)
                    .HasColumnName("DT_CANCELLAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAltriIstitutiSino)
                    .HasColumnName("FLG_ALTRI_ISTITUTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgClusterProvvigionale)
                    .HasColumnName("FLG_CLUSTER_PROVVIGIONALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPartecipazioneSino)
                    .HasColumnName("FLG_PARTECIPAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStampaSino)
                    .HasColumnName("FLG_STAMPA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgValidoSino)
                    .HasColumnName("FLG_VALIDO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdUtenteAggiornamento).HasColumnName("ID_UTENTE_AGGIORNAMENTO");

                entity.Property(e => e.IdUtenteInserimento).HasColumnName("ID_UTENTE_INSERIMENTO");

                entity.Property(e => e.PremiAnnui)
                    .HasColumnName("PREMI_ANNUI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PremiNonMotor)
                    .HasColumnName("PREMI_NON_MOTOR")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PremiUnici)
                    .HasColumnName("PREMI_UNICI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.QuietanzeIncassate)
                    .HasColumnName("QUIETANZE_INCASSATE")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.VersamentiIntegrativi)
                    .HasColumnName("VERSAMENTI_INTEGRATIVI")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TabReteVenditaOmnia>(entity =>
            {
                entity.HasKey(e => e.KeyOmnia)
                    .HasName("PK__TAB_RETE__FCD279EE749078C9");

                entity.ToTable("TAB_RETE_VENDITA_OMNIA", "ISUITE");

                entity.HasIndex(e => e.IdOmnia)
                    .HasName("XX01TAB_RETE_VENDITA_OMNIA");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02TAB_RETE_VENDITA_OMNIA");

                entity.HasIndex(e => e.KeyOmnia)
                    .HasName("PK_TAB_RETE_VENDITA_OMNIA")
                    .IsUnique();

                entity.Property(e => e.KeyOmnia)
                    .HasColumnName("KEY_OMNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodiceAgenzia)
                    .HasColumnName("CODICE_AGENZIA")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceSubagente)
                    .HasColumnName("CODICE_SUBAGENTE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdOmnia)
                    .HasColumnName("ID_OMNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaOrganico>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaOrganico)
                    .HasName("PK__TAB_RETE__83ACB82FFC3A308B");

                entity.ToTable("TAB_RETE_VENDITA_ORGANICO", "ISUITE");

                entity.HasIndex(e => e.IdAltracompagnia)
                    .HasName("XX04TAB_RETE_VENDITA_ORGANICO");

                entity.HasIndex(e => e.IdCompagniaprincipale)
                    .HasName("XX03TAB_RETE_VENDITA_ORGANICO");

                entity.HasIndex(e => e.IdCompagniaprovenienza)
                    .HasName("XX07TAB_RETE_VENDITA_ORGANICO");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("XX05TAB_RETE_VENDITA_ORGANICO");

                entity.HasIndex(e => e.IdOrganicoriferimento)
                    .HasName("XX02TAB_RETE_VENDITA_ORGANICO");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX06TAB_RETE_VENDITA_ORGANICO");

                entity.HasIndex(e => e.IdRetevenditaOrganico)
                    .HasName("XX01TAB_RETE_VENDITA_ORGANICO");

                entity.HasIndex(e => e.KeyRetevenditaOrganico)
                    .HasName("TAB_RETE_VENDITA_ORGANICO_PK")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaOrganico)
                    .HasColumnName("KEY_RETEVENDITA_ORGANICO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAxaCampus)
                    .HasColumnName("DT_AXA_CAMPUS")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtBeneviso)
                    .HasColumnName("DT_BENEVISO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFinePianoClr)
                    .HasColumnName("DT_FINE_PIANO_CLR")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineRapporto)
                    .HasColumnName("DT_FINE_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioPianoClr)
                    .HasColumnName("DT_INIZIO_PIANO_CLR")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioRapporto)
                    .HasColumnName("DT_INIZIO_RAPPORTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRatifica)
                    .HasColumnName("DT_RATIFICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRevocaBeneviso)
                    .HasColumnName("DT_REVOCA_BENEVISO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRevocaRatifica)
                    .HasColumnName("DT_REVOCA_RATIFICA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAxaCampus)
                    .HasColumnName("FLG_AXA_CAMPUS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgBenevisoSino)
                    .HasColumnName("FLG_BENEVISO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgDpmiSino)
                    .HasColumnName("FLG_DPMI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMotivoCessazioneRapporto)
                    .HasColumnName("FLG_MOTIVO_CESSAZIONE_RAPPORTO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPianoClrSino)
                    .HasColumnName("FLG_PIANO_CLR_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPosizioneEliminataSino)
                    .HasColumnName("FLG_POSIZIONE_ELIMINATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRuoloOrganicoAgenzia)
                    .HasColumnName("FLG_RUOLO_ORGANICO_AGENZIA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCollaboratore)
                    .HasColumnName("FLG_TIPO_COLLABORATORE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSedeLavoro)
                    .HasColumnName("FLG_TIPO_SEDE_LAVORO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdAltracompagnia).HasColumnName("ID_ALTRACOMPAGNIA");

                entity.Property(e => e.IdAnagraficatitolare).HasColumnName("ID_ANAGRAFICATITOLARE");

                entity.Property(e => e.IdCompagniaprincipale).HasColumnName("ID_COMPAGNIAPRINCIPALE");

                entity.Property(e => e.IdCompagniaprovenienza).HasColumnName("ID_COMPAGNIAPROVENIENZA");

                entity.Property(e => e.IdIndirizzo).HasColumnName("ID_INDIRIZZO");

                entity.Property(e => e.IdOrganicoriferimento).HasColumnName("ID_ORGANICORIFERIMENTO");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdRetevenditaOrganico).HasColumnName("ID_RETEVENDITA_ORGANICO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabReteVenditaP3>(entity =>
            {
                entity.HasKey(e => e.IdP3ReteVendita)
                    .HasName("SYS_C0014910");

                entity.ToTable("TAB_RETE_VENDITA_P3", "ISUITE");

                entity.HasIndex(e => e.IdP3DatiGenerali)
                    .HasName("XX02TAB_RETE_VENDITA_P3");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03TAB_RETE_VENDITA_P3");

                entity.Property(e => e.IdP3ReteVendita)
                    .HasColumnName("ID_P3_RETE_VENDITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAl)
                    .HasColumnName("DT_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDal)
                    .HasColumnName("DT_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdP3DatiGenerali).HasColumnName("ID_P3_DATI_GENERALI");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");
            });

            modelBuilder.Entity<TabReteVenditaPianiClr>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaPianoClr);

                entity.ToTable("TAB_RETE_VENDITA_PIANI_CLR", "ISUITE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("X01_TAB_RETE_VENDITA_PIANI_CLR");

                entity.HasIndex(e => new { e.IdRetevenditaPianoClr, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_TAB_RETE_VENDITA_PIANI_CLR")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaPianoClr)
                    .HasColumnName("KEY_RETEVENDITA_PIANO_CLR")
                    .ValueGeneratedNever();

                entity.Property(e => e.ContributoAvviamento)
                    .HasColumnName("CONTRIBUTO_AVVIAMENTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DtChiusuraAnticipata)
                    .HasColumnName("DT_CHIUSURA_ANTICIPATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFinePiano)
                    .HasColumnName("DT_FINE_PIANO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFinePianoOriginale)
                    .HasColumnName("DT_FINE_PIANO_ORIGINALE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioPiano)
                    .HasColumnName("DT_INIZIO_PIANO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInserimentoPiano)
                    .HasColumnName("DT_INSERIMENTO_PIANO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAltreIncentivazioni)
                    .HasColumnName("FLG_ALTRE_INCENTIVAZIONI")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgClausolaSalvaguardia)
                    .HasColumnName("FLG_CLAUSOLA_SALVAGUARDIA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgConsuntIncrementaleSino)
                    .HasColumnName("FLG_CONSUNT_INCREMENTALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMatriceConsuntPiano)
                    .HasColumnName("FLG_MATRICE_CONSUNT_PIANO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSogliaAccessoDanni)
                    .IsRequired()
                    .HasColumnName("FLG_SOGLIA_ACCESSO_DANNI")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSogliaAccessoVita)
                    .IsRequired()
                    .HasColumnName("FLG_SOGLIA_ACCESSO_VITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoPianoClr)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_PIANO_CLR")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPianoClr)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_PIANO_CLR")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoProgrammaClr)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_PROGRAMMA_CLR")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdRetevenditaPianoClr).HasColumnName("ID_RETEVENDITA_PIANO_CLR");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.MatriceConsuntAltro)
                    .HasColumnName("MATRICE_CONSUNT_ALTRO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);

                entity.Property(e => e.SogliaAltro)
                    .HasColumnName("SOGLIA_ALTRO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.SogliaAltroVita)
                    .HasColumnName("SOGLIA_ALTRO_VITA")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabReteVenditaPianiClrMul>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaPianoClrMul)
                    .HasName("PK_RETE_VENDITA_PIANI_CLR_MUL");

                entity.ToTable("TAB_RETE_VENDITA_PIANI_CLR_MUL", "ISUITE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("X02_RETEVENDITA_PIANO_CLR_MUL");

                entity.HasIndex(e => e.IdRetevenditaPianoClr)
                    .HasName("X01_RETEVENDITA_PIANO_CLR_MUL");

                entity.HasIndex(e => new { e.IdRetevenditaPianoClrMul, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_RETEVENDITA_PIANO_CLR_MUL")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaPianoClrMul)
                    .HasColumnName("KEY_RETEVENDITA_PIANO_CLR_MUL")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdRetevenditaPianoClr).HasColumnName("ID_RETEVENDITA_PIANO_CLR");

                entity.Property(e => e.IdRetevenditaPianoClrMul).HasColumnName("ID_RETEVENDITA_PIANO_CLR_MUL");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabReteVenditaPianiClrPer>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaPianoClrPer)
                    .HasName("PK_RETE_VENDITA_PIANI_CLR_PER");

                entity.ToTable("TAB_RETE_VENDITA_PIANI_CLR_PER", "ISUITE");

                entity.HasIndex(e => e.IdRetevenditaPianoClr)
                    .HasName("X01_RETE_VENDITA_PIANI_CLR_PER");

                entity.HasIndex(e => new { e.IdRetevenditaPianoClrPer, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_RETE_VENDITA_PIANI_CLR_PER")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaPianoClrPer)
                    .HasColumnName("KEY_RETEVENDITA_PIANO_CLR_PER")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtFine)
                    .HasColumnName("DT_FINE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizio)
                    .HasColumnName("DT_INIZIO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoRateizzazioneContr)
                    .HasColumnName("FLG_TIPO_RATEIZZAZIONE_CONTR")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdRetevenditaPianoClr).HasColumnName("ID_RETEVENDITA_PIANO_CLR");

                entity.Property(e => e.IdRetevenditaPianoClrPer).HasColumnName("ID_RETEVENDITA_PIANO_CLR_PER");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.ImpContrAnnAnt)
                    .HasColumnName("IMP_CONTR_ANN_ANT")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpContrUT)
                    .HasColumnName("IMP_CONTR_U_T")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpDiCuiNonAuto)
                    .HasColumnName("IMP_DI_CUI_NON_AUTO")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRata)
                    .HasColumnName("IMP_RATA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRata1)
                    .HasColumnName("IMP_RATA_1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRata2)
                    .HasColumnName("IMP_RATA_2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRata3)
                    .HasColumnName("IMP_RATA_3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpRata4)
                    .HasColumnName("IMP_RATA_4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpTotDanni)
                    .HasColumnName("IMP_TOT_DANNI")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpTotVita)
                    .HasColumnName("IMP_TOT_VITA")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpTotaleContributi)
                    .HasColumnName("IMP_TOTALE_CONTRIBUTI")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TabReteVenditaPlurimand>(entity =>
            {
                entity.HasKey(e => e.KeyPlurimandato)
                    .HasName("PK__TAB_RETE__C9E056A025C219C3");

                entity.ToTable("TAB_RETE_VENDITA_PLURIMAND", "ISUITE");

                entity.HasIndex(e => e.KeyPlurimandato)
                    .HasName("PK_TAB_RETE_VENDITA_PLURIMANDA")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdPlurimandato, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETE_VENDITA_PLURIMAND")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("K02_TAB_RETE_VENDITA_PLURIMAND");

                entity.Property(e => e.KeyPlurimandato)
                    .HasColumnName("KEY_PLURIMANDATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGestione)
                    .IsRequired()
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtComChiusuraRapp)
                    .HasColumnName("DT_COM_CHIUSURA_RAPP")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtComEffettoRapp)
                    .HasColumnName("DT_COM_EFFETTO_RAPP")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtComunucazione)
                    .HasColumnName("DT_COMUNUCAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoCompagnia)
                    .HasColumnName("FLG_TIPO_COMPAGNIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPlurimandato)
                    .HasColumnName("ID_PLURIMANDATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabReteVenditaProc>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaProc)
                    .HasName("PK__TAB_RETE__D7E377ED20AD4EE4");

                entity.ToTable("TAB_RETE_VENDITA_PROC", "ISUITE");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX03TAB_RETE_VENDITA_PROC");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02TAB_RETE_VENDITA_PROC");

                entity.HasIndex(e => e.IdRetevenditaProc)
                    .HasName("XX01TAB_RETE_VENDITA_PROC");

                entity.HasIndex(e => e.KeyRetevenditaProc)
                    .HasName("PK_TAB_RETE_VENDITA_PROC")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("K02_TAB_RETE_VENDITA_PROC");

                entity.HasIndex(e => new { e.IdRetevenditaProc, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETE_VENDITA_PROC")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaProc)
                    .HasColumnName("KEY_RETEVENDITA_PROC")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtAxaCampus)
                    .HasColumnName("DT_AXA_CAMPUS")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCessazione)
                    .HasColumnName("DT_CESSAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtProcuratoreDal)
                    .HasColumnName("DT_PROCURATORE_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAxaCampus)
                    .HasColumnName("FLG_AXA_CAMPUS")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaProc)
                    .HasColumnName("ID_RETEVENDITA_PROC")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaPuntiRemoti>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaPuntoRemoto)
                    .HasName("PK__TAB_RETE__39D4D74A94AE8519");

                entity.ToTable("TAB_RETE_VENDITA_PUNTI_REMOTI", "ISUITE");

                entity.HasIndex(e => e.IdIndirizzo)
                    .HasName("K03_TAB_RV_PUNTI_REMOTI");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("K02_TAB_RV_PUNTI_REMOTI");

                entity.HasIndex(e => e.KeyRetevenditaPuntoRemoto)
                    .HasName("TAB_RETE_VENDITA_PUNTI_REMO_PK")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevenditaPuntoRemoto, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RV_PUNTI_REMOTI")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaPuntoRemoto)
                    .HasColumnName("KEY_RETEVENDITA_PUNTO_REMOTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtAttivazione)
                    .HasColumnName("DT_ATTIVAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDisattivazione)
                    .HasColumnName("DT_DISATTIVAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdIndirizzo)
                    .HasColumnName("ID_INDIRIZZO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaPuntoRemoto)
                    .HasColumnName("ID_RETEVENDITA_PUNTO_REMOTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaQol>(entity =>
            {
                entity.HasKey(e => e.IdRetevenditaQol)
                    .HasName("PK__TAB_RETE__0EC8E8033C5C465A");

                entity.ToTable("TAB_RETE_VENDITA_QOL", "ISUITE");

                entity.HasIndex(e => e.IdRetevenditaQol)
                    .HasName("TAB_RETE_VENDITA_QOL_PK")
                    .IsUnique();

                entity.HasIndex(e => e.IdUtenteAgg)
                    .HasName("XX02TAB_RETE_VENDITA_QOL");

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione })
                    .HasName("K02_TAB_RETE_VENDITA_QOL");

                entity.Property(e => e.IdRetevenditaQol)
                    .HasColumnName("ID_RETEVENDITA_QOL")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescCcp)
                    .HasColumnName("DESC_CCP")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtAgg)
                    .HasColumnName("DT_AGG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiesta)
                    .HasColumnName("DT_RICHIESTA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAdesioneQolSino)
                    .HasColumnName("FLG_ADESIONE_QOL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgOrdinamentoQol)
                    .HasColumnName("FLG_ORDINAMENTO_QOL")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStampaAvvisiSino)
                    .HasColumnName("FLG_STAMPA_AVVISI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoStampa)
                    .HasColumnName("FLG_TIPO_STAMPA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoStampaAvvisi)
                    .HasColumnName("FLG_TIPO_STAMPA_AVVISI")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteAgg)
                    .HasColumnName("ID_UTENTE_AGG")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteRichiesta)
                    .HasColumnName("ID_UTENTE_RICHIESTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NrBollettinoCcp)
                    .HasColumnName("NR_BOLLETTINO_CCP")
                    .HasMaxLength(8)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabReteVenditaRTrasfPtf>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaRTrasfPtf)
                    .HasName("PK_RETE_VENDITA_R_TRASF_PTF");

                entity.ToTable("TAB_RETE_VENDITA_R_TRASF_PTF", "ISUITE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("K02_RETE_VENDITA_R_TRASF_PT");

                entity.HasIndex(e => e.IdRetevenditaCedente)
                    .HasName("K03_RETE_VENDITA_R_TRASF_PT");

                entity.HasIndex(e => e.IdRetevenditaRicevente)
                    .HasName("K04_RETE_VENDITA_R_TRASF_PT");

                entity.HasIndex(e => new { e.IdRetevenditaRTrasfPtf, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_RETE_VENDITA_R_TRASF_PT")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaRTrasfPtf)
                    .HasColumnName("KEY_RETEVENDITA_R_TRASF_PTF")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGestione)
                    .IsRequired()
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtEffettoTrasferimento)
                    .HasColumnName("DT_EFFETTO_TRASFERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRichiestaTrasferimento)
                    .HasColumnName("DT_RICHIESTA_TRASFERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMacroRamoRTrasfPtf)
                    .IsRequired()
                    .HasColumnName("FLG_MACRO_RAMO_R_TRASF_PTF")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdRetevenditaCedente).HasColumnName("ID_RETEVENDITA_CEDENTE");

                entity.Property(e => e.IdRetevenditaRTrasfPtf).HasColumnName("ID_RETEVENDITA_R_TRASF_PTF");

                entity.Property(e => e.IdRetevenditaRicevente).HasColumnName("ID_RETEVENDITA_RICEVENTE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabReteVenditaRemunerazioni>(entity =>
            {
                entity.HasKey(e => e.KeyRemunerazione)
                    .HasName("PK__TAB_RETE__0111054D973AB33D");

                entity.ToTable("TAB_RETE_VENDITA_REMUNERAZIONI", "ISUITE");

                entity.HasIndex(e => e.KeyRemunerazione)
                    .HasName("PK_TAB_RETE_VENDITA_REMUNERAZIONI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRemunerazione, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETE_VENDITA_REMUNERAZIONI")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("K02_TAB_RETE_VENDITA_REMUNERAZIONI");

                entity.Property(e => e.KeyRemunerazione)
                    .HasColumnName("KEY_REMUNERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGestione)
                    .IsRequired()
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAdesione16magSino)
                    .HasColumnName("FLG_ADESIONE_16MAG_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAdesioneIncSolSino)
                    .HasColumnName("FLG_ADESIONE_INC_SOL_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRinunciaVecIstSino)
                    .HasColumnName("FLG_RINUNCIA_VEC_IST_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRemunerazione)
                    .HasColumnName("ID_REMUNERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabReteVenditaSegStra>(entity =>
            {
                entity.HasKey(e => e.IdSegmentazioneStra)
                    .HasName("SYS_C0083634");

                entity.ToTable("TAB_RETE_VENDITA_SEG_STRA", "ISUITE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX01TAB_RETE_VENDITA_SEG_STRA");

                entity.Property(e => e.IdSegmentazioneStra)
                    .HasColumnName("ID_SEGMENTAZIONE_STRA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAgg)
                    .HasColumnName("DT_AGG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgSegStra)
                    .IsRequired()
                    .HasColumnName("FLG_SEG_STRA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdUtenteAgg).HasColumnName("ID_UTENTE_AGG");
            });

            modelBuilder.Entity<TabReteVenditaSegTat>(entity =>
            {
                entity.HasKey(e => e.IdSegmentazioneTat)
                    .HasName("SYS_C0083628");

                entity.ToTable("TAB_RETE_VENDITA_SEG_TAT", "ISUITE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX01TAB_RETE_VENDITA_SEG_TAT");

                entity.Property(e => e.IdSegmentazioneTat)
                    .HasColumnName("ID_SEGMENTAZIONE_TAT")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtAgg)
                    .HasColumnName("DT_AGG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgSegTat)
                    .IsRequired()
                    .HasColumnName("FLG_SEG_TAT")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdUtenteAgg).HasColumnName("ID_UTENTE_AGG");
            });

            modelBuilder.Entity<TabReteVenditaStraoPtf>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaStraoPtf)
                    .HasName("PK__TAB_RETE__FB0BA2325043EC7D");

                entity.ToTable("TAB_RETE_VENDITA_STRAO_PTF", "ISUITE");

                entity.HasIndex(e => e.IdRetevenditaStraoPtf)
                    .HasName("XX01TAB_RETE_VENDITA_STRAO_PTF");

                entity.HasIndex(e => e.KeyRetevenditaStraoPtf)
                    .HasName("PK_TAB_RETE_VENDITA_STRAO_PTF")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevendita, e.CodGestione, e.DtStoScadenzaFis })
                    .HasName("XX02TAB_RETE_VENDITA_STRAO_PTF");

                entity.Property(e => e.KeyRetevenditaStraoPtf)
                    .HasColumnName("KEY_RETEVENDITA_STRAO_PTF")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtAl)
                    .HasColumnName("DT_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDal)
                    .HasColumnName("DT_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEventoStraoPtf)
                    .HasColumnName("FLG_EVENTO_STRAO_PTF")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaStraoPtf)
                    .HasColumnName("ID_RETEVENDITA_STRAO_PTF")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabReteVenditaTrasfPtf>(entity =>
            {
                entity.HasKey(e => e.KeyRetevenditaTrasfPtf)
                    .HasName("PK__TAB_RETE__F1EA4D960B14F2D4");

                entity.ToTable("TAB_RETE_VENDITA_TRASF_PTF", "ISUITE");

                entity.HasIndex(e => e.IdAgeRicevente)
                    .HasName("K03_TAB_RETEVENDITA_TRASF_PTF");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("K02_TAB_RETEVENDITA_TRASF_PTF");

                entity.HasIndex(e => e.KeyRetevenditaTrasfPtf)
                    .HasName("TAB_RETE_VENDITA_TRASF_PTF")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdRetevenditaTrasfPtf, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("K01_TAB_RETEVENDITA_TRASF_PTF")
                    .IsUnique();

                entity.Property(e => e.KeyRetevenditaTrasfPtf)
                    .HasColumnName("KEY_RETEVENDITA_TRASF_PTF")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtTrasf)
                    .HasColumnName("DT_TRASF")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgMacroRamo)
                    .HasColumnName("FLG_MACRO_RAMO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgParzTot)
                    .HasColumnName("FLG_PARZ_TOT")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTrasfInSeguito)
                    .HasColumnName("FLG_TRASF_IN_SEGUITO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdAgeRicevente)
                    .HasColumnName("ID_AGE_RICEVENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevenditaTrasfPtf)
                    .HasColumnName("ID_RETEVENDITA_TRASF_PTF")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TabReteVenditaUndoWizard>(entity =>
            {
                entity.HasKey(e => e.IdUndowizard)
                    .HasName("PK_TAB_RETE_VENDITA_UNDO_WIZ");

                entity.ToTable("TAB_RETE_VENDITA_UNDO_WIZARD", "ISUITE");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX01_TAB_RETE_VENDITA_UNDO_WIZ");

                entity.Property(e => e.IdUndowizard)
                    .HasColumnName("ID_UNDOWIZARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodGestione)
                    .HasColumnName("COD_GESTIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdRetevendita).HasColumnName("ID_RETEVENDITA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabRetiDistributive>(entity =>
            {
                entity.HasKey(e => e.IdRetedistributiva)
                    .HasName("PK__TAB_RETI__9A09416C06C398A7");

                entity.ToTable("TAB_RETI_DISTRIBUTIVE", "ISUITE");

                entity.HasIndex(e => e.IdRetedistributiva)
                    .HasName("TAB_RETI_DISTRIBUTIVE_PK")
                    .IsUnique();

                entity.Property(e => e.IdRetedistributiva)
                    .HasColumnName("ID_RETEDISTRIBUTIVA")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodReteDistributiva)
                    .HasColumnName("COD_RETE_DISTRIBUTIVA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagniegruppo).HasColumnName("ID_COMPAGNIEGRUPPO");

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");
            });

            modelBuilder.Entity<TabRiepAnnualeIl>(entity =>
            {
                entity.HasKey(e => e.IdTabRiepAnnualeIl);

                entity.ToTable("TAB_RIEP_ANNUALE_IL", "ICLAIMS");

                entity.HasIndex(e => new { e.IdRegione, e.AnnoRiferimento })
                    .HasName("X01_TAB_RIEP_ANNUALE_IL");

                entity.Property(e => e.IdTabRiepAnnualeIl)
                    .HasColumnName("ID_TAB_RIEP_ANNUALE_IL")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoRiferimento).HasColumnName("ANNO_RIFERIMENTO");

                entity.Property(e => e.IdRegione).HasColumnName("ID_REGIONE");

                entity.Property(e => e.PctInterventoLegale)
                    .HasColumnName("PCT_INTERVENTO_LEGALE")
                    .HasColumnType("decimal(10, 4)");
            });

            modelBuilder.Entity<TabRuoli>(entity =>
            {
                entity.HasKey(e => e.IdRuolo)
                    .HasName("PK__TAB_RUOL__F3B989B04A2B8850");

                entity.ToTable("TAB_RUOLI", "ISUITE");

                entity.HasIndex(e => e.CodRuolo)
                    .HasName("SYS_C0060178")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02TAB_RUOLI");

                entity.HasIndex(e => e.IdRuolo)
                    .HasName("PK_TAB_RUOLI")
                    .IsUnique();

                entity.Property(e => e.IdRuolo)
                    .HasColumnName("ID_RUOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodRuolo)
                    .HasColumnName("COD_RUOLO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFiltraNazioneSino)
                    .HasColumnName("FLG_FILTRA_NAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicercaPolizzeSino)
                    .HasColumnName("FLG_RICERCA_POLIZZE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRicercaSinistriSino)
                    .HasColumnName("FLG_RICERCA_SINISTRI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiediIdFiscaleSino)
                    .HasColumnName("FLG_RICHIEDI_ID_FISCALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSelezionaIndirizzoSino)
                    .IsRequired()
                    .HasColumnName("FLG_SELEZIONA_INDIRIZZO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSoggettoABloccoSino)
                    .HasColumnName("FLG_SOGGETTO_A_BLOCCO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgUtilizzabileSino)
                    .IsRequired()
                    .HasColumnName("FLG_UTILIZZABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.TableName)
                    .HasColumnName("TABLE_NAME")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabScadenzeStatiOggetto>(entity =>
            {
                entity.HasKey(e => e.IdScadenzaStatoOggetto);

                entity.ToTable("TAB_SCADENZE_STATI_OGGETTO", "ISUITE");

                entity.HasIndex(e => e.IdStatoOggetto)
                    .HasName("XX01_TAB_SCADENZE_STATI_OGGETTO");

                entity.Property(e => e.IdScadenzaStatoOggetto)
                    .HasColumnName("ID_SCADENZA_STATO_OGGETTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgForzaScadenzaSino)
                    .HasColumnName("FLG_FORZA_SCADENZA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLivelloScadenza)
                    .HasColumnName("FLG_LIVELLO_SCADENZA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRitrosoSino)
                    .HasColumnName("FLG_RITROSO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSpuntaManualeSino)
                    .HasColumnName("FLG_SPUNTA_MANUALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaCruscotto)
                    .HasColumnName("FLG_TIPOLOGIA_CRUSCOTTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdStatoOggetto).HasColumnName("ID_STATO_OGGETTO");

                entity.Property(e => e.NGiorniFineScadenza).HasColumnName("N_GIORNI_FINE_SCADENZA");

                entity.Property(e => e.NGiorniInizioScadenza).HasColumnName("N_GIORNI_INIZIO_SCADENZA");
            });

            modelBuilder.Entity<TabSettore>(entity =>
            {
                entity.HasKey(e => e.IdSettore)
                    .HasName("PK__TAB_SETT__7A3D024B75FA14FE");

                entity.ToTable("TAB_SETTORE", "ISUITE");

                entity.HasIndex(e => e.CodSettore)
                    .HasName("XAK1TAB_SETTORE")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescSettore)
                    .HasName("XX02TAB_SETTORE");

                entity.HasIndex(e => e.IdSettore)
                    .HasName("SYS_C0046303")
                    .IsUnique();

                entity.Property(e => e.IdSettore)
                    .HasColumnName("ID_SETTORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodSettore)
                    .HasColumnName("COD_SETTORE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescSettore)
                    .HasColumnName("DESC_SETTORE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPreventivoSino)
                    .HasColumnName("FLG_PREVENTIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescSettore)
                    .HasColumnName("ID_DESC_SETTORE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabSottoprestazioni>(entity =>
            {
                entity.HasKey(e => e.KeySottoprestazione);

                entity.ToTable("TAB_SOTTOPRESTAZIONI", "ICLAIMS");

                entity.HasIndex(e => e.IdPrestazione)
                    .HasName("XX01TAB_SOTTOPRESTAZIONI");

                entity.Property(e => e.KeySottoprestazione)
                    .HasColumnName("KEY_SOTTOPRESTAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodSottoprestazione)
                    .HasColumnName("COD_SOTTOPRESTAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCollegamentoSchedaDanno)
                    .HasColumnName("FLG_COLLEGAMENTO_SCHEDA_DANNO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgImportoNegativoSino)
                    .HasColumnName("FLG_IMPORTO_NEGATIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSelezionabileSino)
                    .HasColumnName("FLG_SELEZIONABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoSottoprestazione)
                    .HasColumnName("FLG_TIPO_SOTTOPRESTAZIONE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaDanno)
                    .HasColumnName("FLG_TIPOLOGIA_DANNO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdPrestazione).HasColumnName("ID_PRESTAZIONE");

                entity.Property(e => e.IdSottoprestazione).HasColumnName("ID_SOTTOPRESTAZIONE");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabSpeseOutsourcing>(entity =>
            {
                entity.HasKey(e => e.IdTabSpesaOutsourcing);

                entity.ToTable("TAB_SPESE_OUTSOURCING", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX01TAB_SPESE_OUTSOURCING");

                entity.HasIndex(e => e.IdTabSpesaOutsourcing)
                    .HasName("XX02TAB_SPESE_OUTSOURCING");

                entity.HasIndex(e => new { e.IdTabSpesaOutsourcing, e.DtStatoDal, e.DtStatoAl })
                    .HasName("XX03TAB_SPESE_OUTSOURCING");

                entity.Property(e => e.IdTabSpesaOutsourcing)
                    .HasColumnName("ID_TAB_SPESA_OUTSOURCING")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodRegola)
                    .HasColumnName("COD_REGOLA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.DtStatoAl)
                    .HasColumnName("DT_STATO_AL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStatoDal)
                    .HasColumnName("DT_STATO_DAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.EsclusaDa)
                    .HasColumnName("ESCLUSA_DA")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAccadimentoEsteroSino)
                    .HasColumnName("FLG_ACCADIMENTO_ESTERO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgFirmaCai)
                    .HasColumnName("FLG_FIRMA_CAI")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgInvPermanenteSino)
                    .HasColumnName("FLG_INV_PERMANENTE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgOltreSogliaSino)
                    .HasColumnName("FLG_OLTRE_SOGLIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPerPartitaSino)
                    .HasColumnName("FLG_PER_PARTITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamiBilancioAmmessi)
                    .HasColumnName("FLG_RAMI_BILANCIO_AMMESSI")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSogliaPagatoSino)
                    .HasColumnName("FLG_SOGLIA_PAGATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSogliaRiservaSino)
                    .HasColumnName("FLG_SOGLIA_RISERVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCardCompagnia)
                    .HasColumnName("FLG_TIPO_CARD_COMPAGNIA")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRuoloCoinvolto)
                    .HasColumnName("FLG_TIPO_RUOLO_COINVOLTO")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaDanno)
                    .HasColumnName("FLG_TIPOLOGIA_DANNO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaGestioneDanno)
                    .HasColumnName("FLG_TIPOLOGIA_GESTIONE_DANNO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgVeicoloPolizzaSino)
                    .HasColumnName("FLG_VEICOLO_POLIZZA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdFiduciario).HasColumnName("ID_FIDUCIARIO");

                entity.Property(e => e.ImpSogliaMax)
                    .HasColumnName("IMP_SOGLIA_MAX")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpSpesa)
                    .HasColumnName("IMP_SPESA")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<TabStatiEquivalentiCard>(entity =>
            {
                entity.HasKey(e => e.IdStatoEquivalenteCard)
                    .HasName("PK_TAB_STATI_EQUIVALENTI");

                entity.ToTable("TAB_STATI_EQUIVALENTI_CARD", "ICLAIMS");

                entity.HasIndex(e => new { e.IdStatoDestinazioneRich, e.IdStatoAttualeReale })
                    .HasName("XX01_TAB_STATI_EQUIVALENTI_CARD");

                entity.Property(e => e.IdStatoEquivalenteCard)
                    .HasColumnName("ID_STATO_EQUIVALENTE_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdStatoAttualeReale).HasColumnName("ID_STATO_ATTUALE_REALE");

                entity.Property(e => e.IdStatoAttualeRich).HasColumnName("ID_STATO_ATTUALE_RICH");

                entity.Property(e => e.IdStatoDestinazioneEquiv).HasColumnName("ID_STATO_DESTINAZIONE_EQUIV");

                entity.Property(e => e.IdStatoDestinazioneRich).HasColumnName("ID_STATO_DESTINAZIONE_RICH");
            });

            modelBuilder.Entity<TabStatiOggetto>(entity =>
            {
                entity.HasKey(e => e.IdStatoOggetto);

                entity.ToTable("TAB_STATI_OGGETTO", "ISUITE");

                entity.HasIndex(e => e.IdTipoOggetto)
                    .HasName("XX01_TAB_STATI_OGGETTO");

                entity.Property(e => e.IdStatoOggetto)
                    .HasColumnName("ID_STATO_OGGETTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoFinaleSino)
                    .HasColumnName("FLG_STATO_FINALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoOggetto)
                    .IsRequired()
                    .HasColumnName("FLG_STATO_OGGETTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaCruscotto)
                    .HasColumnName("FLG_TIPOLOGIA_CRUSCOTTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdTipoOggetto).HasColumnName("ID_TIPO_OGGETTO");
            });

            modelBuilder.Entity<TabStatiOggettoCard>(entity =>
            {
                entity.HasKey(e => e.IdStatoOggettoCard);

                entity.ToTable("TAB_STATI_OGGETTO_CARD", "ICLAIMS");

                entity.HasIndex(e => e.IdStatoOggetto)
                    .HasName("XX01_TAB_STATI_OGGETTO_CARD");

                entity.Property(e => e.IdStatoOggettoCard)
                    .HasColumnName("ID_STATO_OGGETTO_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgPermessaNotaConcardSino)
                    .HasColumnName("FLG_PERMESSA_NOTA_CONCARD_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Flusso)
                    .IsRequired()
                    .HasColumnName("FLUSSO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdStatoOggetto).HasColumnName("ID_STATO_OGGETTO");
            });

            modelBuilder.Entity<TabStatiOperazioni>(entity =>
            {
                entity.HasKey(e => e.IdStatoOperazione)
                    .HasName("PK__TAB_STAT__E3D76290C4584B5D");

                entity.ToTable("TAB_STATI_OPERAZIONI", "ISUITE");

                entity.HasIndex(e => e.IdFunzione)
                    .HasName("XX03TAB_STATI_OPERAZIONI");

                entity.HasIndex(e => e.IdStatoOperazione)
                    .HasName("XX01TAB_STATI_OPERAZIONI");

                entity.HasIndex(e => e.IdTipoOggetto)
                    .HasName("XX02TAB_STATI_OPERAZIONI");

                entity.Property(e => e.IdStatoOperazione)
                    .HasColumnName("ID_STATO_OPERAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAttivaSino)
                    .HasColumnName("FLG_ATTIVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgObbligatorietaNote)
                    .HasColumnName("FLG_OBBLIGATORIETA_NOTE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdFunzione).HasColumnName("ID_FUNZIONE");

                entity.Property(e => e.IdTipoOggetto).HasColumnName("ID_TIPO_OGGETTO");

                entity.Property(e => e.Url)
                    .HasColumnName("URL")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabTargetScadenze>(entity =>
            {
                entity.HasKey(e => e.IdTarget);

                entity.ToTable("TAB_TARGET_SCADENZE", "ISUITE");

                entity.HasIndex(e => e.IdScadenzaStatoOggetto)
                    .HasName("XX01_TAB_TARGET_SCADENZE");

                entity.Property(e => e.IdTarget)
                    .HasColumnName("ID_TARGET")
                    .ValueGeneratedNever();

                entity.Property(e => e.Email)
                    .HasColumnName("EMAIL")
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggettoTarget)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OGGETTO_TARGET")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggettoTarget).HasColumnName("ID_OGGETTO_TARGET");

                entity.Property(e => e.IdScadenzaStatoOggetto).HasColumnName("ID_SCADENZA_STATO_OGGETTO");

                entity.Property(e => e.OffsetGiorniLavorativi).HasColumnName("OFFSET_GIORNI_LAVORATIVI");
            });

            modelBuilder.Entity<TabTariffe>(entity =>
            {
                entity.HasKey(e => e.IdTariffa);

                entity.ToTable("TAB_TARIFFE", "ISUITE");

                entity.Property(e => e.IdTariffa)
                    .HasColumnName("ID_TARIFFA")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceTariffa)
                    .IsRequired()
                    .HasColumnName("CODICE_TARIFFA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoTabellaTariffeAxa)
                    .HasColumnName("FLG_TIPO_TABELLA_TARIFFE_AXA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaProdottoAxa)
                    .IsRequired()
                    .HasColumnName("FLG_TIPOLOGIA_PRODOTTO_AXA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<TabTariffeMalattia>(entity =>
            {
                entity.HasKey(e => e.KeyTariffaMalattia);

                entity.ToTable("TAB_TARIFFE_MALATTIA", "ICLAIMS");

                entity.HasIndex(e => new { e.IdTariffaMalattia, e.DtStoScadenzaLog, e.DtStoScadenzaFis })
                    .HasName("XAK_TAB_TARIFFE_MALATTIA")
                    .IsUnique();

                entity.Property(e => e.KeyTariffaMalattia)
                    .HasColumnName("KEY_TARIFFA_MALATTIA")
                    .ValueGeneratedNever();

                entity.Property(e => e.Cdtarest)
                    .IsRequired()
                    .HasColumnName("CDTAREST")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodGruppoTariffa)
                    .IsRequired()
                    .HasColumnName("COD_GRUPPO_TARIFFA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodTariffa)
                    .IsRequired()
                    .HasColumnName("COD_TARIFFA")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdTariffaMalattia).HasColumnName("ID_TARIFFA_MALATTIA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");
            });

            modelBuilder.Entity<TabTariffeProdotti>(entity =>
            {
                entity.HasKey(e => e.IdTariffaProdotto);

                entity.ToTable("TAB_TARIFFE_PRODOTTI", "ISUITE");

                entity.Property(e => e.IdTariffaProdotto)
                    .HasColumnName("ID_TARIFFA_PRODOTTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoIncentivazione)
                    .HasColumnName("ANNO_INCENTIVAZIONE")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodTariffa)
                    .HasColumnName("COD_TARIFFA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DescTariffa)
                    .HasColumnName("DESC_TARIFFA")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtAggiornamento)
                    .HasColumnName("DT_AGGIORNAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCancellazione)
                    .HasColumnName("DT_CANCELLAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoTabellaTariffeAxa)
                    .HasColumnName("FLG_TIPO_TABELLA_TARIFFE_AXA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipologiaProdottoAxa)
                    .HasColumnName("FLG_TIPOLOGIA_PRODOTTO_AXA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgValidoSino)
                    .HasColumnName("FLG_VALIDO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdUtenteAggiornamento).HasColumnName("ID_UTENTE_AGGIORNAMENTO");

                entity.Property(e => e.IdUtenteInserimento).HasColumnName("ID_UTENTE_INSERIMENTO");
            });

            modelBuilder.Entity<TabTestiFissi>(entity =>
            {
                entity.HasKey(e => e.IdTestoFisso);

                entity.ToTable("TAB_TESTI_FISSI", "ISUITE");

                entity.Property(e => e.IdTestoFisso)
                    .HasColumnName("ID_TESTO_FISSO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodiceTestoFisso)
                    .HasColumnName("CODICE_TESTO_FISSO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneTestoFisso)
                    .IsRequired()
                    .HasColumnName("DESCRIZIONE_TESTO_FISSO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.IdFormulaCorpo).HasColumnName("ID_FORMULA_CORPO");

                entity.Property(e => e.IdFormulaOggetto).HasColumnName("ID_FORMULA_OGGETTO");

                entity.Property(e => e.TestoFissoCorpo)
                    .HasColumnName("TESTO_FISSO_CORPO")
                    .HasMaxLength(4000)
                    .IsUnicode(false);

                entity.Property(e => e.TestoFissoOggetto)
                    .HasColumnName("TESTO_FISSO_OGGETTO")
                    .HasMaxLength(4000)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabTipiBollato>(entity =>
            {
                entity.HasKey(e => e.IdTabTipiBollato);

                entity.ToTable("TAB_TIPI_BOLLATO", "IREGULATION");

                entity.HasIndex(e => e.IdTabTipiBollato)
                    .HasName("XX01TAB_TIPI_BOLLATO");

                entity.Property(e => e.IdTabTipiBollato)
                    .HasColumnName("ID_TAB_TIPI_BOLLATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodBollato)
                    .HasColumnName("COD_BOLLATO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodModello)
                    .HasColumnName("COD_MODELLO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.DocumentoDaArchiviare)
                    .HasColumnName("DOCUMENTO_DA_ARCHIVIARE")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Etichetta)
                    .HasColumnName("ETICHETTA")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.MetodoCreazioneDataset)
                    .HasColumnName("METODO_CREAZIONE_DATASET")
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.TipoArea)
                    .HasColumnName("TIPO_AREA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TipoBollato)
                    .HasColumnName("TIPO_BOLLATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabTipiCodProdRete>(entity =>
            {
                entity.HasKey(e => e.IdTipoCodProd)
                    .HasName("SYS_C0014936");

                entity.ToTable("TAB_TIPI_COD_PROD_RETE", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX01TAB_TIPI_COD_PROD_RETE");

                entity.Property(e => e.IdTipoCodProd)
                    .HasColumnName("ID_TIPO_COD_PROD")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodTipoProd)
                    .IsRequired()
                    .HasColumnName("COD_TIPO_PROD")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFinVal)
                    .HasColumnName("DT_FIN_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniVal)
                    .HasColumnName("DT_INI_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoEntita)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ENTITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");
            });

            modelBuilder.Entity<TabTipiEventoCatastrofale>(entity =>
            {
                entity.HasKey(e => e.IdTipoEventoCatastrofale)
                    .HasName("ID_TIPO_EVENTO_CATASTROFALE");

                entity.ToTable("TAB_TIPI_EVENTO_CATASTROFALE", "ICLAIMS");

                entity.HasIndex(e => e.IdTipoEventoCatastrofale)
                    .HasName("XX01_TAB_TIPI_EVENTO_CATASTROFALE");

                entity.Property(e => e.IdTipoEventoCatastrofale)
                    .HasColumnName("ID_TIPO_EVENTO_CATASTROFALE")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descrizione)
                    .IsRequired()
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCumuloCatastrofale)
                    .HasColumnName("FLG_TIPO_CUMULO_CATASTROFALE")
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabTipiEventoDen>(entity =>
            {
                entity.HasKey(e => e.IdTipoEventoDen)
                    .HasName("PK__TAB_TIPI__662E3BB739D030FC");

                entity.ToTable("TAB_TIPI_EVENTO_DEN", "ICLAIMS");

                entity.HasIndex(e => e.IdTipoEventoDen)
                    .HasName("TAB_TIPI_EVENTO_DEN_K01")
                    .IsUnique();

                entity.Property(e => e.IdTipoEventoDen)
                    .HasColumnName("ID_TIPO_EVENTO_DEN")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodTipoEventoDen)
                    .IsRequired()
                    .HasColumnName("COD_TIPO_EVENTO_DEN")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgBloccoStessiDatiSino)
                    .HasColumnName("FLG_BLOCCO_STESSI_DATI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgIncRecAutSino)
                    .HasColumnName("FLG_INC_REC_AUT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLettErediSino)
                    .HasColumnName("FLG_LETT_EREDI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLettSurrSino)
                    .HasColumnName("FLG_LETT_SURR_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRecuperiRatealiSino)
                    .HasColumnName("FLG_RECUPERI_RATEALI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRichiediAutoritaSino)
                    .HasColumnName("FLG_RICHIEDI_AUTORITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRichiediCaiSino)
                    .HasColumnName("FLG_RICHIEDI_CAI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRichiediEntiSino)
                    .HasColumnName("FLG_RICHIEDI_ENTI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRichiediLuogoSino)
                    .HasColumnName("FLG_RICHIEDI_LUOGO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiediMediatoreSino)
                    .HasColumnName("FLG_RICHIEDI_MEDIATORE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRichiediNDataPrestSino)
                    .HasColumnName("FLG_RICHIEDI_N_DATA_PREST_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiediOraSino)
                    .HasColumnName("FLG_RICHIEDI_ORA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiediPatrocinSino)
                    .HasColumnName("FLG_RICHIEDI_PATROCIN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRichiediPrevReManSino)
                    .HasColumnName("FLG_RICHIEDI_PREV_RE_MAN_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiediTanRateSino)
                    .HasColumnName("FLG_RICHIEDI_TAN_RATE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRichiediTestimoniSino)
                    .HasColumnName("FLG_RICHIEDI_TESTIMONI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSistemaProvenienza)
                    .HasColumnName("FLG_SISTEMA_PROVENIENZA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.RamiBilancioAmmessi)
                    .HasColumnName("RAMI_BILANCIO_AMMESSI")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabTipiEventoDenGaranzie>(entity =>
            {
                entity.HasKey(e => e.IdTipoEventoDenGaranzia)
                    .HasName("TAB_TIPI_EVENTO_DEN_GARANZIE_K01");

                entity.ToTable("TAB_TIPI_EVENTO_DEN_GARANZIE", "ICLAIMS");

                entity.Property(e => e.IdTipoEventoDenGaranzia)
                    .HasColumnName("ID_TIPO_EVENTO_DEN_GARANZIA")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdGaranzia).HasColumnName("ID_GARANZIA");

                entity.Property(e => e.IdTipoEventoDen).HasColumnName("ID_TIPO_EVENTO_DEN");
            });

            modelBuilder.Entity<TabTipiIncaricoAutosoft>(entity =>
            {
                entity.HasKey(e => e.IdTipoIncaricoAutosoft);

                entity.ToTable("TAB_TIPI_INCARICO_AUTOSOFT", "ICLAIMS");

                entity.HasIndex(e => new { e.FlgRamoBilancioWise, e.FlgTipoIncaricoWise })
                    .HasName("XX01_TAB_TIPI_INCARICO_AUTOSOFT");

                entity.Property(e => e.IdTipoIncaricoAutosoft)
                    .HasColumnName("ID_TIPO_INCARICO_AUTOSOFT")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgFirmaCai)
                    .HasColumnName("FLG_FIRMA_CAI")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoBilancioWise)
                    .HasColumnName("FLG_RAMO_BILANCIO_WISE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCard)
                    .HasColumnName("FLG_TIPO_CARD")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoIncaricoWise)
                    .HasColumnName("FLG_TIPO_INCARICO_WISE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.RamoAutosoft).HasColumnName("RAMO_AUTOSOFT");

                entity.Property(e => e.TipoIncaricoAutosoft).HasColumnName("TIPO_INCARICO_AUTOSOFT");
            });

            modelBuilder.Entity<TabTipiIncaricoFiduciari>(entity =>
            {
                entity.HasKey(e => e.IdTipoincaricofiduciario)
                    .HasName("PK__TAB_TIPI__700214557E676F33");

                entity.ToTable("TAB_TIPI_INCARICO_FIDUCIARI", "ICLAIMS");

                entity.HasIndex(e => e.IdFiduciario)
                    .HasName("XX02TAB_TIPI_INCARICO_FIDUCIA");

                entity.HasIndex(e => e.IdTipoincaricofiduciario)
                    .HasName("SYS_C0047710")
                    .IsUnique();

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX03TAB_TIPI_INCARICO_FIDUCIA");

                entity.Property(e => e.IdTipoincaricofiduciario)
                    .HasColumnName("ID_TIPOINCARICOFIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DefaultLesioniSino)
                    .HasColumnName("DEFAULT_LESIONI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DefaultReCoseSino)
                    .HasColumnName("DEFAULT_RE_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DefaultVeicoliSino)
                    .HasColumnName("DEFAULT_VEICOLI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtFineAccadimentoSinistro)
                    .HasColumnName("DT_FINE_ACCADIMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioAccadimentoSinistro)
                    .HasColumnName("DT_INIZIO_ACCADIMENTO_SINISTRO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAbilitaPortaleSino)
                    .HasColumnName("FLG_ABILITA_PORTALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAreaAppartenenza)
                    .HasColumnName("FLG_AREA_APPARTENENZA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgCardDebitore2FirmeSino)
                    .HasColumnName("FLG_CARD_DEBITORE_2_FIRME_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCoseSino)
                    .HasColumnName("FLG_COSE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFatturaFaseIncaricoSino)
                    .HasColumnName("FLG_FATTURA_FASE_INCARICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLegaleIsvapSino)
                    .HasColumnName("FLG_LEGALE_ISVAP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMacroAreaAppartenenza)
                    .HasColumnName("FLG_MACRO_AREA_APPARTENENZA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMedicoIsvapSino)
                    .HasColumnName("FLG_MEDICO_ISVAP_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPersSino)
                    .HasColumnName("FLG_PERS_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgReSino)
                    .HasColumnName("FLG_RE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRecuperoDocSino)
                    .HasColumnName("FLG_RECUPERO_DOC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgRichiediValutazioneSino)
                    .HasColumnName("FLG_RICHIEDI_VALUTAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgScaricoAutomaticoSino)
                    .HasColumnName("FLG_SCARICO_AUTOMATICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSpecificaAreaApp)
                    .HasColumnName("FLG_SPECIFICA_AREA_APP")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoIncarico)
                    .HasColumnName("FLG_TIPO_INCARICO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPerito)
                    .HasColumnName("FLG_TIPO_PERITO")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoPortalePeriti)
                    .HasColumnName("FLG_TIPO_PORTALE_PERITI")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSpesa)
                    .HasColumnName("FLG_TIPO_SPESA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoSpesaFissa)
                    .HasColumnName("FLG_TIPO_SPESA_FISSA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgVeicSino)
                    .HasColumnName("FLG_VEIC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdFiduciario)
                    .HasColumnName("ID_FIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFormula).HasColumnName("ID_FORMULA");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpCostoMedio)
                    .HasColumnName("IMP_COSTO_MEDIO")
                    .HasColumnType("numeric(18, 2)");

                entity.HasOne(d => d.IdFiduciarioNavigation)
                    .WithMany(p => p.TabTipiIncaricoFiduciari)
                    .HasForeignKey(d => d.IdFiduciario)
                    .HasConstraintName("FK__TAB_TIPI___ID_FI__68336F3E");
            });

            modelBuilder.Entity<TabTipiIncentivi>(entity =>
            {
                entity.HasKey(e => e.IdTipoIncentivo);

                entity.ToTable("TAB_TIPI_INCENTIVI", "ISUITE");

                entity.HasIndex(e => e.FlgMacroTipologiaIncentivo)
                    .HasName("XX02_TAB_TIPI_INCENTIVI");

                entity.HasIndex(e => e.FlgTipologiaIncentivo)
                    .HasName("XX01_TAB_TIPI_INCENTIVI");

                entity.Property(e => e.IdTipoIncentivo)
                    .HasColumnName("ID_TIPO_INCENTIVO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValidita)
                    .HasColumnName("DT_FINE_VALIDITA")
                    .HasColumnType("date");

                entity.Property(e => e.DtInizioValidita)
                    .HasColumnName("DT_INIZIO_VALIDITA")
                    .HasColumnType("date");

                entity.Property(e => e.FlgMacroTipologiaIncentivo)
                    .HasColumnName("FLG_MACRO_TIPOLOGIA_INCENTIVO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipologiaIncentivo)
                    .HasColumnName("FLG_TIPOLOGIA_INCENTIVO")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabTipiOggetto>(entity =>
            {
                entity.HasKey(e => e.IdTipoOggetto);

                entity.ToTable("TAB_TIPI_OGGETTO", "ISUITE");

                entity.HasIndex(e => e.FlgTipoOggetto)
                    .HasName("XX01_TAB_TIPI_OGGETTO")
                    .IsUnique();

                entity.Property(e => e.IdTipoOggetto)
                    .HasColumnName("ID_TIPO_OGGETTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgNascondiDefault)
                    .HasColumnName("FLG_NASCONDI_DEFAULT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNascondiDescTransizione)
                    .HasColumnName("FLG_NASCONDI_DESC_TRANSIZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNascondiFrizzabile)
                    .HasColumnName("FLG_NASCONDI_FRIZZABILE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNascondiRitroso)
                    .HasColumnName("FLG_NASCONDI_RITROSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNascondiStatoFinale)
                    .HasColumnName("FLG_NASCONDI_STATO_FINALE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgNascondiTipoCruscotto)
                    .HasColumnName("FLG_NASCONDI_TIPO_CRUSCOTTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabTipiOggettoCard>(entity =>
            {
                entity.HasKey(e => e.IdTipoOggettoCard);

                entity.ToTable("TAB_TIPI_OGGETTO_CARD", "ICLAIMS");

                entity.HasIndex(e => e.IdTipoOggetto)
                    .HasName("XX01_TAB_TIPI_OGGETTO_CARD");

                entity.Property(e => e.IdTipoOggettoCard)
                    .HasColumnName("ID_TIPO_OGGETTO_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgInputB2bSino)
                    .HasColumnName("FLG_INPUT_B2B_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgInputWebSino)
                    .HasColumnName("FLG_INPUT_WEB_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgMacrotipologiaCard)
                    .IsRequired()
                    .HasColumnName("FLG_MACROTIPOLOGIA_CARD")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgOutputAllegatiSino)
                    .HasColumnName("FLG_OUTPUT_ALLEGATI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgOutputDatiSino)
                    .HasColumnName("FLG_OUTPUT_DATI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCalendarioAnia)
                    .HasColumnName("FLG_TIPO_CALENDARIO_ANIA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdTipoOggetto).HasColumnName("ID_TIPO_OGGETTO");
            });

            modelBuilder.Entity<TabTipiPortalePeriti>(entity =>
            {
                entity.HasKey(e => e.KeyTipoPortalePeriti);

                entity.ToTable("TAB_TIPI_PORTALE_PERITI", "ICLAIMS");

                entity.HasIndex(e => e.FlgTipoPortalePeriti)
                    .HasName("XX02_TAB_TIPI_PORTALE_PERITI");

                entity.HasIndex(e => e.IdTipoPortalePeriti)
                    .HasName("XX01_TAB_TIPI_PORTALE_PERITI");

                entity.Property(e => e.KeyTipoPortalePeriti)
                    .HasColumnName("KEY_TIPO_PORTALE_PERITI")
                    .ValueGeneratedNever();

                entity.Property(e => e.ChiaveConfigPassword)
                    .HasColumnName("CHIAVE_CONFIG_PASSWORD")
                    .IsUnicode(false);

                entity.Property(e => e.ChiaveConfigProxyPw)
                    .HasColumnName("CHIAVE_CONFIG_PROXY_PW")
                    .IsUnicode(false);

                entity.Property(e => e.ChiaveConfigUrl)
                    .HasColumnName("CHIAVE_CONFIG_URL")
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDisabilitaFiduciarioSino)
                    .HasColumnName("FLG_DISABILITA_FIDUCIARIO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoPortalePeriti)
                    .HasColumnName("FLG_TIPO_PORTALE_PERITI")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdTipoPortalePeriti).HasColumnName("ID_TIPO_PORTALE_PERITI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NumeroTentativiAmmessi).HasColumnName("NUMERO_TENTATIVI_AMMESSI");

                entity.Property(e => e.Password)
                    .HasColumnName("PASSWORD")
                    .IsUnicode(false);

                entity.Property(e => e.ProxyPassword)
                    .HasColumnName("PROXY_PASSWORD")
                    .IsUnicode(false);

                entity.Property(e => e.ProxyUsername)
                    .HasColumnName("PROXY_USERNAME")
                    .IsUnicode(false);

                entity.Property(e => e.RamiTecniciAmmessi)
                    .HasColumnName("RAMI_TECNICI_AMMESSI")
                    .IsUnicode(false);

                entity.Property(e => e.Utenza)
                    .HasColumnName("UTENZA")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabTipiSinNetwork>(entity =>
            {
                entity.HasKey(e => e.IdTipiSinNetwork);

                entity.ToTable("TAB_TIPI_SIN_NETWORK", "ICLAIMS");

                entity.HasIndex(e => e.IdNetwork)
                    .HasName("XAK1_TAB_TIPI_SIN_NETWORK");

                entity.Property(e => e.IdTipiSinNetwork)
                    .HasColumnName("ID_TIPI_SIN_NETWORK")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodConvenzione)
                    .HasColumnName("COD_CONVENZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoSinistroCanaliz)
                    .HasColumnName("FLG_TIPO_SINISTRO_CANALIZ")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.IdNetwork).HasColumnName("ID_NETWORK");
            });

            modelBuilder.Entity<TabTipiStatiRuoli>(entity =>
            {
                entity.HasKey(e => e.IdTipoStatoRuoli)
                    .HasName("SYS_C0014943");

                entity.ToTable("TAB_TIPI_STATI_RUOLI", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX01TAB_TIPI_STATI_RUOLI");

                entity.Property(e => e.IdTipoStatoRuoli)
                    .HasColumnName("ID_TIPO_STATO_RUOLI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodTipoStatoRuoli)
                    .IsRequired()
                    .HasColumnName("COD_TIPO_STATO_RUOLI")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFinVal)
                    .HasColumnName("DT_FIN_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniVal)
                    .HasColumnName("DT_INI_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoVenditore)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_VENDITORE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");
            });

            modelBuilder.Entity<TabTipoDocumentoDossier>(entity =>
            {
                entity.HasKey(e => e.IdTipoDocumentoDossier)
                    .HasName("SYS_C0014951");

                entity.ToTable("TAB_TIPO_DOCUMENTO_DOSSIER", "ISUITE");

                entity.HasIndex(e => e.IdCausale)
                    .HasName("XX02TAB_TIPO_DOCUMENTO_DOSSIE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX01TAB_TIPO_DOCUMENTO_DOSSIE");

                entity.HasIndex(e => e.IdModello)
                    .HasName("XX04TAB_TIPO_DOCUMENTO_DOSSIE");

                entity.Property(e => e.IdTipoDocumentoDossier)
                    .HasColumnName("ID_TIPO_DOCUMENTO_DOSSIER")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodTipoDocumentoDossier)
                    .IsRequired()
                    .HasColumnName("COD_TIPO_DOCUMENTO_DOSSIER")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CorpoMail)
                    .HasColumnName("CORPO_MAIL")
                    .HasMaxLength(400)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFinVal)
                    .HasColumnName("DT_FIN_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIniVal)
                    .HasColumnName("DT_INI_VAL")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAgenziaErogazioneSino)
                    .HasColumnName("FLG_AGENZIA_EROGAZIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCcAgenziaSino)
                    .HasColumnName("FLG_CC_AGENZIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCcCaaSino)
                    .HasColumnName("FLG_CC_CAA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCcCapoAreaSino)
                    .IsRequired()
                    .HasColumnName("FLG_CC_CAPO_AREA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCcCoordReteDedSino)
                    .HasColumnName("FLG_CC_COORD_RETE_DED_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCcDipartimentoSino)
                    .HasColumnName("FLG_CC_DIPARTIMENTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCcDp2Sino)
                    .HasColumnName("FLG_CC_DP2_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCcP3Sino)
                    .HasColumnName("FLG_CC_P3_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCcRespCommSino)
                    .HasColumnName("FLG_CC_RESP_COMM_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCcRespTerrSino)
                    .HasColumnName("FLG_CC_RESP_TERR_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgContestGenericoSino)
                    .HasColumnName("FLG_CONTEST_GENERICO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDaArchiviareSino)
                    .HasColumnName("FLG_DA_ARCHIVIARE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDestAgenziaSino)
                    .HasColumnName("FLG_DEST_AGENZIA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDestCaaSino)
                    .HasColumnName("FLG_DEST_CAA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDestCapoAreaSino)
                    .HasColumnName("FLG_DEST_CAPO_AREA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDestCoordReteDedSino)
                    .HasColumnName("FLG_DEST_COORD_RETE_DED_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDestDipartimentoSino)
                    .HasColumnName("FLG_DEST_DIPARTIMENTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDestDp2Sino)
                    .HasColumnName("FLG_DEST_DP2_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDestP3Sino)
                    .HasColumnName("FLG_DEST_P3_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDestRespCommSino)
                    .HasColumnName("FLG_DEST_RESP_COMM_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDestRespTerrSino)
                    .HasColumnName("FLG_DEST_RESP_TERR_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgPresenzaAltriNodiSino)
                    .HasColumnName("FLG_PRESENZA_ALTRI_NODI_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgQualificaLivCarriera)
                    .HasColumnName("FLG_QUALIFICA_LIV_CARRIERA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoEntita)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_ENTITA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdAllegato).HasColumnName("ID_ALLEGATO");

                entity.Property(e => e.IdCausale).HasColumnName("ID_CAUSALE");

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdLivelloCarriera).HasColumnName("ID_LIVELLO_CARRIERA");

                entity.Property(e => e.IdModello).HasColumnName("ID_MODELLO");

                entity.Property(e => e.IndirizzoEmailMittente)
                    .HasColumnName("INDIRIZZO_EMAIL_MITTENTE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.OggettoMail)
                    .HasColumnName("OGGETTO_MAIL")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdCausaleNavigation)
                    .WithMany(p => p.TabTipoDocumentoDossier)
                    .HasForeignKey(d => d.IdCausale)
                    .HasConstraintName("FK__TAB_TIPO___ID_CA__1D072A30");
            });

            modelBuilder.Entity<TabTipoDocumentoDossierDes>(entity =>
            {
                entity.HasKey(e => e.IdTipodocumentodossierDes)
                    .HasName("PK_TIPODOCUMENTODOSSIER_DES");

                entity.ToTable("TAB_TIPO_DOCUMENTO_DOSSIER_DES", "ISUITE");

                entity.HasIndex(e => new { e.IdTipoDocumentoDossier, e.IdAnagrafica })
                    .HasName("XAK_TIPODOCUMENTODOSSIER_DES")
                    .IsUnique();

                entity.Property(e => e.IdTipodocumentodossierDes)
                    .HasColumnName("ID_TIPODOCUMENTODOSSIER_DES")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgCcSino)
                    .HasColumnName("FLG_CC_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDestSino)
                    .HasColumnName("FLG_DEST_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAnagrafica).HasColumnName("ID_ANAGRAFICA");

                entity.Property(e => e.IdTipoDocumentoDossier).HasColumnName("ID_TIPO_DOCUMENTO_DOSSIER");
            });

            modelBuilder.Entity<TabTolleranze>(entity =>
            {
                entity.HasKey(e => e.KeyTabTolleranze)
                    .HasName("TAB_TOLLERANZE_PK");

                entity.ToTable("TAB_TOLLERANZE", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02TAB_TOLLERANZE");

                entity.HasIndex(e => e.IdTabTolleranze)
                    .HasName("XX01TAB_TOLLERANZE");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX03TAB_TOLLERANZE");

                entity.Property(e => e.KeyTabTolleranze)
                    .HasColumnName("KEY_TAB_TOLLERANZE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCodTolleranza)
                    .IsRequired()
                    .HasColumnName("FLG_COD_TOLLERANZA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabTolleranze)
                    .HasColumnName("ID_TAB_TOLLERANZE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImportoTolleranza)
                    .HasColumnName("IMPORTO_TOLLERANZA")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TabTrackingAxa>(entity =>
            {
                entity.HasKey(e => e.IdTabTrackingAxa)
                    .HasName("PK__TAB_TRAC__774685464C98803B");

                entity.ToTable("TAB_TRACKING_AXA", "ISUITE");

                entity.HasIndex(e => e.IdTabTrackingAxa)
                    .HasName("TAB_TRACKING_AXA_PK")
                    .IsUnique();

                entity.Property(e => e.IdTabTrackingAxa)
                    .HasColumnName("ID_TAB_TRACKING_AXA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtSysElaborazione)
                    .HasColumnName("DT_SYS_ELABORAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.Esito)
                    .IsRequired()
                    .HasColumnName("ESITO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoInterfaccia)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_INTERFACCIA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.NomeFile)
                    .IsRequired()
                    .HasColumnName("NOME_FILE")
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Xml)
                    .IsRequired()
                    .HasColumnName("XML")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabTransizioniStati>(entity =>
            {
                entity.HasKey(e => e.IdTransizioneStato);

                entity.ToTable("TAB_TRANSIZIONI_STATI", "ISUITE");

                entity.HasIndex(e => e.IdStatoAttuale)
                    .HasName("XX01_TAB_TRANSIZIONI_STATI");

                entity.Property(e => e.IdTransizioneStato)
                    .HasColumnName("ID_TRANSIZIONE_STATO")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodOggetto)
                    .HasColumnName("COD_OGGETTO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodStatoAttuale)
                    .HasColumnName("COD_STATO_ATTUALE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CodStatoDestinazione)
                    .HasColumnName("COD_STATO_DESTINAZIONE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .IsUnicode(false);

                entity.Property(e => e.FlgCardNaturaleSino)
                    .HasColumnName("FLG_CARD_NATURALE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgDefaultSino)
                    .HasColumnName("FLG_DEFAULT_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgFrizzabileSino)
                    .HasColumnName("FLG_FRIZZABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgInvioMailNotificaSino)
                    .HasColumnName("FLG_INVIO_MAIL_NOTIFICA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgUsaScadenzeSino)
                    .HasColumnName("FLG_USA_SCADENZE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdStatoAttuale).HasColumnName("ID_STATO_ATTUALE");

                entity.Property(e => e.IdStatoDestinazione).HasColumnName("ID_STATO_DESTINAZIONE");

                entity.Property(e => e.IdStatoOperazione).HasColumnName("ID_STATO_OPERAZIONE");
            });

            modelBuilder.Entity<TabTransizioniStatiCard>(entity =>
            {
                entity.HasKey(e => e.IdTransizioneStatoCard);

                entity.ToTable("TAB_TRANSIZIONI_STATI_CARD", "ICLAIMS");

                entity.HasIndex(e => e.IdTransizioneStato)
                    .HasName("XX01_TAB_TRANSIZIONI_STATI_CARD");

                entity.Property(e => e.IdTransizioneStatoCard)
                    .HasColumnName("ID_TRANSIZIONE_STATO_CARD")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgDocumentazAmmessa)
                    .HasColumnName("FLG_DOCUMENTAZ_AMMESSA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRuoloCard)
                    .HasColumnName("FLG_RUOLO_CARD")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRuoloCard2)
                    .HasColumnName("FLG_RUOLO_CARD_2")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.IdTransizioneStato).HasColumnName("ID_TRANSIZIONE_STATO");
            });

            modelBuilder.Entity<TabUso>(entity =>
            {
                entity.HasKey(e => e.IdUso)
                    .HasName("PK__TAB_USO__2A8C692D5897B3C2");

                entity.ToTable("TAB_USO", "ISUITE");

                entity.HasIndex(e => e.IdClasse)
                    .HasName("XX03TAB_USO");

                entity.HasIndex(e => e.IdDescUso)
                    .HasName("XX02TAB_USO");

                entity.HasIndex(e => e.IdUso)
                    .HasName("SYS_C0046306")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdClasse, e.CodUso })
                    .HasName("XAK1TAB_USO")
                    .IsUnique();

                entity.Property(e => e.IdUso)
                    .HasColumnName("ID_USO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodUso)
                    .HasColumnName("COD_USO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescUso)
                    .HasColumnName("DESC_USO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAttestatoSino)
                    .HasColumnName("FLG_ATTESTATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCartaVerdeSino)
                    .HasColumnName("FLG_CARTA_VERDE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgClasseAnia)
                    .HasColumnName("FLG_CLASSE_ANIA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgPreventivoSino)
                    .HasColumnName("FLG_PREVENTIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgQuotazioneStoricaSino)
                    .HasColumnName("FLG_QUOTAZIONE_STORICA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSettoreAnia)
                    .HasColumnName("FLG_SETTORE_ANIA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSoloTargheProvaSino)
                    .HasColumnName("FLG_SOLO_TARGHE_PROVA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSospensioneSino)
                    .HasColumnName("FLG_SOSPENSIONE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoVeicAnia)
                    .HasColumnName("FLG_TIPO_VEIC_ANIA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgUsoAnia)
                    .HasColumnName("FLG_USO_ANIA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgVeicoloCensitoSino)
                    .HasColumnName("FLG_VEICOLO_CENSITO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdClasse)
                    .HasColumnName("ID_CLASSE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescUso)
                    .HasColumnName("ID_DESC_USO")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdClasseNavigation)
                    .WithMany(p => p.TabUso)
                    .HasForeignKey(d => d.IdClasse)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TAB_USO__ID_CLAS__1DFB4E69");
            });

            modelBuilder.Entity<TabUtentiMediatori>(entity =>
            {
                entity.HasKey(e => e.IdUtenteMediatore)
                    .HasName("SYS_C0040737");

                entity.ToTable("TAB_UTENTI_MEDIATORI", "ICLAIMS");

                entity.Property(e => e.IdUtenteMediatore)
                    .HasColumnName("ID_UTENTE_MEDIATORE")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoMediatore)
                    .HasColumnName("FLG_TIPO_MEDIATORE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");
            });

            modelBuilder.Entity<TabUtenzePortalePeriti>(entity =>
            {
                entity.HasKey(e => e.KeyUtenzaPpFiduciario);

                entity.ToTable("TAB_UTENZE_PORTALE_PERITI", "ICLAIMS");

                entity.HasIndex(e => e.IdFiduciario)
                    .HasName("XX02_TAB_UTENZE_PORTALE_PERITI");

                entity.HasIndex(e => e.IdTipoPortalePeriti)
                    .HasName("XX03_TAB_UTENZE_PORTALE_PERITI");

                entity.HasIndex(e => e.IdUtenzaPpFiduciario)
                    .HasName("XX01_TAB_UTENZE_PORTALE_PERITI");

                entity.Property(e => e.KeyUtenzaPpFiduciario)
                    .HasColumnName("KEY_UTENZA_PP_FIDUCIARIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.ChiaveConfigPassword)
                    .HasColumnName("CHIAVE_CONFIG_PASSWORD")
                    .IsUnicode(false);

                entity.Property(e => e.ChiaveConfigProxyPw)
                    .HasColumnName("CHIAVE_CONFIG_PROXY_PW")
                    .IsUnicode(false);

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdFiduciario).HasColumnName("ID_FIDUCIARIO");

                entity.Property(e => e.IdTipoPortalePeriti).HasColumnName("ID_TIPO_PORTALE_PERITI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenzaPpFiduciario).HasColumnName("ID_UTENZA_PP_FIDUCIARIO");

                entity.Property(e => e.Password)
                    .HasColumnName("PASSWORD")
                    .IsUnicode(false);

                entity.Property(e => e.ProxyPassword)
                    .HasColumnName("PROXY_PASSWORD")
                    .IsUnicode(false);

                entity.Property(e => e.ProxyUsername)
                    .HasColumnName("PROXY_USERNAME")
                    .IsUnicode(false);

                entity.Property(e => e.Username)
                    .HasColumnName("USERNAME")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TabValoreImmProv>(entity =>
            {
                entity.HasKey(e => e.IdValoreImmProv);

                entity.ToTable("TAB_VALORE_IMM_PROV", "IAGENCY");

                entity.HasIndex(e => e.IdProvincia)
                    .HasName("IDX_PROV_TAB_VALORE_IMM_PROV")
                    .IsUnique();

                entity.Property(e => e.IdValoreImmProv)
                    .HasColumnName("ID_VALORE_IMM_PROV")
                    .ValueGeneratedNever();

                entity.Property(e => e.IdProvincia).HasColumnName("ID_PROVINCIA");

                entity.Property(e => e.Valore).HasColumnName("VALORE");
            });

            modelBuilder.Entity<TabValoriMediazione>(entity =>
            {
                entity.HasKey(e => e.IdValoremediazione)
                    .HasName("SYS_C0040776");

                entity.ToTable("TAB_VALORI_MEDIAZIONE", "ICLAIMS");

                entity.Property(e => e.IdValoremediazione)
                    .HasColumnName("ID_VALOREMEDIAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodParametri)
                    .HasColumnName("COD_PARAMETRI")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.IdValuta).HasColumnName("ID_VALUTA");

                entity.Property(e => e.ImpValore)
                    .HasColumnName("IMP_VALORE")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TabValute>(entity =>
            {
                entity.HasKey(e => e.IdValuta)
                    .HasName("PK__TAB_VALU__54465B149C94A18A");

                entity.ToTable("TAB_VALUTE", "ISUITE");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02TAB_VALUTE");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("SYS_C0046312")
                    .IsUnique();

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodValuta)
                    .IsRequired()
                    .HasColumnName("COD_VALUTA")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodValutaUic)
                    .HasColumnName("COD_VALUTA_UIC")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.DtFineValid)
                    .HasColumnName("DT_FINE_VALID")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioValid)
                    .HasColumnName("DT_INIZIO_VALID")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgGestitaSino)
                    .HasColumnName("FLG_GESTITA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabVisibilitaAnagrafica>(entity =>
            {
                entity.HasKey(e => e.IdVisibilitaAnagrafica)
                    .HasName("PK__TAB_VISI__F563A61929C71098");

                entity.ToTable("TAB_VISIBILITA_ANAGRAFICA", "ISUITE");

                entity.HasIndex(e => e.IdEntitaAppartenenza)
                    .HasName("XX02TAB_VISIBILITA_ANAGRAFICA");

                entity.HasIndex(e => e.IdVisibilitaAnagrafica)
                    .HasName("PK_TAB_VISIBILITA_ANAGRAFICA")
                    .IsUnique();

                entity.HasIndex(e => new { e.FlgTipoRuoloUtente, e.IdEntitaAppartenenza })
                    .HasName("XAK1_TAB_VISIBILITA_ANAGRAFICA")
                    .IsUnique();

                entity.Property(e => e.IdVisibilitaAnagrafica)
                    .HasColumnName("ID_VISIBILITA_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgCreaPrivataSino)
                    .IsRequired()
                    .HasColumnName("FLG_CREA_PRIVATA_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLeggiRiservateSino)
                    .IsRequired()
                    .HasColumnName("FLG_LEGGI_RISERVATE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRuoloUtente)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_RUOLO_UTENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdEntitaAppartenenza)
                    .HasColumnName("ID_ENTITA_APPARTENENZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TabZoneCoperturaPeriti>(entity =>
            {
                entity.HasKey(e => e.IdZonacopertura)
                    .HasName("PK__TAB_ZONE__210787A52E426407");

                entity.ToTable("TAB_ZONE_COPERTURA_PERITI", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04TAB_ZONE_COPERTURA_PERITI");

                entity.HasIndex(e => e.IdComune)
                    .HasName("XX02TAB_ZONE_COPERTURA_PERITI");

                entity.HasIndex(e => e.IdFiduciario)
                    .HasName("XX03TAB_ZONE_COPERTURA_PERITI");

                entity.HasIndex(e => e.IdZonacopertura)
                    .HasName("SYS_C0047714")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCompagnia, e.IdFiduciario, e.IdComune, e.Cap })
                    .HasName("XTAB_ZONE_COPERTURA_PERITI")
                    .IsUnique();

                entity.Property(e => e.IdZonacopertura)
                    .HasColumnName("ID_ZONACOPERTURA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Cap)
                    .HasColumnName("CAP")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAbilitatoAutoSino)
                    .HasColumnName("FLG_ABILITATO_AUTO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgAbilitatoReSino)
                    .HasColumnName("FLG_ABILITATO_RE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdComune)
                    .HasColumnName("ID_COMUNE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFiduciario)
                    .HasColumnName("ID_FIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdFiduciarioNavigation)
                    .WithMany(p => p.TabZoneCoperturaPeriti)
                    .HasForeignKey(d => d.IdFiduciario)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TAB_ZONE___ID_FI__69279377");
            });

            modelBuilder.Entity<Test1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("test1");

                entity.Property(e => e.CodAgenzia)
                    .HasColumnName("COD_AGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodCompagnia)
                    .HasColumnName("COD_COMPAGNIA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore)
                    .HasColumnName("COD_PRODUTTORE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodProduttore4)
                    .HasColumnName("COD_PRODUTTORE4")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodSubagenzia)
                    .HasColumnName("COD_SUBAGENZIA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TitAgenzie>(entity =>
            {
                entity.HasKey(e => e.KeyTitAgenzia)
                    .HasName("SYS_C0061154");

                entity.ToTable("TIT_AGENZIE", "IAGENCY");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX03TIT_AGENZIE");

                entity.HasIndex(e => e.IdTitAgenzia)
                    .HasName("XX01TIT_AGENZIE");

                entity.HasIndex(e => e.IdTitTitolo)
                    .HasName("XX02TIT_AGENZIE");

                entity.Property(e => e.KeyTitAgenzia)
                    .HasColumnName("KEY_TIT_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitAgenzia)
                    .HasColumnName("ID_TIT_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTitolo)
                    .HasColumnName("ID_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Livello)
                    .HasColumnName("LIVELLO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TitEsiti>(entity =>
            {
                entity.HasKey(e => e.KeyTitEsito)
                    .HasName("SYS_C0061158");

                entity.ToTable("TIT_ESITI", "IAGENCY");

                entity.HasIndex(e => new { e.IdTitEsito, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX01TIT_ESITI");

                entity.HasIndex(e => new { e.IdTitTitolo, e.DtStoScadenzaFis, e.DtStoEffettoFis })
                    .HasName("XX02TIT_ESITI");

                entity.HasIndex(e => new { e.IdTitTitolo, e.DtStoScadenzaFis, e.DtSysEsito, e.FlgTipoEsito, e.IdAgenziaEsito, e.IdAgenziaEmesso, e.IdCntFogliocassa })
                    .HasName("XX03TIT_ESITI");

                entity.Property(e => e.KeyTitEsito)
                    .HasColumnName("KEY_TIT_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CausaleRiconciliazione)
                    .HasColumnName("CAUSALE_RICONCILIAZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CausaleRiconciliazioneProv)
                    .HasColumnName("CAUSALE_RICONCILIAZIONE_PROV")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CompetenzaEsito)
                    .HasColumnName("COMPETENZA_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtComunicazioneCop)
                    .HasColumnName("DT_COMUNICAZIONE_COP")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEsito)
                    .HasColumnName("DT_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysEsito)
                    .HasColumnName("DT_SYS_ESITO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgEsitoContabileSino)
                    .HasColumnName("FLG_ESITO_CONTABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgMezzoPagamento)
                    .HasColumnName("FLG_MEZZO_PAGAMENTO")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgSistemaProvenienza)
                    .HasColumnName("FLG_SISTEMA_PROVENIENZA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoEsito)
                    .HasColumnName("FLG_TIPO_ESITO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.HhmmEsito)
                    .HasColumnName("HHMM_ESITO")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAgenziaEmesso)
                    .HasColumnName("ID_AGENZIA_EMESSO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAgenziaEsito)
                    .HasColumnName("ID_AGENZIA_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCntFogliocassa)
                    .HasColumnName("ID_CNT_FOGLIOCASSA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTabMotivoStorno)
                    .HasColumnName("ID_TAB_MOTIVO_STORNO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitEsito)
                    .HasColumnName("ID_TIT_ESITO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitPagatore)
                    .HasColumnName("ID_TIT_PAGATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTitolo)
                    .HasColumnName("ID_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpIncassato)
                    .HasColumnName("IMP_INCASSATO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NRifEsterno)
                    .HasColumnName("N_RIF_ESTERNO")
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TitEventi>(entity =>
            {
                entity.HasKey(e => e.KeyTitEvento)
                    .HasName("SYS_C0061165");

                entity.ToTable("TIT_EVENTI", "IAGENCY");

                entity.HasIndex(e => e.IdTitTitolo)
                    .HasName("XX01TIT_EVENTI");

                entity.Property(e => e.KeyTitEvento)
                    .HasColumnName("KEY_TIT_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtSysEvento)
                    .HasColumnName("DT_SYS_EVENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoCaricamento)
                    .HasColumnName("FLG_TIPO_CARICAMENTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoEvento)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_EVENTO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdTitTitolo)
                    .HasColumnName("ID_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Versione)
                    .IsRequired()
                    .HasColumnName("VERSIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<TitGaranzie>(entity =>
            {
                entity.HasKey(e => e.KeyTitGaranzia)
                    .HasName("SYS_C0061167");

                entity.ToTable("TIT_GARANZIE", "IAGENCY");

                entity.HasIndex(e => e.IdPrGarScomposizione)
                    .HasName("XX04TIT_GARANZIE");

                entity.HasIndex(e => e.IdPrGaranzia)
                    .HasName("XX02TIT_GARANZIE");

                entity.HasIndex(e => e.IdTitGaranzia)
                    .HasName("XX01TIT_GARANZIE");

                entity.HasIndex(e => e.IdTitTitolo)
                    .HasName("XX03TIT_GARANZIE");

                entity.Property(e => e.KeyTitGaranzia)
                    .HasColumnName("KEY_TIT_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtProdotto)
                    .HasColumnName("DT_PRODOTTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaGaranzia)
                    .HasColumnName("DT_SCADENZA_GARANZIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCatTariffa)
                    .HasColumnName("FLG_CAT_TARIFFA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgRamoBilancio)
                    .HasColumnName("FLG_RAMO_BILANCIO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdPrGarScomposizione)
                    .HasColumnName("ID_PR_GAR_SCOMPOSIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrGaranzia)
                    .HasColumnName("ID_PR_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitGaranzia)
                    .HasColumnName("ID_TIT_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTitolo)
                    .HasColumnName("ID_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccessori)
                    .HasColumnName("IMP_ACCESSORI")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAntiracket)
                    .HasColumnName("IMP_ANTIRACKET")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpDetraibile)
                    .HasColumnName("IMP_DETRAIBILE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpFranchigiaAgg)
                    .HasColumnName("IMP_FRANCHIGIA_AGG")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpNetto)
                    .HasColumnName("IMP_NETTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpSsn)
                    .HasColumnName("IMP_SSN")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.PctAntiracket)
                    .HasColumnName("PCT_ANTIRACKET")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctFvs)
                    .HasColumnName("PCT_FVS")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctSsn)
                    .HasColumnName("PCT_SSN")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctTasse)
                    .HasColumnName("PCT_TASSE")
                    .HasColumnType("numeric(10, 5)");

                entity.Property(e => e.PctVariazionePremio)
                    .HasColumnName("PCT_VARIAZIONE_PREMIO")
                    .HasColumnType("numeric(10, 5)");
            });

            modelBuilder.Entity<TitPagatore>(entity =>
            {
                entity.HasKey(e => e.KeyTitPagatore)
                    .HasName("PK_TIT_PAGATARE");

                entity.ToTable("TIT_PAGATORE", "IAGENCY");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX02TIT_PAGATORE");

                entity.HasIndex(e => e.IdTitPagatore)
                    .HasName("XX01TIT_PAGATORE");

                entity.Property(e => e.KeyTitPagatore)
                    .HasColumnName("KEY_TIT_PAGATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgLegameContraente)
                    .HasColumnName("FLG_LEGAME_CONTRAENTE")
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitPagatore)
                    .HasColumnName("ID_TIT_PAGATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TitProvvigioni>(entity =>
            {
                entity.HasKey(e => e.KeyTitProvvigione)
                    .HasName("SYS_C0061172");

                entity.ToTable("TIT_PROVVIGIONI", "IAGENCY");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02TIT_PROVVIGIONI");

                entity.HasIndex(e => e.IdTitGaranzia)
                    .HasName("XX03TIT_PROVVIGIONI");

                entity.HasIndex(e => e.IdTitProvvigione)
                    .HasName("XX01TIT_PROVVIGIONI");

                entity.HasIndex(e => e.IdTitTitolo)
                    .HasName("XX04TIT_PROVVIGIONI");

                entity.Property(e => e.KeyTitProvvigione)
                    .HasColumnName("KEY_TIT_PROVVIGIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitGaranzia)
                    .HasColumnName("ID_TIT_GARANZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitProvvigione)
                    .HasColumnName("ID_TIT_PROVVIGIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTitolo).HasColumnName("ID_TIT_TITOLO");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpAccAcquisto)
                    .HasColumnName("IMP_ACC_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpAccIncasso)
                    .HasColumnName("IMP_ACC_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarAcquisto)
                    .HasColumnName("IMP_GAR_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpGarIncasso)
                    .HasColumnName("IMP_GAR_INCASSO")
                    .HasColumnType("numeric(18, 2)");
            });

            modelBuilder.Entity<TitRateDati>(entity =>
            {
                entity.HasKey(e => e.KeyTitRateDati);

                entity.ToTable("TIT_RATE_DATI", "IAGENCY");

                entity.HasIndex(e => new { e.IdTitRateDati, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX01TIT_RATE_DATI");

                entity.Property(e => e.KeyTitRateDati)
                    .HasColumnName("KEY_TIT_RATE_DATI")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtInizioRateizzazione)
                    .HasColumnName("DT_INIZIO_RATEIZZAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoRateizzazione)
                    .HasColumnName("FLG_TIPO_RATEIZZAZIONE")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdContocorrenteAccredito).HasColumnName("ID_CONTOCORRENTE_ACCREDITO");

                entity.Property(e => e.IdContocorrentePagatore).HasColumnName("ID_CONTOCORRENTE_PAGATORE");

                entity.Property(e => e.IdPagatore).HasColumnName("ID_PAGATORE");

                entity.Property(e => e.IdTitRateDati).HasColumnName("ID_TIT_RATE_DATI");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.NumeroRate).HasColumnName("NUMERO_RATE");
            });

            modelBuilder.Entity<TitRatePremio>(entity =>
            {
                entity.HasKey(e => e.KeyTitRatePremio);

                entity.ToTable("TIT_RATE_PREMIO", "IAGENCY");

                entity.HasIndex(e => new { e.DtScadenzaRata, e.FlgStatoRata, e.DtStoScadenzaFis })
                    .HasName("XX03TIT_RATE_PREMIO");

                entity.HasIndex(e => new { e.IdTitRateDati, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX02TIT_RATE_PREMIO");

                entity.HasIndex(e => new { e.IdTitRatePremio, e.DtStoEffettoFis, e.DtStoScadenzaFis })
                    .HasName("XX01TIT_RATE_PREMIO");

                entity.Property(e => e.KeyTitRatePremio)
                    .HasColumnName("KEY_TIT_RATE_PREMIO")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtEffettoRata)
                    .HasColumnName("DT_EFFETTO_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEsitoRata)
                    .HasColumnName("DT_ESITO_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaRata)
                    .HasColumnName("DT_SCADENZA_RATA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgStatoRata)
                    .HasColumnName("FLG_STATO_RATA")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdTitRateDati).HasColumnName("ID_TIT_RATE_DATI");

                entity.Property(e => e.IdTitRatePremio).HasColumnName("ID_TIT_RATE_PREMIO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.Importo)
                    .HasColumnName("IMPORTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.NumeroRata).HasColumnName("NUMERO_RATA");
            });

            modelBuilder.Entity<TitTipoTitolo>(entity =>
            {
                entity.HasKey(e => e.IdTitTipoTitolo)
                    .HasName("SYS_C0061174");

                entity.ToTable("TIT_TIPO_TITOLO", "IAGENCY");

                entity.HasIndex(e => e.CodTipoTitolo)
                    .HasName("XAK1TIT_TIPO_TITOLO")
                    .IsUnique();

                entity.HasIndex(e => e.IdDescTipoTitolo)
                    .HasName("XX02TIT_TIPO_TITOLO");

                entity.Property(e => e.IdTitTipoTitolo)
                    .HasColumnName("ID_TIT_TIPO_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodTipoTitolo)
                    .HasColumnName("COD_TIPO_TITOLO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.DescTipoTitolo)
                    .HasColumnName("DESC_TIPO_TITOLO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgAnnullabileSino)
                    .HasColumnName("FLG_ANNULLABILE_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgCategoriaEmesso)
                    .HasColumnName("FLG_CATEGORIA_EMESSO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescTipoTitolo)
                    .HasColumnName("ID_DESC_TIPO_TITOLO")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<TitTitoli>(entity =>
            {
                entity.HasKey(e => e.KeyTitTitolo)
                    .HasName("SYS_C0061178");

                entity.ToTable("TIT_TITOLI", "IAGENCY");

                entity.HasIndex(e => e.IdAgenzia)
                    .HasName("XX02TIT_TITOLI");

                entity.HasIndex(e => e.IdAnagrafica)
                    .HasName("XX05TIT_TITOLI");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03TIT_TITOLI");

                entity.HasIndex(e => e.IdPolizza)
                    .HasName("XX09TIT_TITOLI");

                entity.HasIndex(e => e.IdPrProdotto)
                    .HasName("XX06TIT_TITOLI");

                entity.HasIndex(e => e.IdPrRamo)
                    .HasName("XX08TIT_TITOLI");

                entity.HasIndex(e => e.IdTitTipoTitolo)
                    .HasName("XX04TIT_TITOLI");

                entity.HasIndex(e => e.IdValuta)
                    .HasName("XX07TIT_TITOLI");

                entity.HasIndex(e => e.KeyPolEvento)
                    .HasName("XX10TIT_TITOLI");

                entity.HasIndex(e => new { e.IdCompagnia, e.CompetenzaEmesso })
                    .HasName("K02_TIT_TITOLI");

                entity.HasIndex(e => new { e.IdCompagnia, e.NPolizza })
                    .HasName("XX12TIT_TITOLI");

                entity.HasIndex(e => new { e.IdTitTitolo, e.DtStoScadenzaFis, e.IdCompagnia })
                    .HasName("XX01TIT_TITOLI");

                entity.HasIndex(e => new { e.IdTitRateDati, e.DtStoScadenzaFis, e.FlgStatoTitolo, e.FlgCondizioneTitolo })
                    .HasName("XX11TIT_TITOLI");

                entity.Property(e => e.KeyTitTitolo)
                    .HasColumnName("KEY_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CompetenzaEmesso)
                    .HasColumnName("COMPETENZA_EMESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtComunicazioneCop)
                    .HasColumnName("DT_COMUNICAZIONE_COP")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCopertura)
                    .HasColumnName("DT_COPERTURA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtEffetto)
                    .HasColumnName("DT_EFFETTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtProdotto)
                    .HasColumnName("DT_PRODOTTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScaricoContabile)
                    .HasColumnName("DT_SCARICO_CONTABILE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStato)
                    .HasColumnName("DT_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoEffettoFis)
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaFis)
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtSysEmesso)
                    .HasColumnName("DT_SYS_EMESSO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgCondizioneTitolo)
                    .HasColumnName("FLG_CONDIZIONE_TITOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgModProv)
                    .HasColumnName("FLG_MOD_PROV")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgSistemaProvenienza)
                    .HasColumnName("FLG_SISTEMA_PROVENIENZA")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoTitolo)
                    .HasColumnName("FLG_STATO_TITOLO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAgenzia)
                    .HasColumnName("ID_AGENZIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdAnagrafica)
                    .HasColumnName("ID_ANAGRAFICA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPnaFranchigiaAgg).HasColumnName("ID_PNA_FRANCHIGIA_AGG");

                entity.Property(e => e.IdPolizza)
                    .HasColumnName("ID_POLIZZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrProdotto)
                    .HasColumnName("ID_PR_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdPrRamo)
                    .HasColumnName("ID_PR_RAMO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitRateDati).HasColumnName("ID_TIT_RATE_DATI");

                entity.Property(e => e.IdTitTipoTitolo)
                    .HasColumnName("ID_TIT_TIPO_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdTitTitolo)
                    .HasColumnName("ID_TIT_TITOLO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdValuta)
                    .HasColumnName("ID_VALUTA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ImpFranchigiaAgg)
                    .HasColumnName("IMP_FRANCHIGIA_AGG")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpLordo)
                    .HasColumnName("IMP_LORDO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpLordo100)
                    .HasColumnName("IMP_LORDO_100")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvAcquisto)
                    .HasColumnName("IMP_PROV_ACQUISTO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpProvIncasso)
                    .HasColumnName("IMP_PROV_INCASSO")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.ImpTasse)
                    .HasColumnName("IMP_TASSE")
                    .HasColumnType("numeric(18, 2)");

                entity.Property(e => e.KeyPolEvento)
                    .HasColumnName("KEY_POL_EVENTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NPolizza)
                    .HasColumnName("N_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NProposta)
                    .HasColumnName("N_PROPOSTA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NRifEsterno)
                    .HasColumnName("N_RIF_ESTERNO")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.PrgAppendice).HasColumnName("PRG_APPENDICE");

                entity.Property(e => e.ProvCalcoloTasseRca)
                    .HasColumnName("PROV_CALCOLO_TASSE_RCA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.HasOne(d => d.IdPolizzaNavigation)
                    .WithMany(p => p.TitTitoli)
                    .HasForeignKey(d => d.IdPolizza)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__TIT_TITOL__ID_PO__63CEACD4");

                entity.HasOne(d => d.IdTitTipoTitoloNavigation)
                    .WithMany(p => p.TitTitoli)
                    .HasForeignKey(d => d.IdTitTipoTitolo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TIT_TITOL__ID_TI__64C2D10D");

                entity.HasOne(d => d.KeyPolEventoNavigation)
                    .WithMany(p => p.TitTitoli)
                    .HasForeignKey(d => d.KeyPolEvento)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TIT_TITOL__KEY_P__62DA889B");
            });

            modelBuilder.Entity<TmpCacheWebapi>(entity =>
            {
                entity.HasKey(e => e.KeyCache)
                    .HasName("SYS_KEY_CACHE");

                entity.ToTable("TMP_CACHE_WEBAPI", "ISUITE");

                entity.HasIndex(e => e.KeyCache)
                    .HasName("IDX_KEY_CACHE");

                entity.Property(e => e.KeyCache)
                    .HasColumnName("KEY_CACHE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.TimestampCache)
                    .HasColumnName("TIMESTAMP_CACHE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.ValueCache)
                    .HasColumnName("VALUE_CACHE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<UciFlussiSospesi>(entity =>
            {
                entity.HasKey(e => e.IdFlussoUci);

                entity.ToTable("UCI_FLUSSI_SOSPESI", "ICLAIMS");

                entity.Property(e => e.IdFlussoUci)
                    .HasColumnName("ID_FLUSSO_UCI")
                    .ValueGeneratedNever();

                entity.Property(e => e.AnnoEsercizio).HasColumnName("ANNO_ESERCIZIO");

                entity.Property(e => e.CapAssicurato)
                    .HasColumnName("CAP_ASSICURATO")
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CapControparte)
                    .HasColumnName("CAP_CONTROPARTE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CapLegaleControparte)
                    .HasColumnName("CAP_LEGALE_CONTROPARTE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceBureau)
                    .HasColumnName("CODICE_BUREAU")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceCompagniaIncaricata)
                    .HasColumnName("CODICE_COMPAGNIA_INCARICATA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceCompagniaMandataria)
                    .HasColumnName("CODICE_COMPAGNIA_MANDATARIA")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceNazioneAssicurato)
                    .HasColumnName("CODICE_NAZIONE_ASSICURATO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceNazioneControparte)
                    .HasColumnName("CODICE_NAZIONE_CONTROPARTE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.CodiceTipoSinistro)
                    .HasColumnName("CODICE_TIPO_SINISTRO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.DescCompagniaIncaricata)
                    .HasColumnName("DESC_COMPAGNIA_INCARICATA")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DescCompagniaMandataria)
                    .HasColumnName("DESC_COMPAGNIA_MANDATARIA")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DescrizioneBureau)
                    .HasColumnName("DESCRIZIONE_BUREAU")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.DtAbbinamento)
                    .HasColumnName("DT_ABBINAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtAvvenimento)
                    .HasColumnName("DT_AVVENIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtCaricamento)
                    .HasColumnName("DT_CARICAMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtDenuncia)
                    .HasColumnName("DT_DENUNCIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtIncarico)
                    .HasColumnName("DT_INCARICO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtRicRichiestaUci)
                    .HasColumnName("DT_RIC_RICHIESTA_UCI")
                    .HasColumnType("datetime");

                entity.Property(e => e.EmailLegaleControparte)
                    .HasColumnName("EMAIL_LEGALE_CONTROPARTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdEntitaCoinvolta).HasColumnName("ID_ENTITA_COINVOLTA");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IndirizzoAssicurato)
                    .HasColumnName("INDIRIZZO_ASSICURATO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IndirizzoControparte)
                    .HasColumnName("INDIRIZZO_CONTROPARTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.IndirizzoLegaleControparte)
                    .HasColumnName("INDIRIZZO_LEGALE_CONTROPARTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.LocalitaAssicurato)
                    .HasColumnName("LOCALITA_ASSICURATO")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.LocalitaControparte)
                    .HasColumnName("LOCALITA_CONTROPARTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.LocalitaLegaleControparte)
                    .HasColumnName("LOCALITA_LEGALE_CONTROPARTE")
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.LocalitaSinistro)
                    .HasColumnName("LOCALITA_SINISTRO")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.MotivoScarto)
                    .HasColumnName("MOTIVO_SCARTO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.NSinistro)
                    .HasColumnName("N_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.NazioneLegaleControparte)
                    .HasColumnName("NAZIONE_LEGALE_CONTROPARTE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.NomeAssicurato)
                    .HasColumnName("NOME_ASSICURATO")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.NomeControparte)
                    .HasColumnName("NOME_CONTROPARTE")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.NomeLegaleControparte)
                    .HasColumnName("NOME_LEGALE_CONTROPARTE")
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.NumeroProgressivoControparte)
                    .HasColumnName("NUMERO_PROGRESSIVO_CONTROPARTE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.PraticaLegaleControparte)
                    .HasColumnName("PRATICA_LEGALE_CONTROPARTE")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ProvinciaAssicurato)
                    .HasColumnName("PROVINCIA_ASSICURATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.ProvinciaLegaleControparte)
                    .HasColumnName("PROVINCIA_LEGALE_CONTROPARTE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SiglaNazioneControparte)
                    .HasColumnName("SIGLA_NAZIONE_CONTROPARTE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.SiglaOperatoreUci)
                    .HasColumnName("SIGLA_OPERATORE_UCI")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.SiglaProvinciaControparte)
                    .HasColumnName("SIGLA_PROVINCIA_CONTROPARTE")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.SiglaTargaAssicurato)
                    .HasColumnName("SIGLA_TARGA_ASSICURATO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.SiglaTargaControparte)
                    .HasColumnName("SIGLA_TARGA_CONTROPARTE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.StatoAssicurato)
                    .HasColumnName("STATO_ASSICURATO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.TargaAssicurato)
                    .HasColumnName("TARGA_ASSICURATO")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TargaControparte)
                    .HasColumnName("TARGA_CONTROPARTE")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.TelefonoLegaleControparte)
                    .HasColumnName("TELEFONO_LEGALE_CONTROPARTE")
                    .HasMaxLength(17)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<UtenzeIdm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("UTENZE_IDM", "ISUITE");

                entity.HasIndex(e => e.IdUtente)
                    .HasName("K02_UTENZE_IDM");

                entity.HasIndex(e => e.IdUtentewise)
                    .HasName("K01_UTENZE_IDM");

                entity.HasIndex(e => e.KeyUtenzeidm)
                    .HasName("PK_UTENZE_IDM_STO")
                    .IsUnique();

                entity.Property(e => e.DtStoEffettoFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_EFFETTO_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoEffettoLog)
                    .HasColumnName("DT_STO_EFFETTO_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtStoScadenzaFis)
                    .IsRequired()
                    .HasColumnName("DT_STO_SCADENZA_FIS")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DtStoScadenzaLog)
                    .HasColumnName("DT_STO_SCADENZA_LOG")
                    .HasColumnType("datetime");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtentewise).HasColumnName("ID_UTENTEWISE");

                entity.Property(e => e.IdUtenzeidm).HasColumnName("ID_UTENZEIDM");

                entity.Property(e => e.Idmsystem)
                    .IsRequired()
                    .HasColumnName("IDMSYSTEM")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Idmuser)
                    .IsRequired()
                    .HasColumnName("IDMUSER")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.KeyUtenzeidm).HasColumnName("KEY_UTENZEIDM");
            });

            modelBuilder.Entity<WfAttivita>(entity =>
            {
                entity.HasKey(e => e.IdAttivita)
                    .HasName("PK__WF_ATTIV__F7A83FC651469A84");

                entity.ToTable("WF_ATTIVITA", "ICLAIMS");

                entity.HasIndex(e => e.IdAttivita)
                    .HasName("SYS_C0047716")
                    .IsUnique();

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04WF_ATTIVITA");

                entity.HasIndex(e => e.IdOggetto)
                    .HasName("XX02WF_ATTIVITA");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03WF_ATTIVITA");

                entity.HasIndex(e => new { e.IdCompagnia, e.FlgTipoAttivita, e.DtFineAttivita, e.IdUtenteTrattazione })
                    .HasName("XX06WF_ATTIVITA");

                entity.Property(e => e.IdAttivita)
                    .HasColumnName("ID_ATTIVITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtEffettoAttivita)
                    .HasColumnName("DT_EFFETTO_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineAttivita)
                    .HasColumnName("DT_FINE_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioAttivita)
                    .HasColumnName("DT_INIZIO_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoAttivita)
                    .HasColumnName("FLG_STATO_ATTIVITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAttivita)
                    .HasColumnName("FLG_TIPO_ATTIVITA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAttivitaOrigine)
                    .HasColumnName("ID_ATTIVITA_ORIGINE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdGruppoTrattazione)
                    .HasColumnName("ID_GRUPPO_TRATTAZIONE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdOggetto)
                    .HasColumnName("ID_OGGETTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtenteTrattazione)
                    .HasColumnName("ID_UTENTE_TRATTAZIONE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WfAttivitaAperte>(entity =>
            {
                entity.HasKey(e => e.IdAttivita)
                    .HasName("PK__WF_ATTIV__F7A83FC626742679");

                entity.ToTable("WF_ATTIVITA_APERTE", "ICLAIMS");

                entity.HasIndex(e => e.IdAttivita)
                    .HasName("SYS_C0033878")
                    .IsUnique();

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04WF_ATTIVITA_APERTE");

                entity.HasIndex(e => e.IdOggetto)
                    .HasName("XX02WF_ATTIVITA_APERTE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03WF_ATTIVITA_APERTE");

                entity.HasIndex(e => new { e.DtFineAttivita, e.FlgTipoAttivita, e.IdUtenteTrattazione })
                    .HasName("XX05WF_ATTIVITA_APERTE");

                entity.Property(e => e.IdAttivita)
                    .HasColumnName("ID_ATTIVITA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.DtEffettoAttivita)
                    .HasColumnName("DT_EFFETTO_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineAttivita)
                    .HasColumnName("DT_FINE_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioAttivita)
                    .HasColumnName("DT_INIZIO_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoAttivita)
                    .HasColumnName("FLG_STATO_ATTIVITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAttivita)
                    .HasColumnName("FLG_TIPO_ATTIVITA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAttivitaOrigine)
                    .HasColumnName("ID_ATTIVITA_ORIGINE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdGruppoTrattazione)
                    .HasColumnName("ID_GRUPPO_TRATTAZIONE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdOggetto)
                    .HasColumnName("ID_OGGETTO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.IdUtenteTrattazione)
                    .HasColumnName("ID_UTENTE_TRATTAZIONE")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WfAttivitaOperazioni>(entity =>
            {
                entity.HasKey(e => e.IdAttivitaOperazioni)
                    .HasName("PK__WF_ATTIV__545DD824BFA0F38D");

                entity.ToTable("WF_ATTIVITA_OPERAZIONI", "ICLAIMS");

                entity.Property(e => e.IdAttivitaOperazioni)
                    .HasColumnName("ID_ATTIVITA_OPERAZIONI")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.CodOperazione)
                    .HasColumnName("COD_OPERAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoAttivita)
                    .HasColumnName("FLG_STATO_ATTIVITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAttivita)
                    .HasColumnName("FLG_TIPO_ATTIVITA")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WfOggettiStati>(entity =>
            {
                entity.HasKey(e => e.IdOggettiStati)
                    .HasName("PK__WF_OGGET__2703684C4357C530");

                entity.ToTable("WF_OGGETTI_STATI", "ICLAIMS");

                entity.HasIndex(e => e.IdDescrizione)
                    .HasName("XX02WF_OGGETTI_STATI");

                entity.HasIndex(e => e.IdOggettiStati)
                    .HasName("SYS_C0047718")
                    .IsUnique();

                entity.HasIndex(e => new { e.FlgTipoOggetto, e.FlgTipoStato })
                    .HasName("XWF_OGGETTI_STATI")
                    .IsUnique();

                entity.Property(e => e.IdOggettiStati)
                    .HasColumnName("ID_OGGETTI_STATI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoStato)
                    .HasColumnName("FLG_TIPO_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgUtlimoStatoSino)
                    .HasColumnName("FLG_UTLIMO_STATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.UrlIconaPerMonitor)
                    .HasColumnName("URL_ICONA_PER_MONITOR")
                    .HasMaxLength(300)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WfOperazioni>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("WF_OPERAZIONI", "ICLAIMS");

                entity.HasIndex(e => e.IdOperazione)
                    .HasName("WF_OPERAZIONI_PK")
                    .IsUnique();

                entity.Property(e => e.CodOperazione)
                    .HasColumnName("COD_OPERAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdDescrizione)
                    .HasColumnName("ID_DESCRIZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdOperazione)
                    .HasColumnName("ID_OPERAZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Modulo)
                    .HasColumnName("MODULO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Parametri)
                    .HasColumnName("PARAMETRI")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WfRaccordoAttivitaQuery>(entity =>
            {
                entity.HasKey(e => e.IdAttivitaQuery);

                entity.ToTable("WF_RACCORDO_ATTIVITA_QUERY", "ICLAIMS");

                entity.HasIndex(e => e.FlgTipoAttivita)
                    .HasName("XX01_WF_RACCORDO_ATTIVITA_QUERY")
                    .IsUnique();

                entity.Property(e => e.IdAttivitaQuery)
                    .HasColumnName("ID_ATTIVITA_QUERY")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoAttivita)
                    .HasColumnName("FLG_TIPO_ATTIVITA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdTabQuery).HasColumnName("ID_TAB_QUERY");
            });

            modelBuilder.Entity<WfScadenzario>(entity =>
            {
                entity.HasKey(e => e.IdScadenzario)
                    .HasName("PK__WF_SCADE__8157AA2AE36223DB");

                entity.ToTable("WF_SCADENZARIO", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX03WF_SCADENZARIO");

                entity.HasIndex(e => e.IdOggetto)
                    .HasName("XX02WF_SCADENZARIO");

                entity.HasIndex(e => e.IdScadenzario)
                    .HasName("SYS_C0047720")
                    .IsUnique();

                entity.Property(e => e.IdScadenzario)
                    .HasColumnName("ID_SCADENZARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DtInserimentoPromemoria)
                    .HasColumnName("DT_INSERIMENTO_PROMEMORIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenzaPromemoria)
                    .HasColumnName("DT_SCADENZA_PROMEMORIA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgAttivoSino)
                    .HasColumnName("FLG_ATTIVO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoAlert)
                    .HasColumnName("FLG_TIPO_ALERT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdOggetto)
                    .HasColumnName("ID_OGGETTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<WfScadenze>(entity =>
            {
                entity.HasKey(e => e.IdScadenza)
                    .HasName("PK__WF_SCADE__808C67E68A157016");

                entity.ToTable("WF_SCADENZE", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02WF_SCADENZE");

                entity.HasIndex(e => e.IdScadenza)
                    .HasName("SYS_C0047724")
                    .IsUnique();

                entity.HasIndex(e => new { e.IdCompagnia, e.FlgTipoStato, e.FlgTipoOggetto })
                    .HasName("XWF_SCADENZE")
                    .IsUnique();

                entity.Property(e => e.IdScadenza)
                    .HasColumnName("ID_SCADENZA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.FlgTipoAlert)
                    .HasColumnName("FLG_TIPO_ALERT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoStato)
                    .HasColumnName("FLG_TIPO_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.GiorniMaxDisponibili)
                    .HasColumnName("GIORNI_MAX_DISPONIBILI")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.GiorniPreAlert)
                    .HasColumnName("GIORNI_PRE_ALERT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<WfScadenzeAlert>(entity =>
            {
                entity.HasKey(e => e.IdScadenzaAlert)
                    .HasName("PK__WF_SCADE__F8AC0DB40500F4DB");

                entity.ToTable("WF_SCADENZE_ALERT", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02WF_SCADENZE_ALERT");

                entity.HasIndex(e => e.IdScadenzaAlert)
                    .HasName("XWF_SCADENZE_ALERT")
                    .IsUnique();

                entity.Property(e => e.IdScadenzaAlert)
                    .HasColumnName("ID_SCADENZA_ALERT")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodOperazione)
                    .HasColumnName("COD_OPERAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLivelloAlert)
                    .HasColumnName("FLG_LIVELLO_ALERT")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAttivitaOrigine)
                    .HasColumnName("FLG_TIPO_ATTIVITA_ORIGINE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.GiorniAlert).HasColumnName("GIORNI_ALERT");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");
            });

            modelBuilder.Entity<WfStati>(entity =>
            {
                entity.HasKey(e => e.IdStato)
                    .HasName("PK__WF_STATI__E7400904CBD531E6");

                entity.ToTable("WF_STATI", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04WF_STATI");

                entity.HasIndex(e => e.IdOggetto)
                    .HasName("XX02WF_STATI");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03WF_STATI");

                entity.HasIndex(e => e.IdStato)
                    .HasName("SYS_C0047726")
                    .IsUnique();

                entity.Property(e => e.IdStato)
                    .HasColumnName("ID_STATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFineStato)
                    .HasColumnName("DT_FINE_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioStato)
                    .HasColumnName("DT_INIZIO_STATO")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoStato)
                    .HasColumnName("FLG_TIPO_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgUltimoStatoSino)
                    .HasColumnName("FLG_ULTIMO_STATO_SINO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdFiduciario)
                    .HasColumnName("ID_FIDUCIARIO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdIspettorato)
                    .HasColumnName("ID_ISPETTORATO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdLiquidatore)
                    .HasColumnName("ID_LIQUIDATORE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdOggetto)
                    .HasColumnName("ID_OGGETTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdSinistro)
                    .HasColumnName("ID_SINISTRO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdUtente)
                    .HasColumnName("ID_UTENTE")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<WkfAttivita>(entity =>
            {
                entity.HasKey(e => e.IdAttivita)
                    .HasName("SYS_C0019333");

                entity.ToTable("WKF_ATTIVITA", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX05WKF_ATTIVITA");

                entity.HasIndex(e => e.IdOggetto)
                    .HasName("XX02WKF_ATTIVITA");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03WKF_ATTIVITA");

                entity.HasIndex(e => e.KeyPolEvento)
                    .HasName("XX04WKF_ATTIVITA");

                entity.Property(e => e.IdAttivita)
                    .HasColumnName("ID_ATTIVITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtEffettoAttivita)
                    .HasColumnName("DT_EFFETTO_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineAttivita)
                    .HasColumnName("DT_FINE_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioAttivita)
                    .HasColumnName("DT_INIZIO_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoAttivita)
                    .HasColumnName("FLG_STATO_ATTIVITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAttivita)
                    .HasColumnName("FLG_TIPO_ATTIVITA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdAttivitaOrigine).HasColumnName("ID_ATTIVITA_ORIGINE");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdGruppoTrattazione).HasColumnName("ID_GRUPPO_TRATTAZIONE");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteTrattazione).HasColumnName("ID_UTENTE_TRATTAZIONE");

                entity.Property(e => e.KeyPolEvento).HasColumnName("KEY_POL_EVENTO");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WkfAttivitaAperte>(entity =>
            {
                entity.HasKey(e => e.IdAttivita)
                    .HasName("WKF_ATTIVITA_APERTE_PK");

                entity.ToTable("WKF_ATTIVITA_APERTE", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX04WKF_ATTIVITA_APERTE");

                entity.HasIndex(e => e.IdOggetto)
                    .HasName("XX02WKF_ATTIVITA_APERTE");

                entity.HasIndex(e => e.IdSinistro)
                    .HasName("XX03WKF_ATTIVITA_APERTE");

                entity.HasIndex(e => e.KeyPolEvento)
                    .HasName("XX05WKF_ATTIVITA_APERTE");

                entity.Property(e => e.IdAttivita)
                    .HasColumnName("ID_ATTIVITA")
                    .ValueGeneratedNever();

                entity.Property(e => e.DtEffettoAttivita)
                    .HasColumnName("DT_EFFETTO_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtFineAttivita)
                    .HasColumnName("DT_FINE_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInizioAttivita)
                    .HasColumnName("DT_INIZIO_ATTIVITA")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtInserimento)
                    .HasColumnName("DT_INSERIMENTO")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtScadenza)
                    .HasColumnName("DT_SCADENZA")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStatoAttivita)
                    .HasColumnName("FLG_STATO_ATTIVITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAttivita)
                    .HasColumnName("FLG_TIPO_ATTIVITA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.IdAttivitaOrigine).HasColumnName("ID_ATTIVITA_ORIGINE");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdGruppoTrattazione).HasColumnName("ID_GRUPPO_TRATTAZIONE");

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdSinistro).HasColumnName("ID_SINISTRO");

                entity.Property(e => e.IdUtente).HasColumnName("ID_UTENTE");

                entity.Property(e => e.IdUtenteTrattazione).HasColumnName("ID_UTENTE_TRATTAZIONE");

                entity.Property(e => e.KeyPolEvento).HasColumnName("KEY_POL_EVENTO");

                entity.Property(e => e.Note)
                    .HasColumnName("NOTE")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WkfAttivitaOperazioni>(entity =>
            {
                entity.HasKey(e => e.IdAttivitaOperazioni)
                    .HasName("WKF_ATTIVITA_OPERAZIONI_PK");

                entity.ToTable("WKF_ATTIVITA_OPERAZIONI", "ISUITE");

                entity.Property(e => e.IdAttivitaOperazioni)
                    .HasColumnName("ID_ATTIVITA_OPERAZIONI")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodOperazione)
                    .HasColumnName("COD_OPERAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodTipoAttivita)
                    .HasColumnName("COD_TIPO_ATTIVITA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgStatoAttivita)
                    .HasColumnName("FLG_STATO_ATTIVITA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAttivita)
                    .HasColumnName("FLG_TIPO_ATTIVITA")
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WkfOperazioni>(entity =>
            {
                entity.HasKey(e => e.IdOperazione)
                    .HasName("WKF_OPERAZIONI_PK");

                entity.ToTable("WKF_OPERAZIONI", "ISUITE");

                entity.Property(e => e.IdOperazione)
                    .HasColumnName("ID_OPERAZIONE")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodOperazione)
                    .HasColumnName("COD_OPERAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodTipoAttivita)
                    .HasColumnName("COD_TIPO_ATTIVITA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Descrizione)
                    .HasColumnName("DESCRIZIONE")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");

                entity.Property(e => e.IdDescrizione).HasColumnName("ID_DESCRIZIONE");

                entity.Property(e => e.Modulo)
                    .HasColumnName("MODULO")
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Parametri)
                    .HasColumnName("PARAMETRI")
                    .IsUnicode(false);
            });

            modelBuilder.Entity<WkfScadenze>(entity =>
            {
                entity.HasKey(e => e.IdScadenza)
                    .HasName("SYS_C0016666");

                entity.ToTable("WKF_SCADENZE", "ISUITE");

                entity.Property(e => e.IdScadenza)
                    .HasColumnName("ID_SCADENZA")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoAlert)
                    .HasColumnName("FLG_TIPO_ALERT")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FlgTipoStato)
                    .HasColumnName("FLG_TIPO_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.GiorniMaxDisponibili).HasColumnName("GIORNI_MAX_DISPONIBILI");

                entity.Property(e => e.GiorniPreAlert).HasColumnName("GIORNI_PRE_ALERT");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");
            });

            modelBuilder.Entity<WkfScadenzeAlert>(entity =>
            {
                entity.HasKey(e => e.IdScadenzaAlert)
                    .HasName("WKF_SCADENZE_ALERT_PK");

                entity.ToTable("WKF_SCADENZE_ALERT", "ISUITE");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02WKF_SCADENZE_ALERT");

                entity.HasIndex(e => e.IdScadenzaAlert)
                    .HasName("XWKF_SCADENZE_ALERT")
                    .IsUnique();

                entity.Property(e => e.IdScadenzaAlert)
                    .HasColumnName("ID_SCADENZA_ALERT")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodOperazione)
                    .HasColumnName("COD_OPERAZIONE")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.CodTipoAttivita)
                    .HasColumnName("COD_TIPO_ATTIVITA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.FlgLivelloAlert)
                    .HasColumnName("FLG_LIVELLO_ALERT")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAttivitaOrigine)
                    .HasColumnName("FLG_TIPO_ATTIVITA_ORIGINE")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.GiorniAlert).HasColumnName("GIORNI_ALERT");

                entity.Property(e => e.IdCompagnia).HasColumnName("ID_COMPAGNIA");
            });

            modelBuilder.Entity<WsTraceChiamate>(entity =>
            {
                entity.HasKey(e => e.IdWsTraceChiamata);

                entity.ToTable("WS_TRACE_CHIAMATE", "IFLOW");

                entity.HasIndex(e => e.FlgEsitoChiamata)
                    .HasName("X02_WS_TRACE_CHIAMATE");

                entity.HasIndex(e => e.FlgTipoRichiesta)
                    .HasName("X01_WS_TRACE_CHIAMATE");

                entity.Property(e => e.IdWsTraceChiamata)
                    .HasColumnName("ID_WS_TRACE_CHIAMATA")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgEsitoChiamata)
                    .IsRequired()
                    .HasColumnName("FLG_ESITO_CHIAMATA")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoRichiesta)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_RICHIESTA")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Operazione)
                    .IsRequired()
                    .HasColumnName("OPERAZIONE")
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.TestoRequest)
                    .IsRequired()
                    .HasColumnName("TESTO_REQUEST")
                    .IsUnicode(false);

                entity.Property(e => e.TestoResponse)
                    .HasColumnName("TESTO_RESPONSE")
                    .IsUnicode(false);

                entity.Property(e => e.TimestampRichiesta)
                    .IsRequired()
                    .HasColumnName("TIMESTAMP_RICHIESTA")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<WsTraceOggetti>(entity =>
            {
                entity.HasKey(e => e.IdWsTraceOggetto)
                    .HasName("PK_TRACE_CHIAMATE_WS");

                entity.ToTable("WS_TRACE_OGGETTI", "IFLOW");

                entity.HasIndex(e => e.IdWsTraceChiamata)
                    .HasName("X01_TRACE_CHIAMATE_WS");

                entity.Property(e => e.IdWsTraceOggetto)
                    .HasColumnName("ID_WS_TRACE_OGGETTO")
                    .ValueGeneratedNever();

                entity.Property(e => e.FlgTipoOggetto)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdOggetto).HasColumnName("ID_OGGETTO");

                entity.Property(e => e.IdWsTraceChiamata).HasColumnName("ID_WS_TRACE_CHIAMATA");
            });

            modelBuilder.Entity<XmlInput>(entity =>
            {
                entity.HasKey(e => e.IdXmlInput)
                    .HasName("PK__XML_INPU__0E6FCFA5AF8DE65B");

                entity.ToTable("XML_INPUT", "ICLAIMS");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02XML_INPUT");

                entity.HasIndex(e => e.IdXmlInput)
                    .HasName("SYS_C0047732")
                    .IsUnique();

                entity.HasIndex(e => new { e.DtFlussoXml, e.IdCompagnia, e.ProgrGiornata, e.NomeFile })
                    .HasName("XML_INPUT_K01")
                    .IsUnique();

                entity.Property(e => e.IdXmlInput)
                    .HasColumnName("ID_XML_INPUT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFlussoXml)
                    .HasColumnName("DT_FLUSSO_XML")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgProvenienza)
                    .HasColumnName("FLG_PROVENIENZA")
                    .HasMaxLength(3);

                entity.Property(e => e.FlgStato)
                    .IsRequired()
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NomeFile)
                    .HasColumnName("NOME_FILE")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ProgrGiornata)
                    .HasColumnName("PROGR_GIORNATA")
                    .HasColumnType("numeric(38, 0)");
            });

            modelBuilder.Entity<XmlInputDett>(entity =>
            {
                entity.HasKey(e => e.IdXmlInputDett)
                    .HasName("PK__XML_INPUT_DETT__5CF6C6BC");

                entity.ToTable("XML_INPUT_DETT", "ICLAIMS");

                entity.HasIndex(e => e.IdXmlInput)
                    .HasName("XML_INPUT_DETT_K01");

                entity.HasIndex(e => e.IdXmlInputDett)
                    .HasName("SYS_C0047740")
                    .IsUnique();

                entity.HasIndex(e => e.NumeroSinistro)
                    .HasName("XML_INPUT_DETT_K02");

                entity.HasIndex(e => new { e.IdXmlInput, e.FlgStato })
                    .HasName("XML_INPUT_DETT_K04");

                entity.HasIndex(e => new { e.IdXmlInput, e.FlgTipoAzione, e.DtOperazione, e.NumeroSinistro, e.AnnoSinistro, e.ProgrAzione })
                    .HasName("XML_INPUT_DETT_K03")
                    .IsUnique();

                entity.Property(e => e.IdXmlInputDett)
                    .HasColumnName("ID_XML_INPUT_DETT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoSinistro)
                    .HasColumnName("ANNO_SINISTRO")
                    .HasColumnType("numeric(5, 0)");

                entity.Property(e => e.DtImportazione)
                    .HasColumnName("DT_IMPORTAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.DtOperazione)
                    .HasColumnName("DT_OPERAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStato)
                    .IsRequired()
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAzione)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_AZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoOggetto)
                    .HasColumnName("FLG_TIPO_OGGETTO")
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IdMovimento).HasColumnName("ID_MOVIMENTO");

                entity.Property(e => e.IdXmlInput)
                    .HasColumnName("ID_XML_INPUT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroSinistro)
                    .IsRequired()
                    .HasColumnName("NUMERO_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ProgrAzione)
                    .HasColumnName("PROGR_AZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.XmlSinistro)
                    .HasColumnName("XML_SINISTRO")
                    .IsUnicode(false);

                entity.HasOne(d => d.IdXmlInputNavigation)
                    .WithMany(p => p.XmlInputDett)
                    .HasForeignKey(d => d.IdXmlInput)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__XML_INPUT__ID_XM__6A1BB7B0");
            });

            modelBuilder.Entity<XmlInputDettErrWar>(entity =>
            {
                entity.HasKey(e => e.IdXmlInputDettErrWar)
                    .HasName("PK__XML_INPU__62CAAD0F2F0BCB55");

                entity.ToTable("XML_INPUT_DETT_ERR_WAR", "ICLAIMS");

                entity.HasIndex(e => e.IdXmlInputDett)
                    .HasName("XML_INPUT_DETT_ERR_WAR_K01");

                entity.HasIndex(e => e.IdXmlInputDettErrWar)
                    .HasName("SYS_C0047744")
                    .IsUnique();

                entity.Property(e => e.IdXmlInputDettErrWar)
                    .HasColumnName("ID_XML_INPUT_DETT_ERR_WAR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.AnnoSinistro)
                    .HasColumnName("ANNO_SINISTRO")
                    .HasColumnType("numeric(4, 0)");

                entity.Property(e => e.CodErroreWarning)
                    .IsRequired()
                    .HasColumnName("COD_ERRORE_WARNING")
                    .IsUnicode(false);

                entity.Property(e => e.CoordinateTagErrato)
                    .HasColumnName("COORDINATE_TAG_ERRATO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IdXmlInputDett)
                    .HasColumnName("ID_XML_INPUT_DETT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroSinistro)
                    .HasColumnName("NUMERO_SINISTRO")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<XmlInputDettErrWarP>(entity =>
            {
                entity.HasKey(e => e.IdXmlInputDettErrWar)
                    .HasName("SYS_C0061184");

                entity.ToTable("XML_INPUT_DETT_ERR_WAR_P", "IAGENCY");

                entity.HasIndex(e => e.IdProdotto)
                    .HasName("XX04XML_INPUT_DETT_ERR_WAR_P");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX02XML_INPUT_DETT_ERR_WAR_P");

                entity.HasIndex(e => e.IdXmlInputDett)
                    .HasName("XML_INPUT_DETT_ERR_WAR_P_K01");

                entity.Property(e => e.IdXmlInputDettErrWar)
                    .HasColumnName("ID_XML_INPUT_DETT_ERR_WAR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodErroreWarning)
                    .IsRequired()
                    .HasColumnName("COD_ERRORE_WARNING")
                    .IsUnicode(false);

                entity.Property(e => e.CoordinateTagErrato)
                    .HasColumnName("COORDINATE_TAG_ERRATO")
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.IdProdotto)
                    .HasColumnName("ID_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdXmlInputDett)
                    .HasColumnName("ID_XML_INPUT_DETT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroPolizza)
                    .IsRequired()
                    .HasColumnName("NUMERO_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<XmlInputDettP>(entity =>
            {
                entity.HasKey(e => e.IdXmlInputDett);

                entity.ToTable("XML_INPUT_DETT_P", "IAGENCY");

                entity.HasIndex(e => e.IdProdotto)
                    .HasName("XX03XML_INPUT_DETT_P");

                entity.HasIndex(e => e.IdRetevendita)
                    .HasName("XX04XML_INPUT_DETT_P");

                entity.HasIndex(e => e.IdXmlInput)
                    .HasName("XML_INPUT_DETT_P_K01");

                entity.HasIndex(e => e.NumeroPolizza)
                    .HasName("XML_INPUT_DETT_P_K02");

                entity.HasIndex(e => new { e.IdXmlInput, e.FlgStato })
                    .HasName("XML_INPUT_DETT_P_K04");

                entity.HasIndex(e => new { e.IdXmlInput, e.FlgTipoAzione, e.DtOperazione, e.NumeroPolizza, e.IdRetevendita, e.IdProdotto, e.ProgrAzione })
                    .HasName("XML_INPUT_DETT_P_K03")
                    .IsUnique();

                entity.Property(e => e.IdXmlInputDett)
                    .HasColumnName("ID_XML_INPUT_DETT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtOperazione)
                    .HasColumnName("DT_OPERAZIONE")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgStato)
                    .IsRequired()
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.FlgTipoAzione)
                    .IsRequired()
                    .HasColumnName("FLG_TIPO_AZIONE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.IdProdotto)
                    .HasColumnName("ID_PRODOTTO")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdRetevendita)
                    .HasColumnName("ID_RETEVENDITA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.IdXmlInput)
                    .HasColumnName("ID_XML_INPUT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.NumeroPolizza)
                    .IsRequired()
                    .HasColumnName("NUMERO_POLIZZA")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.ProgrAzione)
                    .HasColumnName("PROGR_AZIONE")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.TimestampFineElaborazione)
                    .HasColumnName("TIMESTAMP_FINE_ELABORAZIONE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TimestampInizioElaborazione)
                    .HasColumnName("TIMESTAMP_INIZIO_ELABORAZIONE")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.XmlPolizza)
                    .HasColumnName("XML_POLIZZA")
                    .HasColumnType("text");
            });

            modelBuilder.Entity<XmlInputErr>(entity =>
            {
                entity.HasKey(e => e.IdXmlInputErr)
                    .HasName("PK__XML_INPU__19CAC56C2F24FF0C");

                entity.ToTable("XML_INPUT_ERR", "ICLAIMS");

                entity.HasIndex(e => e.IdXmlInputErr)
                    .HasName("SYS_C0047748")
                    .IsUnique();

                entity.Property(e => e.IdXmlInputErr)
                    .HasColumnName("ID_XML_INPUT_ERR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodErrore)
                    .IsRequired()
                    .HasColumnName("COD_ERRORE")
                    .IsUnicode(false);

                entity.Property(e => e.IdXmlInput)
                    .HasColumnName("ID_XML_INPUT")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdXmlInputNavigation)
                    .WithMany(p => p.XmlInputErr)
                    .HasForeignKey(d => d.IdXmlInput)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__XML_INPUT__ID_XM__6C63F2D5");
            });

            modelBuilder.Entity<XmlInputErrP>(entity =>
            {
                entity.HasKey(e => e.IdXmlInputErr)
                    .HasName("SYS_C0061195");

                entity.ToTable("XML_INPUT_ERR_P", "IAGENCY");

                entity.HasIndex(e => e.IdXmlInput)
                    .HasName("XX01XML_INPUT_ERR_P");

                entity.Property(e => e.IdXmlInputErr)
                    .HasColumnName("ID_XML_INPUT_ERR")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.CodErrore)
                    .IsRequired()
                    .HasColumnName("COD_ERRORE")
                    .IsUnicode(false);

                entity.Property(e => e.IdXmlInput)
                    .HasColumnName("ID_XML_INPUT")
                    .HasColumnType("numeric(38, 0)");

                entity.HasOne(d => d.IdXmlInputNavigation)
                    .WithMany(p => p.XmlInputErrP)
                    .HasForeignKey(d => d.IdXmlInput)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__XML_INPUT__ID_XM__65B6F546");
            });

            modelBuilder.Entity<XmlInputErroriBypass>(entity =>
            {
                entity.HasKey(e => e.IdXmlInputErr);

                entity.ToTable("XML_INPUT_ERRORI_BYPASS", "ICLAIMS");

                entity.HasIndex(e => new { e.FlgProvenienza, e.CodErrore })
                    .HasName("XAK01_XML_INPUT_ERRORI_BYPASS")
                    .IsUnique();

                entity.Property(e => e.IdXmlInputErr)
                    .HasColumnName("ID_XML_INPUT_ERR")
                    .ValueGeneratedNever();

                entity.Property(e => e.CodErrore)
                    .IsRequired()
                    .HasColumnName("COD_ERRORE")
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.FlgProvenienza)
                    .HasColumnName("FLG_PROVENIENZA")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<XmlInputP>(entity =>
            {
                entity.HasKey(e => e.IdXmlInput)
                    .HasName("SYS_C0061201");

                entity.ToTable("XML_INPUT_P", "IAGENCY");

                entity.HasIndex(e => e.IdCompagnia)
                    .HasName("XX02XML_INPUT");

                entity.HasIndex(e => new { e.DtFlussoXml, e.IdCompagnia, e.ProgrGiornata, e.FlgProvenienza })
                    .HasName("XML_INPUT_K01")
                    .IsUnique();

                entity.Property(e => e.IdXmlInput)
                    .HasColumnName("ID_XML_INPUT")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.DtFlussoXml)
                    .HasColumnName("DT_FLUSSO_XML")
                    .HasColumnType("datetime");

                entity.Property(e => e.FlgProvenienza)
                    .HasColumnName("FLG_PROVENIENZA")
                    .HasMaxLength(3);

                entity.Property(e => e.FlgStato)
                    .IsRequired()
                    .HasColumnName("FLG_STATO")
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.IdCompagnia)
                    .HasColumnName("ID_COMPAGNIA")
                    .HasColumnType("numeric(38, 0)");

                entity.Property(e => e.ProgrGiornata)
                    .HasColumnName("PROGR_GIORNATA")
                    .HasColumnType("numeric(38, 0)");
            });

            OnModelCreatingPartial(modelBuilder);
        }
        #endregion
        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
